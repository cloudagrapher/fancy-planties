b4b7efe4d2164dc2c61ea3423de84af1
"use strict";

/* istanbul ignore next */
function cov_11k4f85shi() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/app/test-grid/page.tsx";
  var hash = "1826aead78383bc76bf24f748f9a0715899d0cd2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/app/test-grid/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 30,
          column: 7
        }
      },
      "6": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 213,
          column: 7
        }
      },
      "8": {
        start: {
          line: 48,
          column: 72
        },
        end: {
          line: 96,
          column: 40
        }
      },
      "9": {
        start: {
          line: 109,
          column: 84
        },
        end: {
          line: 144,
          column: 40
        }
      },
      "10": {
        start: {
          line: 157,
          column: 72
        },
        end: {
          line: 181,
          column: 40
        }
      },
      "11": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 221,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 3
          },
          end: {
            line: 16,
            column: 4
          }
        },
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "TestGrid",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 17
          }
        },
        loc: {
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 214,
            column: 1
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 49
          },
          end: {
            line: 48,
            column: 50
          }
        },
        loc: {
          start: {
            line: 48,
            column: 72
          },
          end: {
            line: 96,
            column: 40
          }
        },
        line: 48
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 109,
            column: 61
          },
          end: {
            line: 109,
            column: 62
          }
        },
        loc: {
          start: {
            line: 109,
            column: 84
          },
          end: {
            line: 144,
            column: 40
          }
        },
        line: 109
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 157,
            column: 49
          },
          end: {
            line: 157,
            column: 50
          }
        },
        loc: {
          start: {
            line: 157,
            column: 72
          },
          end: {
            line: 181,
            column: 40
          }
        },
        line: 157
      },
      "6": {
        name: "TestGridPage",
        decl: {
          start: {
            line: 215,
            column: 9
          },
          end: {
            line: 215,
            column: 21
          }
        },
        loc: {
          start: {
            line: 215,
            column: 24
          },
          end: {
            line: 222,
            column: 1
          }
        },
        line: 215
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/app/test-grid/page.tsx"],
      sourcesContent: ["import { Suspense } from 'react';\n\n// Mock plant data for testing\nconst mockPlants = Array.from({ length: 12 }, (_, i) => ({\n  id: i + 1,\n  displayName: `Plant ${i + 1}`,\n  plant: {\n    genus: 'Genus',\n    species: 'species',\n  },\n  location: `Location ${i + 1}`,\n  primaryImage: null,\n  careStatus: 'healthy' as const,\n  careUrgency: 'none' as const,\n  daysUntilFertilizerDue: Math.floor(Math.random() * 30) - 15,\n  daysSinceLastFertilized: Math.floor(Math.random() * 60),\n  isActive: true,\n}));\n\nfunction TestGrid() {\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-6\">Grid Layout Test</h1>\n      \n      <div className=\"mb-8\">\n        <h2 className=\"text-lg font-semibold mb-4\">Default Grid (grid-plants)</h2>\n        <div className=\"grid-plants\">\n          {mockPlants.map((plant) => (\n            <div\n              key={plant.id}\n              className=\"plant-card w-full max-w-[160px] h-100\"\n            >\n              <div className=\"plant-card-image h-24 bg-gradient-to-br from-green-100 to-blue-100 flex items-center justify-center\">\n                <span className=\"text-4xl\">\uD83C\uDF31</span>\n              </div>\n              <div className=\"plant-card-content\">\n                <h3 className=\"plant-card-title\">{plant.displayName}</h3>\n                <p className=\"plant-card-subtitle\">{plant.plant.genus} {plant.plant.species}</p>\n                <p className=\"text-xs text-gray-500\">\uD83D\uDCCD {plant.location}</p>\n                \n                {/* Quick Actions - should appear on hover */}\n                <div className=\"flex space-x-1 mt-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                  <button className=\"btn btn--sm btn--outline\">\n                    \uD83D\uDCA7 Care\n                  </button>\n                  <button className=\"btn btn--sm btn--secondary\">\n                    \u270F\uFE0F Edit\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"mb-8\">\n        <h2 className=\"text-lg font-semibold mb-4\">Responsive Grid (grid-responsive)</h2>\n        <div className=\"grid-responsive\">\n          {mockPlants.slice(0, 8).map((plant) => (\n            <div\n              key={plant.id}\n              className=\"plant-card w-full max-w-[200px] h-56\"\n            >\n              <div className=\"plant-card-image h-32 bg-gradient-to-br from-purple-100 to-pink-100 flex items-center justify-center\">\n                <span className=\"text-4xl\">\uD83C\uDF3F</span>\n              </div>\n              <div className=\"plant-card-content\">\n                <h3 className=\"plant-card-title\">{plant.displayName}</h3>\n                <p className=\"plant-card-subtitle\">{plant.plant.genus} {plant.plant.species}</p>\n                <p className=\"text-xs text-gray-500\">\uD83D\uDCCD {plant.location}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"mb-8\">\n        <h2 className=\"text-lg font-semibold mb-4\">Small Cards Grid</h2>\n        <div className=\"grid gap-3 grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-6 xl:grid-cols-8\">\n          {mockPlants.map((plant) => (\n            <div\n              key={plant.id}\n              className=\"plant-card w-full max-w-[140px] h-40\"\n            >\n              <div className=\"plant-card-image h-20 bg-gradient-to-br from-yellow-100 to-orange-100 flex items-center justify-center\">\n                <span className=\"text-2xl\">\uD83C\uDF3A</span>\n              </div>\n              <div className=\"plant-card-content\">\n                <h3 className=\"text-sm font-semibold\">{plant.displayName}</h3>\n                <p className=\"text-xs text-gray-600\">{plant.plant.genus}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"text-sm text-gray-600 mt-8\">\n        <p><strong>Test Instructions:</strong></p>\n        <ul className=\"list-disc list-inside space-y-1\">\n          <li>Resize your browser window to test responsive behavior</li>\n          <li>Hover over cards to see hover effects and quick action buttons</li>\n          <li>Test in different browsers (Firefox, Safari, Chrome) for consistency</li>\n          <li>Check that cards maintain consistent spacing and alignment</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default function TestGridPage() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <TestGrid />\n    </Suspense>\n  );\n}"],
      names: ["TestGridPage", "mockPlants", "Array", "from", "length", "_", "i", "id", "displayName", "plant", "genus", "species", "location", "primaryImage", "careStatus", "careUrgency", "daysUntilFertilizerDue", "Math", "floor", "random", "daysSinceLastFertilized", "isActive", "TestGrid", "div", "className", "h1", "h2", "map", "span", "h3", "p", "button", "slice", "strong", "ul", "li", "Suspense", "fallback"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1826aead78383bc76bf24f748f9a0715899d0cd2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11k4f85shi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11k4f85shi();
cov_11k4f85shi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_11k4f85shi().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_11k4f85shi().f[0]++;
    cov_11k4f85shi().s[2]++;
    return TestGridPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_11k4f85shi().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_11k4f85shi().s[4]++, require("react"));
// Mock plant data for testing
const mockPlants =
/* istanbul ignore next */
(cov_11k4f85shi().s[5]++, Array.from({
  length: 12
}, (_, i) => {
  /* istanbul ignore next */
  cov_11k4f85shi().f[1]++;
  cov_11k4f85shi().s[6]++;
  return {
    id: i + 1,
    displayName: `Plant ${i + 1}`,
    plant: {
      genus: 'Genus',
      species: 'species'
    },
    location: `Location ${i + 1}`,
    primaryImage: null,
    careStatus: 'healthy',
    careUrgency: 'none',
    daysUntilFertilizerDue: Math.floor(Math.random() * 30) - 15,
    daysSinceLastFertilized: Math.floor(Math.random() * 60),
    isActive: true
  };
}));
function TestGrid() {
  /* istanbul ignore next */
  cov_11k4f85shi().f[2]++;
  cov_11k4f85shi().s[7]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "container mx-auto p-4",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
      className: "text-2xl font-bold mb-6",
      children: "Grid Layout Test"
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-lg font-semibold mb-4",
        children: "Default Grid (grid-plants)"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "grid-plants",
        children: mockPlants.map(plant => {
          /* istanbul ignore next */
          cov_11k4f85shi().f[3]++;
          cov_11k4f85shi().s[8]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "plant-card w-full max-w-[160px] h-100",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "plant-card-image h-24 bg-gradient-to-br from-green-100 to-blue-100 flex items-center justify-center",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-4xl",
                children: "\uD83C\uDF31"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "plant-card-content",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                className: "plant-card-title",
                children: plant.displayName
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                className: "plant-card-subtitle",
                children: [plant.plant.genus, " ", plant.plant.species]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                className: "text-xs text-gray-500",
                children: ["\uD83D\uDCCD ", plant.location]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex space-x-1 mt-2 opacity-0 group-hover:opacity-100 transition-opacity",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                  className: "btn btn--sm btn--outline",
                  children: "\uD83D\uDCA7 Care"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                  className: "btn btn--sm btn--secondary",
                  children: "✏️ Edit"
                })]
              })]
            })]
          }, plant.id);
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-lg font-semibold mb-4",
        children: "Responsive Grid (grid-responsive)"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "grid-responsive",
        children: mockPlants.slice(0, 8).map(plant => {
          /* istanbul ignore next */
          cov_11k4f85shi().f[4]++;
          cov_11k4f85shi().s[9]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "plant-card w-full max-w-[200px] h-56",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "plant-card-image h-32 bg-gradient-to-br from-purple-100 to-pink-100 flex items-center justify-center",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-4xl",
                children: "\uD83C\uDF3F"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "plant-card-content",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                className: "plant-card-title",
                children: plant.displayName
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                className: "plant-card-subtitle",
                children: [plant.plant.genus, " ", plant.plant.species]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                className: "text-xs text-gray-500",
                children: ["\uD83D\uDCCD ", plant.location]
              })]
            })]
          }, plant.id);
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-lg font-semibold mb-4",
        children: "Small Cards Grid"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "grid gap-3 grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-6 xl:grid-cols-8",
        children: mockPlants.map(plant => {
          /* istanbul ignore next */
          cov_11k4f85shi().f[5]++;
          cov_11k4f85shi().s[10]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "plant-card w-full max-w-[140px] h-40",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "plant-card-image h-20 bg-gradient-to-br from-yellow-100 to-orange-100 flex items-center justify-center",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-2xl",
                children: "\uD83C\uDF3A"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "plant-card-content",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                className: "text-sm font-semibold",
                children: plant.displayName
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-xs text-gray-600",
                children: plant.plant.genus
              })]
            })]
          }, plant.id);
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "text-sm text-gray-600 mt-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
          children: "Test Instructions:"
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("ul", {
        className: "list-disc list-inside space-y-1",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("li", {
          children: "Resize your browser window to test responsive behavior"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
          children: "Hover over cards to see hover effects and quick action buttons"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
          children: "Test in different browsers (Firefox, Safari, Chrome) for consistency"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
          children: "Check that cards maintain consistent spacing and alignment"
        })]
      })]
    })]
  });
}
function TestGridPage() {
  /* istanbul ignore next */
  cov_11k4f85shi().f[6]++;
  cov_11k4f85shi().s[11]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
    fallback: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      children: "Loading..."
    }),
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(TestGrid, {})
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
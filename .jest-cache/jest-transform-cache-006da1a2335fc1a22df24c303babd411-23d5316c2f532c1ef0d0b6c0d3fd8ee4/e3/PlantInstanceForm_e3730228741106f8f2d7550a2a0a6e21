c984ac030e4a6b520314ab741979037c
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return PlantInstanceForm;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _reactquery = require("@tanstack/react-query");
const _reacthookform = require("react-hook-form");
const _zod = require("@hookform/resolvers/zod");
const _zod1 = require("zod");
const _PlantTaxonomySelector = /*#__PURE__*/ _interop_require_default(require("./PlantTaxonomySelector"));
const _ImageUpload = /*#__PURE__*/ _interop_require_default(require("../shared/ImageUpload"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Form validation schemas
const plantTaxonomySchema = _zod1.z.object({
    family: _zod1.z.string().min(1, 'Family is required').max(100, 'Family must be less than 100 characters'),
    genus: _zod1.z.string().min(1, 'Genus is required').max(100, 'Genus must be less than 100 characters'),
    species: _zod1.z.string().min(1, 'Species is required').max(100, 'Species must be less than 100 characters'),
    cultivar: _zod1.z.string().max(100, 'Cultivar must be less than 100 characters').optional().transform((val)=>val?.trim() || ''),
    commonName: _zod1.z.string().min(1, 'Common name is required').max(100, 'Common name must be less than 100 characters')
});
const plantInstanceFormSchema = _zod1.z.object({
    plantId: _zod1.z.number().min(1, 'Please select a plant type'),
    nickname: _zod1.z.string().min(1, 'Nickname is required').max(100, 'Nickname must be less than 100 characters').trim().refine((val)=>val.length > 0, 'Nickname cannot be empty'),
    location: _zod1.z.string().min(1, 'Location is required').max(100, 'Location must be less than 100 characters').trim().refine((val)=>val.length > 0, 'Location cannot be empty'),
    fertilizerSchedule: _zod1.z.enum([
        'weekly',
        'biweekly',
        'every_2_4_weeks',
        'every_3_4_weeks',
        'every_4_weeks',
        'every_4_6_weeks',
        'every_6_8_weeks',
        'bimonthly',
        'quarterly'
    ], {
        message: 'Please select a fertilizer schedule'
    }),
    lastFertilized: _zod1.z.string().optional().refine((val)=>!val || !isNaN(Date.parse(val)), 'Invalid date format'),
    lastRepot: _zod1.z.string().optional().refine((val)=>!val || !isNaN(Date.parse(val)), 'Invalid date format'),
    notes: _zod1.z.string().max(2000, 'Notes must be less than 2000 characters').optional().transform((val)=>val?.trim() || ''),
    images: _zod1.z.array(_zod1.z.string()).max(10, 'Maximum 10 images allowed').optional(),
    isActive: _zod1.z.boolean().default(true).optional(),
    // New taxonomy fields (only used when creating new plant)
    newPlantTaxonomy: plantTaxonomySchema.optional()
}).refine((data)=>{
    // Custom validation: lastFertilized cannot be in the future
    if (data.lastFertilized) {
        const fertilizerDate = new Date(data.lastFertilized);
        const today = new Date();
        today.setHours(23, 59, 59, 999); // End of today
        return fertilizerDate <= today;
    }
    return true;
}, {
    message: 'Last fertilized date cannot be in the future',
    path: [
        'lastFertilized'
    ]
}).refine((data)=>{
    // Custom validation: lastRepot cannot be in the future
    if (data.lastRepot) {
        const repotDate = new Date(data.lastRepot);
        const today = new Date();
        today.setHours(23, 59, 59, 999); // End of today
        return repotDate <= today;
    }
    return true;
}, {
    message: 'Last repot date cannot be in the future',
    path: [
        'lastRepot'
    ]
});
function PlantInstanceForm({ plantInstance, isOpen, onClose, onSuccess, userId }) {
    const [selectedPlant, setSelectedPlant] = (0, _react.useState)(null);
    const [imageFiles, setImageFiles] = (0, _react.useState)([]);
    const [existingImages, setExistingImages] = (0, _react.useState)([]);
    const [showLocationSuggestions, setShowLocationSuggestions] = (0, _react.useState)(false);
    const [locationInput, setLocationInput] = (0, _react.useState)('');
    const [isCreatingPlant, setIsCreatingPlant] = (0, _react.useState)(false);
    const [showTaxonomyForm, setShowTaxonomyForm] = (0, _react.useState)(false);
    const [taxonomyData, setTaxonomyData] = (0, _react.useState)({
        family: '',
        genus: '',
        species: '',
        cultivar: '',
        commonName: ''
    });
    const [hasUnsavedChanges, setHasUnsavedChanges] = (0, _react.useState)(false);
    const [newNoteInput, setNewNoteInput] = (0, _react.useState)('');
    const queryClient = (0, _reactquery.useQueryClient)();
    const isEditing = !!plantInstance;
    // Form setup
    const { control, handleSubmit, formState: { errors, isValid, isDirty }, reset, setValue, watch, trigger } = (0, _reacthookform.useForm)({
        resolver: (0, _zod.zodResolver)(plantInstanceFormSchema),
        mode: 'onChange',
        defaultValues: {
            plantId: 1,
            nickname: '',
            location: '',
            fertilizerSchedule: 'every_4_weeks',
            lastFertilized: '',
            lastRepot: '',
            notes: '',
            images: [],
            isActive: true,
            newPlantTaxonomy: undefined
        }
    });
    // Fetch user locations for autocomplete
    const { data: userLocations } = (0, _reactquery.useQuery)({
        queryKey: [
            'user-locations',
            userId
        ],
        queryFn: async ()=>{
            const response = await fetch(`/api/plant-instances/locations?userId=${userId}`);
            if (!response.ok) throw new Error('Failed to fetch locations');
            return response.json();
        },
        staleTime: 1000 * 60 * 10
    });
    // Handle showing taxonomy form for new plant creation
    const handleShowTaxonomyForm = (query)=>{
        setShowTaxonomyForm(true);
        setTaxonomyData({
            family: '',
            genus: '',
            species: '',
            cultivar: '',
            commonName: query || ''
        });
    };
    // Handle taxonomy form submission
    const handleTaxonomySubmit = (data)=>{
        setIsCreatingPlant(true);
        createPlantMutation.mutate({
            ...data,
            cultivar: data.cultivar || null
        });
    };
    // Handle canceling taxonomy form
    const handleCancelTaxonomyForm = ()=>{
        setShowTaxonomyForm(false);
        setTaxonomyData({
            family: '',
            genus: '',
            species: '',
            cultivar: '',
            commonName: ''
        });
    };
    // Create new plant mutation
    const createPlantMutation = (0, _reactquery.useMutation)({
        mutationFn: async (plantData)=>{
            const response = await fetch('/api/plants', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(plantData)
            });
            if (!response.ok) {
                const error = await response.json();
                throw new Error(error.message || 'Failed to create plant');
            }
            return response.json();
        },
        onSuccess: async (data)=>{
            await queryClient.invalidateQueries({
                queryKey: [
                    'plants'
                ],
                refetchType: 'active'
            });
            queryClient.removeQueries({
                queryKey: [
                    'plants'
                ]
            });
            await queryClient.refetchQueries({
                queryKey: [
                    'plants'
                ]
            });
            // Set the newly created plant as selected
            const newPlant = {
                id: data.data.id,
                family: data.data.family,
                genus: data.data.genus,
                species: data.data.species,
                cultivar: data.data.cultivar,
                commonName: data.data.commonName,
                isVerified: data.data.isVerified
            };
            handlePlantSelect(newPlant);
            setIsCreatingPlant(false);
            setShowTaxonomyForm(false);
        },
        onError: (error)=>{
            console.error('Failed to create plant:', error);
            setIsCreatingPlant(false);
            setShowTaxonomyForm(false);
        }
    });
    // Create/update mutation
    const mutation = (0, _reactquery.useMutation)({
        mutationFn: async (data)=>{
            const formData = new FormData();
            // Add form fields
            Object.entries(data).forEach(([key, value])=>{
                if (value !== undefined && value !== '') {
                    if (key === 'images' && Array.isArray(value)) {
                        // Handle existing images
                        value.forEach((image, index)=>{
                            formData.append(`existingImages[${index}]`, image);
                        });
                    } else {
                        formData.append(key, String(value));
                    }
                }
            });
            // Add new image files
            imageFiles.forEach((file, index)=>{
                formData.append(`imageFiles[${index}]`, file);
            });
            const url = isEditing ? `/api/plant-instances/${plantInstance.id}` : '/api/plant-instances';
            const method = isEditing ? 'PUT' : 'POST';
            const response = await fetch(url, {
                method,
                body: formData
            });
            if (!response.ok) {
                const error = await response.json();
                console.error('API Error Response:', error);
                throw new Error(error.message || 'Failed to save plant instance');
            }
            return response.json();
        },
        onSuccess: async (data)=>{
            // Comprehensive cache clearing for immediate grid updates
            console.log('Plant instance saved, invalidating caches...');
            // Invalidate all plant-instances queries regardless of filters
            await queryClient.invalidateQueries({
                queryKey: [
                    'plant-instances'
                ],
                refetchType: 'all'
            });
            // Force refetch specific user queries
            await queryClient.refetchQueries({
                queryKey: [
                    'plant-instances',
                    userId
                ],
                type: 'all'
            });
            // Additional cache clearing for related data
            const additionalQueryKeys = [
                [
                    'plant-detail'
                ],
                [
                    'care-dashboard',
                    userId
                ],
                [
                    'plants'
                ]
            ];
            for (const queryKey of additionalQueryKeys){
                await queryClient.invalidateQueries({
                    queryKey,
                    refetchType: 'active'
                });
            }
            console.log('Cache invalidation complete');
            // Reset form state
            reset();
            setImageFiles([]);
            setExistingImages([]);
            setSelectedPlant(null);
            setShowTaxonomyForm(false);
            setHasUnsavedChanges(false);
            if (onSuccess) {
                onSuccess(data);
            } else {
                // Only call onClose if no onSuccess callback provided
                onClose();
            }
        }
    });
    // Initialize form when editing
    (0, _react.useEffect)(()=>{
        if (isEditing && plantInstance) {
            const convertedSchedule = convertDatabaseScheduleToForm(plantInstance.fertilizerSchedule);
            console.log('Setting form with fertilizer schedule:', convertedSchedule);
            reset({
                plantId: plantInstance.plantId,
                nickname: plantInstance.nickname,
                location: plantInstance.location,
                fertilizerSchedule: convertedSchedule,
                lastFertilized: plantInstance.lastFertilized ? new Date(plantInstance.lastFertilized).toISOString().split('T')[0] : '',
                lastRepot: plantInstance.lastRepot ? new Date(plantInstance.lastRepot).toISOString().split('T')[0] : '',
                notes: plantInstance.notes || '',
                images: plantInstance.images || [],
                isActive: plantInstance.isActive
            });
            setSelectedPlant({
                id: plantInstance.plant.id,
                family: plantInstance.plant.family,
                genus: plantInstance.plant.genus,
                species: plantInstance.plant.species,
                commonName: plantInstance.plant.commonName,
                isVerified: plantInstance.plant.isVerified
            });
            setExistingImages(plantInstance.images || []);
        } else {
            reset();
            setSelectedPlant(null);
            setImageFiles([]);
            setExistingImages([]);
            setShowTaxonomyForm(false);
            setTaxonomyData({
                family: '',
                genus: '',
                species: '',
                cultivar: '',
                commonName: ''
            });
        }
    }, [
        isEditing,
        plantInstance,
        reset
    ]);
    // Handle plant selection
    const handlePlantSelect = (plant)=>{
        if (plant) {
            setSelectedPlant(plant);
            setValue('plantId', plant.id, {
                shouldValidate: true
            });
        } else {
            setSelectedPlant(null);
            setValue('plantId', 0, {
                shouldValidate: true
            });
        }
    };
    // Handle image changes
    const handleImageChange = (files)=>{
        setImageFiles(files);
        // Don't update form's images field - keep existingImages separate
        // Just trigger validation to ensure form is valid
        trigger();
    };
    // Handle existing image removal
    const handleRemoveExistingImage = (index)=>{
        const newImages = existingImages.filter((_, i)=>i !== index);
        setExistingImages(newImages);
        // Don't update form's images field - keep existingImages separate
        trigger();
    };
    // Handle setting primary image (move image to index 0)
    const handleSetPrimaryImage = (index)=>{
        if (index === 0) return; // Already primary
        const newImages = [
            ...existingImages
        ];
        const selectedImage = newImages[index];
        // Remove the selected image and add it to the beginning
        newImages.splice(index, 1);
        newImages.unshift(selectedImage);
        setExistingImages(newImages);
        trigger();
    };
    // Convert enum fertilizer schedule to expected format
    const convertFertilizerSchedule = (schedule)=>{
        const scheduleMap = {
            'weekly': '7 days',
            'biweekly': '2 weeks',
            'every_2_4_weeks': '3 weeks',
            'every_3_4_weeks': '4 weeks',
            'every_4_weeks': '4 weeks',
            'every_4_6_weeks': '5 weeks',
            'every_6_8_weeks': '7 weeks',
            'bimonthly': '2 months',
            'quarterly': '3 months'
        };
        return scheduleMap[schedule] || schedule;
    };
    // Convert database fertilizer schedule back to form enum
    const convertDatabaseScheduleToForm = (schedule)=>{
        console.log('Converting database schedule:', schedule);
        if (!schedule) return 'every_4_weeks';
        const reverseMap = {
            // New format matches (what we send to API)
            '7 days': 'weekly',
            '2 weeks': 'biweekly',
            '3 weeks': 'every_2_4_weeks',
            '4 weeks': 'every_4_weeks',
            '5 weeks': 'every_4_6_weeks',
            '7 weeks': 'every_6_8_weeks',
            '2 months': 'bimonthly',
            '3 months': 'quarterly',
            // Legacy formats that might exist in database
            '1 week': 'weekly',
            'every 2 weeks': 'biweekly',
            'every 2-4 weeks': 'every_2_4_weeks',
            'every 3-4 weeks': 'every_3_4_weeks',
            'every 4 weeks': 'every_4_weeks',
            'every 4-6 weeks': 'every_4_6_weeks',
            'every 6-8 weeks': 'every_6_8_weeks',
            '1 month': 'every_4_weeks',
            'monthly': 'every_4_weeks',
            'bimonthly': 'bimonthly',
            'quarterly': 'quarterly'
        };
        const result = reverseMap[schedule] || 'every_4_weeks';
        console.log('Converted to:', result);
        return result;
    };
    // Handle form submission
    const onSubmit = (data)=>{
        const submitData = {
            ...data,
            fertilizerSchedule: convertFertilizerSchedule(data.fertilizerSchedule),
            images: existingImages
        };
        console.log('Form submission data:', submitData);
        console.log('Existing images being submitted:', existingImages);
        console.log('Original fertilizer schedule:', data.fertilizerSchedule);
        console.log('Converted fertilizer schedule:', convertFertilizerSchedule(data.fertilizerSchedule));
        mutation.mutate(submitData);
    };
    // Track unsaved changes
    (0, _react.useEffect)(()=>{
        setHasUnsavedChanges(isDirty || imageFiles.length > 0 || showTaxonomyForm);
    }, [
        isDirty,
        imageFiles.length,
        showTaxonomyForm
    ]);
    // Warn about unsaved changes before page unload
    (0, _react.useEffect)(()=>{
        const handleBeforeUnload = (e)=>{
            if (hasUnsavedChanges) {
                e.preventDefault();
                e.returnValue = 'You have unsaved changes. Are you sure you want to leave?';
                return 'You have unsaved changes. Are you sure you want to leave?';
            }
        };
        if (isOpen && hasUnsavedChanges) {
            window.addEventListener('beforeunload', handleBeforeUnload);
        }
        return ()=>{
            window.removeEventListener('beforeunload', handleBeforeUnload);
        };
    }, [
        isOpen,
        hasUnsavedChanges
    ]);
    // Handle close with unsaved changes warning
    const handleClose = ()=>{
        if (hasUnsavedChanges) {
            const confirmed = window.confirm('You have unsaved changes. Are you sure you want to close?');
            if (!confirmed) return;
        }
        onClose();
    };
    // Close modal on escape
    (0, _react.useEffect)(()=>{
        const handleEscape = (e)=>{
            if (e.key === 'Escape') {
                handleClose();
            }
        };
        if (isOpen) {
            document.addEventListener('keydown', handleEscape);
            document.body.style.overflow = 'hidden';
        }
        return ()=>{
            document.removeEventListener('keydown', handleEscape);
            document.body.style.overflow = 'unset';
        };
    }, [
        isOpen,
        handleClose
    ]);
    if (!isOpen) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "fixed inset-0 z-50 overflow-hidden",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "absolute inset-0 bg-black bg-opacity-50 transition-opacity",
                onClick: handleClose
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "relative h-full flex items-end sm:items-center justify-center p-4 pb-20 sm:pb-4",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "bg-white rounded-t-2xl sm:rounded-2xl w-full max-w-2xl max-h-full overflow-hidden shadow-2xl",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-between p-6 border-b border-gray-200",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                                    className: "text-xl font-semibold text-gray-900",
                                    children: isEditing ? 'Edit Plant' : 'Add New Plant'
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    onClick: handleClose,
                                    className: "p-2 text-gray-400 hover:text-gray-600 rounded-full hover:bg-gray-100",
                                    "aria-label": "Close form",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                                        className: "w-6 h-6",
                                        fill: "none",
                                        stroke: "currentColor",
                                        viewBox: "0 0 24 24",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                            strokeLinecap: "round",
                                            strokeLinejoin: "round",
                                            strokeWidth: 2,
                                            d: "M6 18L18 6M6 6l12 12"
                                        })
                                    })
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("form", {
                            onSubmit: handleSubmit(onSubmit),
                            className: "flex-1 overflow-auto max-h-[60vh] sm:max-h-[70vh]",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "p-6 space-y-6",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                    className: "block text-sm font-medium text-gray-700 mb-2",
                                                    children: "Plant Type *"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_PlantTaxonomySelector.default, {
                                                    selectedPlant: selectedPlant,
                                                    onSelect: handlePlantSelect,
                                                    disabled: isCreatingPlant || showTaxonomyForm,
                                                    onAddNew: handleShowTaxonomyForm
                                                }),
                                                isCreatingPlant && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "mt-2 flex items-center text-sm text-primary-600",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("svg", {
                                                            className: "animate-spin -ml-1 mr-2 h-4 w-4",
                                                            fill: "none",
                                                            viewBox: "0 0 24 24",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("circle", {
                                                                    className: "opacity-25",
                                                                    cx: "12",
                                                                    cy: "12",
                                                                    r: "10",
                                                                    stroke: "currentColor",
                                                                    strokeWidth: "4"
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                                                    className: "opacity-75",
                                                                    fill: "currentColor",
                                                                    d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                                                                })
                                                            ]
                                                        }),
                                                        "Creating new plant type..."
                                                    ]
                                                }),
                                                createPlantMutation.isError && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "mt-2 text-sm text-red-600",
                                                    children: [
                                                        "Failed to create plant: ",
                                                        createPlantMutation.error instanceof Error ? createPlantMutation.error.message : 'Unknown error'
                                                    ]
                                                }),
                                                errors.plantId && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "mt-1 text-sm text-red-600",
                                                    children: errors.plantId.message
                                                }),
                                                showTaxonomyForm && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "flex items-center justify-between mb-4",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                                                    className: "text-sm font-semibold text-blue-900",
                                                                    children: "Create New Plant Type"
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                    type: "button",
                                                                    onClick: handleCancelTaxonomyForm,
                                                                    className: "text-blue-600 hover:text-blue-800",
                                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                                                                        className: "w-4 h-4",
                                                                        fill: "none",
                                                                        stroke: "currentColor",
                                                                        viewBox: "0 0 24 24",
                                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                                                            strokeLinecap: "round",
                                                                            strokeLinejoin: "round",
                                                                            strokeWidth: 2,
                                                                            d: "M6 18L18 6M6 6l12 12"
                                                                        })
                                                                    })
                                                                })
                                                            ]
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "space-y-4",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                            className: "block text-sm font-medium text-gray-700 mb-1",
                                                                            children: "Common Name *"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "text",
                                                                            value: taxonomyData.commonName,
                                                                            onChange: (e)=>setTaxonomyData((prev)=>({
                                                                                        ...prev,
                                                                                        commonName: e.target.value
                                                                                    })),
                                                                            placeholder: "e.g., Monstera Deliciosa",
                                                                            className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "grid grid-cols-1 sm:grid-cols-2 gap-4",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                    className: "block text-sm font-medium text-gray-700 mb-1",
                                                                                    children: "Family *"
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                                    type: "text",
                                                                                    value: taxonomyData.family,
                                                                                    onChange: (e)=>setTaxonomyData((prev)=>({
                                                                                                ...prev,
                                                                                                family: e.target.value
                                                                                            })),
                                                                                    placeholder: "e.g., Araceae",
                                                                                    className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                                                                })
                                                                            ]
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                    className: "block text-sm font-medium text-gray-700 mb-1",
                                                                                    children: "Genus *"
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                                    type: "text",
                                                                                    value: taxonomyData.genus,
                                                                                    onChange: (e)=>setTaxonomyData((prev)=>({
                                                                                                ...prev,
                                                                                                genus: e.target.value
                                                                                            })),
                                                                                    placeholder: "e.g., Monstera",
                                                                                    className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                                                                })
                                                                            ]
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "grid grid-cols-1 sm:grid-cols-2 gap-4",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                    className: "block text-sm font-medium text-gray-700 mb-1",
                                                                                    children: "Species *"
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                                    type: "text",
                                                                                    value: taxonomyData.species,
                                                                                    onChange: (e)=>setTaxonomyData((prev)=>({
                                                                                                ...prev,
                                                                                                species: e.target.value
                                                                                            })),
                                                                                    placeholder: "e.g., deliciosa",
                                                                                    className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                                                                })
                                                                            ]
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                                                    className: "block text-sm font-medium text-gray-700 mb-1",
                                                                                    children: "Cultivar (optional)"
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                                    type: "text",
                                                                                    value: taxonomyData.cultivar,
                                                                                    onChange: (e)=>setTaxonomyData((prev)=>({
                                                                                                ...prev,
                                                                                                cultivar: e.target.value
                                                                                            })),
                                                                                    placeholder: "e.g., 'Variegata'",
                                                                                    className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                                                                })
                                                                            ]
                                                                        })
                                                                    ]
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "flex justify-end space-x-3 pt-2",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                            type: "button",
                                                                            onClick: handleCancelTaxonomyForm,
                                                                            className: "px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:ring-2 focus:ring-blue-500",
                                                                            children: "Cancel"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                            type: "button",
                                                                            onClick: ()=>{
                                                                                const isValid = taxonomyData.family && taxonomyData.genus && taxonomyData.species && taxonomyData.commonName;
                                                                                if (isValid) {
                                                                                    handleTaxonomySubmit(taxonomyData);
                                                                                }
                                                                            },
                                                                            disabled: !taxonomyData.family || !taxonomyData.genus || !taxonomyData.species || !taxonomyData.commonName,
                                                                            className: "px-3 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed",
                                                                            children: "Create Plant Type"
                                                                        })
                                                                    ]
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "grid grid-cols-1 sm:grid-cols-2 gap-4",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                            htmlFor: "nickname",
                                                            className: "block text-sm font-medium text-gray-700 mb-2",
                                                            children: "Nickname *"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthookform.Controller, {
                                                            name: "nickname",
                                                            control: control,
                                                            render: ({ field })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                    ...field,
                                                                    id: "nickname",
                                                                    type: "text",
                                                                    placeholder: "My favorite monstera",
                                                                    className: `w-full px-3 py-2 bg-white text-gray-900 placeholder-gray-500 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${errors.nickname ? 'border-red-300' : 'border-gray-300'}`
                                                                })
                                                        }),
                                                        errors.nickname && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                            className: "mt-1 text-sm text-red-600",
                                                            children: errors.nickname.message
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                            htmlFor: "location",
                                                            className: "block text-sm font-medium text-gray-700 mb-2",
                                                            children: "Location *"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthookform.Controller, {
                                                            name: "location",
                                                            control: control,
                                                            render: ({ field })=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "relative",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            ...field,
                                                                            id: "location",
                                                                            type: "text",
                                                                            placeholder: "Living room window",
                                                                            className: `w-full px-3 py-2 bg-white text-gray-900 placeholder-gray-500 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${errors.location ? 'border-red-300' : 'border-gray-300'}`,
                                                                            onChange: (e)=>{
                                                                                field.onChange(e);
                                                                                setLocationInput(e.target.value);
                                                                                setShowLocationSuggestions(e.target.value.length > 0);
                                                                            },
                                                                            onFocus: ()=>setShowLocationSuggestions(field.value.length > 0),
                                                                            onBlur: ()=>setTimeout(()=>setShowLocationSuggestions(false), 200)
                                                                        }),
                                                                        showLocationSuggestions && userLocations && userLocations.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            className: "absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-40 overflow-y-auto",
                                                                            children: [
                                                                                userLocations.filter((location)=>location.toLowerCase().includes(field.value.toLowerCase())).slice(0, 5).map((location)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                                        type: "button",
                                                                                        onClick: ()=>{
                                                                                            field.onChange(location);
                                                                                            setLocationInput(location);
                                                                                            setShowLocationSuggestions(false);
                                                                                        },
                                                                                        className: "w-full px-3 py-2 text-left hover:bg-gray-50 focus:bg-gray-50 focus:outline-none first:rounded-t-lg last:rounded-b-lg",
                                                                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                            className: "flex items-center",
                                                                                            children: [
                                                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("svg", {
                                                                                                    className: "w-4 h-4 text-gray-400 mr-2",
                                                                                                    fill: "none",
                                                                                                    stroke: "currentColor",
                                                                                                    viewBox: "0 0 24 24",
                                                                                                    children: [
                                                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                                                                                            strokeLinecap: "round",
                                                                                                            strokeLinejoin: "round",
                                                                                                            strokeWidth: 2,
                                                                                                            d: "M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
                                                                                                        }),
                                                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                                                                                            strokeLinecap: "round",
                                                                                                            strokeLinejoin: "round",
                                                                                                            strokeWidth: 2,
                                                                                                            d: "M15 11a3 3 0 11-6 0 3 3 0 016 0z"
                                                                                                        })
                                                                                                    ]
                                                                                                }),
                                                                                                location
                                                                                            ]
                                                                                        })
                                                                                    }, location)),
                                                                                field.value.length > 0 && !userLocations.some((loc)=>loc.toLowerCase().includes(field.value.toLowerCase())) && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                    className: "border-t border-gray-100",
                                                                                    children: [
                                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                            className: "px-3 py-2 text-xs text-gray-500 font-medium",
                                                                                            children: "Suggestions:"
                                                                                        }),
                                                                                        [
                                                                                            'Living room window',
                                                                                            'Kitchen counter',
                                                                                            'Bedroom windowsill',
                                                                                            'Bathroom shelf',
                                                                                            'Office desk',
                                                                                            'Balcony',
                                                                                            'Greenhouse',
                                                                                            'Outdoor garden'
                                                                                        ].filter((suggestion)=>suggestion.toLowerCase().includes(field.value.toLowerCase())).slice(0, 3).map((suggestion)=>/*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                                                type: "button",
                                                                                                onClick: ()=>{
                                                                                                    field.onChange(suggestion);
                                                                                                    setLocationInput(suggestion);
                                                                                                    setShowLocationSuggestions(false);
                                                                                                },
                                                                                                className: "w-full px-3 py-2 text-left text-gray-600 hover:bg-gray-50 focus:bg-gray-50 focus:outline-none",
                                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                                    className: "flex items-center",
                                                                                                    children: [
                                                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                                                                                                            className: "w-4 h-4 text-gray-300 mr-2",
                                                                                                            fill: "none",
                                                                                                            stroke: "currentColor",
                                                                                                            viewBox: "0 0 24 24",
                                                                                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                                                                                                strokeLinecap: "round",
                                                                                                                strokeLinejoin: "round",
                                                                                                                strokeWidth: 2,
                                                                                                                d: "M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"
                                                                                                            })
                                                                                                        }),
                                                                                                        suggestion
                                                                                                    ]
                                                                                                })
                                                                                            }, suggestion))
                                                                                    ]
                                                                                })
                                                                            ]
                                                                        })
                                                                    ]
                                                                })
                                                        }),
                                                        errors.location && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                            className: "mt-1 text-sm text-red-600",
                                                            children: errors.location.message
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                            className: "mt-1 text-xs text-gray-500",
                                                            children: 'Be specific about lighting and conditions (e.g., "South-facing kitchen window")'
                                                        })
                                                    ]
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                    htmlFor: "fertilizerSchedule",
                                                    className: "block text-sm font-medium text-gray-700 mb-2",
                                                    children: "Fertilizer Schedule *"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthookform.Controller, {
                                                    name: "fertilizerSchedule",
                                                    control: control,
                                                    render: ({ field })=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "space-y-3",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("select", {
                                                                    ...field,
                                                                    id: "fertilizerSchedule",
                                                                    className: `w-full px-3 py-2 bg-white text-gray-900 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${errors.fertilizerSchedule ? 'border-red-300' : 'border-gray-300'}`,
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                                            value: "weekly",
                                                                            children: "Weekly (every 7 days) - High maintenance"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                                            value: "biweekly",
                                                                            children: "Every 2 weeks - Regular care"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                                            value: "every_2_4_weeks",
                                                                            children: "Every 2-4 weeks - Variable schedule"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                                            value: "every_3_4_weeks",
                                                                            children: "Every 3-4 weeks - Moderate care"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                                            value: "every_4_weeks",
                                                                            children: "Every 4 weeks - Standard monthly"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                                            value: "every_4_6_weeks",
                                                                            children: "Every 4-6 weeks - Extended care"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                                            value: "every_6_8_weeks",
                                                                            children: "Every 6-8 weeks - Low maintenance"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                                            value: "bimonthly",
                                                                            children: "Bi-monthly (every 60 days) - Very low maintenance"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("option", {
                                                                            value: "quarterly",
                                                                            children: "Quarterly (every 90 days) - Minimal care"
                                                                        })
                                                                    ]
                                                                }),
                                                                field.value && watch('lastFertilized') && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                    className: "bg-primary-50 border border-primary-200 rounded-lg p-3",
                                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "flex items-center text-sm",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                                                                                className: "w-4 h-4 text-primary-600 mr-2",
                                                                                fill: "none",
                                                                                stroke: "currentColor",
                                                                                viewBox: "0 0 24 24",
                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                                                                    strokeLinecap: "round",
                                                                                    strokeLinejoin: "round",
                                                                                    strokeWidth: 2,
                                                                                    d: "M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                                                                                })
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                                className: "text-primary-800",
                                                                                children: (()=>{
                                                                                    const lastFert = new Date(watch('lastFertilized') || '');
                                                                                    const currentSchedule = watch('fertilizerSchedule');
                                                                                    const scheduleMap = {
                                                                                        weekly: 7,
                                                                                        biweekly: 14,
                                                                                        every_2_4_weeks: 21,
                                                                                        every_3_4_weeks: 24,
                                                                                        every_4_weeks: 28,
                                                                                        every_4_6_weeks: 35,
                                                                                        every_6_8_weeks: 49,
                                                                                        bimonthly: 60,
                                                                                        quarterly: 90
                                                                                    };
                                                                                    const days = scheduleMap[currentSchedule];
                                                                                    const nextDue = new Date(lastFert);
                                                                                    nextDue.setDate(nextDue.getDate() + days);
                                                                                    return `Next fertilizer due: ${nextDue.toLocaleDateString()}`;
                                                                                })()
                                                                            })
                                                                        ]
                                                                    })
                                                                })
                                                            ]
                                                        })
                                                }),
                                                errors.fertilizerSchedule && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "mt-1 text-sm text-red-600",
                                                    children: errors.fertilizerSchedule.message
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "mt-1 text-xs text-gray-500",
                                                    children: "Choose based on your plant's needs and your availability for care"
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "grid grid-cols-1 sm:grid-cols-2 gap-4",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                            className: "block text-sm font-medium text-gray-700 mb-2",
                                                            children: "Last Fertilized"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthookform.Controller, {
                                                            name: "lastFertilized",
                                                            control: control,
                                                            render: ({ field })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                    ...field,
                                                                    type: "date",
                                                                    max: new Date().toISOString().split('T')[0],
                                                                    className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
                                                                })
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                            className: "block text-sm font-medium text-gray-700 mb-2",
                                                            children: "Last Repotted"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthookform.Controller, {
                                                            name: "lastRepot",
                                                            control: control,
                                                            render: ({ field })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                    ...field,
                                                                    type: "date",
                                                                    max: new Date().toISOString().split('T')[0],
                                                                    className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
                                                                })
                                                        })
                                                    ]
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                    className: "block text-sm font-medium text-gray-700 mb-2",
                                                    children: "Notes & Observations"
                                                }),
                                                watch('notes') && watch('notes')?.trim() && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "mb-3 p-3 bg-gray-50 border border-gray-200 rounded-lg",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                            className: "text-sm font-medium text-gray-700 mb-2",
                                                            children: "Previous Notes:"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "text-sm text-gray-600 whitespace-pre-wrap max-h-32 overflow-y-auto",
                                                            children: watch('notes')
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "space-y-2",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("textarea", {
                                                            value: newNoteInput,
                                                            onChange: (e)=>setNewNoteInput(e.target.value),
                                                            rows: 3,
                                                            placeholder: "Add a new observation or note...",
                                                            className: "w-full px-3 py-2 bg-white text-gray-900 placeholder-gray-500 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 resize-none",
                                                            onKeyDown: (e)=>{
                                                                if (e.key === 'Enter' && (e.metaKey || e.ctrlKey)) {
                                                                    e.preventDefault();
                                                                    const newNote = newNoteInput.trim();
                                                                    if (newNote) {
                                                                        const timestamp = new Date().toLocaleDateString();
                                                                        const existingNotes = watch('notes') || '';
                                                                        const updatedNotes = existingNotes ? `${existingNotes}\n\n[${timestamp}] ${newNote}` : `[${timestamp}] ${newNote}`;
                                                                        setValue('notes', updatedNotes);
                                                                        setNewNoteInput(''); // Clear the input
                                                                    }
                                                                }
                                                            }
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "flex justify-between items-center",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                    className: "text-xs text-gray-500",
                                                                    children: "Press Cmd/Ctrl + Enter to add note"
                                                                }),
                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                    type: "button",
                                                                    onClick: ()=>{
                                                                        const newNote = newNoteInput.trim();
                                                                        if (newNote) {
                                                                            const timestamp = new Date().toLocaleDateString();
                                                                            const existingNotes = watch('notes') || '';
                                                                            const updatedNotes = existingNotes ? `${existingNotes}\n\n[${timestamp}] ${newNote}` : `[${timestamp}] ${newNote}`;
                                                                            setValue('notes', updatedNotes);
                                                                            setNewNoteInput(''); // Clear the input
                                                                        }
                                                                    },
                                                                    disabled: !newNoteInput.trim(),
                                                                    className: "px-3 py-1 text-sm bg-primary-600 text-white rounded hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed",
                                                                    children: "Add Note"
                                                                })
                                                            ]
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthookform.Controller, {
                                                    name: "notes",
                                                    control: control,
                                                    render: ({ field })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                            type: "hidden",
                                                            ...field
                                                        })
                                                }),
                                                errors.notes && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                    className: "mt-1 text-sm text-red-600",
                                                    children: errors.notes.message
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                                    className: "block text-sm font-medium text-gray-700 mb-2",
                                                    children: "Photos"
                                                }),
                                                existingImages.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                    className: "mb-4",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                            className: "text-sm font-medium text-gray-600 mb-2",
                                                            children: "Current Photos"
                                                        }),
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                            className: "grid grid-cols-3 sm:grid-cols-4 gap-2",
                                                            children: existingImages.map((image, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                    className: "relative group",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
                                                                            src: image,
                                                                            alt: `Plant photo ${index + 1}`,
                                                                            className: "w-full aspect-square object-cover rounded-lg"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                            type: "button",
                                                                            onClick: ()=>handleRemoveExistingImage(index),
                                                                            className: "absolute top-1 right-1 p-1 bg-red-500 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity",
                                                                            title: "Remove image",
                                                                            "aria-label": `Remove image ${index + 1}`,
                                                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                                                                                className: "w-3 h-3",
                                                                                fill: "currentColor",
                                                                                viewBox: "0 0 20 20",
                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                                                                    fillRule: "evenodd",
                                                                                    d: "M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",
                                                                                    clipRule: "evenodd"
                                                                                })
                                                                            })
                                                                        }),
                                                                        index === 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                            className: "absolute bottom-1 left-1 bg-primary-500 text-white text-xs px-1 py-0.5 rounded",
                                                                            children: "Primary"
                                                                        }),
                                                                        index !== 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                                            type: "button",
                                                                            onClick: ()=>handleSetPrimaryImage(index),
                                                                            className: "absolute bottom-1 left-1 bg-black bg-opacity-50 text-white text-xs px-1 py-0.5 rounded opacity-0 group-hover:opacity-100 transition-opacity",
                                                                            title: "Set as primary image",
                                                                            "aria-label": `Set image ${index + 1} as primary`,
                                                                            children: "Set Primary"
                                                                        })
                                                                    ]
                                                                }, index))
                                                        })
                                                    ]
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_ImageUpload.default, {
                                                    onImagesChange: handleImageChange,
                                                    maxImages: 6 - existingImages.length,
                                                    acceptedTypes: [
                                                        'image/jpeg',
                                                        'image/png',
                                                        'image/webp'
                                                    ],
                                                    maxSizePerImage: 5 * 1024 * 1024
                                                })
                                            ]
                                        }),
                                        isEditing && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "bg-gray-50 border border-gray-200 rounded-lg p-4",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                    className: "text-sm font-medium text-gray-900 mb-3",
                                                    children: "Plant Status"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacthookform.Controller, {
                                                    name: "isActive",
                                                    control: control,
                                                    render: ({ field: { value, onChange } })=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                            className: "space-y-3",
                                                            children: [
                                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("label", {
                                                                    className: "flex items-start cursor-pointer",
                                                                    children: [
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                                                            type: "checkbox",
                                                                            checked: value,
                                                                            onChange: onChange,
                                                                            className: "w-4 h-4 text-primary-600 border-gray-300 rounded focus:ring-primary-500 mt-0.5"
                                                                        }),
                                                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                            className: "ml-3",
                                                                            children: [
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                                                    className: "text-sm font-medium text-gray-700",
                                                                                    children: "Keep this plant active in my collection"
                                                                                }),
                                                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                                    className: "text-xs text-gray-500 mt-1",
                                                                                    children: value ? 'This plant will appear in your main collection and care reminders' : 'This plant will be archived and hidden from your main collection'
                                                                                })
                                                                            ]
                                                                        })
                                                                    ]
                                                                }),
                                                                !value && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                    className: "bg-amber-50 border border-amber-200 rounded p-3",
                                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "flex items-start",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                                                                                className: "w-4 h-4 text-amber-600 mt-0.5 mr-2 flex-shrink-0",
                                                                                fill: "currentColor",
                                                                                viewBox: "0 0 20 20",
                                                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                                                                    fillRule: "evenodd",
                                                                                    d: "M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z",
                                                                                    clipRule: "evenodd"
                                                                                })
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                className: "text-xs text-amber-800",
                                                                                children: [
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                                        className: "font-medium",
                                                                                        children: "Archiving this plant"
                                                                                    }),
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                                                                        children: "Care history will be preserved, but the plant won't appear in your active collection or receive care reminders."
                                                                                    })
                                                                                ]
                                                                            })
                                                                        ]
                                                                    })
                                                                })
                                                            ]
                                                        })
                                                })
                                            ]
                                        })
                                    ]
                                }),
                                Object.keys(errors).length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "mx-6 mb-4 bg-red-50 border border-red-200 rounded-lg p-4",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                        className: "flex items-start",
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                                                className: "w-5 h-5 text-red-400 mt-0.5 mr-3 flex-shrink-0",
                                                fill: "currentColor",
                                                viewBox: "0 0 20 20",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                                    fillRule: "evenodd",
                                                    d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z",
                                                    clipRule: "evenodd"
                                                })
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                className: "flex-1",
                                                children: [
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                                        className: "text-sm font-medium text-red-800 mb-2",
                                                        children: "Please fix the following errors:"
                                                    }),
                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("ul", {
                                                        className: "text-sm text-red-700 space-y-1",
                                                        children: Object.entries(errors).map(([field, error])=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("li", {
                                                                children: [
                                                                    "• ",
                                                                    field === 'plantId' ? 'Plant type' : field === 'fertilizerSchedule' ? 'Fertilizer schedule' : field.charAt(0).toUpperCase() + field.slice(1),
                                                                    ": ",
                                                                    error.message
                                                                ]
                                                            }, field))
                                                    })
                                                ]
                                            })
                                        ]
                                    })
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center justify-between p-6 border-t border-gray-200 bg-gray-50",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex items-center text-sm text-gray-500",
                                            children: [
                                                !isValid && Object.keys(errors).length === 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                                    children: "Fill in required fields to continue"
                                                }),
                                                isValid && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                    className: "text-green-600 flex items-center",
                                                    children: [
                                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                                                            className: "w-4 h-4 mr-1",
                                                            fill: "currentColor",
                                                            viewBox: "0 0 20 20",
                                                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                                                fillRule: "evenodd",
                                                                d: "M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z",
                                                                clipRule: "evenodd"
                                                            })
                                                        }),
                                                        "Ready to save"
                                                    ]
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "flex space-x-3",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                    type: "button",
                                                    onClick: handleClose,
                                                    disabled: mutation.isPending,
                                                    className: "px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 transition-colors",
                                                    children: "Cancel"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                                    type: "submit",
                                                    disabled: mutation.isPending || !selectedPlant && !isEditing,
                                                    className: "px-4 py-2 text-sm font-medium text-white bg-primary-600 border border-transparent rounded-lg hover:bg-primary-700 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors",
                                                    children: mutation.isPending ? /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                        className: "flex items-center",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("svg", {
                                                                className: "animate-spin -ml-1 mr-2 h-4 w-4",
                                                                fill: "none",
                                                                viewBox: "0 0 24 24",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("circle", {
                                                                        className: "opacity-25",
                                                                        cx: "12",
                                                                        cy: "12",
                                                                        r: "10",
                                                                        stroke: "currentColor",
                                                                        strokeWidth: "4"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                                                        className: "opacity-75",
                                                                        fill: "currentColor",
                                                                        d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                                                                    })
                                                                ]
                                                            }),
                                                            isEditing ? 'Updating...' : 'Adding...'
                                                        ]
                                                    }) : isEditing ? 'Update Plant' : 'Add Plant'
                                                })
                                            ]
                                        })
                                    ]
                                })
                            ]
                        }),
                        mutation.isError && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "p-4 bg-red-50 border-t border-red-200",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: "text-sm text-red-600",
                                children: mutation.error instanceof Error ? mutation.error.message : 'An error occurred'
                            })
                        })
                    ]
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdGVmYW5iZWtrZXIvcHJvamVjdHMvZmFuY3ktcGxhbnRpZXMvc3JjL2NvbXBvbmVudHMvcGxhbnRzL1BsYW50SW5zdGFuY2VGb3JtLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VRdWVyeSwgdXNlTXV0YXRpb24sIHVzZVF1ZXJ5Q2xpZW50IH0gZnJvbSAnQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5JztcbmltcG9ydCB7IHVzZUZvcm0sIENvbnRyb2xsZXIgfSBmcm9tICdyZWFjdC1ob29rLWZvcm0nO1xuaW1wb3J0IHsgem9kUmVzb2x2ZXIgfSBmcm9tICdAaG9va2Zvcm0vcmVzb2x2ZXJzL3pvZCc7XG5pbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcbmltcG9ydCBQbGFudFRheG9ub215U2VsZWN0b3IgZnJvbSAnLi9QbGFudFRheG9ub215U2VsZWN0b3InO1xuaW1wb3J0IEltYWdlVXBsb2FkIGZyb20gJy4uL3NoYXJlZC9JbWFnZVVwbG9hZCc7XG5pbXBvcnQgdHlwZSB7IEVuaGFuY2VkUGxhbnRJbnN0YW5jZSB9IGZyb20gJ0AvbGliL3R5cGVzL3BsYW50LWluc3RhbmNlLXR5cGVzJztcbmltcG9ydCB0eXBlIHsgUGxhbnRTdWdnZXN0aW9uIH0gZnJvbSAnQC9saWIvdmFsaWRhdGlvbi9wbGFudC1zY2hlbWFzJztcblxuLy8gRm9ybSB2YWxpZGF0aW9uIHNjaGVtYXNcbmNvbnN0IHBsYW50VGF4b25vbXlTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGZhbWlseTogei5zdHJpbmcoKS5taW4oMSwgJ0ZhbWlseSBpcyByZXF1aXJlZCcpLm1heCgxMDAsICdGYW1pbHkgbXVzdCBiZSBsZXNzIHRoYW4gMTAwIGNoYXJhY3RlcnMnKSxcbiAgZ2VudXM6IHouc3RyaW5nKCkubWluKDEsICdHZW51cyBpcyByZXF1aXJlZCcpLm1heCgxMDAsICdHZW51cyBtdXN0IGJlIGxlc3MgdGhhbiAxMDAgY2hhcmFjdGVycycpLFxuICBzcGVjaWVzOiB6LnN0cmluZygpLm1pbigxLCAnU3BlY2llcyBpcyByZXF1aXJlZCcpLm1heCgxMDAsICdTcGVjaWVzIG11c3QgYmUgbGVzcyB0aGFuIDEwMCBjaGFyYWN0ZXJzJyksXG4gIGN1bHRpdmFyOiB6LnN0cmluZygpLm1heCgxMDAsICdDdWx0aXZhciBtdXN0IGJlIGxlc3MgdGhhbiAxMDAgY2hhcmFjdGVycycpLm9wdGlvbmFsKCkudHJhbnNmb3JtKHZhbCA9PiB2YWw/LnRyaW0oKSB8fCAnJyksXG4gIGNvbW1vbk5hbWU6IHouc3RyaW5nKCkubWluKDEsICdDb21tb24gbmFtZSBpcyByZXF1aXJlZCcpLm1heCgxMDAsICdDb21tb24gbmFtZSBtdXN0IGJlIGxlc3MgdGhhbiAxMDAgY2hhcmFjdGVycycpLFxufSk7XG5cbmNvbnN0IHBsYW50SW5zdGFuY2VGb3JtU2NoZW1hID0gei5vYmplY3Qoe1xuICBwbGFudElkOiB6Lm51bWJlcigpLm1pbigxLCAnUGxlYXNlIHNlbGVjdCBhIHBsYW50IHR5cGUnKSxcbiAgbmlja25hbWU6IHouc3RyaW5nKClcbiAgICAubWluKDEsICdOaWNrbmFtZSBpcyByZXF1aXJlZCcpXG4gICAgLm1heCgxMDAsICdOaWNrbmFtZSBtdXN0IGJlIGxlc3MgdGhhbiAxMDAgY2hhcmFjdGVycycpXG4gICAgLnRyaW0oKVxuICAgIC5yZWZpbmUodmFsID0+IHZhbC5sZW5ndGggPiAwLCAnTmlja25hbWUgY2Fubm90IGJlIGVtcHR5JyksXG4gIGxvY2F0aW9uOiB6LnN0cmluZygpXG4gICAgLm1pbigxLCAnTG9jYXRpb24gaXMgcmVxdWlyZWQnKVxuICAgIC5tYXgoMTAwLCAnTG9jYXRpb24gbXVzdCBiZSBsZXNzIHRoYW4gMTAwIGNoYXJhY3RlcnMnKVxuICAgIC50cmltKClcbiAgICAucmVmaW5lKHZhbCA9PiB2YWwubGVuZ3RoID4gMCwgJ0xvY2F0aW9uIGNhbm5vdCBiZSBlbXB0eScpLFxuICBmZXJ0aWxpemVyU2NoZWR1bGU6IHouZW51bShbXG4gICAgJ3dlZWtseScsIFxuICAgICdiaXdlZWtseScsIFxuICAgICdldmVyeV8yXzRfd2Vla3MnLFxuICAgICdldmVyeV8zXzRfd2Vla3MnLCBcbiAgICAnZXZlcnlfNF93ZWVrcycsXG4gICAgJ2V2ZXJ5XzRfNl93ZWVrcycsXG4gICAgJ2V2ZXJ5XzZfOF93ZWVrcycsXG4gICAgJ2JpbW9udGhseScsIFxuICAgICdxdWFydGVybHknXG4gIF0sIHtcbiAgICBtZXNzYWdlOiAnUGxlYXNlIHNlbGVjdCBhIGZlcnRpbGl6ZXIgc2NoZWR1bGUnXG4gIH0pLFxuICBsYXN0RmVydGlsaXplZDogei5zdHJpbmcoKVxuICAgIC5vcHRpb25hbCgpXG4gICAgLnJlZmluZSh2YWwgPT4gIXZhbCB8fCAhaXNOYU4oRGF0ZS5wYXJzZSh2YWwpKSwgJ0ludmFsaWQgZGF0ZSBmb3JtYXQnKSxcbiAgbGFzdFJlcG90OiB6LnN0cmluZygpXG4gICAgLm9wdGlvbmFsKClcbiAgICAucmVmaW5lKHZhbCA9PiAhdmFsIHx8ICFpc05hTihEYXRlLnBhcnNlKHZhbCkpLCAnSW52YWxpZCBkYXRlIGZvcm1hdCcpLFxuICBub3Rlczogei5zdHJpbmcoKVxuICAgIC5tYXgoMjAwMCwgJ05vdGVzIG11c3QgYmUgbGVzcyB0aGFuIDIwMDAgY2hhcmFjdGVycycpXG4gICAgLm9wdGlvbmFsKClcbiAgICAudHJhbnNmb3JtKHZhbCA9PiB2YWw/LnRyaW0oKSB8fCAnJyksXG4gIGltYWdlczogei5hcnJheSh6LnN0cmluZygpKS5tYXgoMTAsICdNYXhpbXVtIDEwIGltYWdlcyBhbGxvd2VkJykub3B0aW9uYWwoKSxcbiAgaXNBY3RpdmU6IHouYm9vbGVhbigpLmRlZmF1bHQodHJ1ZSkub3B0aW9uYWwoKSxcbiAgLy8gTmV3IHRheG9ub215IGZpZWxkcyAob25seSB1c2VkIHdoZW4gY3JlYXRpbmcgbmV3IHBsYW50KVxuICBuZXdQbGFudFRheG9ub215OiBwbGFudFRheG9ub215U2NoZW1hLm9wdGlvbmFsKCksXG59KS5yZWZpbmUoZGF0YSA9PiB7XG4gIC8vIEN1c3RvbSB2YWxpZGF0aW9uOiBsYXN0RmVydGlsaXplZCBjYW5ub3QgYmUgaW4gdGhlIGZ1dHVyZVxuICBpZiAoZGF0YS5sYXN0RmVydGlsaXplZCkge1xuICAgIGNvbnN0IGZlcnRpbGl6ZXJEYXRlID0gbmV3IERhdGUoZGF0YS5sYXN0RmVydGlsaXplZCk7XG4gICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICAgIHRvZGF5LnNldEhvdXJzKDIzLCA1OSwgNTksIDk5OSk7IC8vIEVuZCBvZiB0b2RheVxuICAgIHJldHVybiBmZXJ0aWxpemVyRGF0ZSA8PSB0b2RheTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn0sIHtcbiAgbWVzc2FnZTogJ0xhc3QgZmVydGlsaXplZCBkYXRlIGNhbm5vdCBiZSBpbiB0aGUgZnV0dXJlJyxcbiAgcGF0aDogWydsYXN0RmVydGlsaXplZCddXG59KS5yZWZpbmUoZGF0YSA9PiB7XG4gIC8vIEN1c3RvbSB2YWxpZGF0aW9uOiBsYXN0UmVwb3QgY2Fubm90IGJlIGluIHRoZSBmdXR1cmVcbiAgaWYgKGRhdGEubGFzdFJlcG90KSB7XG4gICAgY29uc3QgcmVwb3REYXRlID0gbmV3IERhdGUoZGF0YS5sYXN0UmVwb3QpO1xuICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcbiAgICB0b2RheS5zZXRIb3VycygyMywgNTksIDU5LCA5OTkpOyAvLyBFbmQgb2YgdG9kYXlcbiAgICByZXR1cm4gcmVwb3REYXRlIDw9IHRvZGF5O1xuICB9XG4gIHJldHVybiB0cnVlO1xufSwge1xuICBtZXNzYWdlOiAnTGFzdCByZXBvdCBkYXRlIGNhbm5vdCBiZSBpbiB0aGUgZnV0dXJlJyxcbiAgcGF0aDogWydsYXN0UmVwb3QnXVxufSk7XG5cbnR5cGUgUGxhbnRJbnN0YW5jZUZvcm1EYXRhID0gei5pbmZlcjx0eXBlb2YgcGxhbnRJbnN0YW5jZUZvcm1TY2hlbWE+O1xudHlwZSBQbGFudFRheG9ub215Rm9ybURhdGEgPSB6LmluZmVyPHR5cGVvZiBwbGFudFRheG9ub215U2NoZW1hPjtcblxuaW50ZXJmYWNlIFBsYW50SW5zdGFuY2VGb3JtUHJvcHMge1xuICBwbGFudEluc3RhbmNlPzogRW5oYW5jZWRQbGFudEluc3RhbmNlO1xuICBpc09wZW46IGJvb2xlYW47XG4gIG9uQ2xvc2U6ICgpID0+IHZvaWQ7XG4gIG9uU3VjY2Vzcz86IChwbGFudEluc3RhbmNlOiBFbmhhbmNlZFBsYW50SW5zdGFuY2UpID0+IHZvaWQ7XG4gIHVzZXJJZDogbnVtYmVyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQbGFudEluc3RhbmNlRm9ybSh7XG4gIHBsYW50SW5zdGFuY2UsXG4gIGlzT3BlbixcbiAgb25DbG9zZSxcbiAgb25TdWNjZXNzLFxuICB1c2VySWQsXG59OiBQbGFudEluc3RhbmNlRm9ybVByb3BzKSB7XG4gIGNvbnN0IFtzZWxlY3RlZFBsYW50LCBzZXRTZWxlY3RlZFBsYW50XSA9IHVzZVN0YXRlPFBsYW50U3VnZ2VzdGlvbiB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbaW1hZ2VGaWxlcywgc2V0SW1hZ2VGaWxlc10gPSB1c2VTdGF0ZTxGaWxlW10+KFtdKTtcbiAgY29uc3QgW2V4aXN0aW5nSW1hZ2VzLCBzZXRFeGlzdGluZ0ltYWdlc10gPSB1c2VTdGF0ZTxzdHJpbmdbXT4oW10pO1xuICBjb25zdCBbc2hvd0xvY2F0aW9uU3VnZ2VzdGlvbnMsIHNldFNob3dMb2NhdGlvblN1Z2dlc3Rpb25zXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2xvY2F0aW9uSW5wdXQsIHNldExvY2F0aW9uSW5wdXRdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbaXNDcmVhdGluZ1BsYW50LCBzZXRJc0NyZWF0aW5nUGxhbnRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2hvd1RheG9ub215Rm9ybSwgc2V0U2hvd1RheG9ub215Rm9ybV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFt0YXhvbm9teURhdGEsIHNldFRheG9ub215RGF0YV0gPSB1c2VTdGF0ZTxQbGFudFRheG9ub215Rm9ybURhdGE+KHtcbiAgICBmYW1pbHk6ICcnLFxuICAgIGdlbnVzOiAnJyxcbiAgICBzcGVjaWVzOiAnJyxcbiAgICBjdWx0aXZhcjogJycsXG4gICAgY29tbW9uTmFtZTogJycsXG4gIH0pO1xuICBjb25zdCBbaGFzVW5zYXZlZENoYW5nZXMsIHNldEhhc1Vuc2F2ZWRDaGFuZ2VzXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW25ld05vdGVJbnB1dCwgc2V0TmV3Tm90ZUlucHV0XSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3QgcXVlcnlDbGllbnQgPSB1c2VRdWVyeUNsaWVudCgpO1xuICBjb25zdCBpc0VkaXRpbmcgPSAhIXBsYW50SW5zdGFuY2U7XG5cbiAgLy8gRm9ybSBzZXR1cFxuICBjb25zdCB7XG4gICAgY29udHJvbCxcbiAgICBoYW5kbGVTdWJtaXQsXG4gICAgZm9ybVN0YXRlOiB7IGVycm9ycywgaXNWYWxpZCwgaXNEaXJ0eSB9LFxuICAgIHJlc2V0LFxuICAgIHNldFZhbHVlLFxuICAgIHdhdGNoLFxuICAgIHRyaWdnZXIsXG4gIH0gPSB1c2VGb3JtKHtcbiAgICByZXNvbHZlcjogem9kUmVzb2x2ZXIocGxhbnRJbnN0YW5jZUZvcm1TY2hlbWEpLFxuICAgIG1vZGU6ICdvbkNoYW5nZScsXG4gICAgZGVmYXVsdFZhbHVlczoge1xuICAgICAgcGxhbnRJZDogMSwgLy8gRGVmYXVsdCB0byAxIHRvIHBhc3MgdmFsaWRhdGlvbiwgd2lsbCBiZSBvdmVycmlkZGVuIGR1cmluZyBpbml0aWFsaXphdGlvblxuICAgICAgbmlja25hbWU6ICcnLFxuICAgICAgbG9jYXRpb246ICcnLFxuICAgICAgZmVydGlsaXplclNjaGVkdWxlOiAnZXZlcnlfNF93ZWVrcycgYXMgY29uc3QsXG4gICAgICBsYXN0RmVydGlsaXplZDogJycsXG4gICAgICBsYXN0UmVwb3Q6ICcnLFxuICAgICAgbm90ZXM6ICcnLFxuICAgICAgaW1hZ2VzOiBbXSxcbiAgICAgIGlzQWN0aXZlOiB0cnVlLFxuICAgICAgbmV3UGxhbnRUYXhvbm9teTogdW5kZWZpbmVkLFxuICAgIH0sXG4gIH0pO1xuXG4gIC8vIEZldGNoIHVzZXIgbG9jYXRpb25zIGZvciBhdXRvY29tcGxldGVcbiAgY29uc3QgeyBkYXRhOiB1c2VyTG9jYXRpb25zIH0gPSB1c2VRdWVyeSh7XG4gICAgcXVlcnlLZXk6IFsndXNlci1sb2NhdGlvbnMnLCB1c2VySWRdLFxuICAgIHF1ZXJ5Rm46IGFzeW5jICgpID0+IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvcGxhbnQtaW5zdGFuY2VzL2xvY2F0aW9ucz91c2VySWQ9JHt1c2VySWR9YCk7XG4gICAgICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBsb2NhdGlvbnMnKTtcbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkgYXMgUHJvbWlzZTxzdHJpbmdbXT47XG4gICAgfSxcbiAgICBzdGFsZVRpbWU6IDEwMDAgKiA2MCAqIDEwLCAvLyAxMCBtaW51dGVzXG4gIH0pO1xuXG4gIC8vIEhhbmRsZSBzaG93aW5nIHRheG9ub215IGZvcm0gZm9yIG5ldyBwbGFudCBjcmVhdGlvblxuICBjb25zdCBoYW5kbGVTaG93VGF4b25vbXlGb3JtID0gKHF1ZXJ5OiBzdHJpbmcpID0+IHtcbiAgICBzZXRTaG93VGF4b25vbXlGb3JtKHRydWUpO1xuICAgIHNldFRheG9ub215RGF0YSh7XG4gICAgICBmYW1pbHk6ICcnLFxuICAgICAgZ2VudXM6ICcnLFxuICAgICAgc3BlY2llczogJycsXG4gICAgICBjdWx0aXZhcjogJycsXG4gICAgICBjb21tb25OYW1lOiBxdWVyeSB8fCAnJyxcbiAgICB9KTtcbiAgfTtcblxuICAvLyBIYW5kbGUgdGF4b25vbXkgZm9ybSBzdWJtaXNzaW9uXG4gIGNvbnN0IGhhbmRsZVRheG9ub215U3VibWl0ID0gKGRhdGE6IFBsYW50VGF4b25vbXlGb3JtRGF0YSkgPT4ge1xuICAgIHNldElzQ3JlYXRpbmdQbGFudCh0cnVlKTtcbiAgICBjcmVhdGVQbGFudE11dGF0aW9uLm11dGF0ZSh7XG4gICAgICAuLi5kYXRhLFxuICAgICAgY3VsdGl2YXI6IGRhdGEuY3VsdGl2YXIgfHwgbnVsbCxcbiAgICB9KTtcbiAgfTtcblxuICAvLyBIYW5kbGUgY2FuY2VsaW5nIHRheG9ub215IGZvcm1cbiAgY29uc3QgaGFuZGxlQ2FuY2VsVGF4b25vbXlGb3JtID0gKCkgPT4ge1xuICAgIHNldFNob3dUYXhvbm9teUZvcm0oZmFsc2UpO1xuICAgIHNldFRheG9ub215RGF0YSh7XG4gICAgICBmYW1pbHk6ICcnLFxuICAgICAgZ2VudXM6ICcnLFxuICAgICAgc3BlY2llczogJycsXG4gICAgICBjdWx0aXZhcjogJycsXG4gICAgICBjb21tb25OYW1lOiAnJyxcbiAgICB9KTtcbiAgfTtcblxuICAvLyBDcmVhdGUgbmV3IHBsYW50IG11dGF0aW9uXG4gIGNvbnN0IGNyZWF0ZVBsYW50TXV0YXRpb24gPSB1c2VNdXRhdGlvbih7XG4gICAgbXV0YXRpb25GbjogYXN5bmMgKHBsYW50RGF0YTogYW55KSA9PiB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3BsYW50cycsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwbGFudERhdGEpLFxuICAgICAgfSk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gY3JlYXRlIHBsYW50Jyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgfSxcbiAgICBvblN1Y2Nlc3M6IGFzeW5jIChkYXRhKSA9PiB7XG4gICAgICBhd2FpdCBxdWVyeUNsaWVudC5pbnZhbGlkYXRlUXVlcmllcyh7IFxuICAgICAgICBxdWVyeUtleTogWydwbGFudHMnXSxcbiAgICAgICAgcmVmZXRjaFR5cGU6ICdhY3RpdmUnXG4gICAgICB9KTtcbiAgICAgIHF1ZXJ5Q2xpZW50LnJlbW92ZVF1ZXJpZXMoeyBxdWVyeUtleTogWydwbGFudHMnXSB9KTtcbiAgICAgIGF3YWl0IHF1ZXJ5Q2xpZW50LnJlZmV0Y2hRdWVyaWVzKHsgcXVlcnlLZXk6IFsncGxhbnRzJ10gfSk7XG4gICAgICBcbiAgICAgIC8vIFNldCB0aGUgbmV3bHkgY3JlYXRlZCBwbGFudCBhcyBzZWxlY3RlZFxuICAgICAgY29uc3QgbmV3UGxhbnQ6IFBsYW50U3VnZ2VzdGlvbiA9IHtcbiAgICAgICAgaWQ6IGRhdGEuZGF0YS5pZCxcbiAgICAgICAgZmFtaWx5OiBkYXRhLmRhdGEuZmFtaWx5LFxuICAgICAgICBnZW51czogZGF0YS5kYXRhLmdlbnVzLFxuICAgICAgICBzcGVjaWVzOiBkYXRhLmRhdGEuc3BlY2llcyxcbiAgICAgICAgY3VsdGl2YXI6IGRhdGEuZGF0YS5jdWx0aXZhcixcbiAgICAgICAgY29tbW9uTmFtZTogZGF0YS5kYXRhLmNvbW1vbk5hbWUsXG4gICAgICAgIGlzVmVyaWZpZWQ6IGRhdGEuZGF0YS5pc1ZlcmlmaWVkLFxuICAgICAgfTtcbiAgICAgIFxuICAgICAgaGFuZGxlUGxhbnRTZWxlY3QobmV3UGxhbnQpO1xuICAgICAgc2V0SXNDcmVhdGluZ1BsYW50KGZhbHNlKTtcbiAgICAgIHNldFNob3dUYXhvbm9teUZvcm0oZmFsc2UpO1xuICAgIH0sXG4gICAgb25FcnJvcjogKGVycm9yKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gY3JlYXRlIHBsYW50OicsIGVycm9yKTtcbiAgICAgIHNldElzQ3JlYXRpbmdQbGFudChmYWxzZSk7XG4gICAgICBzZXRTaG93VGF4b25vbXlGb3JtKGZhbHNlKTtcbiAgICB9LFxuICB9KTtcblxuICAvLyBDcmVhdGUvdXBkYXRlIG11dGF0aW9uXG4gIGNvbnN0IG11dGF0aW9uID0gdXNlTXV0YXRpb24oe1xuICAgIG11dGF0aW9uRm46IGFzeW5jIChkYXRhOiBQbGFudEluc3RhbmNlRm9ybURhdGEgJiB7IGZlcnRpbGl6ZXJTY2hlZHVsZTogc3RyaW5nIH0pID0+IHtcbiAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICBcbiAgICAgIC8vIEFkZCBmb3JtIGZpZWxkc1xuICAgICAgT2JqZWN0LmVudHJpZXMoZGF0YSkuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkICYmIHZhbHVlICE9PSAnJykge1xuICAgICAgICAgIGlmIChrZXkgPT09ICdpbWFnZXMnICYmIEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAvLyBIYW5kbGUgZXhpc3RpbmcgaW1hZ2VzXG4gICAgICAgICAgICB2YWx1ZS5mb3JFYWNoKChpbWFnZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKGBleGlzdGluZ0ltYWdlc1ske2luZGV4fV1gLCBpbWFnZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKGtleSwgU3RyaW5nKHZhbHVlKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgLy8gQWRkIG5ldyBpbWFnZSBmaWxlc1xuICAgICAgaW1hZ2VGaWxlcy5mb3JFYWNoKChmaWxlLCBpbmRleCkgPT4ge1xuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoYGltYWdlRmlsZXNbJHtpbmRleH1dYCwgZmlsZSk7XG4gICAgICB9KTtcblxuICAgICAgY29uc3QgdXJsID0gaXNFZGl0aW5nIFxuICAgICAgICA/IGAvYXBpL3BsYW50LWluc3RhbmNlcy8ke3BsYW50SW5zdGFuY2UuaWR9YFxuICAgICAgICA6ICcvYXBpL3BsYW50LWluc3RhbmNlcyc7XG4gICAgICBcbiAgICAgIGNvbnN0IG1ldGhvZCA9IGlzRWRpdGluZyA/ICdQVVQnIDogJ1BPU1QnO1xuXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICBtZXRob2QsXG4gICAgICAgIGJvZHk6IGZvcm1EYXRhLFxuICAgICAgfSk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0FQSSBFcnJvciBSZXNwb25zZTonLCBlcnJvcik7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvci5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gc2F2ZSBwbGFudCBpbnN0YW5jZScpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xuICAgIH0sXG4gICAgb25TdWNjZXNzOiBhc3luYyAoZGF0YSkgPT4ge1xuICAgICAgLy8gQ29tcHJlaGVuc2l2ZSBjYWNoZSBjbGVhcmluZyBmb3IgaW1tZWRpYXRlIGdyaWQgdXBkYXRlc1xuICAgICAgY29uc29sZS5sb2coJ1BsYW50IGluc3RhbmNlIHNhdmVkLCBpbnZhbGlkYXRpbmcgY2FjaGVzLi4uJyk7XG4gICAgICBcbiAgICAgIC8vIEludmFsaWRhdGUgYWxsIHBsYW50LWluc3RhbmNlcyBxdWVyaWVzIHJlZ2FyZGxlc3Mgb2YgZmlsdGVyc1xuICAgICAgYXdhaXQgcXVlcnlDbGllbnQuaW52YWxpZGF0ZVF1ZXJpZXMoeyBcbiAgICAgICAgcXVlcnlLZXk6IFsncGxhbnQtaW5zdGFuY2VzJ10sXG4gICAgICAgIHJlZmV0Y2hUeXBlOiAnYWxsJ1xuICAgICAgfSk7XG4gICAgICBcbiAgICAgIC8vIEZvcmNlIHJlZmV0Y2ggc3BlY2lmaWMgdXNlciBxdWVyaWVzXG4gICAgICBhd2FpdCBxdWVyeUNsaWVudC5yZWZldGNoUXVlcmllcyh7IFxuICAgICAgICBxdWVyeUtleTogWydwbGFudC1pbnN0YW5jZXMnLCB1c2VySWRdLFxuICAgICAgICB0eXBlOiAnYWxsJ1xuICAgICAgfSk7XG4gICAgICBcbiAgICAgIC8vIEFkZGl0aW9uYWwgY2FjaGUgY2xlYXJpbmcgZm9yIHJlbGF0ZWQgZGF0YVxuICAgICAgY29uc3QgYWRkaXRpb25hbFF1ZXJ5S2V5cyA9IFtcbiAgICAgICAgWydwbGFudC1kZXRhaWwnXSxcbiAgICAgICAgWydjYXJlLWRhc2hib2FyZCcsIHVzZXJJZF0sXG4gICAgICAgIFsncGxhbnRzJ11cbiAgICAgIF07XG5cbiAgICAgIGZvciAoY29uc3QgcXVlcnlLZXkgb2YgYWRkaXRpb25hbFF1ZXJ5S2V5cykge1xuICAgICAgICBhd2FpdCBxdWVyeUNsaWVudC5pbnZhbGlkYXRlUXVlcmllcyh7IFxuICAgICAgICAgIHF1ZXJ5S2V5LFxuICAgICAgICAgIHJlZmV0Y2hUeXBlOiAnYWN0aXZlJ1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc29sZS5sb2coJ0NhY2hlIGludmFsaWRhdGlvbiBjb21wbGV0ZScpO1xuICAgICAgXG4gICAgICAvLyBSZXNldCBmb3JtIHN0YXRlXG4gICAgICByZXNldCgpO1xuICAgICAgc2V0SW1hZ2VGaWxlcyhbXSk7XG4gICAgICBzZXRFeGlzdGluZ0ltYWdlcyhbXSk7XG4gICAgICBzZXRTZWxlY3RlZFBsYW50KG51bGwpO1xuICAgICAgc2V0U2hvd1RheG9ub215Rm9ybShmYWxzZSk7XG4gICAgICBzZXRIYXNVbnNhdmVkQ2hhbmdlcyhmYWxzZSk7XG4gICAgICBcbiAgICAgIGlmIChvblN1Y2Nlc3MpIHtcbiAgICAgICAgb25TdWNjZXNzKGRhdGEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gT25seSBjYWxsIG9uQ2xvc2UgaWYgbm8gb25TdWNjZXNzIGNhbGxiYWNrIHByb3ZpZGVkXG4gICAgICAgIG9uQ2xvc2UoKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcblxuICAvLyBJbml0aWFsaXplIGZvcm0gd2hlbiBlZGl0aW5nXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzRWRpdGluZyAmJiBwbGFudEluc3RhbmNlKSB7XG4gICAgICBjb25zdCBjb252ZXJ0ZWRTY2hlZHVsZSA9IGNvbnZlcnREYXRhYmFzZVNjaGVkdWxlVG9Gb3JtKHBsYW50SW5zdGFuY2UuZmVydGlsaXplclNjaGVkdWxlKTtcbiAgICAgIGNvbnNvbGUubG9nKCdTZXR0aW5nIGZvcm0gd2l0aCBmZXJ0aWxpemVyIHNjaGVkdWxlOicsIGNvbnZlcnRlZFNjaGVkdWxlKTtcbiAgICAgIHJlc2V0KHtcbiAgICAgICAgcGxhbnRJZDogcGxhbnRJbnN0YW5jZS5wbGFudElkLFxuICAgICAgICBuaWNrbmFtZTogcGxhbnRJbnN0YW5jZS5uaWNrbmFtZSxcbiAgICAgICAgbG9jYXRpb246IHBsYW50SW5zdGFuY2UubG9jYXRpb24sXG4gICAgICAgIGZlcnRpbGl6ZXJTY2hlZHVsZTogY29udmVydGVkU2NoZWR1bGUgYXMgYW55LFxuICAgICAgICBsYXN0RmVydGlsaXplZDogcGxhbnRJbnN0YW5jZS5sYXN0RmVydGlsaXplZCBcbiAgICAgICAgICA/IG5ldyBEYXRlKHBsYW50SW5zdGFuY2UubGFzdEZlcnRpbGl6ZWQpLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXVxuICAgICAgICAgIDogJycsXG4gICAgICAgIGxhc3RSZXBvdDogcGxhbnRJbnN0YW5jZS5sYXN0UmVwb3QgXG4gICAgICAgICAgPyBuZXcgRGF0ZShwbGFudEluc3RhbmNlLmxhc3RSZXBvdCkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdXG4gICAgICAgICAgOiAnJyxcbiAgICAgICAgbm90ZXM6IHBsYW50SW5zdGFuY2Uubm90ZXMgfHwgJycsXG4gICAgICAgIGltYWdlczogcGxhbnRJbnN0YW5jZS5pbWFnZXMgfHwgW10sXG4gICAgICAgIGlzQWN0aXZlOiBwbGFudEluc3RhbmNlLmlzQWN0aXZlLFxuICAgICAgfSk7XG5cbiAgICAgIHNldFNlbGVjdGVkUGxhbnQoe1xuICAgICAgICBpZDogcGxhbnRJbnN0YW5jZS5wbGFudC5pZCxcbiAgICAgICAgZmFtaWx5OiBwbGFudEluc3RhbmNlLnBsYW50LmZhbWlseSxcbiAgICAgICAgZ2VudXM6IHBsYW50SW5zdGFuY2UucGxhbnQuZ2VudXMsXG4gICAgICAgIHNwZWNpZXM6IHBsYW50SW5zdGFuY2UucGxhbnQuc3BlY2llcyxcbiAgICAgICAgY29tbW9uTmFtZTogcGxhbnRJbnN0YW5jZS5wbGFudC5jb21tb25OYW1lLFxuICAgICAgICBpc1ZlcmlmaWVkOiBwbGFudEluc3RhbmNlLnBsYW50LmlzVmVyaWZpZWQsXG4gICAgICB9KTtcblxuICAgICAgc2V0RXhpc3RpbmdJbWFnZXMocGxhbnRJbnN0YW5jZS5pbWFnZXMgfHwgW10pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXNldCgpO1xuICAgICAgc2V0U2VsZWN0ZWRQbGFudChudWxsKTtcbiAgICAgIHNldEltYWdlRmlsZXMoW10pO1xuICAgICAgc2V0RXhpc3RpbmdJbWFnZXMoW10pO1xuICAgICAgc2V0U2hvd1RheG9ub215Rm9ybShmYWxzZSk7XG4gICAgICBzZXRUYXhvbm9teURhdGEoe1xuICAgICAgICBmYW1pbHk6ICcnLFxuICAgICAgICBnZW51czogJycsXG4gICAgICAgIHNwZWNpZXM6ICcnLFxuICAgICAgICBjdWx0aXZhcjogJycsXG4gICAgICAgIGNvbW1vbk5hbWU6ICcnLFxuICAgICAgfSk7XG4gICAgfVxuICB9LCBbaXNFZGl0aW5nLCBwbGFudEluc3RhbmNlLCByZXNldF0pO1xuXG4gIC8vIEhhbmRsZSBwbGFudCBzZWxlY3Rpb25cbiAgY29uc3QgaGFuZGxlUGxhbnRTZWxlY3QgPSAocGxhbnQ6IFBsYW50U3VnZ2VzdGlvbiB8IG51bGwpID0+IHtcbiAgICBpZiAocGxhbnQpIHtcbiAgICAgIHNldFNlbGVjdGVkUGxhbnQocGxhbnQpO1xuICAgICAgc2V0VmFsdWUoJ3BsYW50SWQnLCBwbGFudC5pZCwgeyBzaG91bGRWYWxpZGF0ZTogdHJ1ZSB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0U2VsZWN0ZWRQbGFudChudWxsKTtcbiAgICAgIHNldFZhbHVlKCdwbGFudElkJywgMCwgeyBzaG91bGRWYWxpZGF0ZTogdHJ1ZSB9KTtcbiAgICB9XG4gIH07XG5cbiAgLy8gSGFuZGxlIGltYWdlIGNoYW5nZXNcbiAgY29uc3QgaGFuZGxlSW1hZ2VDaGFuZ2UgPSAoZmlsZXM6IEZpbGVbXSkgPT4ge1xuICAgIHNldEltYWdlRmlsZXMoZmlsZXMpO1xuICAgIC8vIERvbid0IHVwZGF0ZSBmb3JtJ3MgaW1hZ2VzIGZpZWxkIC0ga2VlcCBleGlzdGluZ0ltYWdlcyBzZXBhcmF0ZVxuICAgIC8vIEp1c3QgdHJpZ2dlciB2YWxpZGF0aW9uIHRvIGVuc3VyZSBmb3JtIGlzIHZhbGlkXG4gICAgdHJpZ2dlcigpO1xuICB9O1xuXG4gIC8vIEhhbmRsZSBleGlzdGluZyBpbWFnZSByZW1vdmFsXG4gIGNvbnN0IGhhbmRsZVJlbW92ZUV4aXN0aW5nSW1hZ2UgPSAoaW5kZXg6IG51bWJlcikgPT4ge1xuICAgIGNvbnN0IG5ld0ltYWdlcyA9IGV4aXN0aW5nSW1hZ2VzLmZpbHRlcigoXywgaSkgPT4gaSAhPT0gaW5kZXgpO1xuICAgIHNldEV4aXN0aW5nSW1hZ2VzKG5ld0ltYWdlcyk7XG4gICAgLy8gRG9uJ3QgdXBkYXRlIGZvcm0ncyBpbWFnZXMgZmllbGQgLSBrZWVwIGV4aXN0aW5nSW1hZ2VzIHNlcGFyYXRlXG4gICAgdHJpZ2dlcigpO1xuICB9O1xuXG4gIC8vIEhhbmRsZSBzZXR0aW5nIHByaW1hcnkgaW1hZ2UgKG1vdmUgaW1hZ2UgdG8gaW5kZXggMClcbiAgY29uc3QgaGFuZGxlU2V0UHJpbWFyeUltYWdlID0gKGluZGV4OiBudW1iZXIpID0+IHtcbiAgICBpZiAoaW5kZXggPT09IDApIHJldHVybjsgLy8gQWxyZWFkeSBwcmltYXJ5XG4gICAgXG4gICAgY29uc3QgbmV3SW1hZ2VzID0gWy4uLmV4aXN0aW5nSW1hZ2VzXTtcbiAgICBjb25zdCBzZWxlY3RlZEltYWdlID0gbmV3SW1hZ2VzW2luZGV4XTtcbiAgICBcbiAgICAvLyBSZW1vdmUgdGhlIHNlbGVjdGVkIGltYWdlIGFuZCBhZGQgaXQgdG8gdGhlIGJlZ2lubmluZ1xuICAgIG5ld0ltYWdlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIG5ld0ltYWdlcy51bnNoaWZ0KHNlbGVjdGVkSW1hZ2UpO1xuICAgIFxuICAgIHNldEV4aXN0aW5nSW1hZ2VzKG5ld0ltYWdlcyk7XG4gICAgdHJpZ2dlcigpO1xuICB9O1xuXG4gIC8vIENvbnZlcnQgZW51bSBmZXJ0aWxpemVyIHNjaGVkdWxlIHRvIGV4cGVjdGVkIGZvcm1hdFxuICBjb25zdCBjb252ZXJ0RmVydGlsaXplclNjaGVkdWxlID0gKHNjaGVkdWxlOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICAgIGNvbnN0IHNjaGVkdWxlTWFwID0ge1xuICAgICAgJ3dlZWtseSc6ICc3IGRheXMnLFxuICAgICAgJ2Jpd2Vla2x5JzogJzIgd2Vla3MnLCBcbiAgICAgICdldmVyeV8yXzRfd2Vla3MnOiAnMyB3ZWVrcycsIC8vIEF2ZXJhZ2Ugb2YgMi00IHdlZWtzXG4gICAgICAnZXZlcnlfM180X3dlZWtzJzogJzQgd2Vla3MnLCAvLyBBdmVyYWdlIG9mIDMtNCB3ZWVrc1xuICAgICAgJ2V2ZXJ5XzRfd2Vla3MnOiAnNCB3ZWVrcycsXG4gICAgICAnZXZlcnlfNF82X3dlZWtzJzogJzUgd2Vla3MnLCAvLyBBdmVyYWdlIG9mIDQtNiB3ZWVrc1xuICAgICAgJ2V2ZXJ5XzZfOF93ZWVrcyc6ICc3IHdlZWtzJywgLy8gQXZlcmFnZSBvZiA2LTggd2Vla3NcbiAgICAgICdiaW1vbnRobHknOiAnMiBtb250aHMnLFxuICAgICAgJ3F1YXJ0ZXJseSc6ICczIG1vbnRocydcbiAgICB9O1xuICAgIHJldHVybiBzY2hlZHVsZU1hcFtzY2hlZHVsZSBhcyBrZXlvZiB0eXBlb2Ygc2NoZWR1bGVNYXBdIHx8IHNjaGVkdWxlO1xuICB9O1xuXG4gIC8vIENvbnZlcnQgZGF0YWJhc2UgZmVydGlsaXplciBzY2hlZHVsZSBiYWNrIHRvIGZvcm0gZW51bVxuICBjb25zdCBjb252ZXJ0RGF0YWJhc2VTY2hlZHVsZVRvRm9ybSA9IChzY2hlZHVsZTogc3RyaW5nKTogc3RyaW5nID0+IHtcbiAgICBjb25zb2xlLmxvZygnQ29udmVydGluZyBkYXRhYmFzZSBzY2hlZHVsZTonLCBzY2hlZHVsZSk7XG4gICAgaWYgKCFzY2hlZHVsZSkgcmV0dXJuICdldmVyeV80X3dlZWtzJztcbiAgICBcbiAgICBjb25zdCByZXZlcnNlTWFwID0ge1xuICAgICAgLy8gTmV3IGZvcm1hdCBtYXRjaGVzICh3aGF0IHdlIHNlbmQgdG8gQVBJKVxuICAgICAgJzcgZGF5cyc6ICd3ZWVrbHknLFxuICAgICAgJzIgd2Vla3MnOiAnYml3ZWVrbHknLFxuICAgICAgJzMgd2Vla3MnOiAnZXZlcnlfMl80X3dlZWtzJyxcbiAgICAgICc0IHdlZWtzJzogJ2V2ZXJ5XzRfd2Vla3MnLFxuICAgICAgJzUgd2Vla3MnOiAnZXZlcnlfNF82X3dlZWtzJyxcbiAgICAgICc3IHdlZWtzJzogJ2V2ZXJ5XzZfOF93ZWVrcycsXG4gICAgICAnMiBtb250aHMnOiAnYmltb250aGx5JyxcbiAgICAgICczIG1vbnRocyc6ICdxdWFydGVybHknLFxuICAgICAgLy8gTGVnYWN5IGZvcm1hdHMgdGhhdCBtaWdodCBleGlzdCBpbiBkYXRhYmFzZVxuICAgICAgJzEgd2Vlayc6ICd3ZWVrbHknLFxuICAgICAgJ2V2ZXJ5IDIgd2Vla3MnOiAnYml3ZWVrbHknLFxuICAgICAgJ2V2ZXJ5IDItNCB3ZWVrcyc6ICdldmVyeV8yXzRfd2Vla3MnLFxuICAgICAgJ2V2ZXJ5IDMtNCB3ZWVrcyc6ICdldmVyeV8zXzRfd2Vla3MnLCBcbiAgICAgICdldmVyeSA0IHdlZWtzJzogJ2V2ZXJ5XzRfd2Vla3MnLFxuICAgICAgJ2V2ZXJ5IDQtNiB3ZWVrcyc6ICdldmVyeV80XzZfd2Vla3MnLFxuICAgICAgJ2V2ZXJ5IDYtOCB3ZWVrcyc6ICdldmVyeV82Xzhfd2Vla3MnLFxuICAgICAgJzEgbW9udGgnOiAnZXZlcnlfNF93ZWVrcycsXG4gICAgICAnbW9udGhseSc6ICdldmVyeV80X3dlZWtzJyxcbiAgICAgICdiaW1vbnRobHknOiAnYmltb250aGx5JyxcbiAgICAgICdxdWFydGVybHknOiAncXVhcnRlcmx5JyxcbiAgICB9O1xuICAgIFxuICAgIGNvbnN0IHJlc3VsdCA9IHJldmVyc2VNYXBbc2NoZWR1bGUgYXMga2V5b2YgdHlwZW9mIHJldmVyc2VNYXBdIHx8ICdldmVyeV80X3dlZWtzJztcbiAgICBjb25zb2xlLmxvZygnQ29udmVydGVkIHRvOicsIHJlc3VsdCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICAvLyBIYW5kbGUgZm9ybSBzdWJtaXNzaW9uXG4gIGNvbnN0IG9uU3VibWl0ID0gKGRhdGE6IFBsYW50SW5zdGFuY2VGb3JtRGF0YSkgPT4ge1xuICAgIGNvbnN0IHN1Ym1pdERhdGEgPSB7XG4gICAgICAuLi5kYXRhLFxuICAgICAgZmVydGlsaXplclNjaGVkdWxlOiBjb252ZXJ0RmVydGlsaXplclNjaGVkdWxlKGRhdGEuZmVydGlsaXplclNjaGVkdWxlKSxcbiAgICAgIGltYWdlczogZXhpc3RpbmdJbWFnZXMsIC8vIEFsd2F5cyB1c2UgY3VycmVudCBleGlzdGluZ0ltYWdlcyBzdGF0ZVxuICAgIH07XG4gICAgY29uc29sZS5sb2coJ0Zvcm0gc3VibWlzc2lvbiBkYXRhOicsIHN1Ym1pdERhdGEpO1xuICAgIGNvbnNvbGUubG9nKCdFeGlzdGluZyBpbWFnZXMgYmVpbmcgc3VibWl0dGVkOicsIGV4aXN0aW5nSW1hZ2VzKTtcbiAgICBjb25zb2xlLmxvZygnT3JpZ2luYWwgZmVydGlsaXplciBzY2hlZHVsZTonLCBkYXRhLmZlcnRpbGl6ZXJTY2hlZHVsZSk7XG4gICAgY29uc29sZS5sb2coJ0NvbnZlcnRlZCBmZXJ0aWxpemVyIHNjaGVkdWxlOicsIGNvbnZlcnRGZXJ0aWxpemVyU2NoZWR1bGUoZGF0YS5mZXJ0aWxpemVyU2NoZWR1bGUpKTtcbiAgICBtdXRhdGlvbi5tdXRhdGUoc3VibWl0RGF0YSBhcyBhbnkpO1xuICB9O1xuXG4gIC8vIFRyYWNrIHVuc2F2ZWQgY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldEhhc1Vuc2F2ZWRDaGFuZ2VzKGlzRGlydHkgfHwgaW1hZ2VGaWxlcy5sZW5ndGggPiAwIHx8IHNob3dUYXhvbm9teUZvcm0pO1xuICB9LCBbaXNEaXJ0eSwgaW1hZ2VGaWxlcy5sZW5ndGgsIHNob3dUYXhvbm9teUZvcm1dKTtcblxuICAvLyBXYXJuIGFib3V0IHVuc2F2ZWQgY2hhbmdlcyBiZWZvcmUgcGFnZSB1bmxvYWRcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVCZWZvcmVVbmxvYWQgPSAoZTogQmVmb3JlVW5sb2FkRXZlbnQpID0+IHtcbiAgICAgIGlmIChoYXNVbnNhdmVkQ2hhbmdlcykge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGUucmV0dXJuVmFsdWUgPSAnWW91IGhhdmUgdW5zYXZlZCBjaGFuZ2VzLiBBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gbGVhdmU/JztcbiAgICAgICAgcmV0dXJuICdZb3UgaGF2ZSB1bnNhdmVkIGNoYW5nZXMuIEFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBsZWF2ZT8nO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBpZiAoaXNPcGVuICYmIGhhc1Vuc2F2ZWRDaGFuZ2VzKSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignYmVmb3JldW5sb2FkJywgaGFuZGxlQmVmb3JlVW5sb2FkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIGhhbmRsZUJlZm9yZVVubG9hZCk7XG4gICAgfTtcbiAgfSwgW2lzT3BlbiwgaGFzVW5zYXZlZENoYW5nZXNdKTtcblxuICAvLyBIYW5kbGUgY2xvc2Ugd2l0aCB1bnNhdmVkIGNoYW5nZXMgd2FybmluZ1xuICBjb25zdCBoYW5kbGVDbG9zZSA9ICgpID0+IHtcbiAgICBpZiAoaGFzVW5zYXZlZENoYW5nZXMpIHtcbiAgICAgIGNvbnN0IGNvbmZpcm1lZCA9IHdpbmRvdy5jb25maXJtKCdZb3UgaGF2ZSB1bnNhdmVkIGNoYW5nZXMuIEFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBjbG9zZT8nKTtcbiAgICAgIGlmICghY29uZmlybWVkKSByZXR1cm47XG4gICAgfVxuICAgIG9uQ2xvc2UoKTtcbiAgfTtcblxuICAvLyBDbG9zZSBtb2RhbCBvbiBlc2NhcGVcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBoYW5kbGVFc2NhcGUgPSAoZTogS2V5Ym9hcmRFdmVudCkgPT4ge1xuICAgICAgaWYgKGUua2V5ID09PSAnRXNjYXBlJykge1xuICAgICAgICBoYW5kbGVDbG9zZSgpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBpZiAoaXNPcGVuKSB7XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlRXNjYXBlKTtcbiAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZUVzY2FwZSk7XG4gICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gJ3Vuc2V0JztcbiAgICB9O1xuICB9LCBbaXNPcGVuLCBoYW5kbGVDbG9zZV0pO1xuXG4gIGlmICghaXNPcGVuKSByZXR1cm4gbnVsbDtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZml4ZWQgaW5zZXQtMCB6LTUwIG92ZXJmbG93LWhpZGRlblwiPlxuICAgICAgey8qIEJhY2tkcm9wICovfVxuICAgICAgPGRpdiBcbiAgICAgICAgY2xhc3NOYW1lPVwiYWJzb2x1dGUgaW5zZXQtMCBiZy1ibGFjayBiZy1vcGFjaXR5LTUwIHRyYW5zaXRpb24tb3BhY2l0eVwiXG4gICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNsb3NlfVxuICAgICAgLz5cbiAgICAgIFxuICAgICAgey8qIE1vZGFsICovfVxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZWxhdGl2ZSBoLWZ1bGwgZmxleCBpdGVtcy1lbmQgc206aXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHAtNCBwYi0yMCBzbTpwYi00XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctd2hpdGUgcm91bmRlZC10LTJ4bCBzbTpyb3VuZGVkLTJ4bCB3LWZ1bGwgbWF4LXctMnhsIG1heC1oLWZ1bGwgb3ZlcmZsb3ctaGlkZGVuIHNoYWRvdy0yeGxcIj5cbiAgICAgICAgICB7LyogSGVhZGVyICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHAtNiBib3JkZXItYiBib3JkZXItZ3JheS0yMDBcIj5cbiAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LXhsIGZvbnQtc2VtaWJvbGQgdGV4dC1ncmF5LTkwMFwiPlxuICAgICAgICAgICAgICB7aXNFZGl0aW5nID8gJ0VkaXQgUGxhbnQnIDogJ0FkZCBOZXcgUGxhbnQnfVxuICAgICAgICAgICAgPC9oMj5cbiAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlQ2xvc2V9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cInAtMiB0ZXh0LWdyYXktNDAwIGhvdmVyOnRleHQtZ3JheS02MDAgcm91bmRlZC1mdWxsIGhvdmVyOmJnLWdyYXktMTAwXCJcbiAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIkNsb3NlIGZvcm1cIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT1cInctNiBoLTZcIiBmaWxsPVwibm9uZVwiIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj5cbiAgICAgICAgICAgICAgICA8cGF0aCBzdHJva2VMaW5lY2FwPVwicm91bmRcIiBzdHJva2VMaW5lam9pbj1cInJvdW5kXCIgc3Ryb2tlV2lkdGg9ezJ9IGQ9XCJNNiAxOEwxOCA2TTYgNmwxMiAxMlwiIC8+XG4gICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICB7LyogRm9ybSAqL31cbiAgICAgICAgICA8Zm9ybSBvblN1Ym1pdD17aGFuZGxlU3VibWl0KG9uU3VibWl0KX0gY2xhc3NOYW1lPVwiZmxleC0xIG92ZXJmbG93LWF1dG8gbWF4LWgtWzYwdmhdIHNtOm1heC1oLVs3MHZoXVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJwLTYgc3BhY2UteS02XCI+XG4gICAgICAgICAgICAgIHsvKiBQbGFudCBUeXBlIFNlbGVjdGlvbiAqL31cbiAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiYmxvY2sgdGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LWdyYXktNzAwIG1iLTJcIj5cbiAgICAgICAgICAgICAgICAgIFBsYW50IFR5cGUgKlxuICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgPFBsYW50VGF4b25vbXlTZWxlY3RvclxuICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRQbGFudD17c2VsZWN0ZWRQbGFudH1cbiAgICAgICAgICAgICAgICAgIG9uU2VsZWN0PXtoYW5kbGVQbGFudFNlbGVjdH1cbiAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtpc0NyZWF0aW5nUGxhbnQgfHwgc2hvd1RheG9ub215Rm9ybX1cbiAgICAgICAgICAgICAgICAgIG9uQWRkTmV3PXtoYW5kbGVTaG93VGF4b25vbXlGb3JtfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAge2lzQ3JlYXRpbmdQbGFudCAmJiAoXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm10LTIgZmxleCBpdGVtcy1jZW50ZXIgdGV4dC1zbSB0ZXh0LXByaW1hcnktNjAwXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPVwiYW5pbWF0ZS1zcGluIC1tbC0xIG1yLTIgaC00IHctNFwiIGZpbGw9XCJub25lXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxjaXJjbGUgY2xhc3NOYW1lPVwib3BhY2l0eS0yNVwiIGN4PVwiMTJcIiBjeT1cIjEyXCIgcj1cIjEwXCIgc3Ryb2tlPVwiY3VycmVudENvbG9yXCIgc3Ryb2tlV2lkdGg9XCI0XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBjbGFzc05hbWU9XCJvcGFjaXR5LTc1XCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIGQ9XCJNNCAxMmE4IDggMCAwMTgtOFYwQzUuMzczIDAgMCA1LjM3MyAwIDEyaDR6bTIgNS4yOTFBNy45NjIgNy45NjIgMCAwMTQgMTJIMGMwIDMuMDQyIDEuMTM1IDUuODI0IDMgNy45MzhsMy0yLjY0N3pcIiAvPlxuICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgQ3JlYXRpbmcgbmV3IHBsYW50IHR5cGUuLi5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAge2NyZWF0ZVBsYW50TXV0YXRpb24uaXNFcnJvciAmJiAoXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm10LTIgdGV4dC1zbSB0ZXh0LXJlZC02MDBcIj5cbiAgICAgICAgICAgICAgICAgICAgRmFpbGVkIHRvIGNyZWF0ZSBwbGFudDoge2NyZWF0ZVBsYW50TXV0YXRpb24uZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGNyZWF0ZVBsYW50TXV0YXRpb24uZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ31cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAge2Vycm9ycy5wbGFudElkICYmIChcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtMSB0ZXh0LXNtIHRleHQtcmVkLTYwMFwiPntlcnJvcnMucGxhbnRJZC5tZXNzYWdlfTwvZGl2PlxuICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICB7LyogTmV3IFBsYW50IFRheG9ub215IEZvcm0gKi99XG4gICAgICAgICAgICAgICAge3Nob3dUYXhvbm9teUZvcm0gJiYgKFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtdC00IHAtNCBiZy1ibHVlLTUwIGJvcmRlciBib3JkZXItYmx1ZS0yMDAgcm91bmRlZC1sZ1wiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBtYi00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1zZW1pYm9sZCB0ZXh0LWJsdWUtOTAwXCI+Q3JlYXRlIE5ldyBQbGFudCBUeXBlPC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNhbmNlbFRheG9ub215Rm9ybX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRleHQtYmx1ZS02MDAgaG92ZXI6dGV4dC1ibHVlLTgwMFwiXG4gICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJ3LTQgaC00XCIgZmlsbD1cIm5vbmVcIiBzdHJva2U9XCJjdXJyZW50Q29sb3JcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZUxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZUxpbmVqb2luPVwicm91bmRcIiBzdHJva2VXaWR0aD17Mn0gZD1cIk02IDE4TDE4IDZNNiA2bDEyIDEyXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgey8qIENvbW1vbiBOYW1lICovfVxuICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiYmxvY2sgdGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LWdyYXktNzAwIG1iLTFcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgQ29tbW9uIE5hbWUgKlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0YXhvbm9teURhdGEuY29tbW9uTmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRUYXhvbm9teURhdGEocHJldiA9PiAoeyAuLi5wcmV2LCBjb21tb25OYW1lOiBlLnRhcmdldC52YWx1ZSB9KSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiZS5nLiwgTW9uc3RlcmEgRGVsaWNpb3NhXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIHB4LTMgcHktMiBiZy13aGl0ZSB0ZXh0LWdyYXktOTAwIGJvcmRlciBib3JkZXItZ3JheS0zMDAgcm91bmRlZC1sZyBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1ibHVlLTUwMCBmb2N1czpib3JkZXItYmx1ZS01MDBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMSBzbTpncmlkLWNvbHMtMiBnYXAtNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgey8qIEZhbWlseSAqL31cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJibG9jayB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgbWItMVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZhbWlseSAqXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dGF4b25vbXlEYXRhLmZhbWlseX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFRheG9ub215RGF0YShwcmV2ID0+ICh7IC4uLnByZXYsIGZhbWlseTogZS50YXJnZXQudmFsdWUgfSkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiZS5nLiwgQXJhY2VhZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIHB4LTMgcHktMiBiZy13aGl0ZSB0ZXh0LWdyYXktOTAwIGJvcmRlciBib3JkZXItZ3JheS0zMDAgcm91bmRlZC1sZyBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1ibHVlLTUwMCBmb2N1czpib3JkZXItYmx1ZS01MDBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsvKiBHZW51cyAqL31cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJibG9jayB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgbWItMVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdlbnVzICpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt0YXhvbm9teURhdGEuZ2VudXN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRUYXhvbm9teURhdGEocHJldiA9PiAoeyAuLi5wcmV2LCBnZW51czogZS50YXJnZXQudmFsdWUgfSkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiZS5nLiwgTW9uc3RlcmFcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBweC0zIHB5LTIgYmctd2hpdGUgdGV4dC1ncmF5LTkwMCBib3JkZXIgYm9yZGVyLWdyYXktMzAwIHJvdW5kZWQtbGcgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctYmx1ZS01MDAgZm9jdXM6Ym9yZGVyLWJsdWUtNTAwXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0xIHNtOmdyaWQtY29scy0yIGdhcC00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7LyogU3BlY2llcyAqL31cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJibG9jayB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgbWItMVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNwZWNpZXMgKlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3RheG9ub215RGF0YS5zcGVjaWVzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0VGF4b25vbXlEYXRhKHByZXYgPT4gKHsgLi4ucHJldiwgc3BlY2llczogZS50YXJnZXQudmFsdWUgfSkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiZS5nLiwgZGVsaWNpb3NhXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgcHgtMyBweS0yIGJnLXdoaXRlIHRleHQtZ3JheS05MDAgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCByb3VuZGVkLWxnIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLWJsdWUtNTAwIGZvY3VzOmJvcmRlci1ibHVlLTUwMFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgey8qIEN1bHRpdmFyICovfVxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImJsb2NrIHRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBtYi0xXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQ3VsdGl2YXIgKG9wdGlvbmFsKVxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3RheG9ub215RGF0YS5jdWx0aXZhcn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFRheG9ub215RGF0YShwcmV2ID0+ICh7IC4uLnByZXYsIGN1bHRpdmFyOiBlLnRhcmdldC52YWx1ZSB9KSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJlLmcuLCAnVmFyaWVnYXRhJ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIHB4LTMgcHktMiBiZy13aGl0ZSB0ZXh0LWdyYXktOTAwIGJvcmRlciBib3JkZXItZ3JheS0zMDAgcm91bmRlZC1sZyBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1ibHVlLTUwMCBmb2N1czpib3JkZXItYmx1ZS01MDBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1lbmQgc3BhY2UteC0zIHB0LTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNhbmNlbFRheG9ub215Rm9ybX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicHgtMyBweS0yIHRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBiZy13aGl0ZSBib3JkZXIgYm9yZGVyLWdyYXktMzAwIHJvdW5kZWQtbGcgaG92ZXI6YmctZ3JheS01MCBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1ibHVlLTUwMFwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIENhbmNlbFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNWYWxpZCA9IHRheG9ub215RGF0YS5mYW1pbHkgJiYgdGF4b25vbXlEYXRhLmdlbnVzICYmIHRheG9ub215RGF0YS5zcGVjaWVzICYmIHRheG9ub215RGF0YS5jb21tb25OYW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1ZhbGlkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVUYXhvbm9teVN1Ym1pdCh0YXhvbm9teURhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9eyF0YXhvbm9teURhdGEuZmFtaWx5IHx8ICF0YXhvbm9teURhdGEuZ2VudXMgfHwgIXRheG9ub215RGF0YS5zcGVjaWVzIHx8ICF0YXhvbm9teURhdGEuY29tbW9uTmFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicHgtMyBweS0yIHRleHQtc20gZm9udC1tZWRpdW0gdGV4dC13aGl0ZSBiZy1ibHVlLTYwMCBib3JkZXIgYm9yZGVyLXRyYW5zcGFyZW50IHJvdW5kZWQtbGcgaG92ZXI6YmctYmx1ZS03MDAgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctYmx1ZS01MDAgZGlzYWJsZWQ6b3BhY2l0eS01MCBkaXNhYmxlZDpjdXJzb3Itbm90LWFsbG93ZWRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICBDcmVhdGUgUGxhbnQgVHlwZVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgey8qIEJhc2ljIEluZm9ybWF0aW9uICovfVxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1jb2xzLTEgc206Z3JpZC1jb2xzLTIgZ2FwLTRcIj5cbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJuaWNrbmFtZVwiIGNsYXNzTmFtZT1cImJsb2NrIHRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBtYi0yXCI+XG4gICAgICAgICAgICAgICAgICAgIE5pY2tuYW1lICpcbiAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICA8Q29udHJvbGxlclxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwibmlja25hbWVcIlxuICAgICAgICAgICAgICAgICAgICBjb250cm9sPXtjb250cm9sfVxuICAgICAgICAgICAgICAgICAgICByZW5kZXI9eyh7IGZpZWxkIH0pID0+IChcbiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIHsuLi5maWVsZH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlkPVwibmlja25hbWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJNeSBmYXZvcml0ZSBtb25zdGVyYVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2B3LWZ1bGwgcHgtMyBweS0yIGJnLXdoaXRlIHRleHQtZ3JheS05MDAgcGxhY2Vob2xkZXItZ3JheS01MDAgYm9yZGVyIHJvdW5kZWQtbGcgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctcHJpbWFyeS01MDAgZm9jdXM6Ym9yZGVyLXByaW1hcnktNTAwICR7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9ycy5uaWNrbmFtZSA/ICdib3JkZXItcmVkLTMwMCcgOiAnYm9yZGVyLWdyYXktMzAwJ1xuICAgICAgICAgICAgICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICB7ZXJyb3JzLm5pY2tuYW1lICYmIChcbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwibXQtMSB0ZXh0LXNtIHRleHQtcmVkLTYwMFwiPntlcnJvcnMubmlja25hbWUubWVzc2FnZX08L3A+XG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwibG9jYXRpb25cIiBjbGFzc05hbWU9XCJibG9jayB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgbWItMlwiPlxuICAgICAgICAgICAgICAgICAgICBMb2NhdGlvbiAqXG4gICAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgPENvbnRyb2xsZXJcbiAgICAgICAgICAgICAgICAgICAgbmFtZT1cImxvY2F0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbD17Y29udHJvbH1cbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyPXsoeyBmaWVsZCB9KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZWxhdGl2ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHsuLi5maWVsZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9XCJsb2NhdGlvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJMaXZpbmcgcm9vbSB3aW5kb3dcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2B3LWZ1bGwgcHgtMyBweS0yIGJnLXdoaXRlIHRleHQtZ3JheS05MDAgcGxhY2Vob2xkZXItZ3JheS01MDAgYm9yZGVyIHJvdW5kZWQtbGcgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctcHJpbWFyeS01MDAgZm9jdXM6Ym9yZGVyLXByaW1hcnktNTAwICR7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JzLmxvY2F0aW9uID8gJ2JvcmRlci1yZWQtMzAwJyA6ICdib3JkZXItZ3JheS0zMDAnXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1gfVxuICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZC5vbkNoYW5nZShlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRMb2NhdGlvbklucHV0KGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRTaG93TG9jYXRpb25TdWdnZXN0aW9ucyhlLnRhcmdldC52YWx1ZS5sZW5ndGggPiAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgb25Gb2N1cz17KCkgPT4gc2V0U2hvd0xvY2F0aW9uU3VnZ2VzdGlvbnMoZmllbGQudmFsdWUubGVuZ3RoID4gMCl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uQmx1cj17KCkgPT4gc2V0VGltZW91dCgoKSA9PiBzZXRTaG93TG9jYXRpb25TdWdnZXN0aW9ucyhmYWxzZSksIDIwMCl9XG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICB7LyogTG9jYXRpb24gc3VnZ2VzdGlvbnMgZHJvcGRvd24gKi99XG4gICAgICAgICAgICAgICAgICAgICAgICB7c2hvd0xvY2F0aW9uU3VnZ2VzdGlvbnMgJiYgdXNlckxvY2F0aW9ucyAmJiB1c2VyTG9jYXRpb25zLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFic29sdXRlIHotMTAgdy1mdWxsIG10LTEgYmctd2hpdGUgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCByb3VuZGVkLWxnIHNoYWRvdy1sZyBtYXgtaC00MCBvdmVyZmxvdy15LWF1dG9cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dXNlckxvY2F0aW9uc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbHRlcihsb2NhdGlvbiA9PiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb24udG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhmaWVsZC52YWx1ZS50b0xvd2VyQ2FzZSgpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnNsaWNlKDAsIDUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAubWFwKChsb2NhdGlvbikgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtsb2NhdGlvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZC5vbkNoYW5nZShsb2NhdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRMb2NhdGlvbklucHV0KGxvY2F0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFNob3dMb2NhdGlvblN1Z2dlc3Rpb25zKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBweC0zIHB5LTIgdGV4dC1sZWZ0IGhvdmVyOmJnLWdyYXktNTAgZm9jdXM6YmctZ3JheS01MCBmb2N1czpvdXRsaW5lLW5vbmUgZmlyc3Q6cm91bmRlZC10LWxnIGxhc3Q6cm91bmRlZC1iLWxnXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPVwidy00IGgtNCB0ZXh0LWdyYXktNDAwIG1yLTJcIiBmaWxsPVwibm9uZVwiIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggc3Ryb2tlTGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiIHN0cm9rZVdpZHRoPXsyfSBkPVwiTTE3LjY1NyAxNi42NTdMMTMuNDE0IDIwLjlhMS45OTggMS45OTggMCAwMS0yLjgyNyAwbC00LjI0NC00LjI0M2E4IDggMCAxMTExLjMxNCAwelwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZUxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZUxpbmVqb2luPVwicm91bmRcIiBzdHJva2VXaWR0aD17Mn0gZD1cIk0xNSAxMWEzIDMgMCAxMS02IDAgMyAzIDAgMDE2IDB6XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2xvY2F0aW9ufVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKiBDb21tb24gbG9jYXRpb24gc3VnZ2VzdGlvbnMgKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2ZpZWxkLnZhbHVlLmxlbmd0aCA+IDAgJiYgIXVzZXJMb2NhdGlvbnMuc29tZShsb2MgPT4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2MudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhmaWVsZC52YWx1ZS50b0xvd2VyQ2FzZSgpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJib3JkZXItdCBib3JkZXItZ3JheS0xMDBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJweC0zIHB5LTIgdGV4dC14cyB0ZXh0LWdyYXktNTAwIGZvbnQtbWVkaXVtXCI+U3VnZ2VzdGlvbnM6PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0xpdmluZyByb29tIHdpbmRvdycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0tpdGNoZW4gY291bnRlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0JlZHJvb20gd2luZG93c2lsbCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0JhdGhyb29tIHNoZWxmJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnT2ZmaWNlIGRlc2snLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdCYWxjb255JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnR3JlZW5ob3VzZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ091dGRvb3IgZ2FyZGVuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXS5maWx0ZXIoc3VnZ2VzdGlvbiA9PiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWdnZXN0aW9uLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoZmllbGQudmFsdWUudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKS5zbGljZSgwLCAzKS5tYXAoKHN1Z2dlc3Rpb24pID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9e3N1Z2dlc3Rpb259XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQub25DaGFuZ2Uoc3VnZ2VzdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldExvY2F0aW9uSW5wdXQoc3VnZ2VzdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldFNob3dMb2NhdGlvblN1Z2dlc3Rpb25zKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgcHgtMyBweS0yIHRleHQtbGVmdCB0ZXh0LWdyYXktNjAwIGhvdmVyOmJnLWdyYXktNTAgZm9jdXM6YmctZ3JheS01MCBmb2N1czpvdXRsaW5lLW5vbmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJ3LTQgaC00IHRleHQtZ3JheS0zMDAgbXItMlwiIGZpbGw9XCJub25lXCIgc3Ryb2tlPVwiY3VycmVudENvbG9yXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIHN0cm9rZUxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZUxpbmVqb2luPVwicm91bmRcIiBzdHJva2VXaWR0aD17Mn0gZD1cIk05LjY2MyAxN2g0LjY3M00xMiAzdjFtNi4zNjQgMS42MzZsLS43MDcuNzA3TTIxIDEyaC0xTTQgMTJIM20zLjM0My01LjY1N2wtLjcwNy0uNzA3bTIuODI4IDkuOWE1IDUgMCAxMTcuMDcyIDBsLS41NDguNTQ3QTMuMzc0IDMuMzc0IDAgMDAxNCAxOC40NjlWMTlhMiAyIDAgMTEtNCAwdi0uNTMxYzAtLjg5NS0uMzU2LTEuNzU0LS45ODgtMi4zODZsLS41NDgtLjU0N3pcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3N1Z2dlc3Rpb259XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAge2Vycm9ycy5sb2NhdGlvbiAmJiAoXG4gICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm10LTEgdGV4dC1zbSB0ZXh0LXJlZC02MDBcIj57ZXJyb3JzLmxvY2F0aW9uLm1lc3NhZ2V9PC9wPlxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgey8qIExvY2F0aW9uIHRpcHMgKi99XG4gICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJtdC0xIHRleHQteHMgdGV4dC1ncmF5LTUwMFwiPlxuICAgICAgICAgICAgICAgICAgICBCZSBzcGVjaWZpYyBhYm91dCBsaWdodGluZyBhbmQgY29uZGl0aW9ucyAoZS5nLiwgXCJTb3V0aC1mYWNpbmcga2l0Y2hlbiB3aW5kb3dcIilcbiAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgey8qIENhcmUgU2NoZWR1bGUgKi99XG4gICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJmZXJ0aWxpemVyU2NoZWR1bGVcIiBjbGFzc05hbWU9XCJibG9jayB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgbWItMlwiPlxuICAgICAgICAgICAgICAgICAgRmVydGlsaXplciBTY2hlZHVsZSAqXG4gICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICA8Q29udHJvbGxlclxuICAgICAgICAgICAgICAgICAgbmFtZT1cImZlcnRpbGl6ZXJTY2hlZHVsZVwiXG4gICAgICAgICAgICAgICAgICBjb250cm9sPXtjb250cm9sfVxuICAgICAgICAgICAgICAgICAgcmVuZGVyPXsoeyBmaWVsZCB9KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgey4uLmZpZWxkfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ9XCJmZXJ0aWxpemVyU2NoZWR1bGVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgdy1mdWxsIHB4LTMgcHktMiBiZy13aGl0ZSB0ZXh0LWdyYXktOTAwIGJvcmRlciByb3VuZGVkLWxnIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLXByaW1hcnktNTAwIGZvY3VzOmJvcmRlci1wcmltYXJ5LTUwMCAke1xuICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcnMuZmVydGlsaXplclNjaGVkdWxlID8gJ2JvcmRlci1yZWQtMzAwJyA6ICdib3JkZXItZ3JheS0zMDAnXG4gICAgICAgICAgICAgICAgICAgICAgICB9YH1cbiAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwid2Vla2x5XCI+V2Vla2x5IChldmVyeSA3IGRheXMpIC0gSGlnaCBtYWludGVuYW5jZTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImJpd2Vla2x5XCI+RXZlcnkgMiB3ZWVrcyAtIFJlZ3VsYXIgY2FyZTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImV2ZXJ5XzJfNF93ZWVrc1wiPkV2ZXJ5IDItNCB3ZWVrcyAtIFZhcmlhYmxlIHNjaGVkdWxlPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiZXZlcnlfM180X3dlZWtzXCI+RXZlcnkgMy00IHdlZWtzIC0gTW9kZXJhdGUgY2FyZTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImV2ZXJ5XzRfd2Vla3NcIj5FdmVyeSA0IHdlZWtzIC0gU3RhbmRhcmQgbW9udGhseTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImV2ZXJ5XzRfNl93ZWVrc1wiPkV2ZXJ5IDQtNiB3ZWVrcyAtIEV4dGVuZGVkIGNhcmU8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJldmVyeV82Xzhfd2Vla3NcIj5FdmVyeSA2LTggd2Vla3MgLSBMb3cgbWFpbnRlbmFuY2U8L29wdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9XCJiaW1vbnRobHlcIj5CaS1tb250aGx5IChldmVyeSA2MCBkYXlzKSAtIFZlcnkgbG93IG1haW50ZW5hbmNlPC9vcHRpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwicXVhcnRlcmx5XCI+UXVhcnRlcmx5IChldmVyeSA5MCBkYXlzKSAtIE1pbmltYWwgY2FyZTwvb3B0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgIHsvKiBTY2hlZHVsZSBwcmV2aWV3ICovfVxuICAgICAgICAgICAgICAgICAgICAgIHtmaWVsZC52YWx1ZSAmJiB3YXRjaCgnbGFzdEZlcnRpbGl6ZWQnKSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLXByaW1hcnktNTAgYm9yZGVyIGJvcmRlci1wcmltYXJ5LTIwMCByb3VuZGVkLWxnIHAtM1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHRleHQtc21cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT1cInctNCBoLTQgdGV4dC1wcmltYXJ5LTYwMCBtci0yXCIgZmlsbD1cIm5vbmVcIiBzdHJva2U9XCJjdXJyZW50Q29sb3JcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBzdHJva2VMaW5lY2FwPVwicm91bmRcIiBzdHJva2VMaW5lam9pbj1cInJvdW5kXCIgc3Ryb2tlV2lkdGg9ezJ9IGQ9XCJNOCA3VjNtOCA0VjNtLTkgOGgxME01IDIxaDE0YTIgMiAwIDAwMi0yVjdhMiAyIDAgMDAtMi0ySDVhMiAyIDAgMDAtMiAydjEyYTIgMiAwIDAwMiAyelwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1wcmltYXJ5LTgwMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxhc3RGZXJ0ID0gbmV3IERhdGUod2F0Y2goJ2xhc3RGZXJ0aWxpemVkJykgfHwgJycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50U2NoZWR1bGUgPSB3YXRjaCgnZmVydGlsaXplclNjaGVkdWxlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjaGVkdWxlTWFwID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdlZWtseTogNyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiaXdlZWtseTogMTQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlcnlfMl80X3dlZWtzOiAyMSwgICAgLy8gQXZlcmFnZSBvZiAyLTQgd2Vla3NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBldmVyeV8zXzRfd2Vla3M6IDI0LCAgICAvLyBBdmVyYWdlIG9mIDMtNCB3ZWVrcyAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlcnlfNF93ZWVrczogMjgsICAgICAgLy8gNCB3ZWVrc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZXJ5XzRfNl93ZWVrczogMzUsICAgIC8vIEF2ZXJhZ2Ugb2YgNC02IHdlZWtzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlcnlfNl84X3dlZWtzOiA0OSwgICAgLy8gQXZlcmFnZSBvZiA2LTggd2Vla3NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiaW1vbnRobHk6IDYwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1YXJ0ZXJseTogOTBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF5cyA9IHNjaGVkdWxlTWFwW2N1cnJlbnRTY2hlZHVsZSBhcyBrZXlvZiB0eXBlb2Ygc2NoZWR1bGVNYXBdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXh0RHVlID0gbmV3IERhdGUobGFzdEZlcnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0RHVlLnNldERhdGUobmV4dER1ZS5nZXREYXRlKCkgKyBkYXlzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGBOZXh0IGZlcnRpbGl6ZXIgZHVlOiAke25leHREdWUudG9Mb2NhbGVEYXRlU3RyaW5nKCl9YDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKCl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIHtlcnJvcnMuZmVydGlsaXplclNjaGVkdWxlICYmIChcbiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm10LTEgdGV4dC1zbSB0ZXh0LXJlZC02MDBcIj57ZXJyb3JzLmZlcnRpbGl6ZXJTY2hlZHVsZS5tZXNzYWdlfTwvcD5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm10LTEgdGV4dC14cyB0ZXh0LWdyYXktNTAwXCI+XG4gICAgICAgICAgICAgICAgICBDaG9vc2UgYmFzZWQgb24geW91ciBwbGFudCdzIG5lZWRzIGFuZCB5b3VyIGF2YWlsYWJpbGl0eSBmb3IgY2FyZVxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgey8qIENhcmUgSGlzdG9yeSAqL31cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0xIHNtOmdyaWQtY29scy0yIGdhcC00XCI+XG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzc05hbWU9XCJibG9jayB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgbWItMlwiPlxuICAgICAgICAgICAgICAgICAgICBMYXN0IEZlcnRpbGl6ZWRcbiAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICA8Q29udHJvbGxlclxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwibGFzdEZlcnRpbGl6ZWRcIlxuICAgICAgICAgICAgICAgICAgICBjb250cm9sPXtjb250cm9sfVxuICAgICAgICAgICAgICAgICAgICByZW5kZXI9eyh7IGZpZWxkIH0pID0+IChcbiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIHsuLi5maWVsZH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJkYXRlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heD17bmV3IERhdGUoKS50b0lTT1N0cmluZygpLnNwbGl0KCdUJylbMF19XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgcHgtMyBweS0yIGJnLXdoaXRlIHRleHQtZ3JheS05MDAgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCByb3VuZGVkLWxnIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLXByaW1hcnktNTAwIGZvY3VzOmJvcmRlci1wcmltYXJ5LTUwMFwiXG4gICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImJsb2NrIHRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBtYi0yXCI+XG4gICAgICAgICAgICAgICAgICAgIExhc3QgUmVwb3R0ZWRcbiAgICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICA8Q29udHJvbGxlclxuICAgICAgICAgICAgICAgICAgICBuYW1lPVwibGFzdFJlcG90XCJcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbD17Y29udHJvbH1cbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyPXsoeyBmaWVsZCB9KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICB7Li4uZmllbGR9XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiZGF0ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXg9e25ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIHB4LTMgcHktMiBiZy13aGl0ZSB0ZXh0LWdyYXktOTAwIGJvcmRlciBib3JkZXItZ3JheS0zMDAgcm91bmRlZC1sZyBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1wcmltYXJ5LTUwMCBmb2N1czpib3JkZXItcHJpbWFyeS01MDBcIlxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICB7LyogTm90ZXMgJiBPYnNlcnZhdGlvbnMgKi99XG4gICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImJsb2NrIHRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBtYi0yXCI+XG4gICAgICAgICAgICAgICAgICBOb3RlcyAmIE9ic2VydmF0aW9uc1xuICAgICAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgey8qIEV4aXN0aW5nIE5vdGVzIEhpc3RvcnkgKi99XG4gICAgICAgICAgICAgICAge3dhdGNoKCdub3RlcycpICYmIHdhdGNoKCdub3RlcycpPy50cmltKCkgJiYgKFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi0zIHAtMyBiZy1ncmF5LTUwIGJvcmRlciBib3JkZXItZ3JheS0yMDAgcm91bmRlZC1sZ1wiPlxuICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3NOYW1lPVwidGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LWdyYXktNzAwIG1iLTJcIj5QcmV2aW91cyBOb3Rlczo8L2g0PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTYwMCB3aGl0ZXNwYWNlLXByZS13cmFwIG1heC1oLTMyIG92ZXJmbG93LXktYXV0b1wiPlxuICAgICAgICAgICAgICAgICAgICAgIHt3YXRjaCgnbm90ZXMnKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHsvKiBOZXcgTm90ZSBJbnB1dCAqL31cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktMlwiPlxuICAgICAgICAgICAgICAgICAgPHRleHRhcmVhXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlPXtuZXdOb3RlSW5wdXR9XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0TmV3Tm90ZUlucHV0KGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICAgICAgcm93cz17M31cbiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJBZGQgYSBuZXcgb2JzZXJ2YXRpb24gb3Igbm90ZS4uLlwiXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBweC0zIHB5LTIgYmctd2hpdGUgdGV4dC1ncmF5LTkwMCBwbGFjZWhvbGRlci1ncmF5LTUwMCBib3JkZXIgYm9yZGVyLWdyYXktMzAwIHJvdW5kZWQtbGcgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctcHJpbWFyeS01MDAgZm9jdXM6Ym9yZGVyLXByaW1hcnktNTAwIHJlc2l6ZS1ub25lXCJcbiAgICAgICAgICAgICAgICAgICAgb25LZXlEb3duPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGlmIChlLmtleSA9PT0gJ0VudGVyJyAmJiAoZS5tZXRhS2V5IHx8IGUuY3RybEtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld05vdGUgPSBuZXdOb3RlSW5wdXQudHJpbSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5ld05vdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGltZXN0YW1wID0gbmV3IERhdGUoKS50b0xvY2FsZURhdGVTdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdOb3RlcyA9IHdhdGNoKCdub3RlcycpIHx8ICcnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB1cGRhdGVkTm90ZXMgPSBleGlzdGluZ05vdGVzIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gYCR7ZXhpc3RpbmdOb3Rlc31cXG5cXG5bJHt0aW1lc3RhbXB9XSAke25ld05vdGV9YFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogYFske3RpbWVzdGFtcH1dICR7bmV3Tm90ZX1gO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRWYWx1ZSgnbm90ZXMnLCB1cGRhdGVkTm90ZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBzZXROZXdOb3RlSW5wdXQoJycpOyAvLyBDbGVhciB0aGUgaW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGp1c3RpZnktYmV0d2VlbiBpdGVtcy1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LWdyYXktNTAwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgUHJlc3MgQ21kL0N0cmwgKyBFbnRlciB0byBhZGQgbm90ZVxuICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdOb3RlID0gbmV3Tm90ZUlucHV0LnRyaW0oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChuZXdOb3RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nTm90ZXMgPSB3YXRjaCgnbm90ZXMnKSB8fCAnJztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXBkYXRlZE5vdGVzID0gZXhpc3RpbmdOb3RlcyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGAke2V4aXN0aW5nTm90ZXN9XFxuXFxuWyR7dGltZXN0YW1wfV0gJHtuZXdOb3RlfWBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGBbJHt0aW1lc3RhbXB9XSAke25ld05vdGV9YDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0VmFsdWUoJ25vdGVzJywgdXBkYXRlZE5vdGVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0TmV3Tm90ZUlucHV0KCcnKTsgLy8gQ2xlYXIgdGhlIGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17IW5ld05vdGVJbnB1dC50cmltKCl9XG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwicHgtMyBweS0xIHRleHQtc20gYmctcHJpbWFyeS02MDAgdGV4dC13aGl0ZSByb3VuZGVkIGhvdmVyOmJnLXByaW1hcnktNzAwIGRpc2FibGVkOm9wYWNpdHktNTAgZGlzYWJsZWQ6Y3Vyc29yLW5vdC1hbGxvd2VkXCJcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgIEFkZCBOb3RlXG4gICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgey8qIEhpZGRlbiBmaWVsZCBmb3IgZm9ybSBzdWJtaXNzaW9uICovfVxuICAgICAgICAgICAgICAgIDxDb250cm9sbGVyXG4gICAgICAgICAgICAgICAgICBuYW1lPVwibm90ZXNcIlxuICAgICAgICAgICAgICAgICAgY29udHJvbD17Y29udHJvbH1cbiAgICAgICAgICAgICAgICAgIHJlbmRlcj17KHsgZmllbGQgfSkgPT4gKFxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIHsuLi5maWVsZH0gLz5cbiAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB7ZXJyb3JzLm5vdGVzICYmIChcbiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIm10LTEgdGV4dC1zbSB0ZXh0LXJlZC02MDBcIj57ZXJyb3JzLm5vdGVzLm1lc3NhZ2V9PC9wPlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgIHsvKiBJbWFnZXMgKi99XG4gICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT1cImJsb2NrIHRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTcwMCBtYi0yXCI+XG4gICAgICAgICAgICAgICAgICBQaG90b3NcbiAgICAgICAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHsvKiBFeGlzdGluZyBJbWFnZXMgKi99XG4gICAgICAgICAgICAgICAge2V4aXN0aW5nSW1hZ2VzLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi00XCI+XG4gICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzc05hbWU9XCJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS02MDAgbWItMlwiPkN1cnJlbnQgUGhvdG9zPC9oND5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0zIHNtOmdyaWQtY29scy00IGdhcC0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAge2V4aXN0aW5nSW1hZ2VzLm1hcCgoaW1hZ2UsIGluZGV4KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17aW5kZXh9IGNsYXNzTmFtZT1cInJlbGF0aXZlIGdyb3VwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9e2ltYWdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdD17YFBsYW50IHBob3RvICR7aW5kZXggKyAxfWB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIGFzcGVjdC1zcXVhcmUgb2JqZWN0LWNvdmVyIHJvdW5kZWQtbGdcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgey8qIERlbGV0ZSBCdXR0b24gKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVSZW1vdmVFeGlzdGluZ0ltYWdlKGluZGV4KX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJhYnNvbHV0ZSB0b3AtMSByaWdodC0xIHAtMSBiZy1yZWQtNTAwIHRleHQtd2hpdGUgcm91bmRlZC1mdWxsIG9wYWNpdHktMCBncm91cC1ob3ZlcjpvcGFjaXR5LTEwMCB0cmFuc2l0aW9uLW9wYWNpdHlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlPVwiUmVtb3ZlIGltYWdlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPXtgUmVtb3ZlIGltYWdlICR7aW5kZXggKyAxfWB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzTmFtZT1cInctMyBoLTNcIiBmaWxsPVwiY3VycmVudENvbG9yXCIgdmlld0JveD1cIjAgMCAyMCAyMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZmlsbFJ1bGU9XCJldmVub2RkXCIgZD1cIk00LjI5MyA0LjI5M2ExIDEgMCAwMTEuNDE0IDBMMTAgOC41ODZsNC4yOTMtNC4yOTNhMSAxIDAgMTExLjQxNCAxLjQxNEwxMS40MTQgMTBsNC4yOTMgNC4yOTNhMSAxIDAgMDEtMS40MTQgMS40MTRMMTAgMTEuNDE0bC00LjI5MyA0LjI5M2ExIDEgMCAwMS0xLjQxNC0xLjQxNEw4LjU4NiAxMCA0LjI5MyA1LjcwN2ExIDEgMCAwMTAtMS40MTR6XCIgY2xpcFJ1bGU9XCJldmVub2RkXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICB7LyogUHJpbWFyeSBCYWRnZSAqL31cbiAgICAgICAgICAgICAgICAgICAgICAgICAge2luZGV4ID09PSAwICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFic29sdXRlIGJvdHRvbS0xIGxlZnQtMSBiZy1wcmltYXJ5LTUwMCB0ZXh0LXdoaXRlIHRleHQteHMgcHgtMSBweS0wLjUgcm91bmRlZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHJpbWFyeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgey8qIFNldCBhcyBQcmltYXJ5IEJ1dHRvbiAoZm9yIG5vbi1wcmltYXJ5IGltYWdlcykgKi99XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtpbmRleCAhPT0gMCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVTZXRQcmltYXJ5SW1hZ2UoaW5kZXgpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYWJzb2x1dGUgYm90dG9tLTEgbGVmdC0xIGJnLWJsYWNrIGJnLW9wYWNpdHktNTAgdGV4dC13aGl0ZSB0ZXh0LXhzIHB4LTEgcHktMC41IHJvdW5kZWQgb3BhY2l0eS0wIGdyb3VwLWhvdmVyOm9wYWNpdHktMTAwIHRyYW5zaXRpb24tb3BhY2l0eVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT1cIlNldCBhcyBwcmltYXJ5IGltYWdlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9e2BTZXQgaW1hZ2UgJHtpbmRleCArIDF9IGFzIHByaW1hcnlgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNldCBQcmltYXJ5XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICApfVxuXG4gICAgICAgICAgICAgICAgey8qIE5ldyBJbWFnZSBVcGxvYWQgKi99XG4gICAgICAgICAgICAgICAgPEltYWdlVXBsb2FkXG4gICAgICAgICAgICAgICAgICBvbkltYWdlc0NoYW5nZT17aGFuZGxlSW1hZ2VDaGFuZ2V9XG4gICAgICAgICAgICAgICAgICBtYXhJbWFnZXM9ezYgLSBleGlzdGluZ0ltYWdlcy5sZW5ndGh9XG4gICAgICAgICAgICAgICAgICBhY2NlcHRlZFR5cGVzPXtbJ2ltYWdlL2pwZWcnLCAnaW1hZ2UvcG5nJywgJ2ltYWdlL3dlYnAnXX1cbiAgICAgICAgICAgICAgICAgIG1heFNpemVQZXJJbWFnZT17NSAqIDEwMjQgKiAxMDI0fSAvLyA1TUJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICB7LyogQWN0aXZlIFN0YXR1cyAoZm9yIGVkaXRpbmcpICovfVxuICAgICAgICAgICAgICB7aXNFZGl0aW5nICYmIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJnLWdyYXktNTAgYm9yZGVyIGJvcmRlci1ncmF5LTIwMCByb3VuZGVkLWxnIHAtNFwiPlxuICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1ncmF5LTkwMCBtYi0zXCI+UGxhbnQgU3RhdHVzPC9oND5cbiAgICAgICAgICAgICAgICAgIDxDb250cm9sbGVyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU9XCJpc0FjdGl2ZVwiXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2w9e2NvbnRyb2x9XG4gICAgICAgICAgICAgICAgICAgIHJlbmRlcj17KHsgZmllbGQ6IHsgdmFsdWUsIG9uQ2hhbmdlIH0gfSkgPT4gKFxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1zdGFydCBjdXJzb3ItcG9pbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ9e3ZhbHVlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LTQgaC00IHRleHQtcHJpbWFyeS02MDAgYm9yZGVyLWdyYXktMzAwIHJvdW5kZWQgZm9jdXM6cmluZy1wcmltYXJ5LTUwMCBtdC0wLjVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1sLTNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEtlZXAgdGhpcyBwbGFudCBhY3RpdmUgaW4gbXkgY29sbGVjdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXhzIHRleHQtZ3JheS01MDAgbXQtMVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3ZhbHVlIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICdUaGlzIHBsYW50IHdpbGwgYXBwZWFyIGluIHlvdXIgbWFpbiBjb2xsZWN0aW9uIGFuZCBjYXJlIHJlbWluZGVycydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnVGhpcyBwbGFudCB3aWxsIGJlIGFyY2hpdmVkIGFuZCBoaWRkZW4gZnJvbSB5b3VyIG1haW4gY29sbGVjdGlvbidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgeyF2YWx1ZSAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmctYW1iZXItNTAgYm9yZGVyIGJvcmRlci1hbWJlci0yMDAgcm91bmRlZCBwLTNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtc3RhcnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPVwidy00IGgtNCB0ZXh0LWFtYmVyLTYwMCBtdC0wLjUgbXItMiBmbGV4LXNocmluay0wXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHZpZXdCb3g9XCIwIDAgMjAgMjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZmlsbFJ1bGU9XCJldmVub2RkXCIgZD1cIk04LjI1NyAzLjA5OWMuNzY1LTEuMzYgMi43MjItMS4zNiAzLjQ4NiAwbDUuNTggOS45MmMuNzUgMS4zMzQtLjIxMyAyLjk4LTEuNzQyIDIuOThINC40MmMtMS41MyAwLTIuNDkzLTEuNjQ2LTEuNzQzLTIuOThsNS41OC05Ljkyek0xMSAxM2ExIDEgMCAxMS0yIDAgMSAxIDAgMDEyIDB6bS0xLThhMSAxIDAgMDAtMSAxdjNhMSAxIDAgMDAyIDBWNmExIDEgMCAwMC0xLTF6XCIgY2xpcFJ1bGU9XCJldmVub2RkXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXhzIHRleHQtYW1iZXItODAwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cImZvbnQtbWVkaXVtXCI+QXJjaGl2aW5nIHRoaXMgcGxhbnQ8L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPkNhcmUgaGlzdG9yeSB3aWxsIGJlIHByZXNlcnZlZCwgYnV0IHRoZSBwbGFudCB3b24ndCBhcHBlYXIgaW4geW91ciBhY3RpdmUgY29sbGVjdGlvbiBvciByZWNlaXZlIGNhcmUgcmVtaW5kZXJzLjwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIHsvKiBWYWxpZGF0aW9uIFN1bW1hcnkgKi99XG4gICAgICAgICAgICB7T2JqZWN0LmtleXMoZXJyb3JzKS5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJteC02IG1iLTQgYmctcmVkLTUwIGJvcmRlciBib3JkZXItcmVkLTIwMCByb3VuZGVkLWxnIHAtNFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1zdGFydFwiPlxuICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJ3LTUgaC01IHRleHQtcmVkLTQwMCBtdC0wLjUgbXItMyBmbGV4LXNocmluay0wXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHZpZXdCb3g9XCIwIDAgMjAgMjBcIj5cbiAgICAgICAgICAgICAgICAgICAgPHBhdGggZmlsbFJ1bGU9XCJldmVub2RkXCIgZD1cIk0xOCAxMGE4IDggMCAxMS0xNiAwIDggOCAwIDAxMTYgMHptLTcgNGExIDEgMCAxMS0yIDAgMSAxIDAgMDEyIDB6bS0xLTlhMSAxIDAgMDAtMSAxdjRhMSAxIDAgMTAyIDBWNmExIDEgMCAwMC0xLTF6XCIgY2xpcFJ1bGU9XCJldmVub2RkXCIgLz5cbiAgICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LTFcIj5cbiAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1yZWQtODAwIG1iLTJcIj5QbGVhc2UgZml4IHRoZSBmb2xsb3dpbmcgZXJyb3JzOjwvaDQ+XG4gICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtcmVkLTcwMCBzcGFjZS15LTFcIj5cbiAgICAgICAgICAgICAgICAgICAgICB7T2JqZWN0LmVudHJpZXMoZXJyb3JzKS5tYXAoKFtmaWVsZCwgZXJyb3JdKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8bGkga2V5PXtmaWVsZH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIOKAoiB7ZmllbGQgPT09ICdwbGFudElkJyA/ICdQbGFudCB0eXBlJyA6IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZCA9PT0gJ2ZlcnRpbGl6ZXJTY2hlZHVsZScgPyAnRmVydGlsaXplciBzY2hlZHVsZScgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIGZpZWxkLnNsaWNlKDEpfToge2Vycm9yLm1lc3NhZ2V9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cblxuICAgICAgICAgICAgey8qIEZvb3RlciAqL31cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHAtNiBib3JkZXItdCBib3JkZXItZ3JheS0yMDAgYmctZ3JheS01MFwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHRleHQtc20gdGV4dC1ncmF5LTUwMFwiPlxuICAgICAgICAgICAgICAgIHshaXNWYWxpZCAmJiBPYmplY3Qua2V5cyhlcnJvcnMpLmxlbmd0aCA9PT0gMCAmJiAoXG4gICAgICAgICAgICAgICAgICA8c3Bhbj5GaWxsIGluIHJlcXVpcmVkIGZpZWxkcyB0byBjb250aW51ZTwvc3Bhbj5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIHtpc1ZhbGlkICYmIChcbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtZ3JlZW4tNjAwIGZsZXggaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPVwidy00IGgtNCBtci0xXCIgZmlsbD1cImN1cnJlbnRDb2xvclwiIHZpZXdCb3g9XCIwIDAgMjAgMjBcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsUnVsZT1cImV2ZW5vZGRcIiBkPVwiTTE2LjcwNyA1LjI5M2ExIDEgMCAwMTAgMS40MTRsLTggOGExIDEgMCAwMS0xLjQxNCAwbC00LTRhMSAxIDAgMDExLjQxNC0xLjQxNEw4IDEyLjU4Nmw3LjI5My03LjI5M2ExIDEgMCAwMTEuNDE0IDB6XCIgY2xpcFJ1bGU9XCJldmVub2RkXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICAgICAgICAgIFJlYWR5IHRvIHNhdmVcbiAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBzcGFjZS14LTNcIj5cbiAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZUNsb3NlfVxuICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9e211dGF0aW9uLmlzUGVuZGluZ31cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgYmctd2hpdGUgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCByb3VuZGVkLWxnIGhvdmVyOmJnLWdyYXktNTAgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctcHJpbWFyeS01MDAgZGlzYWJsZWQ6b3BhY2l0eS01MCB0cmFuc2l0aW9uLWNvbG9yc1wiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgQ2FuY2VsXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXG4gICAgICAgICAgICAgICAgICBkaXNhYmxlZD17bXV0YXRpb24uaXNQZW5kaW5nIHx8ICghc2VsZWN0ZWRQbGFudCAmJiAhaXNFZGl0aW5nKX1cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTQgcHktMiB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtd2hpdGUgYmctcHJpbWFyeS02MDAgYm9yZGVyIGJvcmRlci10cmFuc3BhcmVudCByb3VuZGVkLWxnIGhvdmVyOmJnLXByaW1hcnktNzAwIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLXByaW1hcnktNTAwIGRpc2FibGVkOm9wYWNpdHktNTAgZGlzYWJsZWQ6Y3Vyc29yLW5vdC1hbGxvd2VkIHRyYW5zaXRpb24tY29sb3JzXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICB7bXV0YXRpb24uaXNQZW5kaW5nID8gKFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3NOYW1lPVwiYW5pbWF0ZS1zcGluIC1tbC0xIG1yLTIgaC00IHctNFwiIGZpbGw9XCJub25lXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGNpcmNsZSBjbGFzc05hbWU9XCJvcGFjaXR5LTI1XCIgY3g9XCIxMlwiIGN5PVwiMTJcIiByPVwiMTBcIiBzdHJva2U9XCJjdXJyZW50Q29sb3JcIiBzdHJva2VXaWR0aD1cIjRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggY2xhc3NOYW1lPVwib3BhY2l0eS03NVwiIGZpbGw9XCJjdXJyZW50Q29sb3JcIiBkPVwiTTQgMTJhOCA4IDAgMDE4LThWMEM1LjM3MyAwIDAgNS4zNzMgMCAxMmg0em0yIDUuMjkxQTcuOTYyIDcuOTYyIDAgMDE0IDEySDBjMCAzLjA0MiAxLjEzNSA1LjgyNCAzIDcuOTM4bDMtMi42NDd6XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgICAgICAgICAgICB7aXNFZGl0aW5nID8gJ1VwZGF0aW5nLi4uJyA6ICdBZGRpbmcuLi4nfVxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICBpc0VkaXRpbmcgPyAnVXBkYXRlIFBsYW50JyA6ICdBZGQgUGxhbnQnXG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZm9ybT5cblxuICAgICAgICAgIHsvKiBFcnJvciBEaXNwbGF5ICovfVxuICAgICAgICAgIHttdXRhdGlvbi5pc0Vycm9yICYmIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicC00IGJnLXJlZC01MCBib3JkZXItdCBib3JkZXItcmVkLTIwMFwiPlxuICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtcmVkLTYwMFwiPlxuICAgICAgICAgICAgICAgIHttdXRhdGlvbi5lcnJvciBpbnN0YW5jZW9mIEVycm9yID8gbXV0YXRpb24uZXJyb3IubWVzc2FnZSA6ICdBbiBlcnJvciBvY2N1cnJlZCd9XG4gICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59Il0sIm5hbWVzIjpbIlBsYW50SW5zdGFuY2VGb3JtIiwicGxhbnRUYXhvbm9teVNjaGVtYSIsInoiLCJvYmplY3QiLCJmYW1pbHkiLCJzdHJpbmciLCJtaW4iLCJtYXgiLCJnZW51cyIsInNwZWNpZXMiLCJjdWx0aXZhciIsIm9wdGlvbmFsIiwidHJhbnNmb3JtIiwidmFsIiwidHJpbSIsImNvbW1vbk5hbWUiLCJwbGFudEluc3RhbmNlRm9ybVNjaGVtYSIsInBsYW50SWQiLCJudW1iZXIiLCJuaWNrbmFtZSIsInJlZmluZSIsImxlbmd0aCIsImxvY2F0aW9uIiwiZmVydGlsaXplclNjaGVkdWxlIiwiZW51bSIsIm1lc3NhZ2UiLCJsYXN0RmVydGlsaXplZCIsImlzTmFOIiwiRGF0ZSIsInBhcnNlIiwibGFzdFJlcG90Iiwibm90ZXMiLCJpbWFnZXMiLCJhcnJheSIsImlzQWN0aXZlIiwiYm9vbGVhbiIsImRlZmF1bHQiLCJuZXdQbGFudFRheG9ub215IiwiZGF0YSIsImZlcnRpbGl6ZXJEYXRlIiwidG9kYXkiLCJzZXRIb3VycyIsInBhdGgiLCJyZXBvdERhdGUiLCJwbGFudEluc3RhbmNlIiwiaXNPcGVuIiwib25DbG9zZSIsIm9uU3VjY2VzcyIsInVzZXJJZCIsInNlbGVjdGVkUGxhbnQiLCJzZXRTZWxlY3RlZFBsYW50IiwidXNlU3RhdGUiLCJpbWFnZUZpbGVzIiwic2V0SW1hZ2VGaWxlcyIsImV4aXN0aW5nSW1hZ2VzIiwic2V0RXhpc3RpbmdJbWFnZXMiLCJzaG93TG9jYXRpb25TdWdnZXN0aW9ucyIsInNldFNob3dMb2NhdGlvblN1Z2dlc3Rpb25zIiwibG9jYXRpb25JbnB1dCIsInNldExvY2F0aW9uSW5wdXQiLCJpc0NyZWF0aW5nUGxhbnQiLCJzZXRJc0NyZWF0aW5nUGxhbnQiLCJzaG93VGF4b25vbXlGb3JtIiwic2V0U2hvd1RheG9ub215Rm9ybSIsInRheG9ub215RGF0YSIsInNldFRheG9ub215RGF0YSIsImhhc1Vuc2F2ZWRDaGFuZ2VzIiwic2V0SGFzVW5zYXZlZENoYW5nZXMiLCJuZXdOb3RlSW5wdXQiLCJzZXROZXdOb3RlSW5wdXQiLCJxdWVyeUNsaWVudCIsInVzZVF1ZXJ5Q2xpZW50IiwiaXNFZGl0aW5nIiwiY29udHJvbCIsImhhbmRsZVN1Ym1pdCIsImZvcm1TdGF0ZSIsImVycm9ycyIsImlzVmFsaWQiLCJpc0RpcnR5IiwicmVzZXQiLCJzZXRWYWx1ZSIsIndhdGNoIiwidHJpZ2dlciIsInVzZUZvcm0iLCJyZXNvbHZlciIsInpvZFJlc29sdmVyIiwibW9kZSIsImRlZmF1bHRWYWx1ZXMiLCJ1bmRlZmluZWQiLCJ1c2VyTG9jYXRpb25zIiwidXNlUXVlcnkiLCJxdWVyeUtleSIsInF1ZXJ5Rm4iLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJFcnJvciIsImpzb24iLCJzdGFsZVRpbWUiLCJoYW5kbGVTaG93VGF4b25vbXlGb3JtIiwicXVlcnkiLCJoYW5kbGVUYXhvbm9teVN1Ym1pdCIsImNyZWF0ZVBsYW50TXV0YXRpb24iLCJtdXRhdGUiLCJoYW5kbGVDYW5jZWxUYXhvbm9teUZvcm0iLCJ1c2VNdXRhdGlvbiIsIm11dGF0aW9uRm4iLCJwbGFudERhdGEiLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnJvciIsImludmFsaWRhdGVRdWVyaWVzIiwicmVmZXRjaFR5cGUiLCJyZW1vdmVRdWVyaWVzIiwicmVmZXRjaFF1ZXJpZXMiLCJuZXdQbGFudCIsImlkIiwiaXNWZXJpZmllZCIsImhhbmRsZVBsYW50U2VsZWN0Iiwib25FcnJvciIsImNvbnNvbGUiLCJtdXRhdGlvbiIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJPYmplY3QiLCJlbnRyaWVzIiwiZm9yRWFjaCIsImtleSIsInZhbHVlIiwiQXJyYXkiLCJpc0FycmF5IiwiaW1hZ2UiLCJpbmRleCIsImFwcGVuZCIsIlN0cmluZyIsImZpbGUiLCJ1cmwiLCJsb2ciLCJ0eXBlIiwiYWRkaXRpb25hbFF1ZXJ5S2V5cyIsInVzZUVmZmVjdCIsImNvbnZlcnRlZFNjaGVkdWxlIiwiY29udmVydERhdGFiYXNlU2NoZWR1bGVUb0Zvcm0iLCJ0b0lTT1N0cmluZyIsInNwbGl0IiwicGxhbnQiLCJzaG91bGRWYWxpZGF0ZSIsImhhbmRsZUltYWdlQ2hhbmdlIiwiZmlsZXMiLCJoYW5kbGVSZW1vdmVFeGlzdGluZ0ltYWdlIiwibmV3SW1hZ2VzIiwiZmlsdGVyIiwiXyIsImkiLCJoYW5kbGVTZXRQcmltYXJ5SW1hZ2UiLCJzZWxlY3RlZEltYWdlIiwic3BsaWNlIiwidW5zaGlmdCIsImNvbnZlcnRGZXJ0aWxpemVyU2NoZWR1bGUiLCJzY2hlZHVsZSIsInNjaGVkdWxlTWFwIiwicmV2ZXJzZU1hcCIsInJlc3VsdCIsIm9uU3VibWl0Iiwic3VibWl0RGF0YSIsImhhbmRsZUJlZm9yZVVubG9hZCIsImUiLCJwcmV2ZW50RGVmYXVsdCIsInJldHVyblZhbHVlIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJoYW5kbGVDbG9zZSIsImNvbmZpcm1lZCIsImNvbmZpcm0iLCJoYW5kbGVFc2NhcGUiLCJkb2N1bWVudCIsInN0eWxlIiwib3ZlcmZsb3ciLCJkaXYiLCJjbGFzc05hbWUiLCJvbkNsaWNrIiwiaDIiLCJidXR0b24iLCJhcmlhLWxhYmVsIiwic3ZnIiwiZmlsbCIsInN0cm9rZSIsInZpZXdCb3giLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJzdHJva2VXaWR0aCIsImQiLCJmb3JtIiwibGFiZWwiLCJQbGFudFRheG9ub215U2VsZWN0b3IiLCJvblNlbGVjdCIsImRpc2FibGVkIiwib25BZGROZXciLCJjaXJjbGUiLCJjeCIsImN5IiwiciIsImlzRXJyb3IiLCJoMyIsImlucHV0Iiwib25DaGFuZ2UiLCJwcmV2IiwidGFyZ2V0IiwicGxhY2Vob2xkZXIiLCJodG1sRm9yIiwiQ29udHJvbGxlciIsIm5hbWUiLCJyZW5kZXIiLCJmaWVsZCIsInAiLCJvbkZvY3VzIiwib25CbHVyIiwic2V0VGltZW91dCIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJzbGljZSIsIm1hcCIsInNvbWUiLCJsb2MiLCJzdWdnZXN0aW9uIiwic2VsZWN0Iiwib3B0aW9uIiwic3BhbiIsImxhc3RGZXJ0IiwiY3VycmVudFNjaGVkdWxlIiwid2Vla2x5IiwiYml3ZWVrbHkiLCJldmVyeV8yXzRfd2Vla3MiLCJldmVyeV8zXzRfd2Vla3MiLCJldmVyeV80X3dlZWtzIiwiZXZlcnlfNF82X3dlZWtzIiwiZXZlcnlfNl84X3dlZWtzIiwiYmltb250aGx5IiwicXVhcnRlcmx5IiwiZGF5cyIsIm5leHREdWUiLCJzZXREYXRlIiwiZ2V0RGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsImg0IiwidGV4dGFyZWEiLCJyb3dzIiwib25LZXlEb3duIiwibWV0YUtleSIsImN0cmxLZXkiLCJuZXdOb3RlIiwidGltZXN0YW1wIiwiZXhpc3RpbmdOb3RlcyIsInVwZGF0ZWROb3RlcyIsImltZyIsInNyYyIsImFsdCIsInRpdGxlIiwiZmlsbFJ1bGUiLCJjbGlwUnVsZSIsIkltYWdlVXBsb2FkIiwib25JbWFnZXNDaGFuZ2UiLCJtYXhJbWFnZXMiLCJhY2NlcHRlZFR5cGVzIiwibWF4U2l6ZVBlckltYWdlIiwiY2hlY2tlZCIsImtleXMiLCJ1bCIsImxpIiwiY2hhckF0IiwidG9VcHBlckNhc2UiLCJpc1BlbmRpbmciXSwibWFwcGluZ3MiOiJBQUFBOzs7OzsrQkFpR0E7OztlQUF3QkE7Ozs7dUJBL0ZZOzRCQUNrQjsrQkFDbEI7cUJBQ1I7c0JBQ1Y7OEVBQ2dCO29FQUNWOzs7Ozs7QUFJeEIsMEJBQTBCO0FBQzFCLE1BQU1DLHNCQUFzQkMsT0FBQyxDQUFDQyxNQUFNLENBQUM7SUFDbkNDLFFBQVFGLE9BQUMsQ0FBQ0csTUFBTSxHQUFHQyxHQUFHLENBQUMsR0FBRyxzQkFBc0JDLEdBQUcsQ0FBQyxLQUFLO0lBQ3pEQyxPQUFPTixPQUFDLENBQUNHLE1BQU0sR0FBR0MsR0FBRyxDQUFDLEdBQUcscUJBQXFCQyxHQUFHLENBQUMsS0FBSztJQUN2REUsU0FBU1AsT0FBQyxDQUFDRyxNQUFNLEdBQUdDLEdBQUcsQ0FBQyxHQUFHLHVCQUF1QkMsR0FBRyxDQUFDLEtBQUs7SUFDM0RHLFVBQVVSLE9BQUMsQ0FBQ0csTUFBTSxHQUFHRSxHQUFHLENBQUMsS0FBSyw2Q0FBNkNJLFFBQVEsR0FBR0MsU0FBUyxDQUFDQyxDQUFBQSxNQUFPQSxLQUFLQyxVQUFVO0lBQ3RIQyxZQUFZYixPQUFDLENBQUNHLE1BQU0sR0FBR0MsR0FBRyxDQUFDLEdBQUcsMkJBQTJCQyxHQUFHLENBQUMsS0FBSztBQUNwRTtBQUVBLE1BQU1TLDBCQUEwQmQsT0FBQyxDQUFDQyxNQUFNLENBQUM7SUFDdkNjLFNBQVNmLE9BQUMsQ0FBQ2dCLE1BQU0sR0FBR1osR0FBRyxDQUFDLEdBQUc7SUFDM0JhLFVBQVVqQixPQUFDLENBQUNHLE1BQU0sR0FDZkMsR0FBRyxDQUFDLEdBQUcsd0JBQ1BDLEdBQUcsQ0FBQyxLQUFLLDZDQUNUTyxJQUFJLEdBQ0pNLE1BQU0sQ0FBQ1AsQ0FBQUEsTUFBT0EsSUFBSVEsTUFBTSxHQUFHLEdBQUc7SUFDakNDLFVBQVVwQixPQUFDLENBQUNHLE1BQU0sR0FDZkMsR0FBRyxDQUFDLEdBQUcsd0JBQ1BDLEdBQUcsQ0FBQyxLQUFLLDZDQUNUTyxJQUFJLEdBQ0pNLE1BQU0sQ0FBQ1AsQ0FBQUEsTUFBT0EsSUFBSVEsTUFBTSxHQUFHLEdBQUc7SUFDakNFLG9CQUFvQnJCLE9BQUMsQ0FBQ3NCLElBQUksQ0FBQztRQUN6QjtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7S0FDRCxFQUFFO1FBQ0RDLFNBQVM7SUFDWDtJQUNBQyxnQkFBZ0J4QixPQUFDLENBQUNHLE1BQU0sR0FDckJNLFFBQVEsR0FDUlMsTUFBTSxDQUFDUCxDQUFBQSxNQUFPLENBQUNBLE9BQU8sQ0FBQ2MsTUFBTUMsS0FBS0MsS0FBSyxDQUFDaEIsT0FBTztJQUNsRGlCLFdBQVc1QixPQUFDLENBQUNHLE1BQU0sR0FDaEJNLFFBQVEsR0FDUlMsTUFBTSxDQUFDUCxDQUFBQSxNQUFPLENBQUNBLE9BQU8sQ0FBQ2MsTUFBTUMsS0FBS0MsS0FBSyxDQUFDaEIsT0FBTztJQUNsRGtCLE9BQU83QixPQUFDLENBQUNHLE1BQU0sR0FDWkUsR0FBRyxDQUFDLE1BQU0sMkNBQ1ZJLFFBQVEsR0FDUkMsU0FBUyxDQUFDQyxDQUFBQSxNQUFPQSxLQUFLQyxVQUFVO0lBQ25Da0IsUUFBUTlCLE9BQUMsQ0FBQytCLEtBQUssQ0FBQy9CLE9BQUMsQ0FBQ0csTUFBTSxJQUFJRSxHQUFHLENBQUMsSUFBSSw2QkFBNkJJLFFBQVE7SUFDekV1QixVQUFVaEMsT0FBQyxDQUFDaUMsT0FBTyxHQUFHQyxPQUFPLENBQUMsTUFBTXpCLFFBQVE7SUFDNUMsMERBQTBEO0lBQzFEMEIsa0JBQWtCcEMsb0JBQW9CVSxRQUFRO0FBQ2hELEdBQUdTLE1BQU0sQ0FBQ2tCLENBQUFBO0lBQ1IsNERBQTREO0lBQzVELElBQUlBLEtBQUtaLGNBQWMsRUFBRTtRQUN2QixNQUFNYSxpQkFBaUIsSUFBSVgsS0FBS1UsS0FBS1osY0FBYztRQUNuRCxNQUFNYyxRQUFRLElBQUlaO1FBQ2xCWSxNQUFNQyxRQUFRLENBQUMsSUFBSSxJQUFJLElBQUksTUFBTSxlQUFlO1FBQ2hELE9BQU9GLGtCQUFrQkM7SUFDM0I7SUFDQSxPQUFPO0FBQ1QsR0FBRztJQUNEZixTQUFTO0lBQ1RpQixNQUFNO1FBQUM7S0FBaUI7QUFDMUIsR0FBR3RCLE1BQU0sQ0FBQ2tCLENBQUFBO0lBQ1IsdURBQXVEO0lBQ3ZELElBQUlBLEtBQUtSLFNBQVMsRUFBRTtRQUNsQixNQUFNYSxZQUFZLElBQUlmLEtBQUtVLEtBQUtSLFNBQVM7UUFDekMsTUFBTVUsUUFBUSxJQUFJWjtRQUNsQlksTUFBTUMsUUFBUSxDQUFDLElBQUksSUFBSSxJQUFJLE1BQU0sZUFBZTtRQUNoRCxPQUFPRSxhQUFhSDtJQUN0QjtJQUNBLE9BQU87QUFDVCxHQUFHO0lBQ0RmLFNBQVM7SUFDVGlCLE1BQU07UUFBQztLQUFZO0FBQ3JCO0FBYWUsU0FBUzFDLGtCQUFrQixFQUN4QzRDLGFBQWEsRUFDYkMsTUFBTSxFQUNOQyxPQUFPLEVBQ1BDLFNBQVMsRUFDVEMsTUFBTSxFQUNpQjtJQUN2QixNQUFNLENBQUNDLGVBQWVDLGlCQUFpQixHQUFHQyxJQUFBQSxlQUFRLEVBQXlCO0lBQzNFLE1BQU0sQ0FBQ0MsWUFBWUMsY0FBYyxHQUFHRixJQUFBQSxlQUFRLEVBQVMsRUFBRTtJQUN2RCxNQUFNLENBQUNHLGdCQUFnQkMsa0JBQWtCLEdBQUdKLElBQUFBLGVBQVEsRUFBVyxFQUFFO0lBQ2pFLE1BQU0sQ0FBQ0sseUJBQXlCQywyQkFBMkIsR0FBR04sSUFBQUEsZUFBUSxFQUFDO0lBQ3ZFLE1BQU0sQ0FBQ08sZUFBZUMsaUJBQWlCLEdBQUdSLElBQUFBLGVBQVEsRUFBQztJQUNuRCxNQUFNLENBQUNTLGlCQUFpQkMsbUJBQW1CLEdBQUdWLElBQUFBLGVBQVEsRUFBQztJQUN2RCxNQUFNLENBQUNXLGtCQUFrQkMsb0JBQW9CLEdBQUdaLElBQUFBLGVBQVEsRUFBQztJQUN6RCxNQUFNLENBQUNhLGNBQWNDLGdCQUFnQixHQUFHZCxJQUFBQSxlQUFRLEVBQXdCO1FBQ3RFL0MsUUFBUTtRQUNSSSxPQUFPO1FBQ1BDLFNBQVM7UUFDVEMsVUFBVTtRQUNWSyxZQUFZO0lBQ2Q7SUFDQSxNQUFNLENBQUNtRCxtQkFBbUJDLHFCQUFxQixHQUFHaEIsSUFBQUEsZUFBUSxFQUFDO0lBQzNELE1BQU0sQ0FBQ2lCLGNBQWNDLGdCQUFnQixHQUFHbEIsSUFBQUEsZUFBUSxFQUFDO0lBQ2pELE1BQU1tQixjQUFjQyxJQUFBQSwwQkFBYztJQUNsQyxNQUFNQyxZQUFZLENBQUMsQ0FBQzVCO0lBRXBCLGFBQWE7SUFDYixNQUFNLEVBQ0o2QixPQUFPLEVBQ1BDLFlBQVksRUFDWkMsV0FBVyxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFFLEVBQ3ZDQyxLQUFLLEVBQ0xDLFFBQVEsRUFDUkMsS0FBSyxFQUNMQyxPQUFPLEVBQ1IsR0FBR0MsSUFBQUEsc0JBQU8sRUFBQztRQUNWQyxVQUFVQyxJQUFBQSxnQkFBVyxFQUFDckU7UUFDdEJzRSxNQUFNO1FBQ05DLGVBQWU7WUFDYnRFLFNBQVM7WUFDVEUsVUFBVTtZQUNWRyxVQUFVO1lBQ1ZDLG9CQUFvQjtZQUNwQkcsZ0JBQWdCO1lBQ2hCSSxXQUFXO1lBQ1hDLE9BQU87WUFDUEMsUUFBUSxFQUFFO1lBQ1ZFLFVBQVU7WUFDVkcsa0JBQWtCbUQ7UUFDcEI7SUFDRjtJQUVBLHdDQUF3QztJQUN4QyxNQUFNLEVBQUVsRCxNQUFNbUQsYUFBYSxFQUFFLEdBQUdDLElBQUFBLG9CQUFRLEVBQUM7UUFDdkNDLFVBQVU7WUFBQztZQUFrQjNDO1NBQU87UUFDcEM0QyxTQUFTO1lBQ1AsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLENBQUMsc0NBQXNDLEVBQUU5QyxRQUFRO1lBQzlFLElBQUksQ0FBQzZDLFNBQVNFLEVBQUUsRUFBRSxNQUFNLElBQUlDLE1BQU07WUFDbEMsT0FBT0gsU0FBU0ksSUFBSTtRQUN0QjtRQUNBQyxXQUFXLE9BQU8sS0FBSztJQUN6QjtJQUVBLHNEQUFzRDtJQUN0RCxNQUFNQyx5QkFBeUIsQ0FBQ0M7UUFDOUJyQyxvQkFBb0I7UUFDcEJFLGdCQUFnQjtZQUNkN0QsUUFBUTtZQUNSSSxPQUFPO1lBQ1BDLFNBQVM7WUFDVEMsVUFBVTtZQUNWSyxZQUFZcUYsU0FBUztRQUN2QjtJQUNGO0lBRUEsa0NBQWtDO0lBQ2xDLE1BQU1DLHVCQUF1QixDQUFDL0Q7UUFDNUJ1QixtQkFBbUI7UUFDbkJ5QyxvQkFBb0JDLE1BQU0sQ0FBQztZQUN6QixHQUFHakUsSUFBSTtZQUNQNUIsVUFBVTRCLEtBQUs1QixRQUFRLElBQUk7UUFDN0I7SUFDRjtJQUVBLGlDQUFpQztJQUNqQyxNQUFNOEYsMkJBQTJCO1FBQy9CekMsb0JBQW9CO1FBQ3BCRSxnQkFBZ0I7WUFDZDdELFFBQVE7WUFDUkksT0FBTztZQUNQQyxTQUFTO1lBQ1RDLFVBQVU7WUFDVkssWUFBWTtRQUNkO0lBQ0Y7SUFFQSw0QkFBNEI7SUFDNUIsTUFBTXVGLHNCQUFzQkcsSUFBQUEsdUJBQVcsRUFBQztRQUN0Q0MsWUFBWSxPQUFPQztZQUNqQixNQUFNZCxXQUFXLE1BQU1DLE1BQU0sZUFBZTtnQkFDMUNjLFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQ1AsZ0JBQWdCO2dCQUNsQjtnQkFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDTDtZQUN2QjtZQUVBLElBQUksQ0FBQ2QsU0FBU0UsRUFBRSxFQUFFO2dCQUNoQixNQUFNa0IsUUFBUSxNQUFNcEIsU0FBU0ksSUFBSTtnQkFDakMsTUFBTSxJQUFJRCxNQUFNaUIsTUFBTXhGLE9BQU8sSUFBSTtZQUNuQztZQUVBLE9BQU9vRSxTQUFTSSxJQUFJO1FBQ3RCO1FBQ0FsRCxXQUFXLE9BQU9UO1lBQ2hCLE1BQU1nQyxZQUFZNEMsaUJBQWlCLENBQUM7Z0JBQ2xDdkIsVUFBVTtvQkFBQztpQkFBUztnQkFDcEJ3QixhQUFhO1lBQ2Y7WUFDQTdDLFlBQVk4QyxhQUFhLENBQUM7Z0JBQUV6QixVQUFVO29CQUFDO2lCQUFTO1lBQUM7WUFDakQsTUFBTXJCLFlBQVkrQyxjQUFjLENBQUM7Z0JBQUUxQixVQUFVO29CQUFDO2lCQUFTO1lBQUM7WUFFeEQsMENBQTBDO1lBQzFDLE1BQU0yQixXQUE0QjtnQkFDaENDLElBQUlqRixLQUFLQSxJQUFJLENBQUNpRixFQUFFO2dCQUNoQm5ILFFBQVFrQyxLQUFLQSxJQUFJLENBQUNsQyxNQUFNO2dCQUN4QkksT0FBTzhCLEtBQUtBLElBQUksQ0FBQzlCLEtBQUs7Z0JBQ3RCQyxTQUFTNkIsS0FBS0EsSUFBSSxDQUFDN0IsT0FBTztnQkFDMUJDLFVBQVU0QixLQUFLQSxJQUFJLENBQUM1QixRQUFRO2dCQUM1QkssWUFBWXVCLEtBQUtBLElBQUksQ0FBQ3ZCLFVBQVU7Z0JBQ2hDeUcsWUFBWWxGLEtBQUtBLElBQUksQ0FBQ2tGLFVBQVU7WUFDbEM7WUFFQUMsa0JBQWtCSDtZQUNsQnpELG1CQUFtQjtZQUNuQkUsb0JBQW9CO1FBQ3RCO1FBQ0EyRCxTQUFTLENBQUNUO1lBQ1JVLFFBQVFWLEtBQUssQ0FBQywyQkFBMkJBO1lBQ3pDcEQsbUJBQW1CO1lBQ25CRSxvQkFBb0I7UUFDdEI7SUFDRjtJQUVBLHlCQUF5QjtJQUN6QixNQUFNNkQsV0FBV25CLElBQUFBLHVCQUFXLEVBQUM7UUFDM0JDLFlBQVksT0FBT3BFO1lBQ2pCLE1BQU11RixXQUFXLElBQUlDO1lBRXJCLGtCQUFrQjtZQUNsQkMsT0FBT0MsT0FBTyxDQUFDMUYsTUFBTTJGLE9BQU8sQ0FBQyxDQUFDLENBQUNDLEtBQUtDLE1BQU07Z0JBQ3hDLElBQUlBLFVBQVUzQyxhQUFhMkMsVUFBVSxJQUFJO29CQUN2QyxJQUFJRCxRQUFRLFlBQVlFLE1BQU1DLE9BQU8sQ0FBQ0YsUUFBUTt3QkFDNUMseUJBQXlCO3dCQUN6QkEsTUFBTUYsT0FBTyxDQUFDLENBQUNLLE9BQU9DOzRCQUNwQlYsU0FBU1csTUFBTSxDQUFDLENBQUMsZUFBZSxFQUFFRCxNQUFNLENBQUMsQ0FBQyxFQUFFRDt3QkFDOUM7b0JBQ0YsT0FBTzt3QkFDTFQsU0FBU1csTUFBTSxDQUFDTixLQUFLTyxPQUFPTjtvQkFDOUI7Z0JBQ0Y7WUFDRjtZQUVBLHNCQUFzQjtZQUN0Qi9FLFdBQVc2RSxPQUFPLENBQUMsQ0FBQ1MsTUFBTUg7Z0JBQ3hCVixTQUFTVyxNQUFNLENBQUMsQ0FBQyxXQUFXLEVBQUVELE1BQU0sQ0FBQyxDQUFDLEVBQUVHO1lBQzFDO1lBRUEsTUFBTUMsTUFBTW5FLFlBQ1IsQ0FBQyxxQkFBcUIsRUFBRTVCLGNBQWMyRSxFQUFFLEVBQUUsR0FDMUM7WUFFSixNQUFNWCxTQUFTcEMsWUFBWSxRQUFRO1lBRW5DLE1BQU1xQixXQUFXLE1BQU1DLE1BQU02QyxLQUFLO2dCQUNoQy9CO2dCQUNBRSxNQUFNZTtZQUNSO1lBRUEsSUFBSSxDQUFDaEMsU0FBU0UsRUFBRSxFQUFFO2dCQUNoQixNQUFNa0IsUUFBUSxNQUFNcEIsU0FBU0ksSUFBSTtnQkFDakMwQixRQUFRVixLQUFLLENBQUMsdUJBQXVCQTtnQkFDckMsTUFBTSxJQUFJakIsTUFBTWlCLE1BQU14RixPQUFPLElBQUk7WUFDbkM7WUFFQSxPQUFPb0UsU0FBU0ksSUFBSTtRQUN0QjtRQUNBbEQsV0FBVyxPQUFPVDtZQUNoQiwwREFBMEQ7WUFDMURxRixRQUFRaUIsR0FBRyxDQUFDO1lBRVosK0RBQStEO1lBQy9ELE1BQU10RSxZQUFZNEMsaUJBQWlCLENBQUM7Z0JBQ2xDdkIsVUFBVTtvQkFBQztpQkFBa0I7Z0JBQzdCd0IsYUFBYTtZQUNmO1lBRUEsc0NBQXNDO1lBQ3RDLE1BQU03QyxZQUFZK0MsY0FBYyxDQUFDO2dCQUMvQjFCLFVBQVU7b0JBQUM7b0JBQW1CM0M7aUJBQU87Z0JBQ3JDNkYsTUFBTTtZQUNSO1lBRUEsNkNBQTZDO1lBQzdDLE1BQU1DLHNCQUFzQjtnQkFDMUI7b0JBQUM7aUJBQWU7Z0JBQ2hCO29CQUFDO29CQUFrQjlGO2lCQUFPO2dCQUMxQjtvQkFBQztpQkFBUzthQUNYO1lBRUQsS0FBSyxNQUFNMkMsWUFBWW1ELG9CQUFxQjtnQkFDMUMsTUFBTXhFLFlBQVk0QyxpQkFBaUIsQ0FBQztvQkFDbEN2QjtvQkFDQXdCLGFBQWE7Z0JBQ2Y7WUFDRjtZQUVBUSxRQUFRaUIsR0FBRyxDQUFDO1lBRVosbUJBQW1CO1lBQ25CN0Q7WUFDQTFCLGNBQWMsRUFBRTtZQUNoQkUsa0JBQWtCLEVBQUU7WUFDcEJMLGlCQUFpQjtZQUNqQmEsb0JBQW9CO1lBQ3BCSSxxQkFBcUI7WUFFckIsSUFBSXBCLFdBQVc7Z0JBQ2JBLFVBQVVUO1lBQ1osT0FBTztnQkFDTCxzREFBc0Q7Z0JBQ3REUTtZQUNGO1FBQ0Y7SUFDRjtJQUVBLCtCQUErQjtJQUMvQmlHLElBQUFBLGdCQUFTLEVBQUM7UUFDUixJQUFJdkUsYUFBYTVCLGVBQWU7WUFDOUIsTUFBTW9HLG9CQUFvQkMsOEJBQThCckcsY0FBY3JCLGtCQUFrQjtZQUN4Rm9HLFFBQVFpQixHQUFHLENBQUMsMENBQTBDSTtZQUN0RGpFLE1BQU07Z0JBQ0o5RCxTQUFTMkIsY0FBYzNCLE9BQU87Z0JBQzlCRSxVQUFVeUIsY0FBY3pCLFFBQVE7Z0JBQ2hDRyxVQUFVc0IsY0FBY3RCLFFBQVE7Z0JBQ2hDQyxvQkFBb0J5SDtnQkFDcEJ0SCxnQkFBZ0JrQixjQUFjbEIsY0FBYyxHQUN4QyxJQUFJRSxLQUFLZ0IsY0FBY2xCLGNBQWMsRUFBRXdILFdBQVcsR0FBR0MsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQ2xFO2dCQUNKckgsV0FBV2MsY0FBY2QsU0FBUyxHQUM5QixJQUFJRixLQUFLZ0IsY0FBY2QsU0FBUyxFQUFFb0gsV0FBVyxHQUFHQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FDN0Q7Z0JBQ0pwSCxPQUFPYSxjQUFjYixLQUFLLElBQUk7Z0JBQzlCQyxRQUFRWSxjQUFjWixNQUFNLElBQUksRUFBRTtnQkFDbENFLFVBQVVVLGNBQWNWLFFBQVE7WUFDbEM7WUFFQWdCLGlCQUFpQjtnQkFDZnFFLElBQUkzRSxjQUFjd0csS0FBSyxDQUFDN0IsRUFBRTtnQkFDMUJuSCxRQUFRd0MsY0FBY3dHLEtBQUssQ0FBQ2hKLE1BQU07Z0JBQ2xDSSxPQUFPb0MsY0FBY3dHLEtBQUssQ0FBQzVJLEtBQUs7Z0JBQ2hDQyxTQUFTbUMsY0FBY3dHLEtBQUssQ0FBQzNJLE9BQU87Z0JBQ3BDTSxZQUFZNkIsY0FBY3dHLEtBQUssQ0FBQ3JJLFVBQVU7Z0JBQzFDeUcsWUFBWTVFLGNBQWN3RyxLQUFLLENBQUM1QixVQUFVO1lBQzVDO1lBRUFqRSxrQkFBa0JYLGNBQWNaLE1BQU0sSUFBSSxFQUFFO1FBQzlDLE9BQU87WUFDTCtDO1lBQ0E3QixpQkFBaUI7WUFDakJHLGNBQWMsRUFBRTtZQUNoQkUsa0JBQWtCLEVBQUU7WUFDcEJRLG9CQUFvQjtZQUNwQkUsZ0JBQWdCO2dCQUNkN0QsUUFBUTtnQkFDUkksT0FBTztnQkFDUEMsU0FBUztnQkFDVEMsVUFBVTtnQkFDVkssWUFBWTtZQUNkO1FBQ0Y7SUFDRixHQUFHO1FBQUN5RDtRQUFXNUI7UUFBZW1DO0tBQU07SUFFcEMseUJBQXlCO0lBQ3pCLE1BQU0wQyxvQkFBb0IsQ0FBQzJCO1FBQ3pCLElBQUlBLE9BQU87WUFDVGxHLGlCQUFpQmtHO1lBQ2pCcEUsU0FBUyxXQUFXb0UsTUFBTTdCLEVBQUUsRUFBRTtnQkFBRThCLGdCQUFnQjtZQUFLO1FBQ3ZELE9BQU87WUFDTG5HLGlCQUFpQjtZQUNqQjhCLFNBQVMsV0FBVyxHQUFHO2dCQUFFcUUsZ0JBQWdCO1lBQUs7UUFDaEQ7SUFDRjtJQUVBLHVCQUF1QjtJQUN2QixNQUFNQyxvQkFBb0IsQ0FBQ0M7UUFDekJsRyxjQUFja0c7UUFDZCxrRUFBa0U7UUFDbEUsa0RBQWtEO1FBQ2xEckU7SUFDRjtJQUVBLGdDQUFnQztJQUNoQyxNQUFNc0UsNEJBQTRCLENBQUNqQjtRQUNqQyxNQUFNa0IsWUFBWW5HLGVBQWVvRyxNQUFNLENBQUMsQ0FBQ0MsR0FBR0MsSUFBTUEsTUFBTXJCO1FBQ3hEaEYsa0JBQWtCa0c7UUFDbEIsa0VBQWtFO1FBQ2xFdkU7SUFDRjtJQUVBLHVEQUF1RDtJQUN2RCxNQUFNMkUsd0JBQXdCLENBQUN0QjtRQUM3QixJQUFJQSxVQUFVLEdBQUcsUUFBUSxrQkFBa0I7UUFFM0MsTUFBTWtCLFlBQVk7ZUFBSW5HO1NBQWU7UUFDckMsTUFBTXdHLGdCQUFnQkwsU0FBUyxDQUFDbEIsTUFBTTtRQUV0Qyx3REFBd0Q7UUFDeERrQixVQUFVTSxNQUFNLENBQUN4QixPQUFPO1FBQ3hCa0IsVUFBVU8sT0FBTyxDQUFDRjtRQUVsQnZHLGtCQUFrQmtHO1FBQ2xCdkU7SUFDRjtJQUVBLHNEQUFzRDtJQUN0RCxNQUFNK0UsNEJBQTRCLENBQUNDO1FBQ2pDLE1BQU1DLGNBQWM7WUFDbEIsVUFBVTtZQUNWLFlBQVk7WUFDWixtQkFBbUI7WUFDbkIsbUJBQW1CO1lBQ25CLGlCQUFpQjtZQUNqQixtQkFBbUI7WUFDbkIsbUJBQW1CO1lBQ25CLGFBQWE7WUFDYixhQUFhO1FBQ2Y7UUFDQSxPQUFPQSxXQUFXLENBQUNELFNBQXFDLElBQUlBO0lBQzlEO0lBRUEseURBQXlEO0lBQ3pELE1BQU1qQixnQ0FBZ0MsQ0FBQ2lCO1FBQ3JDdkMsUUFBUWlCLEdBQUcsQ0FBQyxpQ0FBaUNzQjtRQUM3QyxJQUFJLENBQUNBLFVBQVUsT0FBTztRQUV0QixNQUFNRSxhQUFhO1lBQ2pCLDJDQUEyQztZQUMzQyxVQUFVO1lBQ1YsV0FBVztZQUNYLFdBQVc7WUFDWCxXQUFXO1lBQ1gsV0FBVztZQUNYLFdBQVc7WUFDWCxZQUFZO1lBQ1osWUFBWTtZQUNaLDhDQUE4QztZQUM5QyxVQUFVO1lBQ1YsaUJBQWlCO1lBQ2pCLG1CQUFtQjtZQUNuQixtQkFBbUI7WUFDbkIsaUJBQWlCO1lBQ2pCLG1CQUFtQjtZQUNuQixtQkFBbUI7WUFDbkIsV0FBVztZQUNYLFdBQVc7WUFDWCxhQUFhO1lBQ2IsYUFBYTtRQUNmO1FBRUEsTUFBTUMsU0FBU0QsVUFBVSxDQUFDRixTQUFvQyxJQUFJO1FBQ2xFdkMsUUFBUWlCLEdBQUcsQ0FBQyxpQkFBaUJ5QjtRQUM3QixPQUFPQTtJQUNUO0lBRUEseUJBQXlCO0lBQ3pCLE1BQU1DLFdBQVcsQ0FBQ2hJO1FBQ2hCLE1BQU1pSSxhQUFhO1lBQ2pCLEdBQUdqSSxJQUFJO1lBQ1BmLG9CQUFvQjBJLDBCQUEwQjNILEtBQUtmLGtCQUFrQjtZQUNyRVMsUUFBUXNCO1FBQ1Y7UUFDQXFFLFFBQVFpQixHQUFHLENBQUMseUJBQXlCMkI7UUFDckM1QyxRQUFRaUIsR0FBRyxDQUFDLG9DQUFvQ3RGO1FBQ2hEcUUsUUFBUWlCLEdBQUcsQ0FBQyxpQ0FBaUN0RyxLQUFLZixrQkFBa0I7UUFDcEVvRyxRQUFRaUIsR0FBRyxDQUFDLGtDQUFrQ3FCLDBCQUEwQjNILEtBQUtmLGtCQUFrQjtRQUMvRnFHLFNBQVNyQixNQUFNLENBQUNnRTtJQUNsQjtJQUVBLHdCQUF3QjtJQUN4QnhCLElBQUFBLGdCQUFTLEVBQUM7UUFDUjVFLHFCQUFxQlcsV0FBVzFCLFdBQVcvQixNQUFNLEdBQUcsS0FBS3lDO0lBQzNELEdBQUc7UUFBQ2dCO1FBQVMxQixXQUFXL0IsTUFBTTtRQUFFeUM7S0FBaUI7SUFFakQsZ0RBQWdEO0lBQ2hEaUYsSUFBQUEsZ0JBQVMsRUFBQztRQUNSLE1BQU15QixxQkFBcUIsQ0FBQ0M7WUFDMUIsSUFBSXZHLG1CQUFtQjtnQkFDckJ1RyxFQUFFQyxjQUFjO2dCQUNoQkQsRUFBRUUsV0FBVyxHQUFHO2dCQUNoQixPQUFPO1lBQ1Q7UUFDRjtRQUVBLElBQUk5SCxVQUFVcUIsbUJBQW1CO1lBQy9CMEcsT0FBT0MsZ0JBQWdCLENBQUMsZ0JBQWdCTDtRQUMxQztRQUVBLE9BQU87WUFDTEksT0FBT0UsbUJBQW1CLENBQUMsZ0JBQWdCTjtRQUM3QztJQUNGLEdBQUc7UUFBQzNIO1FBQVFxQjtLQUFrQjtJQUU5Qiw0Q0FBNEM7SUFDNUMsTUFBTTZHLGNBQWM7UUFDbEIsSUFBSTdHLG1CQUFtQjtZQUNyQixNQUFNOEcsWUFBWUosT0FBT0ssT0FBTyxDQUFDO1lBQ2pDLElBQUksQ0FBQ0QsV0FBVztRQUNsQjtRQUNBbEk7SUFDRjtJQUVBLHdCQUF3QjtJQUN4QmlHLElBQUFBLGdCQUFTLEVBQUM7UUFDUixNQUFNbUMsZUFBZSxDQUFDVDtZQUNwQixJQUFJQSxFQUFFdkMsR0FBRyxLQUFLLFVBQVU7Z0JBQ3RCNkM7WUFDRjtRQUNGO1FBRUEsSUFBSWxJLFFBQVE7WUFDVnNJLFNBQVNOLGdCQUFnQixDQUFDLFdBQVdLO1lBQ3JDQyxTQUFTckUsSUFBSSxDQUFDc0UsS0FBSyxDQUFDQyxRQUFRLEdBQUc7UUFDakM7UUFFQSxPQUFPO1lBQ0xGLFNBQVNMLG1CQUFtQixDQUFDLFdBQVdJO1lBQ3hDQyxTQUFTckUsSUFBSSxDQUFDc0UsS0FBSyxDQUFDQyxRQUFRLEdBQUc7UUFDakM7SUFDRixHQUFHO1FBQUN4STtRQUFRa0k7S0FBWTtJQUV4QixJQUFJLENBQUNsSSxRQUFRLE9BQU87SUFFcEIscUJBQ0Usc0JBQUN5STtRQUFJQyxXQUFVOzswQkFFYixxQkFBQ0Q7Z0JBQ0NDLFdBQVU7Z0JBQ1ZDLFNBQVNUOzswQkFJWCxxQkFBQ087Z0JBQUlDLFdBQVU7MEJBQ2IsY0FBQSxzQkFBQ0Q7b0JBQUlDLFdBQVU7O3NDQUViLHNCQUFDRDs0QkFBSUMsV0FBVTs7OENBQ2IscUJBQUNFO29DQUFHRixXQUFVOzhDQUNYL0csWUFBWSxlQUFlOzs4Q0FFOUIscUJBQUNrSDtvQ0FDQ0YsU0FBU1Q7b0NBQ1RRLFdBQVU7b0NBQ1ZJLGNBQVc7OENBRVgsY0FBQSxxQkFBQ0M7d0NBQUlMLFdBQVU7d0NBQVVNLE1BQUs7d0NBQU9DLFFBQU87d0NBQWVDLFNBQVE7a0RBQ2pFLGNBQUEscUJBQUNySjs0Q0FBS3NKLGVBQWM7NENBQVFDLGdCQUFlOzRDQUFRQyxhQUFhOzRDQUFHQyxHQUFFOzs7Ozs7c0NBTTNFLHNCQUFDQzs0QkFBSzlCLFVBQVU1RixhQUFhNEY7NEJBQVdpQixXQUFVOzs4Q0FDaEQsc0JBQUNEO29DQUFJQyxXQUFVOztzREFFYixzQkFBQ0Q7OzhEQUNDLHFCQUFDZTtvREFBTWQsV0FBVTs4REFBK0M7OzhEQUdoRSxxQkFBQ2UsOEJBQXFCO29EQUNwQnJKLGVBQWVBO29EQUNmc0osVUFBVTlFO29EQUNWK0UsVUFBVTVJLG1CQUFtQkU7b0RBQzdCMkksVUFBVXRHOztnREFFWHZDLGlDQUNDLHNCQUFDMEg7b0RBQUlDLFdBQVU7O3NFQUNiLHNCQUFDSzs0REFBSUwsV0FBVTs0REFBa0NNLE1BQUs7NERBQU9FLFNBQVE7OzhFQUNuRSxxQkFBQ1c7b0VBQU9uQixXQUFVO29FQUFhb0IsSUFBRztvRUFBS0MsSUFBRztvRUFBS0MsR0FBRTtvRUFBS2YsUUFBTztvRUFBZUksYUFBWTs7OEVBQ3hGLHFCQUFDeEo7b0VBQUs2SSxXQUFVO29FQUFhTSxNQUFLO29FQUFlTSxHQUFFOzs7O3dEQUMvQzs7O2dEQUlUN0Ysb0JBQW9Cd0csT0FBTyxrQkFDMUIsc0JBQUN4QjtvREFBSUMsV0FBVTs7d0RBQTRCO3dEQUNoQmpGLG9CQUFvQlcsS0FBSyxZQUFZakIsUUFBUU0sb0JBQW9CVyxLQUFLLENBQUN4RixPQUFPLEdBQUc7OztnREFHN0dtRCxPQUFPM0QsT0FBTyxrQkFDYixxQkFBQ3FLO29EQUFJQyxXQUFVOzhEQUE2QjNHLE9BQU8zRCxPQUFPLENBQUNRLE9BQU87O2dEQUluRXFDLGtDQUNDLHNCQUFDd0g7b0RBQUlDLFdBQVU7O3NFQUNiLHNCQUFDRDs0REFBSUMsV0FBVTs7OEVBQ2IscUJBQUN3QjtvRUFBR3hCLFdBQVU7OEVBQXNDOzs4RUFDcEQscUJBQUNHO29FQUNDN0MsTUFBSztvRUFDTDJDLFNBQVNoRjtvRUFDVCtFLFdBQVU7OEVBRVYsY0FBQSxxQkFBQ0s7d0VBQUlMLFdBQVU7d0VBQVVNLE1BQUs7d0VBQU9DLFFBQU87d0VBQWVDLFNBQVE7a0ZBQ2pFLGNBQUEscUJBQUNySjs0RUFBS3NKLGVBQWM7NEVBQVFDLGdCQUFlOzRFQUFRQyxhQUFhOzRFQUFHQyxHQUFFOzs7Ozs7c0VBSzNFLHNCQUFDYjs0REFBSUMsV0FBVTs7OEVBRWIsc0JBQUNEOztzRkFDQyxxQkFBQ2U7NEVBQU1kLFdBQVU7c0ZBQStDOztzRkFHaEUscUJBQUN5Qjs0RUFDQ25FLE1BQUs7NEVBQ0xWLE9BQU9uRSxhQUFhakQsVUFBVTs0RUFDOUJrTSxVQUFVLENBQUN4QyxJQUFNeEcsZ0JBQWdCaUosQ0FBQUEsT0FBUyxDQUFBO3dGQUFFLEdBQUdBLElBQUk7d0ZBQUVuTSxZQUFZMEosRUFBRTBDLE1BQU0sQ0FBQ2hGLEtBQUs7b0ZBQUMsQ0FBQTs0RUFDaEZpRixhQUFZOzRFQUNaN0IsV0FBVTs7Ozs4RUFJZCxzQkFBQ0Q7b0VBQUlDLFdBQVU7O3NGQUViLHNCQUFDRDs7OEZBQ0MscUJBQUNlO29GQUFNZCxXQUFVOzhGQUErQzs7OEZBR2hFLHFCQUFDeUI7b0ZBQ0NuRSxNQUFLO29GQUNMVixPQUFPbkUsYUFBYTVELE1BQU07b0ZBQzFCNk0sVUFBVSxDQUFDeEMsSUFBTXhHLGdCQUFnQmlKLENBQUFBLE9BQVMsQ0FBQTtnR0FBRSxHQUFHQSxJQUFJO2dHQUFFOU0sUUFBUXFLLEVBQUUwQyxNQUFNLENBQUNoRixLQUFLOzRGQUFDLENBQUE7b0ZBQzVFaUYsYUFBWTtvRkFDWjdCLFdBQVU7Ozs7c0ZBS2Qsc0JBQUNEOzs4RkFDQyxxQkFBQ2U7b0ZBQU1kLFdBQVU7OEZBQStDOzs4RkFHaEUscUJBQUN5QjtvRkFDQ25FLE1BQUs7b0ZBQ0xWLE9BQU9uRSxhQUFheEQsS0FBSztvRkFDekJ5TSxVQUFVLENBQUN4QyxJQUFNeEcsZ0JBQWdCaUosQ0FBQUEsT0FBUyxDQUFBO2dHQUFFLEdBQUdBLElBQUk7Z0dBQUUxTSxPQUFPaUssRUFBRTBDLE1BQU0sQ0FBQ2hGLEtBQUs7NEZBQUMsQ0FBQTtvRkFDM0VpRixhQUFZO29GQUNaN0IsV0FBVTs7Ozs7OzhFQUtoQixzQkFBQ0Q7b0VBQUlDLFdBQVU7O3NGQUViLHNCQUFDRDs7OEZBQ0MscUJBQUNlO29GQUFNZCxXQUFVOzhGQUErQzs7OEZBR2hFLHFCQUFDeUI7b0ZBQ0NuRSxNQUFLO29GQUNMVixPQUFPbkUsYUFBYXZELE9BQU87b0ZBQzNCd00sVUFBVSxDQUFDeEMsSUFBTXhHLGdCQUFnQmlKLENBQUFBLE9BQVMsQ0FBQTtnR0FBRSxHQUFHQSxJQUFJO2dHQUFFek0sU0FBU2dLLEVBQUUwQyxNQUFNLENBQUNoRixLQUFLOzRGQUFDLENBQUE7b0ZBQzdFaUYsYUFBWTtvRkFDWjdCLFdBQVU7Ozs7c0ZBS2Qsc0JBQUNEOzs4RkFDQyxxQkFBQ2U7b0ZBQU1kLFdBQVU7OEZBQStDOzs4RkFHaEUscUJBQUN5QjtvRkFDQ25FLE1BQUs7b0ZBQ0xWLE9BQU9uRSxhQUFhdEQsUUFBUTtvRkFDNUJ1TSxVQUFVLENBQUN4QyxJQUFNeEcsZ0JBQWdCaUosQ0FBQUEsT0FBUyxDQUFBO2dHQUFFLEdBQUdBLElBQUk7Z0dBQUV4TSxVQUFVK0osRUFBRTBDLE1BQU0sQ0FBQ2hGLEtBQUs7NEZBQUMsQ0FBQTtvRkFDOUVpRixhQUFZO29GQUNaN0IsV0FBVTs7Ozs7OzhFQUtoQixzQkFBQ0Q7b0VBQUlDLFdBQVU7O3NGQUNiLHFCQUFDRzs0RUFDQzdDLE1BQUs7NEVBQ0wyQyxTQUFTaEY7NEVBQ1QrRSxXQUFVO3NGQUNYOztzRkFHRCxxQkFBQ0c7NEVBQ0M3QyxNQUFLOzRFQUNMMkMsU0FBUztnRkFDUCxNQUFNM0csVUFBVWIsYUFBYTVELE1BQU0sSUFBSTRELGFBQWF4RCxLQUFLLElBQUl3RCxhQUFhdkQsT0FBTyxJQUFJdUQsYUFBYWpELFVBQVU7Z0ZBQzVHLElBQUk4RCxTQUFTO29GQUNYd0IscUJBQXFCckM7Z0ZBQ3ZCOzRFQUNGOzRFQUNBd0ksVUFBVSxDQUFDeEksYUFBYTVELE1BQU0sSUFBSSxDQUFDNEQsYUFBYXhELEtBQUssSUFBSSxDQUFDd0QsYUFBYXZELE9BQU8sSUFBSSxDQUFDdUQsYUFBYWpELFVBQVU7NEVBQzFHd0ssV0FBVTtzRkFDWDs7Ozs7Ozs7OztzREFVWCxzQkFBQ0Q7NENBQUlDLFdBQVU7OzhEQUNiLHNCQUFDRDs7c0VBQ0MscUJBQUNlOzREQUFNZ0IsU0FBUTs0REFBVzlCLFdBQVU7c0VBQStDOztzRUFHbkYscUJBQUMrQix5QkFBVTs0REFDVEMsTUFBSzs0REFDTDlJLFNBQVNBOzREQUNUK0ksUUFBUSxDQUFDLEVBQUVDLEtBQUssRUFBRSxpQkFDaEIscUJBQUNUO29FQUNFLEdBQUdTLEtBQUs7b0VBQ1RsRyxJQUFHO29FQUNIc0IsTUFBSztvRUFDTHVFLGFBQVk7b0VBQ1o3QixXQUFXLENBQUMsNElBQTRJLEVBQ3RKM0csT0FBT3pELFFBQVEsR0FBRyxtQkFBbUIsbUJBQ3JDOzs7d0RBSVB5RCxPQUFPekQsUUFBUSxrQkFDZCxxQkFBQ3VNOzREQUFFbkMsV0FBVTtzRUFBNkIzRyxPQUFPekQsUUFBUSxDQUFDTSxPQUFPOzs7OzhEQUlyRSxzQkFBQzZKOztzRUFDQyxxQkFBQ2U7NERBQU1nQixTQUFROzREQUFXOUIsV0FBVTtzRUFBK0M7O3NFQUduRixxQkFBQytCLHlCQUFVOzREQUNUQyxNQUFLOzREQUNMOUksU0FBU0E7NERBQ1QrSSxRQUFRLENBQUMsRUFBRUMsS0FBSyxFQUFFLGlCQUNoQixzQkFBQ25DO29FQUFJQyxXQUFVOztzRkFDYixxQkFBQ3lCOzRFQUNFLEdBQUdTLEtBQUs7NEVBQ1RsRyxJQUFHOzRFQUNIc0IsTUFBSzs0RUFDTHVFLGFBQVk7NEVBQ1o3QixXQUFXLENBQUMsNElBQTRJLEVBQ3RKM0csT0FBT3RELFFBQVEsR0FBRyxtQkFBbUIsbUJBQ3JDOzRFQUNGMkwsVUFBVSxDQUFDeEM7Z0ZBQ1RnRCxNQUFNUixRQUFRLENBQUN4QztnRkFDZjlHLGlCQUFpQjhHLEVBQUUwQyxNQUFNLENBQUNoRixLQUFLO2dGQUMvQjFFLDJCQUEyQmdILEVBQUUwQyxNQUFNLENBQUNoRixLQUFLLENBQUM5RyxNQUFNLEdBQUc7NEVBQ3JEOzRFQUNBc00sU0FBUyxJQUFNbEssMkJBQTJCZ0ssTUFBTXRGLEtBQUssQ0FBQzlHLE1BQU0sR0FBRzs0RUFDL0R1TSxRQUFRLElBQU1DLFdBQVcsSUFBTXBLLDJCQUEyQixRQUFROzt3RUFJbkVELDJCQUEyQmlDLGlCQUFpQkEsY0FBY3BFLE1BQU0sR0FBRyxtQkFDbEUsc0JBQUNpSzs0RUFBSUMsV0FBVTs7Z0ZBQ1o5RixjQUNFaUUsTUFBTSxDQUFDcEksQ0FBQUEsV0FDTkEsU0FBU3dNLFdBQVcsR0FBR0MsUUFBUSxDQUFDTixNQUFNdEYsS0FBSyxDQUFDMkYsV0FBVyxLQUV4REUsS0FBSyxDQUFDLEdBQUcsR0FDVEMsR0FBRyxDQUFDLENBQUMzTSx5QkFDSixxQkFBQ29LO3dGQUVDN0MsTUFBSzt3RkFDTDJDLFNBQVM7NEZBQ1BpQyxNQUFNUixRQUFRLENBQUMzTDs0RkFDZnFDLGlCQUFpQnJDOzRGQUNqQm1DLDJCQUEyQjt3RkFDN0I7d0ZBQ0E4SCxXQUFVO2tHQUVWLGNBQUEsc0JBQUNEOzRGQUFJQyxXQUFVOzs4R0FDYixzQkFBQ0s7b0dBQUlMLFdBQVU7b0dBQTZCTSxNQUFLO29HQUFPQyxRQUFPO29HQUFlQyxTQUFROztzSEFDcEYscUJBQUNySjs0R0FBS3NKLGVBQWM7NEdBQVFDLGdCQUFlOzRHQUFRQyxhQUFhOzRHQUFHQyxHQUFFOztzSEFDckUscUJBQUN6Sjs0R0FBS3NKLGVBQWM7NEdBQVFDLGdCQUFlOzRHQUFRQyxhQUFhOzRHQUFHQyxHQUFFOzs7O2dHQUV0RTdLOzs7dUZBZEVBO2dGQW9CVm1NLE1BQU10RixLQUFLLENBQUM5RyxNQUFNLEdBQUcsS0FBSyxDQUFDb0UsY0FBY3lJLElBQUksQ0FBQ0MsQ0FBQUEsTUFDN0NBLElBQUlMLFdBQVcsR0FBR0MsUUFBUSxDQUFDTixNQUFNdEYsS0FBSyxDQUFDMkYsV0FBVyxzQkFFbEQsc0JBQUN4QztvRkFBSUMsV0FBVTs7c0dBQ2IscUJBQUNEOzRGQUFJQyxXQUFVO3NHQUE4Qzs7d0ZBQzVEOzRGQUNDOzRGQUNBOzRGQUNBOzRGQUNBOzRGQUNBOzRGQUNBOzRGQUNBOzRGQUNBO3lGQUNELENBQUM3QixNQUFNLENBQUMwRSxDQUFBQSxhQUNQQSxXQUFXTixXQUFXLEdBQUdDLFFBQVEsQ0FBQ04sTUFBTXRGLEtBQUssQ0FBQzJGLFdBQVcsS0FDekRFLEtBQUssQ0FBQyxHQUFHLEdBQUdDLEdBQUcsQ0FBQyxDQUFDRywyQkFDakIscUJBQUMxQztnR0FFQzdDLE1BQUs7Z0dBQ0wyQyxTQUFTO29HQUNQaUMsTUFBTVIsUUFBUSxDQUFDbUI7b0dBQ2Z6SyxpQkFBaUJ5SztvR0FDakIzSywyQkFBMkI7Z0dBQzdCO2dHQUNBOEgsV0FBVTswR0FFVixjQUFBLHNCQUFDRDtvR0FBSUMsV0FBVTs7c0hBQ2IscUJBQUNLOzRHQUFJTCxXQUFVOzRHQUE2Qk0sTUFBSzs0R0FBT0MsUUFBTzs0R0FBZUMsU0FBUTtzSEFDcEYsY0FBQSxxQkFBQ3JKO2dIQUFLc0osZUFBYztnSEFBUUMsZ0JBQWU7Z0hBQVFDLGFBQWE7Z0hBQUdDLEdBQUU7Ozt3R0FFdEVpQzs7OytGQWJFQTs7Ozs7Ozs7d0RBd0J0QnhKLE9BQU90RCxRQUFRLGtCQUNkLHFCQUFDb007NERBQUVuQyxXQUFVO3NFQUE2QjNHLE9BQU90RCxRQUFRLENBQUNHLE9BQU87O3NFQUluRSxxQkFBQ2lNOzREQUFFbkMsV0FBVTtzRUFBNkI7Ozs7OztzREFPOUMsc0JBQUNEOzs4REFDQyxxQkFBQ2U7b0RBQU1nQixTQUFRO29EQUFxQjlCLFdBQVU7OERBQStDOzs4REFHN0YscUJBQUMrQix5QkFBVTtvREFDVEMsTUFBSztvREFDTDlJLFNBQVNBO29EQUNUK0ksUUFBUSxDQUFDLEVBQUVDLEtBQUssRUFBRSxpQkFDaEIsc0JBQUNuQzs0REFBSUMsV0FBVTs7OEVBQ2Isc0JBQUM4QztvRUFDRSxHQUFHWixLQUFLO29FQUNUbEcsSUFBRztvRUFDSGdFLFdBQVcsQ0FBQyx1SEFBdUgsRUFDakkzRyxPQUFPckQsa0JBQWtCLEdBQUcsbUJBQW1CLG1CQUMvQzs7c0ZBRUYscUJBQUMrTTs0RUFBT25HLE9BQU07c0ZBQVM7O3NGQUN2QixxQkFBQ21HOzRFQUFPbkcsT0FBTTtzRkFBVzs7c0ZBQ3pCLHFCQUFDbUc7NEVBQU9uRyxPQUFNO3NGQUFrQjs7c0ZBQ2hDLHFCQUFDbUc7NEVBQU9uRyxPQUFNO3NGQUFrQjs7c0ZBQ2hDLHFCQUFDbUc7NEVBQU9uRyxPQUFNO3NGQUFnQjs7c0ZBQzlCLHFCQUFDbUc7NEVBQU9uRyxPQUFNO3NGQUFrQjs7c0ZBQ2hDLHFCQUFDbUc7NEVBQU9uRyxPQUFNO3NGQUFrQjs7c0ZBQ2hDLHFCQUFDbUc7NEVBQU9uRyxPQUFNO3NGQUFZOztzRkFDMUIscUJBQUNtRzs0RUFBT25HLE9BQU07c0ZBQVk7Ozs7Z0VBSTNCc0YsTUFBTXRGLEtBQUssSUFBSWxELE1BQU0sbUNBQ3BCLHFCQUFDcUc7b0VBQUlDLFdBQVU7OEVBQ2IsY0FBQSxzQkFBQ0Q7d0VBQUlDLFdBQVU7OzBGQUNiLHFCQUFDSztnRkFBSUwsV0FBVTtnRkFBZ0NNLE1BQUs7Z0ZBQU9DLFFBQU87Z0ZBQWVDLFNBQVE7MEZBQ3ZGLGNBQUEscUJBQUNySjtvRkFBS3NKLGVBQWM7b0ZBQVFDLGdCQUFlO29GQUFRQyxhQUFhO29GQUFHQyxHQUFFOzs7MEZBRXZFLHFCQUFDb0M7Z0ZBQUtoRCxXQUFVOzBGQUNiLEFBQUMsQ0FBQTtvRkFDQSxNQUFNaUQsV0FBVyxJQUFJNU0sS0FBS3FELE1BQU0scUJBQXFCO29GQUNyRCxNQUFNd0osa0JBQWtCeEosTUFBTTtvRkFDOUIsTUFBTWtGLGNBQWM7d0ZBQ2xCdUUsUUFBUTt3RkFDUkMsVUFBVTt3RkFDVkMsaUJBQWlCO3dGQUNqQkMsaUJBQWlCO3dGQUNqQkMsZUFBZTt3RkFDZkMsaUJBQWlCO3dGQUNqQkMsaUJBQWlCO3dGQUNqQkMsV0FBVzt3RkFDWEMsV0FBVztvRkFDYjtvRkFDQSxNQUFNQyxPQUFPaEYsV0FBVyxDQUFDc0UsZ0JBQTRDO29GQUNyRSxNQUFNVyxVQUFVLElBQUl4TixLQUFLNE07b0ZBQ3pCWSxRQUFRQyxPQUFPLENBQUNELFFBQVFFLE9BQU8sS0FBS0g7b0ZBQ3BDLE9BQU8sQ0FBQyxxQkFBcUIsRUFBRUMsUUFBUUcsa0JBQWtCLElBQUk7Z0ZBQy9ELENBQUE7Ozs7Ozs7O2dEQVFiM0ssT0FBT3JELGtCQUFrQixrQkFDeEIscUJBQUNtTTtvREFBRW5DLFdBQVU7OERBQTZCM0csT0FBT3JELGtCQUFrQixDQUFDRSxPQUFPOzs4REFHN0UscUJBQUNpTTtvREFBRW5DLFdBQVU7OERBQTZCOzs7O3NEQU01QyxzQkFBQ0Q7NENBQUlDLFdBQVU7OzhEQUNiLHNCQUFDRDs7c0VBQ0MscUJBQUNlOzREQUFNZCxXQUFVO3NFQUErQzs7c0VBR2hFLHFCQUFDK0IseUJBQVU7NERBQ1RDLE1BQUs7NERBQ0w5SSxTQUFTQTs0REFDVCtJLFFBQVEsQ0FBQyxFQUFFQyxLQUFLLEVBQUUsaUJBQ2hCLHFCQUFDVDtvRUFDRSxHQUFHUyxLQUFLO29FQUNUNUUsTUFBSztvRUFDTHRJLEtBQUssSUFBSXFCLE9BQU9zSCxXQUFXLEdBQUdDLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtvRUFDM0NvQyxXQUFVOzs7Ozs4REFNbEIsc0JBQUNEOztzRUFDQyxxQkFBQ2U7NERBQU1kLFdBQVU7c0VBQStDOztzRUFHaEUscUJBQUMrQix5QkFBVTs0REFDVEMsTUFBSzs0REFDTDlJLFNBQVNBOzREQUNUK0ksUUFBUSxDQUFDLEVBQUVDLEtBQUssRUFBRSxpQkFDaEIscUJBQUNUO29FQUNFLEdBQUdTLEtBQUs7b0VBQ1Q1RSxNQUFLO29FQUNMdEksS0FBSyxJQUFJcUIsT0FBT3NILFdBQVcsR0FBR0MsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO29FQUMzQ29DLFdBQVU7Ozs7Ozs7c0RBUXBCLHNCQUFDRDs7OERBQ0MscUJBQUNlO29EQUFNZCxXQUFVOzhEQUErQzs7Z0RBSy9EdEcsTUFBTSxZQUFZQSxNQUFNLFVBQVVuRSx3QkFDakMsc0JBQUN3SztvREFBSUMsV0FBVTs7c0VBQ2IscUJBQUNpRTs0REFBR2pFLFdBQVU7c0VBQXlDOztzRUFDdkQscUJBQUNEOzREQUFJQyxXQUFVO3NFQUNadEcsTUFBTTs7Ozs4REFNYixzQkFBQ3FHO29EQUFJQyxXQUFVOztzRUFDYixxQkFBQ2tFOzREQUNDdEgsT0FBTy9EOzREQUNQNkksVUFBVSxDQUFDeEMsSUFBTXBHLGdCQUFnQm9HLEVBQUUwQyxNQUFNLENBQUNoRixLQUFLOzREQUMvQ3VILE1BQU07NERBQ050QyxhQUFZOzREQUNaN0IsV0FBVTs0REFDVm9FLFdBQVcsQ0FBQ2xGO2dFQUNWLElBQUlBLEVBQUV2QyxHQUFHLEtBQUssV0FBWXVDLENBQUFBLEVBQUVtRixPQUFPLElBQUluRixFQUFFb0YsT0FBTyxBQUFELEdBQUk7b0VBQ2pEcEYsRUFBRUMsY0FBYztvRUFDaEIsTUFBTW9GLFVBQVUxTCxhQUFhdEQsSUFBSTtvRUFDakMsSUFBSWdQLFNBQVM7d0VBQ1gsTUFBTUMsWUFBWSxJQUFJbk8sT0FBTzJOLGtCQUFrQjt3RUFDL0MsTUFBTVMsZ0JBQWdCL0ssTUFBTSxZQUFZO3dFQUN4QyxNQUFNZ0wsZUFBZUQsZ0JBQ2pCLEdBQUdBLGNBQWMsS0FBSyxFQUFFRCxVQUFVLEVBQUUsRUFBRUQsU0FBUyxHQUMvQyxDQUFDLENBQUMsRUFBRUMsVUFBVSxFQUFFLEVBQUVELFNBQVM7d0VBQy9COUssU0FBUyxTQUFTaUw7d0VBQ2xCNUwsZ0JBQWdCLEtBQUssa0JBQWtCO29FQUN6QztnRUFDRjs0REFDRjs7c0VBRUYsc0JBQUNpSDs0REFBSUMsV0FBVTs7OEVBQ2IscUJBQUNtQztvRUFBRW5DLFdBQVU7OEVBQXdCOzs4RUFHckMscUJBQUNHO29FQUNDN0MsTUFBSztvRUFDTDJDLFNBQVM7d0VBQ1AsTUFBTXNFLFVBQVUxTCxhQUFhdEQsSUFBSTt3RUFDakMsSUFBSWdQLFNBQVM7NEVBQ1gsTUFBTUMsWUFBWSxJQUFJbk8sT0FBTzJOLGtCQUFrQjs0RUFDL0MsTUFBTVMsZ0JBQWdCL0ssTUFBTSxZQUFZOzRFQUN4QyxNQUFNZ0wsZUFBZUQsZ0JBQ2pCLEdBQUdBLGNBQWMsS0FBSyxFQUFFRCxVQUFVLEVBQUUsRUFBRUQsU0FBUyxHQUMvQyxDQUFDLENBQUMsRUFBRUMsVUFBVSxFQUFFLEVBQUVELFNBQVM7NEVBQy9COUssU0FBUyxTQUFTaUw7NEVBQ2xCNUwsZ0JBQWdCLEtBQUssa0JBQWtCO3dFQUN6QztvRUFDRjtvRUFDQW1JLFVBQVUsQ0FBQ3BJLGFBQWF0RCxJQUFJO29FQUM1QnlLLFdBQVU7OEVBQ1g7Ozs7Ozs4REFPTCxxQkFBQytCLHlCQUFVO29EQUNUQyxNQUFLO29EQUNMOUksU0FBU0E7b0RBQ1QrSSxRQUFRLENBQUMsRUFBRUMsS0FBSyxFQUFFLGlCQUNoQixxQkFBQ1Q7NERBQU1uRSxNQUFLOzREQUFVLEdBQUc0RSxLQUFLOzs7Z0RBSWpDN0ksT0FBTzdDLEtBQUssa0JBQ1gscUJBQUMyTDtvREFBRW5DLFdBQVU7OERBQTZCM0csT0FBTzdDLEtBQUssQ0FBQ04sT0FBTzs7OztzREFLbEUsc0JBQUM2Sjs7OERBQ0MscUJBQUNlO29EQUFNZCxXQUFVOzhEQUErQzs7Z0RBSy9EakksZUFBZWpDLE1BQU0sR0FBRyxtQkFDdkIsc0JBQUNpSztvREFBSUMsV0FBVTs7c0VBQ2IscUJBQUNpRTs0REFBR2pFLFdBQVU7c0VBQXlDOztzRUFDdkQscUJBQUNEOzREQUFJQyxXQUFVO3NFQUNaakksZUFBZTJLLEdBQUcsQ0FBQyxDQUFDM0YsT0FBT0Msc0JBQzFCLHNCQUFDK0M7b0VBQWdCQyxXQUFVOztzRkFDekIscUJBQUMyRTs0RUFDQ0MsS0FBSzdIOzRFQUNMOEgsS0FBSyxDQUFDLFlBQVksRUFBRTdILFFBQVEsR0FBRzs0RUFDL0JnRCxXQUFVOztzRkFJWixxQkFBQ0c7NEVBQ0M3QyxNQUFLOzRFQUNMMkMsU0FBUyxJQUFNaEMsMEJBQTBCakI7NEVBQ3pDZ0QsV0FBVTs0RUFDVjhFLE9BQU07NEVBQ04xRSxjQUFZLENBQUMsYUFBYSxFQUFFcEQsUUFBUSxHQUFHO3NGQUV2QyxjQUFBLHFCQUFDcUQ7Z0ZBQUlMLFdBQVU7Z0ZBQVVNLE1BQUs7Z0ZBQWVFLFNBQVE7MEZBQ25ELGNBQUEscUJBQUNySjtvRkFBSzROLFVBQVM7b0ZBQVVuRSxHQUFFO29GQUFxTW9FLFVBQVM7Ozs7d0VBSzVPaEksVUFBVSxtQkFDVCxxQkFBQytDOzRFQUFJQyxXQUFVO3NGQUFpRjs7d0VBTWpHaEQsVUFBVSxtQkFDVCxxQkFBQ21EOzRFQUNDN0MsTUFBSzs0RUFDTDJDLFNBQVMsSUFBTTNCLHNCQUFzQnRCOzRFQUNyQ2dELFdBQVU7NEVBQ1Y4RSxPQUFNOzRFQUNOMUUsY0FBWSxDQUFDLFVBQVUsRUFBRXBELFFBQVEsRUFBRSxXQUFXLENBQUM7c0ZBQ2hEOzs7bUVBbkNLQTs7Ozs4REE4Q2xCLHFCQUFDaUksb0JBQVc7b0RBQ1ZDLGdCQUFnQm5IO29EQUNoQm9ILFdBQVcsSUFBSXBOLGVBQWVqQyxNQUFNO29EQUNwQ3NQLGVBQWU7d0RBQUM7d0RBQWM7d0RBQWE7cURBQWE7b0RBQ3hEQyxpQkFBaUIsSUFBSSxPQUFPOzs7O3dDQUsvQnBNLDJCQUNDLHNCQUFDOEc7NENBQUlDLFdBQVU7OzhEQUNiLHFCQUFDaUU7b0RBQUdqRSxXQUFVOzhEQUF5Qzs7OERBQ3ZELHFCQUFDK0IseUJBQVU7b0RBQ1RDLE1BQUs7b0RBQ0w5SSxTQUFTQTtvREFDVCtJLFFBQVEsQ0FBQyxFQUFFQyxPQUFPLEVBQUV0RixLQUFLLEVBQUU4RSxRQUFRLEVBQUUsRUFBRSxpQkFDckMsc0JBQUMzQjs0REFBSUMsV0FBVTs7OEVBQ2Isc0JBQUNjO29FQUFNZCxXQUFVOztzRkFDZixxQkFBQ3lCOzRFQUNDbkUsTUFBSzs0RUFDTGdJLFNBQVMxSTs0RUFDVDhFLFVBQVVBOzRFQUNWMUIsV0FBVTs7c0ZBRVosc0JBQUNEOzRFQUFJQyxXQUFVOzs4RkFDYixxQkFBQ2dEO29GQUFLaEQsV0FBVTs4RkFBb0M7OzhGQUdwRCxxQkFBQ21DO29GQUFFbkMsV0FBVTs4RkFDVnBELFFBQ0csc0VBQ0E7Ozs7OztnRUFNVCxDQUFDQSx1QkFDQSxxQkFBQ21EO29FQUFJQyxXQUFVOzhFQUNiLGNBQUEsc0JBQUNEO3dFQUFJQyxXQUFVOzswRkFDYixxQkFBQ0s7Z0ZBQUlMLFdBQVU7Z0ZBQW1ETSxNQUFLO2dGQUFlRSxTQUFROzBGQUM1RixjQUFBLHFCQUFDcko7b0ZBQUs0TixVQUFTO29GQUFVbkUsR0FBRTtvRkFBb05vRSxVQUFTOzs7MEZBRTFQLHNCQUFDakY7Z0ZBQUlDLFdBQVU7O2tHQUNiLHFCQUFDbUM7d0ZBQUVuQyxXQUFVO2tHQUFjOztrR0FDM0IscUJBQUNtQztrR0FBRTs7Ozs7Ozs7Ozs7Ozs7Z0NBYXRCM0YsT0FBTytJLElBQUksQ0FBQ2xNLFFBQVF2RCxNQUFNLEdBQUcsbUJBQzVCLHFCQUFDaUs7b0NBQUlDLFdBQVU7OENBQ2IsY0FBQSxzQkFBQ0Q7d0NBQUlDLFdBQVU7OzBEQUNiLHFCQUFDSztnREFBSUwsV0FBVTtnREFBaURNLE1BQUs7Z0RBQWVFLFNBQVE7MERBQzFGLGNBQUEscUJBQUNySjtvREFBSzROLFVBQVM7b0RBQVVuRSxHQUFFO29EQUFvSG9FLFVBQVM7OzswREFFMUosc0JBQUNqRjtnREFBSUMsV0FBVTs7a0VBQ2IscUJBQUNpRTt3REFBR2pFLFdBQVU7a0VBQXdDOztrRUFDdEQscUJBQUN3Rjt3REFBR3hGLFdBQVU7a0VBQ1h4RCxPQUFPQyxPQUFPLENBQUNwRCxRQUFRcUosR0FBRyxDQUFDLENBQUMsQ0FBQ1IsT0FBT3hHLE1BQU0saUJBQ3pDLHNCQUFDK0o7O29FQUFlO29FQUNYdkQsVUFBVSxZQUFZLGVBQ3RCQSxVQUFVLHVCQUF1Qix3QkFDakNBLE1BQU13RCxNQUFNLENBQUMsR0FBR0MsV0FBVyxLQUFLekQsTUFBTU8sS0FBSyxDQUFDO29FQUFHO29FQUFHL0csTUFBTXhGLE9BQU87OytEQUgzRGdNOzs7Ozs7OzhDQWFyQixzQkFBQ25DO29DQUFJQyxXQUFVOztzREFDYixzQkFBQ0Q7NENBQUlDLFdBQVU7O2dEQUNaLENBQUMxRyxXQUFXa0QsT0FBTytJLElBQUksQ0FBQ2xNLFFBQVF2RCxNQUFNLEtBQUssbUJBQzFDLHFCQUFDa047OERBQUs7O2dEQUVQMUoseUJBQ0Msc0JBQUMwSjtvREFBS2hELFdBQVU7O3NFQUNkLHFCQUFDSzs0REFBSUwsV0FBVTs0REFBZU0sTUFBSzs0REFBZUUsU0FBUTtzRUFDeEQsY0FBQSxxQkFBQ3JKO2dFQUFLNE4sVUFBUztnRUFBVW5FLEdBQUU7Z0VBQXFIb0UsVUFBUzs7O3dEQUNySjs7Ozs7c0RBTVosc0JBQUNqRjs0Q0FBSUMsV0FBVTs7OERBQ2IscUJBQUNHO29EQUNDN0MsTUFBSztvREFDTDJDLFNBQVNUO29EQUNUeUIsVUFBVTVFLFNBQVN1SixTQUFTO29EQUM1QjVGLFdBQVU7OERBQ1g7OzhEQUdELHFCQUFDRztvREFDQzdDLE1BQUs7b0RBQ0wyRCxVQUFVNUUsU0FBU3VKLFNBQVMsSUFBSyxDQUFDbE8saUJBQWlCLENBQUN1QjtvREFDcEQrRyxXQUFVOzhEQUVUM0QsU0FBU3VKLFNBQVMsaUJBQ2pCLHNCQUFDNUM7d0RBQUtoRCxXQUFVOzswRUFDZCxzQkFBQ0s7Z0VBQUlMLFdBQVU7Z0VBQWtDTSxNQUFLO2dFQUFPRSxTQUFROztrRkFDbkUscUJBQUNXO3dFQUFPbkIsV0FBVTt3RUFBYW9CLElBQUc7d0VBQUtDLElBQUc7d0VBQUtDLEdBQUU7d0VBQUtmLFFBQU87d0VBQWVJLGFBQVk7O2tGQUN4RixxQkFBQ3hKO3dFQUFLNkksV0FBVTt3RUFBYU0sTUFBSzt3RUFBZU0sR0FBRTs7Ozs0REFFcEQzSCxZQUFZLGdCQUFnQjs7eURBRy9CQSxZQUFZLGlCQUFpQjs7Ozs7Ozs7d0JBUXRDb0QsU0FBU2tGLE9BQU8sa0JBQ2YscUJBQUN4Qjs0QkFBSUMsV0FBVTtzQ0FDYixjQUFBLHFCQUFDbUM7Z0NBQUVuQyxXQUFVOzBDQUNWM0QsU0FBU1gsS0FBSyxZQUFZakIsUUFBUTRCLFNBQVNYLEtBQUssQ0FBQ3hGLE9BQU8sR0FBRzs7Ozs7Ozs7QUFRNUUifQ==
name: Test Build (Feature Branches)

on:
  push:
    branches: 
      - '**'  # All branches
      - '!main'  # Except main
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check-skip:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check.outputs.skip }}
    steps:
    - name: Check if build should be skipped
      id: check
      run: |
        # Get the commit message
        COMMIT_MSG="${{ github.event.head_commit.message }}"
        
        # Check if commit message starts with skip keywords
        if [[ "$COMMIT_MSG" =~ ^(\[skip ci\]|\[ci skip\]|\[skip build\]|\[build skip\]|\[docs\]|\[readme\]) ]]; then
          echo "skip=true" >> $GITHUB_OUTPUT
          echo "🚫 Build skipped due to commit message: $COMMIT_MSG"
        else
          echo "skip=false" >> $GITHUB_OUTPUT
          echo "✅ Build will proceed for commit: $COMMIT_MSG"
        fi
  test-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Cache Node.js dependencies
    - name: Cache Node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Test Docker build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        # Build only, don't push
        push: false
        cache-from: type=gha
        cache-to: type=gha,mode=max
        target: runner
        build-args: |
          BUILDKIT_INLINE_CACHE=1
          NODE_ENV=production

    - name: Generate test summary
      run: |
        echo "## ✅ Build Test Passed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Docker build completed successfully on branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🧪 What was tested:" >> $GITHUB_STEP_SUMMARY
        echo "- Docker image builds without errors" >> $GITHUB_STEP_SUMMARY
        echo "- All dependencies install correctly" >> $GITHUB_STEP_SUMMARY  
        echo "- Next.js builds successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ➡️ Next steps:" >> $GITHUB_STEP_SUMMARY
        echo "- Create a PR to main branch to build and push the image" >> $GITHUB_STEP_SUMMARY
        echo "- After merge, use \`./deploy.sh\` to deploy" >> $GITHUB_STEP_SUMMARY
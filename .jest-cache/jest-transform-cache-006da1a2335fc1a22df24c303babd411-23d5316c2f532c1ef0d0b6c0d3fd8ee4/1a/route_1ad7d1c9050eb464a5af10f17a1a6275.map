{"version":3,"names":["cov_1877jw5e9x","actualCoverage","s","POST","request","f","user","_server1","validateRequest","b","_server","NextResponse","json","error","status","body","searchParams","_plantschemas","smartSearchSchema","parse","result","_advancedsearch","advancedSearchService","smartSearch","query","id","limit","offset","autoCorrect","includeInactive","success","data","console","_zod","z","ZodError","details","issues"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/app/api/search/smart/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { z } from 'zod';\nimport { validateRequest } from '@/lib/auth/server';\nimport { advancedSearchService } from '@/lib/services/advanced-search';\nimport { smartSearchSchema } from '@/lib/validation/plant-schemas';\n\n// POST /api/search/smart - Smart search with intent detection\nexport async function POST(request: NextRequest) {\n  try {\n    const { user } = await validateRequest();\n    if (!user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = await request.json();\n    const searchParams = smartSearchSchema.parse(body);\n\n    // Perform smart search\n    const result = await advancedSearchService.smartSearch(\n      searchParams.query,\n      user.id,\n      {\n        limit: searchParams.limit,\n        offset: searchParams.offset,\n        autoCorrect: searchParams.autoCorrect,\n        includeInactive: searchParams.includeInactive,\n      }\n    );\n\n    return NextResponse.json({\n      success: true,\n      data: result,\n    });\n\n  } catch (error) {\n    console.error('Smart search error:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid search parameters', details: error.issues },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Smart search failed' },\n      { status: 500 }\n    );\n  }\n}"],"mappings":"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","ignoreList":[]}
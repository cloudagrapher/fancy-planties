243f6228e35b4f8ca2d0d830533fe6f4
"use strict";

/* istanbul ignore next */
function cov_5lzx7djyn() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/app/api/search/suggestions/route.ts";
  var hash = "57b913487d5f8fa72221bdf47da9922dc7b2b7d2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/app/api/search/suggestions/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 13
        },
        end: {
          line: 20,
          column: 27
        }
      },
      "8": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 21,
          column: 55
        }
      },
      "9": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 75
        }
      },
      "10": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 73
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "12": {
        start: {
          line: 26,
          column: 25
        },
        end: {
          line: 26,
          column: 62
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "14": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 32,
          column: 15
        }
      },
      "15": {
        start: {
          line: 34,
          column: 33
        },
        end: {
          line: 34,
          column: 53
        }
      },
      "16": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 35,
          column: 47
        }
      },
      "17": {
        start: {
          line: 36,
          column: 22
        },
        end: {
          line: 36,
          column: 68
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "19": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "20": {
        start: {
          line: 46,
          column: 28
        },
        end: {
          line: 46,
          column: 115
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "22": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 58
        }
      },
      "23": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "24": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "25": {
        start: {
          line: 64,
          column: 25
        },
        end: {
          line: 64,
          column: 62
        }
      },
      "26": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "27": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 70,
          column: 15
        }
      },
      "28": {
        start: {
          line: 72,
          column: 21
        },
        end: {
          line: 72,
          column: 41
        }
      },
      "29": {
        start: {
          line: 73,
          column: 23
        },
        end: {
          line: 76,
          column: 10
        }
      },
      "30": {
        start: {
          line: 78,
          column: 28
        },
        end: {
          line: 78,
          column: 135
        }
      },
      "31": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "32": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 58
        }
      },
      "33": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "34": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "35": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 15
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 18
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 62,
            column: 15
          },
          end: {
            line: 62,
            column: 19
          }
        },
        loc: {
          start: {
            line: 62,
            column: 29
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 62
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 36,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 36,
            column: 56
          }
        }, {
          start: {
            line: 36,
            column: 60
          },
          end: {
            line: 36,
            column: 63
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 18
          }
        }, {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 37,
            column: 38
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "5": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/app/api/search/suggestions/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { z } from 'zod';\nimport { validateRequest } from '@/lib/auth/server';\nimport { advancedSearchService } from '@/lib/services/advanced-search';\nimport { searchSuggestionSchema } from '@/lib/validation/plant-schemas';\n\n// GET /api/search/suggestions - Get search suggestions\nexport async function GET(request: NextRequest) {\n  try {\n    const { user } = await validateRequest();\n    if (!user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { searchParams } = new URL(request.url);\n    const query = searchParams.get('query');\n    const limit = parseInt(searchParams.get('limit') || '5', 10);\n\n    if (!query || query.length < 2) {\n      return NextResponse.json({\n        success: true,\n        data: { suggestions: [] },\n      });\n    }\n\n    // Get search suggestions\n    const suggestions = await advancedSearchService.getSearchSuggestions(\n      query,\n      user.id,\n      limit\n    );\n\n    return NextResponse.json({\n      success: true,\n      data: { suggestions },\n    });\n\n  } catch (error) {\n    console.error('Search suggestions error:', error);\n    \n    return NextResponse.json(\n      { error: 'Failed to get search suggestions' },\n      { status: 500 }\n    );\n  }\n}\n\n// POST /api/search/suggestions - Get search suggestions with options\nexport async function POST(request: NextRequest) {\n  try {\n    const { user } = await validateRequest();\n    if (!user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = await request.json();\n    const params = searchSuggestionSchema.parse({\n      ...body,\n      userId: user.id,\n    });\n\n    // Get search suggestions\n    const suggestions = await advancedSearchService.getSearchSuggestions(\n      params.query,\n      params.userId,\n      params.limit\n    );\n\n    return NextResponse.json({\n      success: true,\n      data: { suggestions },\n    });\n\n  } catch (error) {\n    console.error('Search suggestions error:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid parameters', details: error.issues },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Failed to get search suggestions' },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["GET", "POST", "request", "user", "validateRequest", "NextResponse", "json", "error", "status", "searchParams", "URL", "url", "query", "get", "limit", "parseInt", "length", "success", "data", "suggestions", "advancedSearchService", "getSearchSuggestions", "id", "console", "body", "params", "searchSuggestionSchema", "parse", "userId", "z", "ZodError", "details", "issues"],
      mappings: ";;;;;;;;;;;QAOsBA;eAAAA;;QAyCAC;eAAAA;;;wBAhDoB;qBACxB;yBACc;gCACM;8BACC;AAGhC,eAAeD,IAAIE,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMC,IAAAA,wBAAe;QACtC,IAAI,CAACD,MAAM;YACT,OAAOE,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAAe,GAAG;gBAAEC,QAAQ;YAAI;QACpE;QAEA,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAIR,QAAQS,GAAG;QAC5C,MAAMC,QAAQH,aAAaI,GAAG,CAAC;QAC/B,MAAMC,QAAQC,SAASN,aAAaI,GAAG,CAAC,YAAY,KAAK;QAEzD,IAAI,CAACD,SAASA,MAAMI,MAAM,GAAG,GAAG;YAC9B,OAAOX,oBAAY,CAACC,IAAI,CAAC;gBACvBW,SAAS;gBACTC,MAAM;oBAAEC,aAAa,EAAE;gBAAC;YAC1B;QACF;QAEA,yBAAyB;QACzB,MAAMA,cAAc,MAAMC,qCAAqB,CAACC,oBAAoB,CAClET,OACAT,KAAKmB,EAAE,EACPR;QAGF,OAAOT,oBAAY,CAACC,IAAI,CAAC;YACvBW,SAAS;YACTC,MAAM;gBAAEC;YAAY;QACtB;IAEF,EAAE,OAAOZ,OAAO;QACdgB,QAAQhB,KAAK,CAAC,6BAA6BA;QAE3C,OAAOF,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAAmC,GAC5C;YAAEC,QAAQ;QAAI;IAElB;AACF;AAGO,eAAeP,KAAKC,OAAoB;IAC7C,IAAI;QACF,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMC,IAAAA,wBAAe;QACtC,IAAI,CAACD,MAAM;YACT,OAAOE,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAAe,GAAG;gBAAEC,QAAQ;YAAI;QACpE;QAEA,MAAMgB,OAAO,MAAMtB,QAAQI,IAAI;QAC/B,MAAMmB,SAASC,oCAAsB,CAACC,KAAK,CAAC;YAC1C,GAAGH,IAAI;YACPI,QAAQzB,KAAKmB,EAAE;QACjB;QAEA,yBAAyB;QACzB,MAAMH,cAAc,MAAMC,qCAAqB,CAACC,oBAAoB,CAClEI,OAAOb,KAAK,EACZa,OAAOG,MAAM,EACbH,OAAOX,KAAK;QAGd,OAAOT,oBAAY,CAACC,IAAI,CAAC;YACvBW,SAAS;YACTC,MAAM;gBAAEC;YAAY;QACtB;IAEF,EAAE,OAAOZ,OAAO;QACdgB,QAAQhB,KAAK,CAAC,6BAA6BA;QAE3C,IAAIA,iBAAiBsB,MAAC,CAACC,QAAQ,EAAE;YAC/B,OAAOzB,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;gBAAsBwB,SAASxB,MAAMyB,MAAM;YAAC,GACrD;gBAAExB,QAAQ;YAAI;QAElB;QAEA,OAAOH,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAAmC,GAC5C;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "57b913487d5f8fa72221bdf47da9922dc7b2b7d2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5lzx7djyn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5lzx7djyn();
cov_5lzx7djyn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_5lzx7djyn().f[0]++;
  cov_5lzx7djyn().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_5lzx7djyn().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_5lzx7djyn().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_5lzx7djyn().f[1]++;
    cov_5lzx7djyn().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_5lzx7djyn().f[2]++;
    cov_5lzx7djyn().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_5lzx7djyn().s[6]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_5lzx7djyn().s[7]++, require("zod"));
const _server1 =
/* istanbul ignore next */
(cov_5lzx7djyn().s[8]++, require("../../../../lib/auth/server"));
const _advancedsearch =
/* istanbul ignore next */
(cov_5lzx7djyn().s[9]++, require("../../../../lib/services/advanced-search"));
const _plantschemas =
/* istanbul ignore next */
(cov_5lzx7djyn().s[10]++, require("../../../../lib/validation/plant-schemas"));
async function GET(request) {
  /* istanbul ignore next */
  cov_5lzx7djyn().f[3]++;
  cov_5lzx7djyn().s[11]++;
  try {
    const {
      user
    } =
    /* istanbul ignore next */
    (cov_5lzx7djyn().s[12]++, await (0, _server1.validateRequest)());
    /* istanbul ignore next */
    cov_5lzx7djyn().s[13]++;
    if (!user) {
      /* istanbul ignore next */
      cov_5lzx7djyn().b[0][0]++;
      cov_5lzx7djyn().s[14]++;
      return _server.NextResponse.json({
        error: 'Unauthorized'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_5lzx7djyn().b[0][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_5lzx7djyn().s[15]++, new URL(request.url));
    const query =
    /* istanbul ignore next */
    (cov_5lzx7djyn().s[16]++, searchParams.get('query'));
    const limit =
    /* istanbul ignore next */
    (cov_5lzx7djyn().s[17]++, parseInt(
    /* istanbul ignore next */
    (cov_5lzx7djyn().b[1][0]++, searchParams.get('limit')) ||
    /* istanbul ignore next */
    (cov_5lzx7djyn().b[1][1]++, '5'), 10));
    /* istanbul ignore next */
    cov_5lzx7djyn().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_5lzx7djyn().b[3][0]++, !query) ||
    /* istanbul ignore next */
    (cov_5lzx7djyn().b[3][1]++, query.length < 2)) {
      /* istanbul ignore next */
      cov_5lzx7djyn().b[2][0]++;
      cov_5lzx7djyn().s[19]++;
      return _server.NextResponse.json({
        success: true,
        data: {
          suggestions: []
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_5lzx7djyn().b[2][1]++;
    }
    // Get search suggestions
    const suggestions =
    /* istanbul ignore next */
    (cov_5lzx7djyn().s[20]++, await _advancedsearch.advancedSearchService.getSearchSuggestions(query, user.id, limit));
    /* istanbul ignore next */
    cov_5lzx7djyn().s[21]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        suggestions
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_5lzx7djyn().s[22]++;
    console.error('Search suggestions error:', error);
    /* istanbul ignore next */
    cov_5lzx7djyn().s[23]++;
    return _server.NextResponse.json({
      error: 'Failed to get search suggestions'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_5lzx7djyn().f[4]++;
  cov_5lzx7djyn().s[24]++;
  try {
    const {
      user
    } =
    /* istanbul ignore next */
    (cov_5lzx7djyn().s[25]++, await (0, _server1.validateRequest)());
    /* istanbul ignore next */
    cov_5lzx7djyn().s[26]++;
    if (!user) {
      /* istanbul ignore next */
      cov_5lzx7djyn().b[4][0]++;
      cov_5lzx7djyn().s[27]++;
      return _server.NextResponse.json({
        error: 'Unauthorized'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_5lzx7djyn().b[4][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_5lzx7djyn().s[28]++, await request.json());
    const params =
    /* istanbul ignore next */
    (cov_5lzx7djyn().s[29]++, _plantschemas.searchSuggestionSchema.parse({
      ...body,
      userId: user.id
    }));
    // Get search suggestions
    const suggestions =
    /* istanbul ignore next */
    (cov_5lzx7djyn().s[30]++, await _advancedsearch.advancedSearchService.getSearchSuggestions(params.query, params.userId, params.limit));
    /* istanbul ignore next */
    cov_5lzx7djyn().s[31]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        suggestions
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_5lzx7djyn().s[32]++;
    console.error('Search suggestions error:', error);
    /* istanbul ignore next */
    cov_5lzx7djyn().s[33]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_5lzx7djyn().b[5][0]++;
      cov_5lzx7djyn().s[34]++;
      return _server.NextResponse.json({
        error: 'Invalid parameters',
        details: error.issues
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_5lzx7djyn().b[5][1]++;
    }
    cov_5lzx7djyn().s[35]++;
    return _server.NextResponse.json({
      error: 'Failed to get search suggestions'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
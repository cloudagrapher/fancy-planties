{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/shared/ImageUpload.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback, useRef } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\ninterface ImageUploadProps {\n  onImagesChange: (files: File[]) => void;\n  onUpload?: (files: File[]) => Promise<string[]>; // Returns URLs of uploaded images\n  maxImages?: number;\n  maxSizePerImage?: number; // in bytes\n  acceptedTypes?: string[];\n  className?: string;\n  showUploadProgress?: boolean;\n}\n\nexport default function ImageUpload({\n  onImagesChange,\n  onUpload,\n  maxImages = 6,\n  maxSizePerImage = 5 * 1024 * 1024, // 5MB default\n  acceptedTypes = ['image/jpeg', 'image/png', 'image/webp'],\n  className = '',\n  showUploadProgress = false,\n}: ImageUploadProps) {\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const [previews, setPreviews] = useState<string[]>([]);\n  const [errors, setErrors] = useState<string[]>([]);\n  const [uploadProgress, setUploadProgress] = useState<{ [key: string]: number }>({});\n  const [isUploading, setIsUploading] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Manual click handler for better reliability\n  const handleClick = useCallback(() => {\n    if (fileInputRef.current && selectedFiles.length < maxImages) {\n      fileInputRef.current.click();\n    }\n  }, [selectedFiles.length, maxImages]);\n\n  // Handle file selection\n  const handleFiles = useCallback((files: File[]) => {\n    const newErrors: string[] = [];\n    const validFiles: File[] = [];\n    const newPreviews: string[] = [];\n\n    // Check if adding these files would exceed the limit\n    if (selectedFiles.length + files.length > maxImages) {\n      newErrors.push(`Maximum ${maxImages} images allowed`);\n      return;\n    }\n\n    files.forEach((file) => {\n      // Check file type\n      if (!acceptedTypes.includes(file.type)) {\n        newErrors.push(`${file.name}: Invalid file type. Please use JPEG, PNG, or WebP.`);\n        return;\n      }\n\n      // Check file size\n      if (file.size > maxSizePerImage) {\n        const maxSizeMB = Math.round(maxSizePerImage / (1024 * 1024));\n        newErrors.push(`${file.name}: File too large. Maximum size is ${maxSizeMB}MB.`);\n        return;\n      }\n\n      // Check for duplicates\n      if (selectedFiles.some(existing => existing.name === file.name && existing.size === file.size)) {\n        newErrors.push(`${file.name}: File already selected.`);\n        return;\n      }\n\n      validFiles.push(file);\n      \n      // Create preview\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        if (e.target?.result) {\n          newPreviews.push(e.target.result as string);\n          \n          // Update previews when all files are processed\n          if (newPreviews.length === validFiles.length) {\n            setPreviews(prev => [...prev, ...newPreviews]);\n          }\n        }\n      };\n      reader.onerror = () => {\n        newErrors.push(`${file.name}: Failed to read file.`);\n        setErrors(prev => [...prev, ...newErrors]);\n      };\n      reader.readAsDataURL(file);\n    });\n\n    if (validFiles.length > 0) {\n      const updatedFiles = [...selectedFiles, ...validFiles];\n      setSelectedFiles(updatedFiles);\n      onImagesChange(updatedFiles);\n    }\n\n    setErrors(newErrors);\n  }, [selectedFiles, maxImages, maxSizePerImage, acceptedTypes, onImagesChange]);\n\n  // Dropzone configuration\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleFiles,\n    accept: acceptedTypes.reduce((acc, type) => ({ ...acc, [type]: [] }), {}),\n    maxFiles: maxImages - selectedFiles.length,\n    disabled: selectedFiles.length >= maxImages,\n  });\n\n  // Remove file\n  const removeFile = (index: number) => {\n    const newFiles = selectedFiles.filter((_, i) => i !== index);\n    const newPreviews = previews.filter((_, i) => i !== index);\n    \n    setSelectedFiles(newFiles);\n    setPreviews(newPreviews);\n    onImagesChange(newFiles);\n    setErrors([]);\n  };\n\n  // Upload files\n  const uploadFiles = async () => {\n    if (!onUpload || selectedFiles.length === 0) return;\n\n    setIsUploading(true);\n    setErrors([]);\n\n    try {\n      // Simulate upload progress for each file\n      selectedFiles.forEach((file, index) => {\n        const fileKey = `${file.name}-${index}`;\n        setUploadProgress(prev => ({ ...prev, [fileKey]: 0 }));\n        \n        // Simulate progress\n        const interval = setInterval(() => {\n          setUploadProgress(prev => {\n            const currentProgress = prev[fileKey] || 0;\n            if (currentProgress >= 100) {\n              clearInterval(interval);\n              return prev;\n            }\n            return { ...prev, [fileKey]: Math.min(currentProgress + 10, 100) };\n          });\n        }, 100);\n      });\n\n      const uploadedUrls = await onUpload(selectedFiles);\n      \n      // Clear progress after successful upload\n      setUploadProgress({});\n      \n      // Optionally clear files after upload\n      // setSelectedFiles([]);\n      // setPreviews([]);\n      \n    } catch (error) {\n      setErrors(['Upload failed. Please try again.']);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Clear all files\n  const clearAll = () => {\n    setSelectedFiles([]);\n    setPreviews([]);\n    onImagesChange([]);\n    setErrors([]);\n    setUploadProgress({});\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  // Format file size\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {/* Upload Area */}\n      {selectedFiles.length < maxImages && (\n        <div\n          {...getRootProps()}\n          className={`border-2 border-dashed rounded-lg p-6 text-center cursor-pointer transition-colors ${\n            isDragActive\n              ? 'border-primary-400 bg-primary-50'\n              : 'border-gray-300 hover:border-gray-400 hover:bg-gray-50'\n          }`}\n        >\n          <input {...getInputProps()} ref={fileInputRef} />\n          \n          <div className=\"space-y-2\">\n            <div className=\"text-4xl\">ðŸ“·</div>\n            \n            {isDragActive ? (\n              <p className=\"text-primary-600 font-medium\">Drop images here...</p>\n            ) : (\n              <>\n                <p className=\"text-gray-600\">\n                  <button\n                    type=\"button\"\n                    onClick={handleClick}\n                    className=\"font-medium text-primary-600 hover:text-primary-700 underline focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 rounded\"\n                    aria-label=\"Click to select images for upload\"\n                    title=\"Select images to upload\"\n                  >\n                    Click to upload\n                  </button>{' '}\n                  or drag and drop\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  JPEG, PNG, or WebP up to {Math.round(maxSizePerImage / (1024 * 1024))}MB each\n                </p>\n                <p className=\"text-xs text-gray-400\">\n                  {selectedFiles.length} of {maxImages} images selected\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Error Messages */}\n      {errors.length > 0 && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n          <div className=\"flex items-start\">\n            <svg className=\"w-5 h-5 text-red-400 mt-0.5 mr-2 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n            </svg>\n            <div className=\"flex-1\">\n              <h4 className=\"text-sm font-medium text-red-800 mb-1\">Upload Errors</h4>\n              <ul className=\"text-sm text-red-700 space-y-1\">\n                {errors.map((error, index) => (\n                  <li key={index}>â€¢ {error}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Selected Images Preview */}\n      {selectedFiles.length > 0 && (\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center justify-between\">\n            <h4 className=\"text-sm font-medium text-gray-700\">\n              Selected Images ({selectedFiles.length})\n            </h4>\n            <div className=\"flex items-center space-x-2\">\n              {showUploadProgress && onUpload && selectedFiles.length > 0 && (\n                <button\n                  type=\"button\"\n                  onClick={uploadFiles}\n                  disabled={isUploading}\n                  className={`px-3 py-1 text-sm rounded ${\n                    isUploading\n                      ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                      : 'bg-primary-600 text-white hover:bg-primary-700'\n                  }`}\n                  aria-label={isUploading ? 'Uploading images' : 'Upload selected images'}\n                  title={isUploading ? 'Uploading images...' : 'Upload selected images'}\n                >\n                  {isUploading ? (\n                    <>\n                      <span role=\"status\" aria-live=\"polite\">Uploading...</span>\n                    </>\n                  ) : (\n                    'Upload'\n                  )}\n                </button>\n              )}\n              <button\n                type=\"button\"\n                onClick={clearAll}\n                className=\"text-sm text-red-600 hover:text-red-700\"\n                disabled={isUploading}\n                aria-label=\"Clear all selected images\"\n                title=\"Remove all selected images\"\n              >\n                Clear All\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-3\">\n            {selectedFiles.map((file, index) => (\n              <div key={index} className=\"relative group\">\n                {/* Image Preview */}\n                <div className=\"aspect-square rounded-lg overflow-hidden bg-gray-100\">\n                  {previews[index] ? (\n                    <img\n                      src={previews[index]}\n                      alt={`Preview ${index + 1}`}\n                      className=\"w-full h-full object-cover\"\n                    />\n                  ) : (\n                    <div className=\"w-full h-full flex items-center justify-center\">\n                      <div \n                        className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary-500\"\n                        role=\"status\"\n                        aria-label=\"Loading image preview\"\n                      />\n                      <span className=\"sr-only\">Loading image preview...</span>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Remove Button */}\n                <button\n                  type=\"button\"\n                  onClick={() => removeFile(index)}\n                  className=\"absolute top-1 right-1 p-1 bg-red-500 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\n                  title=\"Remove image\"\n                  aria-label={`Remove image ${index + 1}`}\n                >\n                  <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n                </button>\n                \n                {/* Primary Badge */}\n                {index === 0 && (\n                  <div className=\"absolute bottom-1 left-1 bg-primary-500 text-white text-xs px-1 py-0.5 rounded\">\n                    Primary\n                  </div>\n                )}\n                \n                {/* Set as Primary Button (for non-primary images) */}\n                {index !== 0 && (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      // Move this image to the front\n                      const newFiles = [...selectedFiles];\n                      const newPreviews = [...previews];\n                      \n                      const selectedFile = newFiles[index];\n                      const selectedPreview = newPreviews[index];\n                      \n                      // Remove from current position\n                      newFiles.splice(index, 1);\n                      newPreviews.splice(index, 1);\n                      \n                      // Add to front\n                      newFiles.unshift(selectedFile);\n                      newPreviews.unshift(selectedPreview);\n                      \n                      setSelectedFiles(newFiles);\n                      setPreviews(newPreviews);\n                      onImagesChange(newFiles);\n                    }}\n                    className=\"absolute bottom-1 left-1 bg-black bg-opacity-50 text-white text-xs px-1 py-0.5 rounded opacity-0 group-hover:opacity-100 transition-opacity\"\n                    title=\"Set as primary image\"\n                    aria-label={`Set image ${index + 1} as primary`}\n                  >\n                    Set Primary\n                  </button>\n                )}\n                \n                {/* Upload Progress */}\n                {showUploadProgress && uploadProgress[`${file.name}-${index}`] !== undefined && (\n                  <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n                    <div className=\"text-white text-center\">\n                      <div className=\"w-8 h-8 border-2 border-white border-t-transparent rounded-full animate-spin mx-auto mb-1\" />\n                      <div className=\"text-xs\">{uploadProgress[`${file.name}-${index}`]}%</div>\n                    </div>\n                  </div>\n                )}\n\n                {/* File Info */}\n                <div className=\"mt-1 text-xs text-gray-500 truncate\">\n                  <div className=\"truncate\" title={file.name}>{file.name}</div>\n                  <div>{formatFileSize(file.size)}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {/* Upload Tips */}\n          <div className=\"text-xs text-gray-500 bg-gray-50 rounded p-2\">\n            <p><strong>Tip:</strong> The first image will be used as the primary photo for your plant card.</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":["ImageUpload","onImagesChange","onUpload","maxImages","maxSizePerImage","acceptedTypes","className","showUploadProgress","selectedFiles","setSelectedFiles","useState","previews","setPreviews","errors","setErrors","uploadProgress","setUploadProgress","isUploading","setIsUploading","fileInputRef","useRef","handleClick","useCallback","current","length","click","handleFiles","files","newErrors","validFiles","newPreviews","push","forEach","file","includes","type","name","size","maxSizeMB","Math","round","some","existing","reader","FileReader","onload","e","target","result","prev","onerror","readAsDataURL","updatedFiles","getRootProps","getInputProps","isDragActive","useDropzone","onDrop","accept","reduce","acc","maxFiles","disabled","removeFile","index","newFiles","filter","_","i","uploadFiles","fileKey","interval","setInterval","currentProgress","clearInterval","min","uploadedUrls","error","clearAll","value","formatFileSize","bytes","k","sizes","floor","log","parseFloat","pow","toFixed","div","input","ref","p","button","onClick","aria-label","title","svg","fill","viewBox","path","fillRule","d","clipRule","h4","ul","map","li","span","role","aria-live","img","src","alt","selectedFile","selectedPreview","splice","unshift","undefined","strong"],"mappings":"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"}
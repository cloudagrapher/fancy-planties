{"version":3,"names":["cov_gu8803ng3","actualCoverage","s","DashboardStatistics","userId","className","b","f","data","guideStats","isLoading","guideLoading","error","guideError","_reactquery","useQuery","queryKey","queryFn","response","fetch","ok","Error","json","staleTime","retry","propagationStats","propagationLoading","propagationError","careStats","careLoading","careError","statistics","hasError","formatNumber","value","undefined","isNaN","toString","formatPercentage","Math","round","getConsistencyLabel","score","getMostCommonLevel","byLevel","levels","Object","entries","length","maxEntry","reduce","max","current","charAt","toUpperCase","slice","getStreakMessage","days","_jsxruntime","jsxs","jsx","message","onClick","window","location","reload","total","public","private","totalPropagations","successRate","averageDaysToEstablished","byStatus","started","rooting","planted","totalActivePlants","careStreakDays","totalCareEventsThisWeek","averageCareConsistency"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/shared/DashboardStatistics.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useQuery } from '@tanstack/react-query';\n\ninterface GuideStats {\n  total: number;\n  public: number;\n  private: number;\n  byLevel: {\n    family: number;\n    genus: number;\n    species: number;\n    cultivar: number;\n  };\n}\n\ninterface PropagationStats {\n  totalPropagations: number;\n  byStatus: Record<string, number>;\n  successRate: number;\n  averageDaysToEstablished: number;\n}\n\ninterface CareStats {\n  totalActivePlants: number;\n  careStreakDays: number;\n  totalCareEventsThisWeek: number;\n  averageCareConsistency: number;\n}\n\ninterface DashboardStatisticsProps {\n  userId: number;\n  className?: string;\n}\n\nexport default function DashboardStatistics({ userId, className = '' }: DashboardStatisticsProps) {\n  // Fetch guide statistics\n  const { data: guideStats, isLoading: guideLoading, error: guideError } = useQuery({\n    queryKey: ['guide-stats', userId],\n    queryFn: async (): Promise<GuideStats> => {\n      const response = await fetch('/api/care-guides/stats');\n      if (!response.ok) {\n        throw new Error('Failed to fetch guide statistics');\n      }\n      return response.json();\n    },\n    staleTime: 1000 * 60 * 5, // 5 minutes\n    retry: 2,\n  });\n\n  // Fetch propagation statistics\n  const { data: propagationStats, isLoading: propagationLoading, error: propagationError } = useQuery({\n    queryKey: ['propagation-stats', userId],\n    queryFn: async (): Promise<PropagationStats> => {\n      const response = await fetch('/api/propagations/stats');\n      if (!response.ok) {\n        throw new Error('Failed to fetch propagation statistics');\n      }\n      return response.json();\n    },\n    staleTime: 1000 * 60 * 5, // 5 minutes\n    retry: 2,\n  });\n\n  // Fetch care dashboard statistics\n  const { data: careStats, isLoading: careLoading, error: careError } = useQuery({\n    queryKey: ['care-dashboard-stats', userId],\n    queryFn: async (): Promise<CareStats> => {\n      const response = await fetch('/api/care/dashboard');\n      if (!response.ok) {\n        throw new Error('Failed to fetch care statistics');\n      }\n      const data = await response.json();\n      return data.statistics;\n    },\n    staleTime: 1000 * 60 * 2, // 2 minutes (more frequent for care data)\n    retry: 2,\n  });\n\n  const isLoading = guideLoading || propagationLoading || careLoading;\n  const hasError = guideError || propagationError || careError;\n\n  // Format statistics with proper fallbacks\n  const formatNumber = (value: number | undefined | null): string => {\n    if (value === undefined || value === null || isNaN(value)) return '0';\n    return value.toString();\n  };\n\n  const formatPercentage = (value: number | undefined | null): string => {\n    if (value === undefined || value === null || isNaN(value)) return '0%';\n    return `${Math.round(value)}%`;\n  };\n\n  const getConsistencyLabel = (score: number | undefined | null): string => {\n    if (score === undefined || score === null || isNaN(score)) return 'Unknown';\n    if (score >= 80) return 'Excellent';\n    if (score >= 60) return 'Good';\n    if (score >= 40) return 'Fair';\n    return 'Needs Improvement';\n  };\n\n  const getMostCommonLevel = (byLevel: GuideStats['byLevel'] | undefined): string => {\n    if (!byLevel) return 'None';\n    \n    const levels = Object.entries(byLevel);\n    if (levels.length === 0) return 'None';\n    \n    const maxEntry = levels.reduce((max, current) => \n      current[1] > max[1] ? current : max\n    );\n    \n    if (maxEntry[1] === 0) return 'None';\n    \n    return maxEntry[0].charAt(0).toUpperCase() + maxEntry[0].slice(1);\n  };\n\n  const getStreakMessage = (days: number | undefined | null): string => {\n    if (!days || days === 0) return 'Start your streak!';\n    if (days === 1) return '1 day streak';\n    return `${days} day streak`;\n  };\n\n  if (hasError) {\n    return (\n      <div className={`rounded-2xl shadow-sm border border-red-200/70 bg-red-50/70 backdrop-blur p-6 text-center ${className}`}>\n        <div className=\"text-red-600 mb-4\">‚ö†Ô∏è</div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Error Loading Statistics</h3>\n        <p className=\"text-gray-600 mb-4\">\n          {guideError?.message || propagationError?.message || careError?.message || 'Failed to load dashboard statistics'}\n        </p>\n        <button\n          onClick={() => window.location.reload()}\n          className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors shadow-sm\"\n        >\n          Refresh Page\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Guide Statistics */}\n      <div>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\n          <span>üìñ</span>\n          Care Guide Statistics\n        </h3>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-emerald-50/70 backdrop-blur p-4\">\n            <div className=\"text-2xl font-bold text-emerald-600\">\n              {isLoading ? '--' : formatNumber(guideStats?.total)}\n            </div>\n            <div className=\"text-sm text-emerald-700\">Total Guides</div>\n          </div>\n          <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-blue-50/70 backdrop-blur p-4\">\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {isLoading ? '--' : formatNumber(guideStats?.public)}\n            </div>\n            <div className=\"text-sm text-blue-700\">Public</div>\n          </div>\n          <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-amber-50/70 backdrop-blur p-4\">\n            <div className=\"text-2xl font-bold text-amber-600\">\n              {isLoading ? '--' : formatNumber(guideStats?.private)}\n            </div>\n            <div className=\"text-sm text-amber-700\">Private</div>\n          </div>\n          <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-slate-50/70 backdrop-blur p-4\">\n            <div className=\"text-2xl font-bold text-slate-600\">\n              {isLoading ? '--' : getMostCommonLevel(guideStats?.byLevel)}\n            </div>\n            <div className=\"text-sm text-slate-700\">Most Common Level</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Propagation Statistics */}\n      <div>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\n          <span>üåø</span>\n          Propagation Statistics\n        </h3>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-emerald-50/70 backdrop-blur p-4\">\n            <div className=\"text-2xl font-bold text-emerald-600\">\n              {isLoading ? '--' : formatNumber(propagationStats?.totalPropagations)}\n            </div>\n            <div className=\"text-sm text-emerald-700\">Total Propagations</div>\n          </div>\n          <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-green-50/70 backdrop-blur p-4\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {isLoading ? '--' : formatPercentage(propagationStats?.successRate)}\n            </div>\n            <div className=\"text-sm text-green-700\">Success Rate</div>\n          </div>\n          <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-sky-50/70 backdrop-blur p-4\">\n            <div className=\"text-2xl font-bold text-sky-600\">\n              {isLoading ? '--' : formatNumber(propagationStats?.averageDaysToEstablished)}\n            </div>\n            <div className=\"text-sm text-sky-700\">Avg Days to Establish</div>\n          </div>\n          <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-amber-50/70 backdrop-blur p-4\">\n            <div className=\"text-2xl font-bold text-amber-600\">\n              {isLoading ? '--' : formatNumber(\n                (propagationStats?.byStatus?.started || 0) + \n                (propagationStats?.byStatus?.rooting || 0) + \n                (propagationStats?.byStatus?.planted || 0)\n              )}\n            </div>\n            <div className=\"text-sm text-amber-700\">Active Propagations</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Plant Care Statistics */}\n      <div>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\n          <span>üå±</span>\n          Plant Care Statistics\n        </h3>\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-emerald-50/70 backdrop-blur p-4\">\n            <div className=\"text-2xl font-bold text-emerald-600\">\n              {isLoading ? '--' : formatNumber(careStats?.totalActivePlants)}\n            </div>\n            <div className=\"text-sm text-emerald-700\">Plants</div>\n          </div>\n          <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-amber-50/70 backdrop-blur p-4\">\n            <div className=\"text-2xl font-bold text-amber-600\">\n              {isLoading ? '--' : formatNumber(careStats?.careStreakDays)}\n            </div>\n            <div className=\"text-xs text-amber-600\">\n              {isLoading ? '' : getStreakMessage(careStats?.careStreakDays)}\n            </div>\n            <div className=\"text-sm text-amber-700\">Care Streak</div>\n          </div>\n          <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-sky-50/70 backdrop-blur p-4\">\n            <div className=\"text-2xl font-bold text-sky-600\">\n              {isLoading ? '--' : formatNumber(careStats?.totalCareEventsThisWeek)}\n            </div>\n            <div className=\"text-sm text-sky-700\">This Week</div>\n            <div className=\"text-xs text-sky-600\">care events</div>\n          </div>\n          <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-green-50/70 backdrop-blur p-4\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {isLoading ? '--' : formatPercentage(careStats?.averageCareConsistency)}\n            </div>\n            <div className=\"text-sm text-green-700\">Consistency</div>\n            <div className=\"text-xs text-green-600\">\n              {isLoading ? '' : getConsistencyLabel(careStats?.averageCareConsistency)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Loading State */}\n      {isLoading && (\n        <div className=\"text-center py-4\">\n          <div className=\"inline-flex items-center gap-2 text-gray-600\">\n            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-gray-600\"></div>\n            Loading statistics...\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"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","ignoreList":[]}
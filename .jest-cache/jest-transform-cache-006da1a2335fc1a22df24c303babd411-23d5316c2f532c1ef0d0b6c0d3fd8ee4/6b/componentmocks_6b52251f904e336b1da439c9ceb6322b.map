{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/test-utils/mocks/component-mocks.js"],"sourcesContent":["// Component mocking utilities\n\nimport React from 'react';\n\n/**\n * Create a simple mock component that renders children and props\n * @param {string} displayName - Component display name for debugging\n * @param {Object} defaultProps - Default props to merge\n * @returns {Function} Mock component function\n */\nexport const createMockComponent = (displayName, defaultProps = {}) => {\n  const MockComponent = ({ children, ...props }) => {\n    const mergedProps = { ...defaultProps, ...props };\n    \n    return React.createElement(\n      'div',\n      {\n        'data-testid': `mock-${displayName.toLowerCase()}`,\n        'data-component': displayName,\n        ...mergedProps,\n      },\n      children\n    );\n  };\n  \n  MockComponent.displayName = `Mock${displayName}`;\n  return MockComponent;\n};\n\n/**\n * Create a mock component that tracks its calls and props\n * @param {string} displayName - Component display name\n * @param {Object} options - Mock options\n * @returns {Function} Mock component with call tracking\n */\nexport const createTrackingMockComponent = (displayName, options = {}) => {\n  const { defaultProps = {}, renderContent = null } = options;\n  \n  const calls = [];\n  \n  const MockComponent = ({ children, ...props }) => {\n    const mergedProps = { ...defaultProps, ...props };\n    \n    // Track this call\n    calls.push({\n      props: mergedProps,\n      children,\n      timestamp: new Date(),\n    });\n    \n    // Custom render content or default\n    const content = renderContent \n      ? renderContent(mergedProps, children)\n      : children;\n    \n    return React.createElement(\n      'div',\n      {\n        'data-testid': `mock-${displayName.toLowerCase()}`,\n        'data-component': displayName,\n        'data-call-count': calls.length,\n      },\n      content\n    );\n  };\n  \n  MockComponent.displayName = `Mock${displayName}`;\n  MockComponent.getCalls = () => calls;\n  MockComponent.getLastCall = () => calls[calls.length - 1];\n  MockComponent.getCallCount = () => calls.length;\n  MockComponent.clearCalls = () => calls.length = 0;\n  \n  return MockComponent;\n};\n\n/**\n * Mock a component with specific behavior\n * @param {string} modulePath - Path to the module containing the component\n * @param {string} componentName - Name of the component to mock\n * @param {Function|Object} mockImplementation - Mock implementation or options\n */\nexport const mockComponent = (modulePath, componentName, mockImplementation = null) => {\n  let mockImpl;\n  \n  if (typeof mockImplementation === 'function') {\n    mockImpl = mockImplementation;\n  } else if (mockImplementation && typeof mockImplementation === 'object') {\n    mockImpl = createMockComponent(componentName, mockImplementation);\n  } else {\n    mockImpl = createMockComponent(componentName);\n  }\n  \n  jest.doMock(modulePath, () => ({\n    ...jest.requireActual(modulePath),\n    [componentName]: mockImpl,\n    default: mockImpl,\n  }));\n  \n  return mockImpl;\n};\n\n/**\n * Mock multiple components from a module\n * @param {string} modulePath - Path to the module\n * @param {Object} componentMocks - Object mapping component names to mock implementations\n */\nexport const mockComponents = (modulePath, componentMocks) => {\n  const mocks = {};\n  \n  for (const [componentName, mockImpl] of Object.entries(componentMocks)) {\n    if (typeof mockImpl === 'function') {\n      mocks[componentName] = mockImpl;\n    } else {\n      mocks[componentName] = createMockComponent(componentName, mockImpl);\n    }\n  }\n  \n  jest.doMock(modulePath, () => ({\n    ...jest.requireActual(modulePath),\n    ...mocks,\n  }));\n  \n  return mocks;\n};\n\n/**\n * Common component mocks for the plant tracker app\n */\nexport const commonComponentMocks = {\n  /**\n   * Mock LoadingSpinner component\n   */\n  LoadingSpinner: createMockComponent('LoadingSpinner', {\n    'aria-label': 'Loading',\n    role: 'progressbar',\n  }),\n\n  /**\n   * Mock Modal component\n   */\n  Modal: createTrackingMockComponent('Modal', {\n    defaultProps: { isOpen: false },\n    renderContent: (props, children) => {\n      if (!props.isOpen) return null;\n      return React.createElement(\n        'div',\n        {\n          role: 'dialog',\n          'aria-modal': 'true',\n          'data-modal-title': props.title,\n        },\n        children\n      );\n    },\n  }),\n\n  /**\n   * Mock ErrorDisplay component\n   */\n  ErrorDisplay: createMockComponent('ErrorDisplay', {\n    role: 'alert',\n    'aria-live': 'polite',\n  }),\n\n  /**\n   * Mock AsyncButton component\n   */\n  AsyncButton: createTrackingMockComponent('AsyncButton', {\n    renderContent: (props, children) => {\n      return React.createElement(\n        'button',\n        {\n          type: props.type || 'button',\n          disabled: props.loading || props.disabled,\n          'data-loading': props.loading,\n          onClick: props.onClick,\n        },\n        props.loading ? 'Loading...' : children\n      );\n    },\n  }),\n\n  /**\n   * Mock ImageUpload component\n   */\n  ImageUpload: createTrackingMockComponent('ImageUpload', {\n    renderContent: (props) => {\n      return React.createElement(\n        'div',\n        {\n          'data-testid': 'image-upload',\n          'data-accept': props.accept,\n          'data-multiple': props.multiple,\n        },\n        React.createElement(\n          'input',\n          {\n            type: 'file',\n            accept: props.accept,\n            multiple: props.multiple,\n            onChange: props.onUpload,\n          }\n        ),\n        'Upload Images'\n      );\n    },\n  }),\n\n  /**\n   * Mock OptimizedImage component\n   */\n  OptimizedImage: createMockComponent('OptimizedImage', {\n    renderContent: (props) => {\n      return React.createElement('img', {\n        src: props.src,\n        alt: props.alt,\n        width: props.width,\n        height: props.height,\n        'data-optimized': true,\n      });\n    },\n  }),\n};\n\n/**\n * Plant-specific component mocks\n */\nexport const plantComponentMocks = {\n  /**\n   * Mock PlantCard component\n   */\n  PlantCard: createTrackingMockComponent('PlantCard', {\n    renderContent: (props) => {\n      return React.createElement(\n        'div',\n        {\n          'data-testid': 'plant-card',\n          'data-plant-id': props.plant?.id,\n          onClick: props.onClick,\n        },\n        React.createElement('h3', null, props.plant?.nickname || props.plant?.commonName),\n        React.createElement('p', null, props.plant?.location),\n        props.showCareStatus && React.createElement('div', { 'data-testid': 'care-status' }, 'Care Status')\n      );\n    },\n  }),\n\n  /**\n   * Mock PlantInstanceForm component\n   */\n  PlantInstanceForm: createTrackingMockComponent('PlantInstanceForm', {\n    renderContent: (props) => {\n      return React.createElement(\n        'form',\n        {\n          'data-testid': 'plant-instance-form',\n          onSubmit: props.onSubmit,\n        },\n        React.createElement('input', {\n          name: 'nickname',\n          placeholder: 'Plant nickname',\n          defaultValue: props.initialData?.nickname,\n        }),\n        React.createElement('input', {\n          name: 'location',\n          placeholder: 'Location',\n          defaultValue: props.initialData?.location,\n        }),\n        React.createElement('button', { type: 'submit' }, 'Save Plant')\n      );\n    },\n  }),\n\n  /**\n   * Mock PlantSelector component\n   */\n  PlantSelector: createTrackingMockComponent('PlantSelector', {\n    renderContent: (props) => {\n      return React.createElement(\n        'div',\n        {\n          'data-testid': 'plant-selector',\n          'data-selected': props.selectedPlant?.id,\n        },\n        React.createElement('input', {\n          type: 'text',\n          placeholder: 'Search plants...',\n          onChange: props.onSearch,\n        }),\n        React.createElement('button', {\n          onClick: () => props.onSelect?.(props.selectedPlant),\n        }, 'Select Plant')\n      );\n    },\n  }),\n\n  /**\n   * Mock PlantsGrid component\n   */\n  PlantsGrid: createTrackingMockComponent('PlantsGrid', {\n    renderContent: (props) => {\n      return React.createElement(\n        'div',\n        {\n          'data-testid': 'plants-grid',\n          'data-plant-count': props.plants?.length || 0,\n        },\n        props.plants?.map((plant, index) => \n          React.createElement(\n            'div',\n            {\n              key: plant.id || index,\n              'data-testid': 'grid-plant-item',\n              'data-plant-id': plant.id,\n            },\n            plant.nickname || plant.commonName\n          )\n        )\n      );\n    },\n  }),\n};\n\n/**\n * Care-related component mocks\n */\nexport const careComponentMocks = {\n  /**\n   * Mock CareTaskCard component\n   */\n  CareTaskCard: createTrackingMockComponent('CareTaskCard', {\n    renderContent: (props) => {\n      return React.createElement(\n        'div',\n        {\n          'data-testid': 'care-task-card',\n          'data-task-type': props.task?.type,\n          'data-overdue': props.task?.isOverdue,\n        },\n        React.createElement('h4', null, props.task?.title),\n        React.createElement('p', null, props.task?.description),\n        React.createElement('button', {\n          onClick: props.onComplete,\n        }, 'Mark Complete')\n      );\n    },\n  }),\n\n  /**\n   * Mock QuickCareForm component\n   */\n  QuickCareForm: createTrackingMockComponent('QuickCareForm', {\n    renderContent: (props) => {\n      return React.createElement(\n        'form',\n        {\n          'data-testid': 'quick-care-form',\n          onSubmit: props.onSubmit,\n        },\n        React.createElement('select', {\n          name: 'careType',\n          defaultValue: props.defaultCareType,\n        }),\n        React.createElement('textarea', {\n          name: 'notes',\n          placeholder: 'Care notes...',\n        }),\n        React.createElement('button', { type: 'submit' }, 'Log Care')\n      );\n    },\n  }),\n\n  /**\n   * Mock CareHistoryTimeline component\n   */\n  CareHistoryTimeline: createTrackingMockComponent('CareHistoryTimeline', {\n    renderContent: (props) => {\n      return React.createElement(\n        'div',\n        {\n          'data-testid': 'care-history-timeline',\n          'data-record-count': props.careRecords?.length || 0,\n        },\n        props.careRecords?.map((record, index) => \n          React.createElement(\n            'div',\n            {\n              key: record.id || index,\n              'data-testid': 'timeline-item',\n              'data-care-type': record.careType,\n            },\n            `${record.careType} - ${record.careDate}`\n          )\n        )\n      );\n    },\n  }),\n};\n\n/**\n * Navigation component mocks\n */\nexport const navigationComponentMocks = {\n  /**\n   * Mock BottomNavigation component\n   */\n  BottomNavigation: createTrackingMockComponent('BottomNavigation', {\n    renderContent: (props) => {\n      return React.createElement(\n        'nav',\n        {\n          'data-testid': 'bottom-navigation',\n          'data-active-route': props.activeRoute,\n        },\n        React.createElement('a', { href: '/dashboard' }, 'Dashboard'),\n        React.createElement('a', { href: '/plants' }, 'Plants'),\n        React.createElement('a', { href: '/care' }, 'Care'),\n        React.createElement('a', { href: '/profile' }, 'Profile')\n      );\n    },\n  }),\n};\n\n/**\n * Apply all common component mocks\n */\nexport const applyCommonMocks = () => {\n  // Mock shared components\n  mockComponents('@/components/shared', commonComponentMocks);\n  \n  // Mock plant components\n  mockComponents('@/components/plants', plantComponentMocks);\n  \n  // Mock care components\n  mockComponents('@/components/care', careComponentMocks);\n  \n  // Mock navigation components\n  mockComponents('@/components/navigation', navigationComponentMocks);\n};\n\n/**\n * Selective component mocking for specific test needs\n */\nexport const selectiveMocks = {\n  /**\n   * Mock only loading and error components\n   */\n  loadingAndError: () => {\n    mockComponent('@/components/shared/LoadingSpinner', 'LoadingSpinner', commonComponentMocks.LoadingSpinner);\n    mockComponent('@/components/shared/ErrorDisplay', 'ErrorDisplay', commonComponentMocks.ErrorDisplay);\n  },\n\n  /**\n   * Mock only form components\n   */\n  forms: () => {\n    mockComponent('@/components/plants/PlantInstanceForm', 'PlantInstanceForm', plantComponentMocks.PlantInstanceForm);\n    mockComponent('@/components/care/QuickCareForm', 'QuickCareForm', careComponentMocks.QuickCareForm);\n    mockComponent('@/components/shared/AsyncButton', 'AsyncButton', commonComponentMocks.AsyncButton);\n  },\n\n  /**\n   * Mock only display components (no interactive elements)\n   */\n  display: () => {\n    mockComponent('@/components/plants/PlantCard', 'PlantCard', plantComponentMocks.PlantCard);\n    mockComponent('@/components/plants/PlantsGrid', 'PlantsGrid', plantComponentMocks.PlantsGrid);\n    mockComponent('@/components/care/CareHistoryTimeline', 'CareHistoryTimeline', careComponentMocks.CareHistoryTimeline);\n  },\n\n  /**\n   * Mock only navigation components\n   */\n  navigation: () => {\n    mockComponent('@/components/navigation/BottomNavigation', 'BottomNavigation', navigationComponentMocks.BottomNavigation);\n  },\n};\n\n/**\n * Reset all component mocks\n */\nexport const resetComponentMocks = () => {\n  jest.resetModules();\n  jest.clearAllMocks();\n  \n  // Clear tracking data from mock components\n  Object.values(commonComponentMocks).forEach(mock => {\n    if (mock.clearCalls) mock.clearCalls();\n  });\n  \n  Object.values(plantComponentMocks).forEach(mock => {\n    if (mock.clearCalls) mock.clearCalls();\n  });\n  \n  Object.values(careComponentMocks).forEach(mock => {\n    if (mock.clearCalls) mock.clearCalls();\n  });\n  \n  Object.values(navigationComponentMocks).forEach(mock => {\n    if (mock.clearCalls) mock.clearCalls();\n  });\n};"],"names":["applyCommonMocks","careComponentMocks","commonComponentMocks","createMockComponent","createTrackingMockComponent","mockComponent","mockComponents","navigationComponentMocks","plantComponentMocks","resetComponentMocks","selectiveMocks","displayName","defaultProps","MockComponent","children","props","mergedProps","React","createElement","toLowerCase","options","renderContent","calls","push","timestamp","Date","content","length","getCalls","getLastCall","getCallCount","clearCalls","modulePath","componentName","mockImplementation","mockImpl","jest","doMock","requireActual","default","componentMocks","mocks","Object","entries","LoadingSpinner","role","Modal","isOpen","title","ErrorDisplay","AsyncButton","type","disabled","loading","onClick","ImageUpload","accept","multiple","onChange","onUpload","OptimizedImage","src","alt","width","height","PlantCard","plant","id","nickname","commonName","location","showCareStatus","PlantInstanceForm","onSubmit","name","placeholder","defaultValue","initialData","PlantSelector","selectedPlant","onSearch","onSelect","PlantsGrid","plants","map","index","key","CareTaskCard","task","isOverdue","description","onComplete","QuickCareForm","defaultCareType","CareHistoryTimeline","careRecords","record","careType","careDate","BottomNavigation","activeRoute","href","loadingAndError","forms","display","navigation","resetModules","clearAllMocks","values","forEach","mock"],"mappings":"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"}
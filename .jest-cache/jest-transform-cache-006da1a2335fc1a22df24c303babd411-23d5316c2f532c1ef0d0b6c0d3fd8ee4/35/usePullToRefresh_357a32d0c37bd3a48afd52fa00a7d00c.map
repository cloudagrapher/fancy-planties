{"version":3,"names":["cov_u3lpf0q81","actualCoverage","s","usePullToRefresh","options","f","onRefresh","threshold","b","resistance","enabled","triggerHaptic","_useHapticFeedback","useHapticFeedback","elementRef","_react","useRef","isRefreshing","setIsRefreshing","useState","pullDistance","setPullDistance","isPulling","setIsPulling","touchStartRef","animationFrameRef","handleTouchStart","useCallback","e","element","current","scrollTop","window","pageYOffset","touch","touches","y","clientY","handleTouchMove","deltaY","distance","Math","min","preventDefault","handleTouchEnd","shouldRefresh","error","console","useEffect","addEventListener","passive","removeEventListener","cancelAnimationFrame","animate","prev","newDistance","requestAnimationFrame","getRefreshIndicatorStyle","progress","opacity","scale","rotation","transform","transition"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/hooks/usePullToRefresh.ts"],"sourcesContent":["'use client';\n\nimport { useRef, useEffect, useCallback, useState } from 'react';\nimport { useHapticFeedback } from './useHapticFeedback';\n\nexport interface PullToRefreshOptions {\n  onRefresh: () => Promise<void> | void;\n  threshold?: number; // Distance to trigger refresh\n  resistance?: number; // Resistance factor for pull distance\n  enabled?: boolean;\n}\n\n/**\n * Hook for implementing pull-to-refresh functionality\n */\nexport function usePullToRefresh(options: PullToRefreshOptions) {\n  const {\n    onRefresh,\n    threshold = 80,\n    resistance = 2.5,\n    enabled = true,\n  } = options;\n\n  const { triggerHaptic } = useHapticFeedback();\n  const elementRef = useRef<HTMLDivElement | null>(null);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [pullDistance, setPullDistance] = useState(0);\n  const [isPulling, setIsPulling] = useState(false);\n\n  const touchStartRef = useRef<{ y: number; scrollTop: number } | null>(null);\n  const animationFrameRef = useRef<number | null>(null);\n\n  const handleTouchStart = useCallback((e: TouchEvent) => {\n    if (!enabled || isRefreshing) return;\n\n    const element = elementRef.current;\n    if (!element) return;\n\n    // Only start pull-to-refresh if at the top of the scroll container\n    const scrollTop = element.scrollTop || window.pageYOffset;\n    if (scrollTop > 0) return;\n\n    const touch = e.touches[0];\n    touchStartRef.current = {\n      y: touch.clientY,\n      scrollTop,\n    };\n  }, [enabled, isRefreshing]);\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    if (!enabled || isRefreshing || !touchStartRef.current) return;\n\n    const element = elementRef.current;\n    if (!element) return;\n\n    const touch = e.touches[0];\n    const deltaY = touch.clientY - touchStartRef.current.y;\n\n    // Only proceed if pulling down and at top of scroll\n    if (deltaY <= 0 || element.scrollTop > 0) {\n      if (isPulling) {\n        setIsPulling(false);\n        setPullDistance(0);\n      }\n      return;\n    }\n\n    // Calculate pull distance with resistance\n    const distance = Math.min(deltaY / resistance, threshold * 1.5);\n    \n    if (!isPulling && distance > 10) {\n      setIsPulling(true);\n      triggerHaptic('light');\n    }\n\n    setPullDistance(distance);\n\n    // Trigger haptic feedback when threshold is reached\n    if (distance >= threshold && pullDistance < threshold) {\n      triggerHaptic('medium');\n    }\n\n    // Prevent default scrolling when pulling\n    if (isPulling) {\n      e.preventDefault();\n    }\n  }, [enabled, isRefreshing, isPulling, pullDistance, threshold, resistance, triggerHaptic]);\n\n  const handleTouchEnd = useCallback(async () => {\n    if (!enabled || isRefreshing || !touchStartRef.current) return;\n\n    const shouldRefresh = pullDistance >= threshold;\n\n    if (shouldRefresh) {\n      setIsRefreshing(true);\n      triggerHaptic('heavy');\n      \n      try {\n        await onRefresh();\n      } catch (error) {\n        console.error('Refresh failed:', error);\n      } finally {\n        setIsRefreshing(false);\n      }\n    }\n\n    // Reset state\n    setIsPulling(false);\n    setPullDistance(0);\n    touchStartRef.current = null;\n  }, [enabled, isRefreshing, pullDistance, threshold, onRefresh, triggerHaptic]);\n\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) return;\n\n    element.addEventListener('touchstart', handleTouchStart, { passive: true });\n    element.addEventListener('touchmove', handleTouchMove, { passive: false });\n    element.addEventListener('touchend', handleTouchEnd, { passive: true });\n\n    return () => {\n      element.removeEventListener('touchstart', handleTouchStart);\n      element.removeEventListener('touchmove', handleTouchMove);\n      element.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [handleTouchStart, handleTouchMove, handleTouchEnd]);\n\n  // Animate pull distance changes\n  useEffect(() => {\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n    }\n\n    if (!isPulling && !isRefreshing && pullDistance > 0) {\n      // Animate back to 0\n      const animate = () => {\n        setPullDistance(prev => {\n          const newDistance = prev * 0.9;\n          if (newDistance < 1) {\n            return 0;\n          }\n          animationFrameRef.current = requestAnimationFrame(animate);\n          return newDistance;\n        });\n      };\n      animationFrameRef.current = requestAnimationFrame(animate);\n    }\n\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [isPulling, isRefreshing, pullDistance]);\n\n  const getRefreshIndicatorStyle = () => {\n    const progress = Math.min(pullDistance / threshold, 1);\n    const opacity = Math.min(progress * 2, 1);\n    const scale = 0.5 + (progress * 0.5);\n    const rotation = progress * 180;\n\n    return {\n      opacity,\n      transform: `scale(${scale}) rotate(${rotation}deg)`,\n      transition: isPulling ? 'none' : 'all 0.3s ease-out',\n    };\n  };\n\n  return {\n    elementRef,\n    isRefreshing,\n    isPulling,\n    pullDistance,\n    progress: Math.min(pullDistance / threshold, 1),\n    getRefreshIndicatorStyle,\n  };\n}"],"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","ignoreList":[]}
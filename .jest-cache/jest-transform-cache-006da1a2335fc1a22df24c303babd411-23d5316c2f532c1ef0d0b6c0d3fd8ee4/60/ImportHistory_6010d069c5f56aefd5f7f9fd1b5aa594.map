{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/import/ImportHistory.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { FileText, CheckCircle, XCircle, Clock, AlertTriangle, MoreVertical, Trash2, Download } from 'lucide-react';\nimport type { ImportProgress } from '@/lib/validation/csv-schemas';\n\ninterface ImportHistoryProps {\n  className?: string;\n}\n\nexport function ImportHistory({ className = '' }: ImportHistoryProps) {\n  const [imports, setImports] = useState<ImportProgress[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetchImports();\n  }, []);\n\n  const fetchImports = async () => {\n    try {\n      const response = await fetch('/api/import/csv');\n      if (!response.ok) {\n        throw new Error('Failed to fetch imports');\n      }\n\n      const data = await response.json();\n      setImports(data.imports);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load imports');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return <Clock className=\"w-5 h-5 text-yellow-500\" />;\n      case 'processing':\n        return <Clock className=\"w-5 h-5 text-blue-500 animate-pulse\" />;\n      case 'completed':\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n      case 'failed':\n        return <XCircle className=\"w-5 h-5 text-red-500\" />;\n      default:\n        return <FileText className=\"w-5 h-5 text-gray-500\" />;\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'Pending';\n      case 'processing':\n        return 'Processing';\n      case 'completed':\n        return 'Completed';\n      case 'failed':\n        return 'Failed';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'pending':\n        return 'text-yellow-700 bg-yellow-50 border-yellow-200';\n      case 'processing':\n        return 'text-blue-700 bg-blue-50 border-blue-200';\n      case 'completed':\n        return 'text-green-700 bg-green-50 border-green-200';\n      case 'failed':\n        return 'text-red-700 bg-red-50 border-red-200';\n      default:\n        return 'text-gray-700 bg-gray-50 border-gray-200';\n    }\n  };\n\n  const formatImportType = (type: string) => {\n    return type.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n  };\n\n  const formatDate = (date: Date | string) => {\n    return new Date(date).toLocaleString();\n  };\n\n  const getDuration = (startTime: Date | string, endTime?: Date | string) => {\n    const start = new Date(startTime);\n    const end = endTime ? new Date(endTime) : new Date();\n    const duration = Math.round((end.getTime() - start.getTime()) / 1000);\n    \n    if (duration < 60) {\n      return `${duration}s`;\n    } else if (duration < 3600) {\n      return `${Math.round(duration / 60)}m`;\n    } else {\n      return `${Math.round(duration / 3600)}h`;\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className={`flex items-center justify-center p-8 ${className}`}>\n        <div \n          className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-500\"\n          role=\"status\"\n          aria-label=\"Loading import history\"\n        ></div>\n        <span className=\"ml-2 text-gray-600\" aria-live=\"polite\">Loading import history...</span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`p-4 bg-red-50 border border-red-200 rounded-lg ${className}`}>\n        <p className=\"text-red-700\">{error}</p>\n      </div>\n    );\n  }\n\n  if (imports.length === 0) {\n    return (\n      <div className={`text-center p-8 ${className}`}>\n        <FileText className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n          No imports yet\n        </h3>\n        <p className=\"text-gray-600\">\n          Your CSV import history will appear here once you start importing data.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">\n          Import History\n        </h3>\n        <button\n          onClick={fetchImports}\n          className=\"btn btn--ghost btn--sm\"\n          title=\"Refresh import history\"\n          aria-label=\"Refresh import history\"\n        >\n          Refresh\n        </button>\n      </div>\n\n      <div className=\"space-y-3\">\n        {imports.map((importItem) => (\n          <div\n            key={importItem.id}\n            className=\"border border-gray-200 rounded-lg p-4 hover:shadow-sm transition-shadow\"\n          >\n            <div className=\"flex items-start justify-between\">\n              <div className=\"flex items-start space-x-3 flex-1\">\n                {getStatusIcon(importItem.status)}\n                \n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center space-x-2 mb-1\">\n                    <h4 className=\"font-medium text-gray-900 truncate\">\n                      {importItem.fileName}\n                    </h4>\n                    <span className={`\n                      px-2 py-1 text-xs font-medium rounded-full border\n                      ${getStatusColor(importItem.status)}\n                    `}>\n                      {getStatusText(importItem.status)}\n                    </span>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\n                    <span>{formatImportType(importItem.importType)}</span>\n                    <span>•</span>\n                    <span>{formatDate(importItem.startTime)}</span>\n                    <span>•</span>\n                    <span>{getDuration(importItem.startTime, importItem.endTime)}</span>\n                  </div>\n\n                  {/* Progress for active imports */}\n                  {importItem.status === 'processing' && (\n                    <div className=\"mt-2\">\n                      <div className=\"flex justify-between text-xs text-gray-500 mb-1\">\n                        <span>Processing...</span>\n                        <span>{importItem.processedRows} / {importItem.totalRows}</span>\n                      </div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-1.5\">\n                        <div\n                          className=\"bg-primary-500 h-1.5 rounded-full transition-all duration-300\"\n                          style={{ width: `${importItem.progress}%` }}\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Results for completed imports */}\n                  {importItem.status === 'completed' && importItem.summary && (\n                    <div className=\"mt-2 flex items-center space-x-4 text-xs text-gray-600\">\n                      <span className=\"text-green-600\">\n                        ✓ {importItem.summary.successfulImports} imported\n                      </span>\n                      {importItem.summary.errors.length > 0 && (\n                        <span className=\"text-red-600\">\n                          ✗ {importItem.summary.errors.length} errors\n                        </span>\n                      )}\n                      {importItem.summary.conflicts.length > 0 && (\n                        <span className=\"text-yellow-600\">\n                          ⚠ {importItem.summary.conflicts.length} conflicts\n                        </span>\n                      )}\n                    </div>\n                  )}\n\n                  {/* Errors for failed imports */}\n                  {importItem.status === 'failed' && importItem.errors.length > 0 && (\n                    <div className=\"mt-2\">\n                      <p className=\"text-xs text-red-600\">\n                        {importItem.errors[0].message}\n                      </p>\n                    </div>\n                  )}\n\n                  {/* Conflicts indicator */}\n                  {importItem.conflicts.length > 0 && (\n                    <div className=\"mt-2 flex items-center space-x-2\">\n                      <AlertTriangle className=\"w-4 h-4 text-yellow-500\" />\n                      <span className=\"text-xs text-yellow-700\">\n                        {importItem.conflicts.length} conflicts need resolution\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Actions menu */}\n              <div className=\"relative\">\n                <button \n                  className=\"p-1 hover:bg-gray-100 rounded-full\"\n                  title=\"More actions\"\n                  aria-label=\"More actions for this import\"\n                >\n                  <MoreVertical className=\"w-4 h-4 text-gray-400\" />\n                </button>\n                {/* TODO: Add dropdown menu for actions like view details, download report, etc. */}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}"],"names":["ImportHistory","className","imports","setImports","useState","loading","setLoading","error","setError","useEffect","fetchImports","response","fetch","ok","Error","data","json","err","message","getStatusIcon","status","Clock","CheckCircle","XCircle","FileText","getStatusText","getStatusColor","formatImportType","type","replace","l","toUpperCase","formatDate","date","Date","toLocaleString","getDuration","startTime","endTime","start","end","duration","Math","round","getTime","div","role","aria-label","span","aria-live","p","length","h3","button","onClick","title","map","importItem","h4","fileName","importType","processedRows","totalRows","style","width","progress","summary","successfulImports","errors","conflicts","AlertTriangle","MoreVertical","id"],"mappings":"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"}
36eef017688c9f72ae16dbcb1897ed20
"use strict";

/* istanbul ignore next */
function cov_1kbjz2wk4t() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/lib/types/care-types.ts";
  var hash = "c65f69f82496be0ffacc736ed39f6af881fc99a6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/lib/types/care-types.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 27
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 313,
          column: 1
        }
      },
      "4": {
        start: {
          line: 14,
          column: 25
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "5": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 34
        }
      },
      "6": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 33
        }
      },
      "7": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 33
        }
      },
      "8": {
        start: {
          line: 57,
          column: 28
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "9": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "10": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 41
        }
      },
      "11": {
        start: {
          line: 85,
          column: 27
        },
        end: {
          line: 85,
          column: 49
        }
      },
      "12": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "13": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 30
        }
      },
      "14": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 18
        }
      },
      "15": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 41
        }
      },
      "16": {
        start: {
          line: 94,
          column: 29
        },
        end: {
          line: 94,
          column: 41
        }
      },
      "17": {
        start: {
          line: 95,
          column: 29
        },
        end: {
          line: 95,
          column: 74
        }
      },
      "18": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 96,
          column: 48
        }
      },
      "19": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 58
        }
      },
      "20": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 23
        }
      },
      "21": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 45
        }
      },
      "22": {
        start: {
          line: 102,
          column: 28
        },
        end: {
          line: 102,
          column: 45
        }
      },
      "23": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 103,
          column: 30
        }
      },
      "24": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 62
        }
      },
      "25": {
        start: {
          line: 105,
          column: 25
        },
        end: {
          line: 105,
          column: 66
        }
      },
      "26": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 43
        }
      },
      "27": {
        start: {
          line: 106,
          column: 26
        },
        end: {
          line: 106,
          column: 43
        }
      },
      "28": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 47
        }
      },
      "29": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 107,
          column: 47
        }
      },
      "30": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 45
        }
      },
      "31": {
        start: {
          line: 108,
          column: 27
        },
        end: {
          line: 108,
          column: 45
        }
      },
      "32": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 25
        }
      },
      "33": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 42
        }
      },
      "34": {
        start: {
          line: 113,
          column: 28
        },
        end: {
          line: 113,
          column: 42
        }
      },
      "35": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 30
        }
      },
      "36": {
        start: {
          line: 115,
          column: 23
        },
        end: {
          line: 115,
          column: 62
        }
      },
      "37": {
        start: {
          line: 116,
          column: 25
        },
        end: {
          line: 116,
          column: 66
        }
      },
      "38": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 45
        }
      },
      "39": {
        start: {
          line: 117,
          column: 27
        },
        end: {
          line: 117,
          column: 45
        }
      },
      "40": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 40
        }
      },
      "41": {
        start: {
          line: 118,
          column: 26
        },
        end: {
          line: 118,
          column: 40
        }
      },
      "42": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 43
        }
      },
      "43": {
        start: {
          line: 119,
          column: 27
        },
        end: {
          line: 119,
          column: 43
        }
      },
      "44": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 40
        }
      },
      "45": {
        start: {
          line: 120,
          column: 27
        },
        end: {
          line: 120,
          column: 40
        }
      },
      "46": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 22
        }
      },
      "47": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 40
        }
      },
      "48": {
        start: {
          line: 125,
          column: 28
        },
        end: {
          line: 125,
          column: 40
        }
      },
      "49": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 30
        }
      },
      "50": {
        start: {
          line: 127,
          column: 23
        },
        end: {
          line: 127,
          column: 62
        }
      },
      "51": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 57
        }
      },
      "52": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 41
        }
      },
      "53": {
        start: {
          line: 132,
          column: 29
        },
        end: {
          line: 132,
          column: 41
        }
      },
      "54": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 30
        }
      },
      "55": {
        start: {
          line: 134,
          column: 23
        },
        end: {
          line: 134,
          column: 63
        }
      },
      "56": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 58
        }
      },
      "57": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 36
        }
      },
      "58": {
        start: {
          line: 139,
          column: 24
        },
        end: {
          line: 139,
          column: 36
        }
      },
      "59": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 140,
          column: 30
        }
      },
      "60": {
        start: {
          line: 141,
          column: 23
        },
        end: {
          line: 141,
          column: 58
        }
      },
      "61": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 58
        }
      },
      "62": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 47
        }
      },
      "63": {
        start: {
          line: 146,
          column: 38
        },
        end: {
          line: 146,
          column: 47
        }
      },
      "64": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 147,
          column: 74
        }
      },
      "65": {
        start: {
          line: 148,
          column: 20
        },
        end: {
          line: 148,
          column: 30
        }
      },
      "66": {
        start: {
          line: 149,
          column: 26
        },
        end: {
          line: 149,
          column: 104
        }
      },
      "67": {
        start: {
          line: 151,
          column: 35
        },
        end: {
          line: 151,
          column: 71
        }
      },
      "68": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 49
        }
      },
      "69": {
        start: {
          line: 152,
          column: 38
        },
        end: {
          line: 152,
          column: 49
        }
      },
      "70": {
        start: {
          line: 154,
          column: 33
        },
        end: {
          line: 154,
          column: 91
        }
      },
      "71": {
        start: {
          line: 154,
          column: 60
        },
        end: {
          line: 154,
          column: 90
        }
      },
      "72": {
        start: {
          line: 155,
          column: 33
        },
        end: {
          line: 155,
          column: 56
        }
      },
      "73": {
        start: {
          line: 157,
          column: 31
        },
        end: {
          line: 157,
          column: 89
        }
      },
      "74": {
        start: {
          line: 159,
          column: 25
        },
        end: {
          line: 159,
          column: 70
        }
      },
      "75": {
        start: {
          line: 160,
          column: 34
        },
        end: {
          line: 160,
          column: 137
        }
      },
      "76": {
        start: {
          line: 161,
          column: 32
        },
        end: {
          line: 161,
          column: 74
        }
      },
      "77": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 63
        }
      },
      "78": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "79": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 63
        }
      },
      "80": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 69
        }
      },
      "81": {
        start: {
          line: 172,
          column: 16
        },
        end: {
          line: 172,
          column: 72
        }
      },
      "82": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 69
        }
      },
      "83": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 66
        }
      },
      "84": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 66
        }
      },
      "85": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "86": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 36
        }
      },
      "87": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 36
        }
      },
      "88": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 38
        }
      },
      "89": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 39
        }
      },
      "90": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 38
        }
      },
      "91": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 37
        }
      },
      "92": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 200,
          column: 30
        }
      },
      "93": {
        start: {
          line: 201,
          column: 23
        },
        end: {
          line: 201,
          column: 53
        }
      },
      "94": {
        start: {
          line: 202,
          column: 25
        },
        end: {
          line: 202,
          column: 67
        }
      },
      "95": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 43
        }
      },
      "96": {
        start: {
          line: 203,
          column: 28
        },
        end: {
          line: 203,
          column: 43
        }
      },
      "97": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 47
        }
      },
      "98": {
        start: {
          line: 204,
          column: 28
        },
        end: {
          line: 204,
          column: 47
        }
      },
      "99": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 56
        }
      },
      "100": {
        start: {
          line: 205,
          column: 26
        },
        end: {
          line: 205,
          column: 56
        }
      },
      "101": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 74
        }
      },
      "102": {
        start: {
          line: 206,
          column: 27
        },
        end: {
          line: 206,
          column: 74
        }
      },
      "103": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 77
        }
      },
      "104": {
        start: {
          line: 207,
          column: 28
        },
        end: {
          line: 207,
          column: 77
        }
      },
      "105": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 57
        }
      },
      "106": {
        start: {
          line: 212,
          column: 23
        },
        end: {
          line: 212,
          column: 25
        }
      },
      "107": {
        start: {
          line: 213,
          column: 25
        },
        end: {
          line: 213,
          column: 27
        }
      },
      "108": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "109": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 54
        }
      },
      "110": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "111": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 49
        }
      },
      "112": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "113": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 49
        }
      },
      "114": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "115": {
        start: {
          line: 226,
          column: 24
        },
        end: {
          line: 226,
          column: 34
        }
      },
      "116": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "117": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 60
        }
      },
      "118": {
        start: {
          line: 230,
          column: 31
        },
        end: {
          line: 230,
          column: 41
        }
      },
      "119": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 65
        }
      },
      "120": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "121": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 67
        }
      },
      "122": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "123": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 85
        }
      },
      "124": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "125": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 94
        }
      },
      "126": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 247,
          column: 10
        }
      },
      "127": {
        start: {
          line: 251,
          column: 30
        },
        end: {
          line: 253,
          column: 67
        }
      },
      "128": {
        start: {
          line: 253,
          column: 23
        },
        end: {
          line: 253,
          column: 66
        }
      },
      "129": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 272,
          column: 11
        }
      },
      "130": {
        start: {
          line: 255,
          column: 29
        },
        end: {
          line: 255,
          column: 53
        }
      },
      "131": {
        start: {
          line: 256,
          column: 38
        },
        end: {
          line: 256,
          column: 152
        }
      },
      "132": {
        start: {
          line: 258,
          column: 34
        },
        end: {
          line: 259,
          column: 19
        }
      },
      "133": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 271,
          column: 14
        }
      },
      "134": {
        start: {
          line: 275,
          column: 36
        },
        end: {
          line: 312,
          column: 9
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 25
          }
        },
        loc: {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 55,
            column: 29
          },
          end: {
            line: 55,
            column: 30
          }
        },
        loc: {
          start: {
            line: 55,
            column: 41
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 55
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 93,
            column: 32
          },
          end: {
            line: 93,
            column: 33
          }
        },
        loc: {
          start: {
            line: 93,
            column: 60
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 93
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 101,
            column: 25
          },
          end: {
            line: 101,
            column: 26
          }
        },
        loc: {
          start: {
            line: 101,
            column: 42
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 101
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 112,
            column: 26
          },
          end: {
            line: 112,
            column: 27
          }
        },
        loc: {
          start: {
            line: 112,
            column: 43
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 112
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 124,
            column: 37
          },
          end: {
            line: 124,
            column: 38
          }
        },
        loc: {
          start: {
            line: 124,
            column: 54
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 124
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 131,
            column: 38
          },
          end: {
            line: 131,
            column: 39
          }
        },
        loc: {
          start: {
            line: 131,
            column: 56
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 131
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 138,
            column: 33
          },
          end: {
            line: 138,
            column: 34
          }
        },
        loc: {
          start: {
            line: 138,
            column: 46
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 138
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 145,
            column: 35
          },
          end: {
            line: 145,
            column: 36
          }
        },
        loc: {
          start: {
            line: 145,
            column: 76
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 145
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 154,
            column: 52
          },
          end: {
            line: 154,
            column: 53
          }
        },
        loc: {
          start: {
            line: 154,
            column: 60
          },
          end: {
            line: 154,
            column: 90
          }
        },
        line: 154
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 25
          }
        },
        loc: {
          start: {
            line: 165,
            column: 34
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 165
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 182,
            column: 25
          },
          end: {
            line: 182,
            column: 26
          }
        },
        loc: {
          start: {
            line: 182,
            column: 36
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 182
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 199,
            column: 20
          },
          end: {
            line: 199,
            column: 21
          }
        },
        loc: {
          start: {
            line: 199,
            column: 28
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 199
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 211,
            column: 22
          },
          end: {
            line: 211,
            column: 23
          }
        },
        loc: {
          start: {
            line: 211,
            column: 30
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 211
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 250,
            column: 24
          },
          end: {
            line: 250,
            column: 25
          }
        },
        loc: {
          start: {
            line: 250,
            column: 39
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 250
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 253,
            column: 15
          },
          end: {
            line: 253,
            column: 16
          }
        },
        loc: {
          start: {
            line: 253,
            column: 23
          },
          end: {
            line: 253,
            column: 66
          }
        },
        line: 253
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 254,
            column: 33
          },
          end: {
            line: 254,
            column: 34
          }
        },
        loc: {
          start: {
            line: 254,
            column: 48
          },
          end: {
            line: 272,
            column: 9
          }
        },
        line: 254
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 275,
            column: 32
          },
          end: {
            line: 275,
            column: 33
          }
        },
        loc: {
          start: {
            line: 275,
            column: 36
          },
          end: {
            line: 312,
            column: 9
          }
        },
        line: 275
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 56,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 56,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "1": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "2": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "3": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 86,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 86,
            column: 30
          }
        }, {
          start: {
            line: 86,
            column: 34
          },
          end: {
            line: 86,
            column: 48
          }
        }],
        line: 86
      },
      "4": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 94,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 94,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "5": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "6": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "7": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "8": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 108,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 108,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "9": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 113,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 113,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "10": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 117,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 117,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "11": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 118,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 118,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "12": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 119,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 119,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "13": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "14": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "15": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 132,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 132,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "16": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 139,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 139,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "17": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 146,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 146,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "18": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 152,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 152,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "19": {
        loc: {
          start: {
            line: 160,
            column: 34
          },
          end: {
            line: 160,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 45
          },
          end: {
            line: 160,
            column: 126
          }
        }, {
          start: {
            line: 160,
            column: 129
          },
          end: {
            line: 160,
            column: 137
          }
        }],
        line: 160
      },
      "20": {
        loc: {
          start: {
            line: 161,
            column: 32
          },
          end: {
            line: 161,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 68
          },
          end: {
            line: 161,
            column: 70
          }
        }, {
          start: {
            line: 161,
            column: 73
          },
          end: {
            line: 161,
            column: 74
          }
        }],
        line: 161
      },
      "21": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 168,
            column: 63
          }
        }, {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 170,
            column: 69
          }
        }, {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 172,
            column: 72
          }
        }, {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 174,
            column: 69
          }
        }, {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 176,
            column: 66
          }
        }, {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 178,
            column: 66
          }
        }],
        line: 166
      },
      "22": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 185,
            column: 36
          }
        }, {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 187,
            column: 36
          }
        }, {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 189,
            column: 38
          }
        }, {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 191,
            column: 39
          }
        }, {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 193,
            column: 38
          }
        }, {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 195,
            column: 37
          }
        }],
        line: 183
      },
      "23": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 203,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 203,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "24": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 204,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 204,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "25": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 205,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 205,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "26": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 206,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 206,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "27": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 207,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 207,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "28": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "29": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "30": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "31": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "32": {
        loc: {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "33": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "34": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "35": {
        loc: {
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 237,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 237,
            column: 42
          }
        }, {
          start: {
            line: 237,
            column: 46
          },
          end: {
            line: 237,
            column: 66
          }
        }],
        line: 237
      },
      "36": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "37": {
        loc: {
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 12
          },
          end: {
            line: 240,
            column: 37
          }
        }, {
          start: {
            line: 240,
            column: 42
          },
          end: {
            line: 240,
            column: 55
          }
        }, {
          start: {
            line: 240,
            column: 59
          },
          end: {
            line: 240,
            column: 73
          }
        }],
        line: 240
      },
      "38": {
        loc: {
          start: {
            line: 256,
            column: 38
          },
          end: {
            line: 256,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 49
          },
          end: {
            line: 256,
            column: 140
          }
        }, {
          start: {
            line: 256,
            column: 143
          },
          end: {
            line: 256,
            column: 152
          }
        }],
        line: 256
      },
      "39": {
        loc: {
          start: {
            line: 258,
            column: 34
          },
          end: {
            line: 259,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 258,
            column: 67
          },
          end: {
            line: 258,
            column: 117
          }
        }, {
          start: {
            line: 259,
            column: 15
          },
          end: {
            line: 259,
            column: 19
          }
        }],
        line: 258
      },
      "40": {
        loc: {
          start: {
            line: 258,
            column: 67
          },
          end: {
            line: 258,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 258,
            column: 87
          },
          end: {
            line: 258,
            column: 110
          }
        }, {
          start: {
            line: 258,
            column: 113
          },
          end: {
            line: 258,
            column: 117
          }
        }],
        line: 258
      },
      "41": {
        loc: {
          start: {
            line: 264,
            column: 23
          },
          end: {
            line: 264,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 23
          },
          end: {
            line: 264,
            column: 33
          }
        }, {
          start: {
            line: 264,
            column: 37
          },
          end: {
            line: 264,
            column: 46
          }
        }],
        line: 264
      },
      "42": {
        loc: {
          start: {
            line: 265,
            column: 32
          },
          end: {
            line: 265,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 32
          },
          end: {
            line: 265,
            column: 51
          }
        }, {
          start: {
            line: 265,
            column: 55
          },
          end: {
            line: 265,
            column: 64
          }
        }],
        line: 265
      },
      "43": {
        loc: {
          start: {
            line: 266,
            column: 25
          },
          end: {
            line: 266,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 25
          },
          end: {
            line: 266,
            column: 37
          }
        }, {
          start: {
            line: 266,
            column: 41
          },
          end: {
            line: 266,
            column: 50
          }
        }],
        line: 266
      },
      "44": {
        loc: {
          start: {
            line: 267,
            column: 26
          },
          end: {
            line: 267,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 26
          },
          end: {
            line: 267,
            column: 39
          }
        }, {
          start: {
            line: 267,
            column: 43
          },
          end: {
            line: 267,
            column: 52
          }
        }],
        line: 267
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0, 0, 0, 0],
      "22": [0, 0, 0, 0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/lib/types/care-types.ts"],
      sourcesContent: ["import type { CareHistory, PlantInstance, Plant } from '@/lib/db/schema';\nimport type { EnhancedPlantInstance } from './plant-instance-types';\n\n// Re-export EnhancedPlantInstance for convenience\nexport type { EnhancedPlantInstance } from './plant-instance-types';\n\n// Care type enumeration\nexport type CareType = \n  | 'fertilizer'\n  | 'water'\n  | 'repot'\n  | 'prune'\n  | 'inspect'\n  | 'other';\n\n// Care frequency enumeration\nexport type CareFrequency = \n  | 'daily'\n  | 'weekly'\n  | 'monthly'\n  | 'seasonal'\n  | 'custom';\n\n// Care schedule interface for structured scheduling\nexport interface CareSchedule {\n  frequency: CareFrequency;\n  interval: number;\n  careType: CareType;\n  customDays?: number; // For custom frequency\n}\n\n// Care status enumeration\nexport type CareStatus = \n  | 'healthy'      // No care needed\n  | 'due_soon'     // Care due within a week\n  | 'due_today'    // Care due today\n  | 'overdue'      // Care is overdue\n  | 'unknown';     // No schedule set\n\n// Care urgency levels for prioritization\nexport type CareUrgency = \n  | 'critical'     // Severely overdue (>7 days)\n  | 'high'         // Overdue (1-7 days)\n  | 'medium'       // Due today or tomorrow\n  | 'low'          // Due within a week\n  | 'none';        // No care needed\n\n// Fertilizer schedule types\nexport type FertilizerSchedule = \n  | 'weekly'       // Every 7 days\n  | 'biweekly'     // Every 14 days\n  | 'monthly'      // Every 30 days\n  | 'bimonthly'    // Every 60 days\n  | 'quarterly'    // Every 90 days\n  | 'custom';      // Custom interval in days\n\n// Enhanced care history with computed properties\nexport interface EnhancedCareHistory extends CareHistory {\n  // Joined plant instance data\n  plantInstance?: PlantInstance & { plant?: Plant };\n  \n  // Time since care was performed\n  daysSinceCare: number;\n  \n  // Formatted care date for display\n  formattedDate: string;\n  \n  // Care type display information\n  careTypeDisplay: CareTypeDisplay;\n}\n\n// Care type display information\nexport interface CareTypeDisplay {\n  label: string;\n  icon: string;\n  color: string;\n  description: string;\n}\n\n// Care schedule calculation result\nexport interface CareScheduleCalculation {\n  nextDueDate: Date | null;\n  daysBetweenCare: number;\n  isOverdue: boolean;\n  daysOverdue: number;\n  careStatus: CareStatus;\n  careUrgency: CareUrgency;\n}\n\n// Care statistics for a plant instance\nexport interface PlantCareStatistics {\n  plantInstanceId: number;\n  totalCareEvents: number;\n  lastCareDate: Date | null;\n  averageCareDays: number;\n  careConsistencyScore: number; // 0-100 based on schedule adherence\n  careTypeBreakdown: Record<CareType, number>;\n  longestCareGap: number; // in days\n  currentCareStreak: number; // consecutive days with proper care\n}\n\n// Care dashboard data\nexport interface CareDashboardData {\n  overdue: EnhancedPlantInstance[];\n  dueToday: EnhancedPlantInstance[];\n  dueSoon: EnhancedPlantInstance[];\n  recentlyCared: EnhancedPlantInstance[];\n  \n  statistics: {\n    totalActivePlants: number;\n    overdueCount: number;\n    dueTodayCount: number;\n    dueSoonCount: number;\n    careStreakDays: number;\n    totalCareEventsThisWeek: number;\n    averageCareConsistency: number;\n  };\n  \n  quickActions: QuickCareAction[];\n}\n\n// Quick care action definition\nexport interface QuickCareAction {\n  id: string;\n  label: string;\n  icon: string;\n  careType: CareType;\n  color: string;\n  description: string;\n  isEnabled: boolean;\n}\n\n// Care log entry for quick actions\nexport interface CareLogEntry {\n  plantInstanceId: number;\n  careType: CareType;\n  careDate: Date;\n  notes?: string;\n  fertilizerType?: string;\n  potSize?: string;\n  soilType?: string;\n  images?: string[];\n}\n\n// Care reminder configuration\nexport interface CareReminder {\n  id: string;\n  plantInstanceId: number;\n  careType: CareType;\n  reminderDate: Date;\n  isActive: boolean;\n  notificationSent: boolean;\n  createdAt: Date;\n}\n\n// Care history timeline entry\nexport interface CareTimelineEntry {\n  id: number;\n  date: Date;\n  careType: CareType;\n  notes?: string;\n  fertilizerType?: string;\n  potSize?: string;\n  soilType?: string;\n  images: string[];\n  daysSinceLastCare?: number;\n  wasOnSchedule: boolean;\n}\n\n// Care form data for logging new care events\nexport interface CareFormData {\n  plantInstanceId: number;\n  careType: CareType;\n  careDate: Date;\n  notes?: string;\n  fertilizerType?: string;\n  potSize?: string;\n  soilType?: string;\n  imageFiles?: File[];\n  updateSchedule?: boolean; // Whether to update the plant's next due date\n}\n\n// Care validation result\nexport interface CareValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\n// Bulk care operation\nexport interface BulkCareOperation {\n  plantInstanceIds: number[];\n  careType: CareType;\n  careDate: Date;\n  notes?: string;\n  fertilizerType?: string;\n}\n\n// Bulk care result\nexport interface BulkCareResult {\n  success: boolean;\n  successCount: number;\n  failureCount: number;\n  results: Array<{\n    plantInstanceId: number;\n    success: boolean;\n    error?: string;\n  }>;\n}\n\n// Care helper functions\nexport const careHelpers = {\n  // Get care type display information\n  getCareTypeDisplay: (careType: CareType): CareTypeDisplay => {\n    const displays: Record<CareType, CareTypeDisplay> = {\n      fertilizer: {\n        label: 'Fertilizer',\n        icon: '\uD83C\uDF31',\n        color: 'text-green-600 bg-green-50',\n        description: 'Applied fertilizer to promote growth'\n      },\n      water: {\n        label: 'Water',\n        icon: '\uD83D\uDCA7',\n        color: 'text-blue-600 bg-blue-50',\n        description: 'Watered the plant'\n      },\n      repot: {\n        label: 'Repot',\n        icon: '\uD83E\uDEB4',\n        color: 'text-amber-600 bg-amber-50',\n        description: 'Repotted with fresh soil'\n      },\n      prune: {\n        label: 'Prune',\n        icon: '\u2702\uFE0F',\n        color: 'text-purple-600 bg-purple-50',\n        description: 'Pruned dead or overgrown parts'\n      },\n      inspect: {\n        label: 'Inspect',\n        icon: '\uD83D\uDD0D',\n        color: 'text-indigo-600 bg-indigo-50',\n        description: 'Inspected for pests or issues'\n      },\n      other: {\n        label: 'Other',\n        icon: '\uD83D\uDCDD',\n        color: 'text-gray-600 bg-gray-50',\n        description: 'Other care activity'\n      }\n    };\n    return displays[careType];\n  },\n\n  // Parse fertilizer schedule to days\n  parseFertilizerSchedule: (schedule: string): number => {\n    if (!schedule) return 30;\n    \n    const scheduleMap: Record<string, number> = {\n      // Legacy formats\n      'weekly': 7,\n      'biweekly': 14,\n      'monthly': 30,\n      'bimonthly': 60,\n      'quarterly': 90,\n      // Week-based formats\n      '1 week': 7,\n      '2 weeks': 14,\n      '1 month': 30,\n      '2 months': 60,\n      '3 months': 90,\n      // Your actual database formats\n      'every 2 weeks': 14,\n      'every 2-3 weeks': 18,        // Average of 2-3 weeks\n      'every 2-4 weeks': 21,        // Average of 2-4 weeks  \n      'every 3-4 weeks': 24,        // Average of 3-4 weeks\n      'every 4 weeks': 28,          // 4 weeks\n      'every 4-6 weeks': 35,        // Average of 4-6 weeks\n      'every 6-8 weeks': 49,        // Average of 6-8 weeks\n      'every 17 weeks': 119,        // 17 weeks\n    };\n\n    // Check if it's a predefined schedule\n    if (scheduleMap[schedule]) {\n      return scheduleMap[schedule];\n    }\n\n    // Try to parse as custom number of days\n    const customDays = parseInt(schedule, 10);\n    if (!isNaN(customDays) && customDays > 0) {\n      return customDays;\n    }\n\n    // Default to monthly if unable to parse\n    return 30;\n  },\n\n  // Calculate next fertilizer due date\n  calculateNextFertilizerDue: (lastFertilized: Date | null, schedule: string): Date | null => {\n    if (!lastFertilized) return null;\n\n    const intervalDays = careHelpers.parseFertilizerSchedule(schedule);\n    const nextDue = new Date(lastFertilized);\n    nextDue.setDate(nextDue.getDate() + intervalDays);\n    \n    return nextDue;\n  },\n\n  // Calculate care status based on fertilizer due date\n  calculateCareStatus: (fertilizerDue: Date | null): CareStatus => {\n    if (!fertilizerDue) return 'unknown';\n    \n    const now = new Date();\n    const diffMs = fertilizerDue.getTime() - now.getTime();\n    const diffDays = Math.ceil(diffMs / (1000 * 60 * 60 * 24));\n    \n    if (diffDays < 0) return 'overdue';\n    if (diffDays === 0) return 'due_today';\n    if (diffDays <= 7) return 'due_soon';\n    return 'healthy';\n  },\n\n  // Calculate care urgency for prioritization\n  calculateCareUrgency: (fertilizerDue: Date | null): CareUrgency => {\n    if (!fertilizerDue) return 'none';\n    \n    const now = new Date();\n    const diffMs = fertilizerDue.getTime() - now.getTime();\n    const diffDays = Math.ceil(diffMs / (1000 * 60 * 60 * 24));\n    \n    if (diffDays < -7) return 'critical';\n    if (diffDays < 0) return 'high';\n    if (diffDays <= 1) return 'medium';\n    if (diffDays <= 7) return 'low';\n    return 'none';\n  },\n\n  // Calculate days until fertilizer due (negative if overdue)\n  calculateDaysUntilFertilizerDue: (fertilizerDue: Date | null): number | null => {\n    if (!fertilizerDue) return null;\n    \n    const now = new Date();\n    const diffMs = fertilizerDue.getTime() - now.getTime();\n    return Math.ceil(diffMs / (1000 * 60 * 60 * 24));\n  },\n\n  // Calculate days since last fertilized\n  calculateDaysSinceLastFertilized: (lastFertilized: Date | null): number | null => {\n    if (!lastFertilized) return null;\n    \n    const now = new Date();\n    const diffMs = now.getTime() - lastFertilized.getTime();\n    return Math.floor(diffMs / (1000 * 60 * 60 * 24));\n  },\n\n  // Calculate days since last repot\n  calculateDaysSinceLastRepot: (lastRepot: Date | null): number | null => {\n    if (!lastRepot) return null;\n    \n    const now = new Date();\n    const diffMs = now.getTime() - lastRepot.getTime();\n    return Math.floor(diffMs / (1000 * 60 * 60 * 24));\n  },\n\n  // Calculate care consistency score (0-100)\n  calculateCareConsistencyScore: (\n    careHistory: CareHistory[],\n    schedule: string,\n    plantCreatedAt: Date\n  ): number => {\n    if (careHistory.length === 0) return 0;\n\n    const intervalDays = careHelpers.parseFertilizerSchedule(schedule);\n    const now = new Date();\n    const totalDays = Math.floor((now.getTime() - plantCreatedAt.getTime()) / (1000 * 60 * 60 * 24));\n    \n    // Calculate expected number of care events\n    const expectedCareEvents = Math.floor(totalDays / intervalDays);\n    if (expectedCareEvents === 0) return 100;\n\n    // Calculate actual care events (only fertilizer for consistency score)\n    const fertilizerEvents = careHistory.filter(care => care.careType === 'fertilizer');\n    const actualCareEvents = fertilizerEvents.length;\n\n    // Calculate score based on adherence to schedule\n    const adherenceScore = Math.min(100, (actualCareEvents / expectedCareEvents) * 100);\n\n    // Bonus points for recent care (within last interval)\n    const lastCare = fertilizerEvents[fertilizerEvents.length - 1];\n    const daysSinceLastCare = lastCare \n      ? Math.floor((now.getTime() - lastCare.careDate.getTime()) / (1000 * 60 * 60 * 24))\n      : Infinity;\n\n    const recentCareBonus = daysSinceLastCare <= intervalDays ? 10 : 0;\n\n    return Math.min(100, adherenceScore + recentCareBonus);\n  },\n\n  // Get care status color for UI\n  getCareStatusColor: (status: CareStatus): string => {\n    switch (status) {\n      case 'overdue': return 'text-red-600 bg-red-50 border-red-200';\n      case 'due_today': return 'text-amber-600 bg-amber-50 border-amber-200';\n      case 'due_soon': return 'text-yellow-600 bg-yellow-50 border-yellow-200';\n      case 'healthy': return 'text-green-600 bg-green-50 border-green-200';\n      case 'unknown': return 'text-gray-600 bg-gray-50 border-gray-200';\n      default: return 'text-gray-600 bg-gray-50 border-gray-200';\n    }\n  },\n\n  // Get care urgency color for UI\n  getCareUrgencyColor: (urgency: CareUrgency): string => {\n    switch (urgency) {\n      case 'critical': return 'bg-red-500';\n      case 'high': return 'bg-red-400';\n      case 'medium': return 'bg-amber-400';\n      case 'low': return 'bg-yellow-400';\n      case 'none': return 'bg-green-400';\n      default: return 'bg-gray-400';\n    }\n  },\n\n  // Format care date for display\n  formatCareDate: (date: Date): string => {\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n\n    if (diffDays === 0) return 'Today';\n    if (diffDays === 1) return 'Yesterday';\n    if (diffDays < 7) return `${diffDays} days ago`;\n    if (diffDays < 30) return `${Math.floor(diffDays / 7)} weeks ago`;\n    if (diffDays < 365) return `${Math.floor(diffDays / 30)} months ago`;\n    return `${Math.floor(diffDays / 365)} years ago`;\n  },\n\n  // Validate care form data\n  validateCareForm: (data: CareFormData): CareValidationResult => {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // Required fields\n    if (!data.plantInstanceId) {\n      errors.push('Plant instance is required');\n    }\n\n    if (!data.careType) {\n      errors.push('Care type is required');\n    }\n\n    if (!data.careDate) {\n      errors.push('Care date is required');\n    }\n\n    // Date validation\n    if (data.careDate) {\n      const now = new Date();\n      if (data.careDate > now) {\n        warnings.push('Care date is in the future');\n      }\n\n      const oneYearAgo = new Date();\n      oneYearAgo.setFullYear(oneYearAgo.getFullYear() - 1);\n      if (data.careDate < oneYearAgo) {\n        warnings.push('Care date is more than a year ago');\n      }\n    }\n\n    // Care type specific validation\n    if (data.careType === 'fertilizer' && !data.fertilizerType) {\n      warnings.push('Consider specifying fertilizer type for better tracking');\n    }\n\n    if (data.careType === 'repot' && (!data.potSize || !data.soilType)) {\n      warnings.push('Consider specifying pot size and soil type for repotting records');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings\n    };\n  },\n\n  // Create care timeline from history\n  createCareTimeline: (careHistory: CareHistory[]): CareTimelineEntry[] => {\n    const sortedHistory = [...careHistory].sort((a, b) => \n      b.careDate.getTime() - a.careDate.getTime()\n    );\n\n    return sortedHistory.map((care, index) => {\n      const nextCare = sortedHistory[index + 1];\n      const daysSinceLastCare = nextCare \n        ? Math.floor((care.careDate.getTime() - nextCare.careDate.getTime()) / (1000 * 60 * 60 * 24))\n        : undefined;\n\n      // Determine if care was on schedule (simplified logic)\n      const wasOnSchedule = care.careType === 'fertilizer' \n        ? daysSinceLastCare ? daysSinceLastCare <= 35 : true // Within 35 days is reasonable\n        : true;\n\n      return {\n        id: care.id,\n        date: care.careDate,\n        careType: care.careType,\n        notes: care.notes || undefined,\n        fertilizerType: care.fertilizerType || undefined,\n        potSize: care.potSize || undefined,\n        soilType: care.soilType || undefined,\n        images: care.images,\n        daysSinceLastCare,\n        wasOnSchedule\n      };\n    });\n  },\n\n  // Get default quick care actions\n  getDefaultQuickCareActions: (): QuickCareAction[] => [\n    {\n      id: 'fertilize',\n      label: 'Fertilize',\n      icon: '\uD83C\uDF31',\n      careType: 'fertilizer',\n      color: 'bg-green-500 hover:bg-green-600',\n      description: 'Apply fertilizer to promote growth',\n      isEnabled: true\n    },\n    {\n      id: 'water',\n      label: 'Water',\n      icon: '\uD83D\uDCA7',\n      careType: 'water',\n      color: 'bg-blue-500 hover:bg-blue-600',\n      description: 'Water the plant',\n      isEnabled: true\n    },\n    {\n      id: 'inspect',\n      label: 'Inspect',\n      icon: '\uD83D\uDD0D',\n      careType: 'inspect',\n      color: 'bg-indigo-500 hover:bg-indigo-600',\n      description: 'Check for pests or issues',\n      isEnabled: true\n    },\n    {\n      id: 'prune',\n      label: 'Prune',\n      icon: '\u2702\uFE0F',\n      careType: 'prune',\n      color: 'bg-purple-500 hover:bg-purple-600',\n      description: 'Remove dead or overgrown parts',\n      isEnabled: true\n    }\n  ]\n};"],
      names: ["careHelpers", "getCareTypeDisplay", "careType", "displays", "fertilizer", "label", "icon", "color", "description", "water", "repot", "prune", "inspect", "other", "parseFertilizerSchedule", "schedule", "scheduleMap", "customDays", "parseInt", "isNaN", "calculateNextFertilizerDue", "lastFertilized", "intervalDays", "nextDue", "Date", "setDate", "getDate", "calculateCareStatus", "fertilizerDue", "now", "diffMs", "getTime", "diffDays", "Math", "ceil", "calculateCareUrgency", "calculateDaysUntilFertilizerDue", "calculateDaysSinceLastFertilized", "floor", "calculateDaysSinceLastRepot", "lastRepot", "calculateCareConsistencyScore", "careHistory", "plantCreatedAt", "length", "totalDays", "expectedCareEvents", "fertilizerEvents", "filter", "care", "actualCareEvents", "adherenceScore", "min", "lastCare", "daysSinceLastCare", "careDate", "Infinity", "recentCareBonus", "getCareStatusColor", "status", "getCareUrgencyColor", "urgency", "formatCareDate", "date", "validateCareForm", "data", "errors", "warnings", "plantInstanceId", "push", "oneYearAgo", "setFullYear", "getFullYear", "fertilizerType", "potSize", "soilType", "isValid", "createCareTimeline", "sortedHistory", "sort", "a", "b", "map", "index", "nextCare", "undefined", "wasOnSchedule", "id", "notes", "images", "getDefaultQuickCareActions", "isEnabled"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c65f69f82496be0ffacc736ed39f6af881fc99a6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kbjz2wk4t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kbjz2wk4t();
cov_1kbjz2wk4t().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1kbjz2wk4t().s[1]++;
Object.defineProperty(exports, "careHelpers", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[0]++;
    cov_1kbjz2wk4t().s[2]++;
    return careHelpers;
  }
});
const careHelpers =
/* istanbul ignore next */
(cov_1kbjz2wk4t().s[3]++, {
  // Get care type display information
  getCareTypeDisplay: careType => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[1]++;
    const displays =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[4]++, {
      fertilizer: {
        label: 'Fertilizer',
        icon: '🌱',
        color: 'text-green-600 bg-green-50',
        description: 'Applied fertilizer to promote growth'
      },
      water: {
        label: 'Water',
        icon: '💧',
        color: 'text-blue-600 bg-blue-50',
        description: 'Watered the plant'
      },
      repot: {
        label: 'Repot',
        icon: '🪴',
        color: 'text-amber-600 bg-amber-50',
        description: 'Repotted with fresh soil'
      },
      prune: {
        label: 'Prune',
        icon: '✂️',
        color: 'text-purple-600 bg-purple-50',
        description: 'Pruned dead or overgrown parts'
      },
      inspect: {
        label: 'Inspect',
        icon: '🔍',
        color: 'text-indigo-600 bg-indigo-50',
        description: 'Inspected for pests or issues'
      },
      other: {
        label: 'Other',
        icon: '📝',
        color: 'text-gray-600 bg-gray-50',
        description: 'Other care activity'
      }
    });
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[5]++;
    return displays[careType];
  },
  // Parse fertilizer schedule to days
  parseFertilizerSchedule: schedule => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[2]++;
    cov_1kbjz2wk4t().s[6]++;
    if (!schedule) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[0][0]++;
      cov_1kbjz2wk4t().s[7]++;
      return 30;
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[0][1]++;
    }
    const scheduleMap =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[8]++, {
      // Legacy formats
      'weekly': 7,
      'biweekly': 14,
      'monthly': 30,
      'bimonthly': 60,
      'quarterly': 90,
      // Week-based formats
      '1 week': 7,
      '2 weeks': 14,
      '1 month': 30,
      '2 months': 60,
      '3 months': 90,
      // Your actual database formats
      'every 2 weeks': 14,
      'every 2-3 weeks': 18,
      'every 2-4 weeks': 21,
      'every 3-4 weeks': 24,
      'every 4 weeks': 28,
      'every 4-6 weeks': 35,
      'every 6-8 weeks': 49,
      'every 17 weeks': 119
    });
    // Check if it's a predefined schedule
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[9]++;
    if (scheduleMap[schedule]) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[1][0]++;
      cov_1kbjz2wk4t().s[10]++;
      return scheduleMap[schedule];
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[1][1]++;
    }
    // Try to parse as custom number of days
    const customDays =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[11]++, parseInt(schedule, 10));
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().b[3][0]++, !isNaN(customDays)) &&
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().b[3][1]++, customDays > 0)) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[2][0]++;
      cov_1kbjz2wk4t().s[13]++;
      return customDays;
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[2][1]++;
    }
    // Default to monthly if unable to parse
    cov_1kbjz2wk4t().s[14]++;
    return 30;
  },
  // Calculate next fertilizer due date
  calculateNextFertilizerDue: (lastFertilized, schedule) => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[3]++;
    cov_1kbjz2wk4t().s[15]++;
    if (!lastFertilized) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[4][0]++;
      cov_1kbjz2wk4t().s[16]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[4][1]++;
    }
    const intervalDays =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[17]++, careHelpers.parseFertilizerSchedule(schedule));
    const nextDue =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[18]++, new Date(lastFertilized));
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[19]++;
    nextDue.setDate(nextDue.getDate() + intervalDays);
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[20]++;
    return nextDue;
  },
  // Calculate care status based on fertilizer due date
  calculateCareStatus: fertilizerDue => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[4]++;
    cov_1kbjz2wk4t().s[21]++;
    if (!fertilizerDue) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[5][0]++;
      cov_1kbjz2wk4t().s[22]++;
      return 'unknown';
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[5][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[23]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[24]++, fertilizerDue.getTime() - now.getTime());
    const diffDays =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[25]++, Math.ceil(diffMs / (1000 * 60 * 60 * 24)));
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[26]++;
    if (diffDays < 0) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[6][0]++;
      cov_1kbjz2wk4t().s[27]++;
      return 'overdue';
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[6][1]++;
    }
    cov_1kbjz2wk4t().s[28]++;
    if (diffDays === 0) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[7][0]++;
      cov_1kbjz2wk4t().s[29]++;
      return 'due_today';
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[7][1]++;
    }
    cov_1kbjz2wk4t().s[30]++;
    if (diffDays <= 7) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[8][0]++;
      cov_1kbjz2wk4t().s[31]++;
      return 'due_soon';
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[8][1]++;
    }
    cov_1kbjz2wk4t().s[32]++;
    return 'healthy';
  },
  // Calculate care urgency for prioritization
  calculateCareUrgency: fertilizerDue => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[5]++;
    cov_1kbjz2wk4t().s[33]++;
    if (!fertilizerDue) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[9][0]++;
      cov_1kbjz2wk4t().s[34]++;
      return 'none';
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[9][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[35]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[36]++, fertilizerDue.getTime() - now.getTime());
    const diffDays =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[37]++, Math.ceil(diffMs / (1000 * 60 * 60 * 24)));
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[38]++;
    if (diffDays < -7) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[10][0]++;
      cov_1kbjz2wk4t().s[39]++;
      return 'critical';
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[10][1]++;
    }
    cov_1kbjz2wk4t().s[40]++;
    if (diffDays < 0) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[11][0]++;
      cov_1kbjz2wk4t().s[41]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[11][1]++;
    }
    cov_1kbjz2wk4t().s[42]++;
    if (diffDays <= 1) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[12][0]++;
      cov_1kbjz2wk4t().s[43]++;
      return 'medium';
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[12][1]++;
    }
    cov_1kbjz2wk4t().s[44]++;
    if (diffDays <= 7) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[13][0]++;
      cov_1kbjz2wk4t().s[45]++;
      return 'low';
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[13][1]++;
    }
    cov_1kbjz2wk4t().s[46]++;
    return 'none';
  },
  // Calculate days until fertilizer due (negative if overdue)
  calculateDaysUntilFertilizerDue: fertilizerDue => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[6]++;
    cov_1kbjz2wk4t().s[47]++;
    if (!fertilizerDue) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[14][0]++;
      cov_1kbjz2wk4t().s[48]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[14][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[49]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[50]++, fertilizerDue.getTime() - now.getTime());
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[51]++;
    return Math.ceil(diffMs / (1000 * 60 * 60 * 24));
  },
  // Calculate days since last fertilized
  calculateDaysSinceLastFertilized: lastFertilized => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[7]++;
    cov_1kbjz2wk4t().s[52]++;
    if (!lastFertilized) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[15][0]++;
      cov_1kbjz2wk4t().s[53]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[15][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[54]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[55]++, now.getTime() - lastFertilized.getTime());
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[56]++;
    return Math.floor(diffMs / (1000 * 60 * 60 * 24));
  },
  // Calculate days since last repot
  calculateDaysSinceLastRepot: lastRepot => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[8]++;
    cov_1kbjz2wk4t().s[57]++;
    if (!lastRepot) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[16][0]++;
      cov_1kbjz2wk4t().s[58]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[16][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[59]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[60]++, now.getTime() - lastRepot.getTime());
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[61]++;
    return Math.floor(diffMs / (1000 * 60 * 60 * 24));
  },
  // Calculate care consistency score (0-100)
  calculateCareConsistencyScore: (careHistory, schedule, plantCreatedAt) => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[9]++;
    cov_1kbjz2wk4t().s[62]++;
    if (careHistory.length === 0) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[17][0]++;
      cov_1kbjz2wk4t().s[63]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[17][1]++;
    }
    const intervalDays =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[64]++, careHelpers.parseFertilizerSchedule(schedule));
    const now =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[65]++, new Date());
    const totalDays =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[66]++, Math.floor((now.getTime() - plantCreatedAt.getTime()) / (1000 * 60 * 60 * 24)));
    // Calculate expected number of care events
    const expectedCareEvents =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[67]++, Math.floor(totalDays / intervalDays));
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[68]++;
    if (expectedCareEvents === 0) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[18][0]++;
      cov_1kbjz2wk4t().s[69]++;
      return 100;
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[18][1]++;
    }
    // Calculate actual care events (only fertilizer for consistency score)
    const fertilizerEvents =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[70]++, careHistory.filter(care => {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().f[10]++;
      cov_1kbjz2wk4t().s[71]++;
      return care.careType === 'fertilizer';
    }));
    const actualCareEvents =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[72]++, fertilizerEvents.length);
    // Calculate score based on adherence to schedule
    const adherenceScore =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[73]++, Math.min(100, actualCareEvents / expectedCareEvents * 100));
    // Bonus points for recent care (within last interval)
    const lastCare =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[74]++, fertilizerEvents[fertilizerEvents.length - 1]);
    const daysSinceLastCare =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[75]++, lastCare ?
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().b[19][0]++, Math.floor((now.getTime() - lastCare.careDate.getTime()) / (1000 * 60 * 60 * 24))) :
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().b[19][1]++, Infinity));
    const recentCareBonus =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[76]++, daysSinceLastCare <= intervalDays ?
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().b[20][0]++, 10) :
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().b[20][1]++, 0));
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[77]++;
    return Math.min(100, adherenceScore + recentCareBonus);
  },
  // Get care status color for UI
  getCareStatusColor: status => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[11]++;
    cov_1kbjz2wk4t().s[78]++;
    switch (status) {
      case 'overdue':
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[21][0]++;
        cov_1kbjz2wk4t().s[79]++;
        return 'text-red-600 bg-red-50 border-red-200';
      case 'due_today':
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[21][1]++;
        cov_1kbjz2wk4t().s[80]++;
        return 'text-amber-600 bg-amber-50 border-amber-200';
      case 'due_soon':
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[21][2]++;
        cov_1kbjz2wk4t().s[81]++;
        return 'text-yellow-600 bg-yellow-50 border-yellow-200';
      case 'healthy':
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[21][3]++;
        cov_1kbjz2wk4t().s[82]++;
        return 'text-green-600 bg-green-50 border-green-200';
      case 'unknown':
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[21][4]++;
        cov_1kbjz2wk4t().s[83]++;
        return 'text-gray-600 bg-gray-50 border-gray-200';
      default:
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[21][5]++;
        cov_1kbjz2wk4t().s[84]++;
        return 'text-gray-600 bg-gray-50 border-gray-200';
    }
  },
  // Get care urgency color for UI
  getCareUrgencyColor: urgency => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[12]++;
    cov_1kbjz2wk4t().s[85]++;
    switch (urgency) {
      case 'critical':
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[22][0]++;
        cov_1kbjz2wk4t().s[86]++;
        return 'bg-red-500';
      case 'high':
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[22][1]++;
        cov_1kbjz2wk4t().s[87]++;
        return 'bg-red-400';
      case 'medium':
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[22][2]++;
        cov_1kbjz2wk4t().s[88]++;
        return 'bg-amber-400';
      case 'low':
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[22][3]++;
        cov_1kbjz2wk4t().s[89]++;
        return 'bg-yellow-400';
      case 'none':
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[22][4]++;
        cov_1kbjz2wk4t().s[90]++;
        return 'bg-green-400';
      default:
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[22][5]++;
        cov_1kbjz2wk4t().s[91]++;
        return 'bg-gray-400';
    }
  },
  // Format care date for display
  formatCareDate: date => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[13]++;
    const now =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[92]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[93]++, now.getTime() - date.getTime());
    const diffDays =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[94]++, Math.floor(diffMs / (1000 * 60 * 60 * 24)));
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[95]++;
    if (diffDays === 0) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[23][0]++;
      cov_1kbjz2wk4t().s[96]++;
      return 'Today';
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[23][1]++;
    }
    cov_1kbjz2wk4t().s[97]++;
    if (diffDays === 1) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[24][0]++;
      cov_1kbjz2wk4t().s[98]++;
      return 'Yesterday';
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[24][1]++;
    }
    cov_1kbjz2wk4t().s[99]++;
    if (diffDays < 7) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[25][0]++;
      cov_1kbjz2wk4t().s[100]++;
      return `${diffDays} days ago`;
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[25][1]++;
    }
    cov_1kbjz2wk4t().s[101]++;
    if (diffDays < 30) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[26][0]++;
      cov_1kbjz2wk4t().s[102]++;
      return `${Math.floor(diffDays / 7)} weeks ago`;
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[26][1]++;
    }
    cov_1kbjz2wk4t().s[103]++;
    if (diffDays < 365) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[27][0]++;
      cov_1kbjz2wk4t().s[104]++;
      return `${Math.floor(diffDays / 30)} months ago`;
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[27][1]++;
    }
    cov_1kbjz2wk4t().s[105]++;
    return `${Math.floor(diffDays / 365)} years ago`;
  },
  // Validate care form data
  validateCareForm: data => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[14]++;
    const errors =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[106]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[107]++, []);
    // Required fields
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[108]++;
    if (!data.plantInstanceId) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[28][0]++;
      cov_1kbjz2wk4t().s[109]++;
      errors.push('Plant instance is required');
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[28][1]++;
    }
    cov_1kbjz2wk4t().s[110]++;
    if (!data.careType) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[29][0]++;
      cov_1kbjz2wk4t().s[111]++;
      errors.push('Care type is required');
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[29][1]++;
    }
    cov_1kbjz2wk4t().s[112]++;
    if (!data.careDate) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[30][0]++;
      cov_1kbjz2wk4t().s[113]++;
      errors.push('Care date is required');
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[30][1]++;
    }
    // Date validation
    cov_1kbjz2wk4t().s[114]++;
    if (data.careDate) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[31][0]++;
      const now =
      /* istanbul ignore next */
      (cov_1kbjz2wk4t().s[115]++, new Date());
      /* istanbul ignore next */
      cov_1kbjz2wk4t().s[116]++;
      if (data.careDate > now) {
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[32][0]++;
        cov_1kbjz2wk4t().s[117]++;
        warnings.push('Care date is in the future');
      } else
      /* istanbul ignore next */
      {
        cov_1kbjz2wk4t().b[32][1]++;
      }
      const oneYearAgo =
      /* istanbul ignore next */
      (cov_1kbjz2wk4t().s[118]++, new Date());
      /* istanbul ignore next */
      cov_1kbjz2wk4t().s[119]++;
      oneYearAgo.setFullYear(oneYearAgo.getFullYear() - 1);
      /* istanbul ignore next */
      cov_1kbjz2wk4t().s[120]++;
      if (data.careDate < oneYearAgo) {
        /* istanbul ignore next */
        cov_1kbjz2wk4t().b[33][0]++;
        cov_1kbjz2wk4t().s[121]++;
        warnings.push('Care date is more than a year ago');
      } else
      /* istanbul ignore next */
      {
        cov_1kbjz2wk4t().b[33][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[31][1]++;
    }
    // Care type specific validation
    cov_1kbjz2wk4t().s[122]++;
    if (
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().b[35][0]++, data.careType === 'fertilizer') &&
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().b[35][1]++, !data.fertilizerType)) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[34][0]++;
      cov_1kbjz2wk4t().s[123]++;
      warnings.push('Consider specifying fertilizer type for better tracking');
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[34][1]++;
    }
    cov_1kbjz2wk4t().s[124]++;
    if (
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().b[37][0]++, data.careType === 'repot') && (
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().b[37][1]++, !data.potSize) ||
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().b[37][2]++, !data.soilType))) {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().b[36][0]++;
      cov_1kbjz2wk4t().s[125]++;
      warnings.push('Consider specifying pot size and soil type for repotting records');
    } else
    /* istanbul ignore next */
    {
      cov_1kbjz2wk4t().b[36][1]++;
    }
    cov_1kbjz2wk4t().s[126]++;
    return {
      isValid: errors.length === 0,
      errors,
      warnings
    };
  },
  // Create care timeline from history
  createCareTimeline: careHistory => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[15]++;
    const sortedHistory =
    /* istanbul ignore next */
    (cov_1kbjz2wk4t().s[127]++, [...careHistory].sort((a, b) => {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().f[16]++;
      cov_1kbjz2wk4t().s[128]++;
      return b.careDate.getTime() - a.careDate.getTime();
    }));
    /* istanbul ignore next */
    cov_1kbjz2wk4t().s[129]++;
    return sortedHistory.map((care, index) => {
      /* istanbul ignore next */
      cov_1kbjz2wk4t().f[17]++;
      const nextCare =
      /* istanbul ignore next */
      (cov_1kbjz2wk4t().s[130]++, sortedHistory[index + 1]);
      const daysSinceLastCare =
      /* istanbul ignore next */
      (cov_1kbjz2wk4t().s[131]++, nextCare ?
      /* istanbul ignore next */
      (cov_1kbjz2wk4t().b[38][0]++, Math.floor((care.careDate.getTime() - nextCare.careDate.getTime()) / (1000 * 60 * 60 * 24))) :
      /* istanbul ignore next */
      (cov_1kbjz2wk4t().b[38][1]++, undefined));
      // Determine if care was on schedule (simplified logic)
      const wasOnSchedule =
      /* istanbul ignore next */
      (cov_1kbjz2wk4t().s[132]++, care.careType === 'fertilizer' ?
      /* istanbul ignore next */
      (cov_1kbjz2wk4t().b[39][0]++, daysSinceLastCare ?
      /* istanbul ignore next */
      (cov_1kbjz2wk4t().b[40][0]++, daysSinceLastCare <= 35) :
      /* istanbul ignore next */
      (cov_1kbjz2wk4t().b[40][1]++, true) // Within 35 days is reasonable
      ) :
      /* istanbul ignore next */
      (cov_1kbjz2wk4t().b[39][1]++, true));
      /* istanbul ignore next */
      cov_1kbjz2wk4t().s[133]++;
      return {
        id: care.id,
        date: care.careDate,
        careType: care.careType,
        notes:
        /* istanbul ignore next */
        (cov_1kbjz2wk4t().b[41][0]++, care.notes) ||
        /* istanbul ignore next */
        (cov_1kbjz2wk4t().b[41][1]++, undefined),
        fertilizerType:
        /* istanbul ignore next */
        (cov_1kbjz2wk4t().b[42][0]++, care.fertilizerType) ||
        /* istanbul ignore next */
        (cov_1kbjz2wk4t().b[42][1]++, undefined),
        potSize:
        /* istanbul ignore next */
        (cov_1kbjz2wk4t().b[43][0]++, care.potSize) ||
        /* istanbul ignore next */
        (cov_1kbjz2wk4t().b[43][1]++, undefined),
        soilType:
        /* istanbul ignore next */
        (cov_1kbjz2wk4t().b[44][0]++, care.soilType) ||
        /* istanbul ignore next */
        (cov_1kbjz2wk4t().b[44][1]++, undefined),
        images: care.images,
        daysSinceLastCare,
        wasOnSchedule
      };
    });
  },
  // Get default quick care actions
  getDefaultQuickCareActions: () => {
    /* istanbul ignore next */
    cov_1kbjz2wk4t().f[18]++;
    cov_1kbjz2wk4t().s[134]++;
    return [{
      id: 'fertilize',
      label: 'Fertilize',
      icon: '🌱',
      careType: 'fertilizer',
      color: 'bg-green-500 hover:bg-green-600',
      description: 'Apply fertilizer to promote growth',
      isEnabled: true
    }, {
      id: 'water',
      label: 'Water',
      icon: '💧',
      careType: 'water',
      color: 'bg-blue-500 hover:bg-blue-600',
      description: 'Water the plant',
      isEnabled: true
    }, {
      id: 'inspect',
      label: 'Inspect',
      icon: '🔍',
      careType: 'inspect',
      color: 'bg-indigo-500 hover:bg-indigo-600',
      description: 'Check for pests or issues',
      isEnabled: true
    }, {
      id: 'prune',
      label: 'Prune',
      icon: '✂️',
      careType: 'prune',
      color: 'bg-purple-500 hover:bg-purple-600',
      description: 'Remove dead or overgrown parts',
      isEnabled: true
    }];
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
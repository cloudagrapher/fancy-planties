services:
  # Your existing services from docker-compose.prod.yml
  postgres:
    image: postgres:16-alpine
    container_name: fancy-planties-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-fancy_planties}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - /mnt/user/appdata/fancy-planties-volumes/postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - fancy-planties-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql

  app:
    image: ghcr.io/cloudagrapher/fancy-planties:latest
    container_name: fancy-planties-app-prod
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      - NODE_ENV=production
      - HOSTNAME=0.0.0.0
      - PORT=3000
      - DISABLE_SECURE_COOKIES=${DISABLE_SECURE_COOKIES:-false}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fancy-planties-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /app/.next/cache
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  # Watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower
    container_name: fancy-planties-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300  # Check every 5 minutes
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=false
    command: fancy-planties-app-prod
    networks:
      - fancy-planties-network

networks:
  fancy-planties-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
{"version":3,"names":["cov_1sqzyq67vl","actualCoverage","s","SignInForm","f","router","_navigation","useRouter","searchParams","useSearchParams","redirectTo","b","get","formData","setFormData","_react","useState","email","password","errors","setErrors","isLoading","setIsLoading","generalError","setGeneralError","handleSubmit","e","preventDefault","validation","_validation","signInSchema","safeParse","success","fieldErrors","error","issues","forEach","issue","field","path","join","message","response","fetch","method","headers","body","JSON","stringify","data","result","json","ok","push","refresh","console","handleChange","name","value","target","prev","_jsxruntime","jsx","className","jsxs","onSubmit","autoComplete","noValidate","htmlFor","id","type","required","onChange","placeholder","undefined","role","disabled"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/auth/SignInForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { signInSchema, type SignInInput } from '@/lib/auth/validation';\n\nexport default function SignInForm() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const redirectTo = searchParams.get('redirect') || '/dashboard';\n  \n  const [formData, setFormData] = useState<SignInInput>({\n    email: '',\n    password: '',\n  });\n  \n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [generalError, setGeneralError] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrors({});\n    setGeneralError('');\n\n    try {\n      // Validate form data\n      const validation = signInSchema.safeParse(formData);\n      if (!validation.success) {\n        const fieldErrors: Record<string, string> = {};\n        validation.error.issues.forEach((issue) => {\n          const field = issue.path.join('.');\n          fieldErrors[field] = issue.message;\n        });\n        setErrors(fieldErrors);\n        return;\n      }\n\n      // Submit to API\n      const response = await fetch('/api/auth/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(validation.data),\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        if (result.errors) {\n          setErrors(result.errors);\n        } else {\n          setGeneralError(result.error || 'Sign in failed');\n        }\n        return;\n      }\n\n      // Success - redirect to dashboard or intended page\n      router.push(redirectTo);\n      router.refresh();\n      \n    } catch (error) {\n      console.error('Sign in error:', error);\n      setGeneralError('An unexpected error occurred. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n  };\n\n  return (\n    <div className={`${isLoading ? 'form--loading' : ''}`}>\n      <form onSubmit={handleSubmit} className=\"space-y-6\" autoComplete=\"on\" noValidate>\n        {generalError && (\n          <div className=\"form-validation-summary\">\n            <div className=\"form-validation-summary-title\">\n              Sign In Failed\n            </div>\n            <ul className=\"form-validation-summary-list\">\n              <li className=\"form-validation-summary-item\">{generalError}</li>\n            </ul>\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"signin-email\" className=\"form-label form-label--required\">\n            Email Address\n          </label>\n          <input\n            id=\"signin-email\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            required\n            value={formData.email}\n            onChange={handleChange}\n            className={`form-input ${errors.email ? 'form-input--error' : ''}`}\n            placeholder=\"Enter your email address\"\n            aria-describedby={errors.email ? 'signin-email-error' : undefined}\n          />\n          {errors.email && (\n            <div id=\"signin-email-error\" className=\"form-error\" role=\"alert\">\n              {errors.email}\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"signin-password\" className=\"form-label form-label--required\">\n            Password\n          </label>\n          <input\n            id=\"signin-password\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            required\n            value={formData.password}\n            onChange={handleChange}\n            className={`form-input ${errors.password ? 'form-input--error' : ''}`}\n            placeholder=\"Enter your password\"\n            aria-describedby={errors.password ? 'signin-password-error' : undefined}\n          />\n          {errors.password && (\n            <div id=\"signin-password-error\" className=\"form-error\" role=\"alert\">\n              {errors.password}\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-actions form-actions--full\">\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className={`btn btn--primary btn--full ${isLoading ? 'btn--loading' : ''}`}\n            aria-describedby={isLoading ? 'signin-loading' : undefined}\n          >\n            {isLoading ? 'Signing in...' : 'Sign In'}\n          </button>\n          {isLoading && (\n            <span id=\"signin-loading\" className=\"sr-only\">\n              Please wait while we sign you in\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}"],"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","ignoreList":[]}
{"version":3,"names":["getEmailErrorMessage","cov_2ptld1nhs","f","s","shouldRetryEmailOperation","error","_email","EmailServiceError","b","code","Error","console","message","includes"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/lib/utils/email-errors.ts"],"sourcesContent":["import { EmailServiceError } from '@/lib/services/email';\n\nexport function getEmailErrorMessage(error: unknown): string {\n  if (error instanceof EmailServiceError) {\n    switch (error.code) {\n      case 'QUOTA_EXCEEDED':\n        return 'Email service is temporarily unavailable. Please try again later or contact support.';\n      case 'INVALID_EMAIL':\n        return 'The email address appears to be invalid. Please check and try again.';\n      case 'NETWORK_ERROR':\n        return 'Network error occurred while sending email. Please check your connection and try again.';\n      case 'API_ERROR':\n      default:\n        return 'Unable to send verification email at this time. Please try again in a few minutes.';\n    }\n  }\n\n  if (error instanceof Error) {\n    // Log the actual error for debugging but return generic message\n    console.error('Unexpected email error:', error.message);\n    return 'Unable to send verification email. Please try again later.';\n  }\n\n  return 'An unexpected error occurred. Please try again.';\n}\n\nexport function shouldRetryEmailOperation(error: unknown): boolean {\n  if (error instanceof EmailServiceError) {\n    // Don't retry on these errors\n    return !['INVALID_EMAIL', 'QUOTA_EXCEEDED'].includes(error.code);\n  }\n  \n  // Retry on other errors\n  return true;\n}"],"mappingsgBA,qBAAA;IAAA;IAAAC,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAAAH,oBAAA;;MAwBAI,0BAAA;IAAA;IAAAH,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAAAC,yBAAA;;;;;iCA1BkB;AAE3B,SAASJ,qBAAqBK,KAAc;EAAA;EAAAJ,aAAA,GAAAC,CAAA;EAAAD,aAAA,GAAAE,CAAA;EACjD,IAAIE,KAAA,YAAiBC,MAAA,CAAAC,iBAAiB,EAAE;IAAA;IAAAN,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAE,CAAA;IACtC,QAAQE,KAAA,CAAMI,IAAI;MAChB,KAAK;QAAA;QAAAR,aAAA,GAAAO,CAAA;QAAAP,aAAA,GAAAE,CAAA;QACH,OAAO;MACT,KAAK;QAAA;QAAAF,aAAA,GAAAO,CAAA;QAAAP,aAAA,GAAAE,CAAA;QACH,OAAO;MACT,KAAK;QAAA;QAAAF,aAAA,GAAAO,CAAA;QAAAP,aAAA,GAAAE,CAAA;QACH,OAAO;MACT,KAAK;QAAA;QAAAF,aAAA,GAAAO,CAAA;MACL;QAAA;QAAAP,aAAA,GAAAO,CAAA;QAAAP,aAAA,GAAAE,CAAA;QACE,OAAO;IACX;EACF;EAAA;EAAA;IAAAF,aAAA,GAAAO,CAAA;EAAA;EAAAP,aAAA,GAAAE,CAAA;EAEA,IAAIE,KAAA,YAAiBK,KAAA,EAAO;IAAA;IAAAT,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAE,CAAA;IAC1B;IACAQ,OAAA,CAAQN,KAAK,CAAC,2BAA2BA,KAAA,CAAMO,OAAO;IAAA;IAAAX,aAAA,GAAAE,CAAA;IACtD,OAAO;EACT;EAAA;EAAA;IAAAF,aAAA,GAAAO,CAAA;EAAA;EAAAP,aAAA,GAAAE,CAAA;EAEA,OAAO;AACT;AAEO,SAASC,0BAA0BC,KAAc;EAAA;EAAAJ,aAAA,GAAAC,CAAA;EAAAD,aAAA,GAAAE,CAAA;EACtD,IAAIE,KAAA,YAAiBC,MAAA,CAAAC,iBAAiB,EAAE;IAAA;IAAAN,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAE,CAAA;IACtC;IACA,OAAO,CAAC,CAAC,iBAAiB,iBAAiB,CAACU,QAAQ,CAACR,KAAA,CAAMI,IAAI;EACjE;EAAA;EAAA;IAAAR,aAAA,GAAAO,CAAA;EAAA;EAEA;EAAAP,aAAA,GAAAE,CAAA;EACA,OAAO;AACT","ignoreList":[]}
d457bc9129b3ea4c9d2aa00b48b57720
'use client';
"use strict";

/* istanbul ignore next */
function cov_1lx4bagxiv() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/components/propagations/PropagationForm.tsx";
  var hash = "e51d926474927c55ded4a54861382a692f2eeb32";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/components/propagations/PropagationForm.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 76
        }
      },
      "7": {
        start: {
          line: 16,
          column: 45
        },
        end: {
          line: 16,
          column: 113
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 6
        }
      },
      "9": {
        start: {
          line: 23,
          column: 36
        },
        end: {
          line: 35,
          column: 6
        }
      },
      "10": {
        start: {
          line: 36,
          column: 46
        },
        end: {
          line: 36,
          column: 72
        }
      },
      "11": {
        start: {
          line: 37,
          column: 50
        },
        end: {
          line: 37,
          column: 74
        }
      },
      "12": {
        start: {
          line: 38,
          column: 44
        },
        end: {
          line: 38,
          column: 71
        }
      },
      "13": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 39,
          column: 56
        }
      },
      "14": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 47,
          column: 7
        }
      },
      "15": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "16": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 48
        }
      },
      "17": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 55,
          column: 7
        }
      },
      "18": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "19": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 51
        }
      },
      "20": {
        start: {
          line: 56,
          column: 33
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "21": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "22": {
        start: {
          line: 58,
          column: 29
        },
        end: {
          line: 58,
          column: 97
        }
      },
      "23": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "24": {
        start: {
          line: 60,
          column: 31
        },
        end: {
          line: 60,
          column: 52
        }
      },
      "25": {
        start: {
          line: 62,
          column: 34
        },
        end: {
          line: 62,
          column: 66
        }
      },
      "26": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 46
        }
      },
      "27": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 69
        }
      },
      "28": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 35
        }
      },
      "29": {
        start: {
          line: 70,
          column: 30
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "30": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "31": {
        start: {
          line: 73,
          column: 30
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "32": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 40
        }
      },
      "33": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 92,
          column: 20
        }
      },
      "34": {
        start: {
          line: 88,
          column: 33
        },
        end: {
          line: 92,
          column: 17
        }
      },
      "35": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 35
        }
      },
      "36": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 99,
          column: 20
        }
      },
      "37": {
        start: {
          line: 95,
          column: 33
        },
        end: {
          line: 99,
          column: 17
        }
      },
      "38": {
        start: {
          line: 102,
          column: 30
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "39": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 85
        }
      },
      "40": {
        start: {
          line: 107,
          column: 30
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "41": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 114,
          column: 16
        }
      },
      "42": {
        start: {
          line: 108,
          column: 29
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "43": {
        start: {
          line: 116,
          column: 30
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "44": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 120,
          column: 16
        }
      },
      "45": {
        start: {
          line: 117,
          column: 29
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "46": {
        start: {
          line: 119,
          column: 51
        },
        end: {
          line: 119,
          column: 62
        }
      },
      "47": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "48": {
        start: {
          line: 123,
          column: 26
        },
        end: {
          line: 123,
          column: 28
        }
      },
      "49": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "50": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 61
        }
      },
      "51": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "52": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 56
        }
      },
      "53": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "54": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 56
        }
      },
      "55": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "56": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 61
        }
      },
      "57": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "58": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 94
        }
      },
      "59": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "60": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 95
        }
      },
      "61": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 29
        }
      },
      "62": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 51
        }
      },
      "63": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "64": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 27
        }
      },
      "65": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "66": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 19
        }
      },
      "67": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 30
        }
      },
      "68": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "69": {
        start: {
          line: 152,
          column: 24
        },
        end: {
          line: 152,
          column: 97
        }
      },
      "70": {
        start: {
          line: 153,
          column: 27
        },
        end: {
          line: 153,
          column: 55
        }
      },
      "71": {
        start: {
          line: 154,
          column: 29
        },
        end: {
          line: 167,
          column: 14
        }
      },
      "72": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "73": {
        start: {
          line: 169,
          column: 34
        },
        end: {
          line: 169,
          column: 55
        }
      },
      "74": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 81
        }
      },
      "75": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 24
        }
      },
      "76": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 62
        }
      },
      "77": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 177,
          column: 15
        }
      },
      "78": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 35
        }
      },
      "79": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 679,
          column: 7
        }
      },
      "80": {
        start: {
          line: 271,
          column: 79
        },
        end: {
          line: 277,
          column: 75
        }
      },
      "81": {
        start: {
          line: 271,
          column: 100
        },
        end: {
          line: 277,
          column: 73
        }
      },
      "82": {
        start: {
          line: 302,
          column: 79
        },
        end: {
          line: 308,
          column: 75
        }
      },
      "83": {
        start: {
          line: 302,
          column: 100
        },
        end: {
          line: 308,
          column: 73
        }
      },
      "84": {
        start: {
          line: 346,
          column: 71
        },
        end: {
          line: 349,
          column: 67
        }
      },
      "85": {
        start: {
          line: 346,
          column: 92
        },
        end: {
          line: 349,
          column: 65
        }
      },
      "86": {
        start: {
          line: 356,
          column: 106
        },
        end: {
          line: 363,
          column: 79
        }
      },
      "87": {
        start: {
          line: 395,
          column: 71
        },
        end: {
          line: 398,
          column: 67
        }
      },
      "88": {
        start: {
          line: 395,
          column: 92
        },
        end: {
          line: 398,
          column: 65
        }
      },
      "89": {
        start: {
          line: 437,
          column: 71
        },
        end: {
          line: 440,
          column: 67
        }
      },
      "90": {
        start: {
          line: 437,
          column: 92
        },
        end: {
          line: 440,
          column: 65
        }
      },
      "91": {
        start: {
          line: 461,
          column: 71
        },
        end: {
          line: 464,
          column: 67
        }
      },
      "92": {
        start: {
          line: 461,
          column: 92
        },
        end: {
          line: 464,
          column: 65
        }
      },
      "93": {
        start: {
          line: 483,
          column: 71
        },
        end: {
          line: 486,
          column: 67
        }
      },
      "94": {
        start: {
          line: 483,
          column: 92
        },
        end: {
          line: 486,
          column: 65
        }
      },
      "95": {
        start: {
          line: 510,
          column: 71
        },
        end: {
          line: 513,
          column: 67
        }
      },
      "96": {
        start: {
          line: 510,
          column: 92
        },
        end: {
          line: 513,
          column: 65
        }
      },
      "97": {
        start: {
          line: 530,
          column: 71
        },
        end: {
          line: 533,
          column: 67
        }
      },
      "98": {
        start: {
          line: 530,
          column: 92
        },
        end: {
          line: 533,
          column: 65
        }
      },
      "99": {
        start: {
          line: 566,
          column: 63
        },
        end: {
          line: 569,
          column: 59
        }
      },
      "100": {
        start: {
          line: 566,
          column: 84
        },
        end: {
          line: 569,
          column: 57
        }
      },
      "101": {
        start: {
          line: 584,
          column: 108
        },
        end: {
          line: 603,
          column: 61
        }
      },
      "102": {
        start: {
          line: 596,
          column: 77
        },
        end: {
          line: 596,
          column: 101
        }
      },
      "103": {
        start: {
          line: 613,
          column: 74
        },
        end: {
          line: 613,
          column: 106
        }
      },
      "104": {
        start: {
          line: 614,
          column: 60
        },
        end: {
          line: 622,
          column: 63
        }
      },
      "105": {
        start: {
          line: 615,
          column: 79
        },
        end: {
          line: 615,
          column: 95
        }
      },
      "106": {
        start: {
          line: 616,
          column: 64
        },
        end: {
          line: 620,
          column: 66
        }
      },
      "107": {
        start: {
          line: 617,
          column: 68
        },
        end: {
          line: 619,
          column: 69
        }
      },
      "108": {
        start: {
          line: 618,
          column: 72
        },
        end: {
          line: 618,
          column: 111
        }
      },
      "109": {
        start: {
          line: 621,
          column: 64
        },
        end: {
          line: 621,
          column: 91
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "PropagationForm",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 24
          }
        },
        loc: {
          start: {
            line: 22,
            column: 62
          },
          end: {
            line: 680,
            column: 1
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 41,
            column: 27
          }
        },
        loc: {
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 41
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 49,
            column: 26
          },
          end: {
            line: 49,
            column: 27
          }
        },
        loc: {
          start: {
            line: 49,
            column: 30
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 49
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 34
          }
        },
        loc: {
          start: {
            line: 56,
            column: 50
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 56
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 70,
            column: 31
          }
        },
        loc: {
          start: {
            line: 70,
            column: 39
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 70
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 88,
            column: 24
          },
          end: {
            line: 88,
            column: 25
          }
        },
        loc: {
          start: {
            line: 88,
            column: 33
          },
          end: {
            line: 92,
            column: 17
          }
        },
        line: 88
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 95,
            column: 24
          },
          end: {
            line: 95,
            column: 25
          }
        },
        loc: {
          start: {
            line: 95,
            column: 33
          },
          end: {
            line: 99,
            column: 17
          }
        },
        line: 95
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 102,
            column: 31
          }
        },
        loc: {
          start: {
            line: 102,
            column: 39
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 102
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 107,
            column: 30
          },
          end: {
            line: 107,
            column: 31
          }
        },
        loc: {
          start: {
            line: 107,
            column: 43
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 107
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 108,
            column: 20
          },
          end: {
            line: 108,
            column: 21
          }
        },
        loc: {
          start: {
            line: 108,
            column: 29
          },
          end: {
            line: 114,
            column: 13
          }
        },
        line: 108
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 116,
            column: 30
          },
          end: {
            line: 116,
            column: 31
          }
        },
        loc: {
          start: {
            line: 116,
            column: 39
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 116
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 117,
            column: 20
          },
          end: {
            line: 117,
            column: 21
          }
        },
        loc: {
          start: {
            line: 117,
            column: 29
          },
          end: {
            line: 120,
            column: 13
          }
        },
        line: 117
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 119,
            column: 43
          },
          end: {
            line: 119,
            column: 44
          }
        },
        loc: {
          start: {
            line: 119,
            column: 51
          },
          end: {
            line: 119,
            column: 62
          }
        },
        line: 119
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 122,
            column: 25
          },
          end: {
            line: 122,
            column: 26
          }
        },
        loc: {
          start: {
            line: 122,
            column: 29
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 122
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 145,
            column: 25
          },
          end: {
            line: 145,
            column: 26
          }
        },
        loc: {
          start: {
            line: 145,
            column: 36
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 145
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 271,
            column: 74
          },
          end: {
            line: 271,
            column: 75
          }
        },
        loc: {
          start: {
            line: 271,
            column: 79
          },
          end: {
            line: 277,
            column: 75
          }
        },
        line: 271
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 271,
            column: 91
          },
          end: {
            line: 271,
            column: 92
          }
        },
        loc: {
          start: {
            line: 271,
            column: 100
          },
          end: {
            line: 277,
            column: 73
          }
        },
        line: 271
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 302,
            column: 74
          },
          end: {
            line: 302,
            column: 75
          }
        },
        loc: {
          start: {
            line: 302,
            column: 79
          },
          end: {
            line: 308,
            column: 75
          }
        },
        line: 302
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 302,
            column: 91
          },
          end: {
            line: 302,
            column: 92
          }
        },
        loc: {
          start: {
            line: 302,
            column: 100
          },
          end: {
            line: 308,
            column: 73
          }
        },
        line: 302
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 346,
            column: 66
          },
          end: {
            line: 346,
            column: 67
          }
        },
        loc: {
          start: {
            line: 346,
            column: 71
          },
          end: {
            line: 349,
            column: 67
          }
        },
        line: 346
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 346,
            column: 83
          },
          end: {
            line: 346,
            column: 84
          }
        },
        loc: {
          start: {
            line: 346,
            column: 92
          },
          end: {
            line: 349,
            column: 65
          }
        },
        line: 346
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 356,
            column: 80
          },
          end: {
            line: 356,
            column: 81
          }
        },
        loc: {
          start: {
            line: 356,
            column: 106
          },
          end: {
            line: 363,
            column: 79
          }
        },
        line: 356
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 395,
            column: 66
          },
          end: {
            line: 395,
            column: 67
          }
        },
        loc: {
          start: {
            line: 395,
            column: 71
          },
          end: {
            line: 398,
            column: 67
          }
        },
        line: 395
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 395,
            column: 83
          },
          end: {
            line: 395,
            column: 84
          }
        },
        loc: {
          start: {
            line: 395,
            column: 92
          },
          end: {
            line: 398,
            column: 65
          }
        },
        line: 395
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 437,
            column: 66
          },
          end: {
            line: 437,
            column: 67
          }
        },
        loc: {
          start: {
            line: 437,
            column: 71
          },
          end: {
            line: 440,
            column: 67
          }
        },
        line: 437
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 437,
            column: 83
          },
          end: {
            line: 437,
            column: 84
          }
        },
        loc: {
          start: {
            line: 437,
            column: 92
          },
          end: {
            line: 440,
            column: 65
          }
        },
        line: 437
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 461,
            column: 66
          },
          end: {
            line: 461,
            column: 67
          }
        },
        loc: {
          start: {
            line: 461,
            column: 71
          },
          end: {
            line: 464,
            column: 67
          }
        },
        line: 461
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 461,
            column: 83
          },
          end: {
            line: 461,
            column: 84
          }
        },
        loc: {
          start: {
            line: 461,
            column: 92
          },
          end: {
            line: 464,
            column: 65
          }
        },
        line: 461
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 483,
            column: 66
          },
          end: {
            line: 483,
            column: 67
          }
        },
        loc: {
          start: {
            line: 483,
            column: 71
          },
          end: {
            line: 486,
            column: 67
          }
        },
        line: 483
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 483,
            column: 83
          },
          end: {
            line: 483,
            column: 84
          }
        },
        loc: {
          start: {
            line: 483,
            column: 92
          },
          end: {
            line: 486,
            column: 65
          }
        },
        line: 483
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 510,
            column: 66
          },
          end: {
            line: 510,
            column: 67
          }
        },
        loc: {
          start: {
            line: 510,
            column: 71
          },
          end: {
            line: 513,
            column: 67
          }
        },
        line: 510
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 510,
            column: 83
          },
          end: {
            line: 510,
            column: 84
          }
        },
        loc: {
          start: {
            line: 510,
            column: 92
          },
          end: {
            line: 513,
            column: 65
          }
        },
        line: 510
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 530,
            column: 66
          },
          end: {
            line: 530,
            column: 67
          }
        },
        loc: {
          start: {
            line: 530,
            column: 71
          },
          end: {
            line: 533,
            column: 67
          }
        },
        line: 530
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 530,
            column: 83
          },
          end: {
            line: 530,
            column: 84
          }
        },
        loc: {
          start: {
            line: 530,
            column: 92
          },
          end: {
            line: 533,
            column: 65
          }
        },
        line: 530
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 566,
            column: 58
          },
          end: {
            line: 566,
            column: 59
          }
        },
        loc: {
          start: {
            line: 566,
            column: 63
          },
          end: {
            line: 569,
            column: 59
          }
        },
        line: 566
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 566,
            column: 75
          },
          end: {
            line: 566,
            column: 76
          }
        },
        loc: {
          start: {
            line: 566,
            column: 84
          },
          end: {
            line: 569,
            column: 57
          }
        },
        line: 566
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 584,
            column: 78
          },
          end: {
            line: 584,
            column: 79
          }
        },
        loc: {
          start: {
            line: 584,
            column: 108
          },
          end: {
            line: 603,
            column: 61
          }
        },
        line: 584
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 596,
            column: 73
          },
          end: {
            line: 596,
            column: 74
          }
        },
        loc: {
          start: {
            line: 596,
            column: 77
          },
          end: {
            line: 596,
            column: 101
          }
        },
        line: 596
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 612,
            column: 66
          },
          end: {
            line: 612,
            column: 67
          }
        },
        loc: {
          start: {
            line: 612,
            column: 71
          },
          end: {
            line: 623,
            column: 57
          }
        },
        line: 612
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 614,
            column: 74
          },
          end: {
            line: 614,
            column: 75
          }
        },
        loc: {
          start: {
            line: 614,
            column: 82
          },
          end: {
            line: 622,
            column: 61
          }
        },
        line: 614
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 616,
            column: 80
          },
          end: {
            line: 616,
            column: 81
          }
        },
        loc: {
          start: {
            line: 616,
            column: 89
          },
          end: {
            line: 620,
            column: 65
          }
        },
        line: 616
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 18,
            column: 38
          }
        }, {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 20,
            column: 5
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 14
          }
        }, {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 32
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 17
          },
          end: {
            line: 24,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 17
          },
          end: {
            line: 24,
            column: 37
          }
        }, {
          start: {
            line: 24,
            column: 41
          },
          end: {
            line: 24,
            column: 45
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 55
          }
        }, {
          start: {
            line: 25,
            column: 59
          },
          end: {
            line: 25,
            column: 63
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 39
          }
        }, {
          start: {
            line: 26,
            column: 43
          },
          end: {
            line: 26,
            column: 45
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 39
          }
        }, {
          start: {
            line: 27,
            column: 43
          },
          end: {
            line: 27,
            column: 45
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 28,
            column: 150
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 109
          }
        }, {
          start: {
            line: 28,
            column: 112
          },
          end: {
            line: 28,
            column: 150
          }
        }],
        line: 28
      },
      "7": {
        loc: {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 35
          }
        }, {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 29,
            column: 48
          }
        }],
        line: 29
      },
      "8": {
        loc: {
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 30,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 30,
            column: 43
          }
        }, {
          start: {
            line: 30,
            column: 47
          },
          end: {
            line: 30,
            column: 57
          }
        }],
        line: 30
      },
      "9": {
        loc: {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 51
          }
        }, {
          start: {
            line: 31,
            column: 55
          },
          end: {
            line: 31,
            column: 59
          }
        }],
        line: 31
      },
      "10": {
        loc: {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 65
          }
        }, {
          start: {
            line: 32,
            column: 69
          },
          end: {
            line: 32,
            column: 71
          }
        }],
        line: 32
      },
      "11": {
        loc: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 33
          }
        }, {
          start: {
            line: 33,
            column: 37
          },
          end: {
            line: 33,
            column: 39
          }
        }],
        line: 33
      },
      "12": {
        loc: {
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 34,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 34,
            column: 35
          }
        }, {
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 34,
            column: 41
          }
        }],
        line: 34
      },
      "13": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "14": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "15": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "16": {
        loc: {
          start: {
            line: 62,
            column: 34
          },
          end: {
            line: 62,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 34
          },
          end: {
            line: 62,
            column: 50
          }
        }, {
          start: {
            line: 62,
            column: 54
          },
          end: {
            line: 62,
            column: 60
          }
        }, {
          start: {
            line: 62,
            column: 64
          },
          end: {
            line: 62,
            column: 66
          }
        }],
        line: 62
      },
      "17": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: 93,
            column: 15
          },
          end: {
            line: 100,
            column: 9
          }
        }],
        line: 71
      },
      "18": {
        loc: {
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 78,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 78,
            column: 40
          }
        }, {
          start: {
            line: 78,
            column: 44
          },
          end: {
            line: 78,
            column: 48
          }
        }],
        line: 78
      },
      "19": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "20": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "21": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "22": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "23": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "24": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 136,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 136,
            column: 46
          }
        }, {
          start: {
            line: 136,
            column: 50
          },
          end: {
            line: 136,
            column: 76
          }
        }],
        line: 136
      },
      "25": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "26": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 46
          }
        }, {
          start: {
            line: 139,
            column: 50
          },
          end: {
            line: 139,
            column: 74
          }
        }],
        line: 139
      },
      "27": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "28": {
        loc: {
          start: {
            line: 152,
            column: 24
          },
          end: {
            line: 152,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 38
          },
          end: {
            line: 152,
            column: 75
          }
        }, {
          start: {
            line: 152,
            column: 78
          },
          end: {
            line: 152,
            column: 97
          }
        }],
        line: 152
      },
      "29": {
        loc: {
          start: {
            line: 153,
            column: 27
          },
          end: {
            line: 153,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 41
          },
          end: {
            line: 153,
            column: 46
          }
        }, {
          start: {
            line: 153,
            column: 49
          },
          end: {
            line: 153,
            column: 55
          }
        }],
        line: 153
      },
      "30": {
        loc: {
          start: {
            line: 163,
            column: 38
          },
          end: {
            line: 163,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 75
          },
          end: {
            line: 163,
            column: 100
          }
        }, {
          start: {
            line: 163,
            column: 103
          },
          end: {
            line: 163,
            column: 107
          }
        }],
        line: 163
      },
      "31": {
        loc: {
          start: {
            line: 164,
            column: 36
          },
          end: {
            line: 164,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 164,
            column: 73
          },
          end: {
            line: 164,
            column: 96
          }
        }, {
          start: {
            line: 164,
            column: 99
          },
          end: {
            line: 164,
            column: 103
          }
        }],
        line: 164
      },
      "32": {
        loc: {
          start: {
            line: 165,
            column: 43
          },
          end: {
            line: 165,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 80
          },
          end: {
            line: 165,
            column: 110
          }
        }, {
          start: {
            line: 165,
            column: 113
          },
          end: {
            line: 165,
            column: 117
          }
        }],
        line: 165
      },
      "33": {
        loc: {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 171,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 171,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "34": {
        loc: {
          start: {
            line: 170,
            column: 32
          },
          end: {
            line: 170,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 32
          },
          end: {
            line: 170,
            column: 47
          }
        }, {
          start: {
            line: 170,
            column: 51
          },
          end: {
            line: 170,
            column: 79
          }
        }],
        line: 170
      },
      "35": {
        loc: {
          start: {
            line: 176,
            column: 24
          },
          end: {
            line: 176,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 176,
            column: 49
          },
          end: {
            line: 176,
            column: 62
          }
        }, {
          start: {
            line: 176,
            column: 65
          },
          end: {
            line: 176,
            column: 93
          }
        }],
        line: 176
      },
      "36": {
        loc: {
          start: {
            line: 197,
            column: 42
          },
          end: {
            line: 197,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 197,
            column: 56
          },
          end: {
            line: 197,
            column: 74
          }
        }, {
          start: {
            line: 197,
            column: 77
          },
          end: {
            line: 197,
            column: 98
          }
        }],
        line: 197
      },
      "37": {
        loc: {
          start: {
            line: 227,
            column: 63
          },
          end: {
            line: 235,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 227,
            column: 79
          },
          end: {
            line: 235,
            column: 49
          }
        }, {
          start: {
            line: 235,
            column: 52
          },
          end: {
            line: 235,
            column: 56
          }
        }],
        line: 227
      },
      "38": {
        loc: {
          start: {
            line: 241,
            column: 44
          },
          end: {
            line: 244,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 44
          },
          end: {
            line: 241,
            column: 58
          }
        }, {
          start: {
            line: 241,
            column: 76
          },
          end: {
            line: 244,
            column: 46
          }
        }],
        line: 241
      },
      "39": {
        loc: {
          start: {
            line: 245,
            column: 44
          },
          end: {
            line: 251,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 44
          },
          end: {
            line: 245,
            column: 57
          }
        }, {
          start: {
            line: 245,
            column: 75
          },
          end: {
            line: 251,
            column: 46
          }
        }],
        line: 245
      },
      "40": {
        loc: {
          start: {
            line: 254,
            column: 36
          },
          end: {
            line: 328,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 36
          },
          end: {
            line: 254,
            column: 52
          }
        }, {
          start: {
            line: 254,
            column: 70
          },
          end: {
            line: 328,
            column: 38
          }
        }],
        line: 254
      },
      "41": {
        loc: {
          start: {
            line: 329,
            column: 36
          },
          end: {
            line: 383,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 36
          },
          end: {
            line: 329,
            column: 70
          }
        }, {
          start: {
            line: 329,
            column: 88
          },
          end: {
            line: 383,
            column: 38
          }
        }],
        line: 329
      },
      "42": {
        loc: {
          start: {
            line: 335,
            column: 44
          },
          end: {
            line: 377,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 335,
            column: 78
          },
          end: {
            line: 341,
            column: 46
          }
        }, {
          start: {
            line: 341,
            column: 49
          },
          end: {
            line: 377,
            column: 46
          }
        }],
        line: 335
      },
      "43": {
        loc: {
          start: {
            line: 341,
            column: 49
          },
          end: {
            line: 377,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 341,
            column: 92
          },
          end: {
            line: 371,
            column: 46
          }
        }, {
          start: {
            line: 371,
            column: 63
          },
          end: {
            line: 377,
            column: 46
          }
        }],
        line: 341
      },
      "44": {
        loc: {
          start: {
            line: 345,
            column: 63
          },
          end: {
            line: 345,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 63
          },
          end: {
            line: 345,
            column: 88
          }
        }, {
          start: {
            line: 345,
            column: 92
          },
          end: {
            line: 345,
            column: 94
          }
        }],
        line: 345
      },
      "45": {
        loc: {
          start: {
            line: 348,
            column: 86
          },
          end: {
            line: 348,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 348,
            column: 103
          },
          end: {
            line: 348,
            column: 127
          }
        }, {
          start: {
            line: 348,
            column: 130
          },
          end: {
            line: 348,
            column: 134
          }
        }],
        line: 348
      },
      "46": {
        loc: {
          start: {
            line: 350,
            column: 166
          },
          end: {
            line: 350,
            column: 228
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 350,
            column: 192
          },
          end: {
            line: 350,
            column: 208
          }
        }, {
          start: {
            line: 350,
            column: 211
          },
          end: {
            line: 350,
            column: 228
          }
        }],
        line: 350
      },
      "47": {
        loc: {
          start: {
            line: 378,
            column: 44
          },
          end: {
            line: 381,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 378,
            column: 44
          },
          end: {
            line: 378,
            column: 67
          }
        }, {
          start: {
            line: 378,
            column: 85
          },
          end: {
            line: 381,
            column: 46
          }
        }],
        line: 378
      },
      "48": {
        loc: {
          start: {
            line: 384,
            column: 36
          },
          end: {
            line: 448,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 36
          },
          end: {
            line: 384,
            column: 70
          }
        }, {
          start: {
            line: 384,
            column: 88
          },
          end: {
            line: 448,
            column: 38
          }
        }],
        line: 384
      },
      "49": {
        loc: {
          start: {
            line: 394,
            column: 63
          },
          end: {
            line: 394,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 63
          },
          end: {
            line: 394,
            column: 86
          }
        }, {
          start: {
            line: 394,
            column: 90
          },
          end: {
            line: 394,
            column: 92
          }
        }],
        line: 394
      },
      "50": {
        loc: {
          start: {
            line: 399,
            column: 166
          },
          end: {
            line: 399,
            column: 226
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 399,
            column: 190
          },
          end: {
            line: 399,
            column: 206
          }
        }, {
          start: {
            line: 399,
            column: 209
          },
          end: {
            line: 399,
            column: 226
          }
        }],
        line: 399
      },
      "51": {
        loc: {
          start: {
            line: 423,
            column: 52
          },
          end: {
            line: 426,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 423,
            column: 52
          },
          end: {
            line: 423,
            column: 73
          }
        }, {
          start: {
            line: 423,
            column: 91
          },
          end: {
            line: 426,
            column: 54
          }
        }],
        line: 423
      },
      "52": {
        loc: {
          start: {
            line: 449,
            column: 36
          },
          end: {
            line: 497,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 449,
            column: 36
          },
          end: {
            line: 449,
            column: 52
          }
        }, {
          start: {
            line: 449,
            column: 56
          },
          end: {
            line: 449,
            column: 75
          }
        }, {
          start: {
            line: 449,
            column: 93
          },
          end: {
            line: 497,
            column: 38
          }
        }],
        line: 449
      },
      "53": {
        loc: {
          start: {
            line: 468,
            column: 52
          },
          end: {
            line: 471,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 468,
            column: 52
          },
          end: {
            line: 468,
            column: 67
          }
        }, {
          start: {
            line: 468,
            column: 85
          },
          end: {
            line: 471,
            column: 54
          }
        }],
        line: 468
      },
      "54": {
        loc: {
          start: {
            line: 490,
            column: 52
          },
          end: {
            line: 493,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 490,
            column: 52
          },
          end: {
            line: 490,
            column: 67
          }
        }, {
          start: {
            line: 490,
            column: 85
          },
          end: {
            line: 493,
            column: 54
          }
        }],
        line: 490
      },
      "55": {
        loc: {
          start: {
            line: 498,
            column: 36
          },
          end: {
            line: 557,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 498,
            column: 36
          },
          end: {
            line: 498,
            column: 52
          }
        }, {
          start: {
            line: 498,
            column: 56
          },
          end: {
            line: 498,
            column: 75
          }
        }, {
          start: {
            line: 498,
            column: 93
          },
          end: {
            line: 557,
            column: 38
          }
        }],
        line: 498
      },
      "56": {
        loc: {
          start: {
            line: 516,
            column: 52
          },
          end: {
            line: 519,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 516,
            column: 52
          },
          end: {
            line: 516,
            column: 70
          }
        }, {
          start: {
            line: 516,
            column: 88
          },
          end: {
            line: 519,
            column: 54
          }
        }],
        line: 516
      },
      "57": {
        loc: {
          start: {
            line: 558,
            column: 36
          },
          end: {
            line: 575,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 558,
            column: 36
          },
          end: {
            line: 558,
            column: 52
          }
        }, {
          start: {
            line: 558,
            column: 56
          },
          end: {
            line: 558,
            column: 75
          }
        }, {
          start: {
            line: 558,
            column: 93
          },
          end: {
            line: 575,
            column: 38
          }
        }],
        line: 558
      },
      "58": {
        loc: {
          start: {
            line: 576,
            column: 36
          },
          end: {
            line: 647,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 576,
            column: 36
          },
          end: {
            line: 576,
            column: 52
          }
        }, {
          start: {
            line: 576,
            column: 56
          },
          end: {
            line: 576,
            column: 75
          }
        }, {
          start: {
            line: 576,
            column: 93
          },
          end: {
            line: 647,
            column: 38
          }
        }],
        line: 576
      },
      "59": {
        loc: {
          start: {
            line: 582,
            column: 44
          },
          end: {
            line: 604,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 582,
            column: 44
          },
          end: {
            line: 582,
            column: 70
          }
        }, {
          start: {
            line: 582,
            column: 88
          },
          end: {
            line: 604,
            column: 46
          }
        }],
        line: 582
      },
      "60": {
        loc: {
          start: {
            line: 613,
            column: 85
          },
          end: {
            line: 613,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 613,
            column: 85
          },
          end: {
            line: 613,
            column: 99
          }
        }, {
          start: {
            line: 613,
            column: 103
          },
          end: {
            line: 613,
            column: 105
          }
        }],
        line: 613
      },
      "61": {
        loc: {
          start: {
            line: 617,
            column: 68
          },
          end: {
            line: 619,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 617,
            column: 68
          },
          end: {
            line: 619,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 617
      },
      "62": {
        loc: {
          start: {
            line: 648,
            column: 36
          },
          end: {
            line: 654,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 648,
            column: 36
          },
          end: {
            line: 648,
            column: 49
          }
        }, {
          start: {
            line: 648,
            column: 67
          },
          end: {
            line: 654,
            column: 38
          }
        }],
        line: 648
      },
      "63": {
        loc: {
          start: {
            line: 670,
            column: 50
          },
          end: {
            line: 670,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 670,
            column: 65
          },
          end: {
            line: 670,
            column: 108
          }
        }, {
          start: {
            line: 670,
            column: 111
          },
          end: {
            line: 670,
            column: 168
          }
        }],
        line: 670
      },
      "64": {
        loc: {
          start: {
            line: 670,
            column: 65
          },
          end: {
            line: 670,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 670,
            column: 79
          },
          end: {
            line: 670,
            column: 92
          }
        }, {
          start: {
            line: 670,
            column: 95
          },
          end: {
            line: 670,
            column: 108
          }
        }],
        line: 670
      },
      "65": {
        loc: {
          start: {
            line: 670,
            column: 111
          },
          end: {
            line: 670,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 670,
            column: 125
          },
          end: {
            line: 670,
            column: 145
          }
        }, {
          start: {
            line: 670,
            column: 148
          },
          end: {
            line: 670,
            column: 168
          }
        }],
        line: 670
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0, 0],
      "56": [0, 0],
      "57": [0, 0, 0],
      "58": [0, 0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/components/propagations/PropagationForm.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { X, Upload, Trash2 } from 'lucide-react';\nimport Image from 'next/image';\nimport PlantTaxonomySelector from '../plants/PlantTaxonomySelector';\nimport type { Propagation, Plant, PlantInstance } from '@/lib/db/schema';\nimport type { PlantSuggestion } from '@/lib/validation/plant-schemas';\n\ninterface PropagationWithDetails extends Propagation {\n  plant: Plant;\n  parentInstance?: PlantInstance;\n}\n\ninterface PropagationFormProps {\n  propagation?: PropagationWithDetails;\n  onClose: () => void;\n  onSuccess: () => void;\n}\n\ninterface FormData {\n  plantId: number | null;\n  parentInstanceId: number | null;\n  nickname: string;\n  location: string;\n  dateStarted: string;\n  status: 'started' | 'rooting' | 'planted' | 'established';\n  sourceType: 'internal' | 'external';\n  externalSource: 'gift' | 'trade' | 'purchase' | 'other' | null;\n  externalSourceDetails: string;\n  notes: string;\n  images: string[];\n}\n\nexport default function PropagationForm({ propagation, onClose, onSuccess }: PropagationFormProps) {\n  const [formData, setFormData] = useState<FormData>({\n    plantId: propagation?.plantId || null,\n    parentInstanceId: propagation?.parentInstanceId || null,\n    nickname: propagation?.nickname || '',\n    location: propagation?.location || '',\n    dateStarted: propagation?.dateStarted \n      ? new Date(propagation.dateStarted).toISOString().split('T')[0]\n      : new Date().toISOString().split('T')[0],\n    status: propagation?.status || 'started',\n    sourceType: (propagation as any)?.sourceType || 'internal',\n    externalSource: (propagation as any)?.externalSource || null,\n    externalSourceDetails: (propagation as any)?.externalSourceDetails || '',\n    notes: propagation?.notes || '',\n    images: propagation?.images || [],\n  });\n\n  const [selectedPlant, setSelectedPlant] = useState<Plant | null>(null);\n  const [parentInstances, setParentInstances] = useState<PlantInstance[]>([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  // Load plant data if editing\n  useEffect(() => {\n    if (propagation?.plant) {\n      setSelectedPlant(propagation.plant);\n    }\n  }, [propagation]);\n\n  // Load parent instances when plant is selected\n  useEffect(() => {\n    if (formData.plantId) {\n      fetchParentInstances(formData.plantId);\n    }\n  }, [formData.plantId]);\n\n  const fetchParentInstances = async (plantId: number) => {\n    try {\n      const response = await fetch(`/api/plant-instances?plantId=${plantId}&isActive=true`);\n      if (response.ok) {\n        const result = await response.json();\n        // Extract instances from the API response structure\n        const instances = result.instances || result || [];\n        setParentInstances(instances);\n      }\n    } catch (error) {\n      console.error('Error fetching parent instances:', error);\n      setParentInstances([]);\n    }\n  };\n\n  const handlePlantSelect = (plant: PlantSuggestion | null) => {\n    if (plant) {\n      // Convert PlantSuggestion to Plant for compatibility\n      const plantData: Plant = {\n        id: plant.id,\n        family: plant.family,\n        genus: plant.genus,\n        species: plant.species,\n        cultivar: plant.cultivar || null,\n        commonName: plant.commonName,\n        careInstructions: null,\n        defaultImage: null,\n        createdBy: null,\n        isVerified: plant.isVerified,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n      setSelectedPlant(plantData);\n      setFormData(prev => ({\n        ...prev,\n        plantId: plant.id,\n        parentInstanceId: null, // Reset parent selection when plant changes\n      }));\n    } else {\n      setSelectedPlant(null);\n      setFormData(prev => ({\n        ...prev,\n        plantId: null,\n        parentInstanceId: null,\n      }));\n    }\n  };\n\n  const handleAddNewPlant = (query: string) => {\n    // For now, we'll just show an alert. In a full implementation,\n    // this would open a plant creation form\n    alert(`Add new plant functionality would be implemented here for: ${query}`);\n  };\n\n  const handleImageUpload = (imageData: string) => {\n    setFormData(prev => ({\n      ...prev,\n      images: [...prev.images, imageData],\n    }));\n  };\n\n  const handleImageRemove = (index: number) => {\n    setFormData(prev => ({\n      ...prev,\n      images: prev.images.filter((_, i) => i !== index),\n    }));\n  };\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.plantId) {\n      newErrors.plantId = 'Please select a plant type';\n    }\n    if (!formData.nickname.trim()) {\n      newErrors.nickname = 'Nickname is required';\n    }\n    if (!formData.location.trim()) {\n      newErrors.location = 'Location is required';\n    }\n    if (!formData.dateStarted) {\n      newErrors.dateStarted = 'Start date is required';\n    }\n    if (formData.sourceType === 'internal' && !formData.parentInstanceId) {\n      newErrors.parentInstanceId = 'Parent plant is required for internal propagations';\n    }\n    if (formData.sourceType === 'external' && !formData.externalSource) {\n      newErrors.externalSource = 'External source is required for external propagations';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const url = propagation \n        ? `/api/propagations/${propagation.id}`\n        : '/api/propagations';\n      \n      const method = propagation ? 'PUT' : 'POST';\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          ...formData,\n          dateStarted: new Date(formData.dateStarted),\n          // Ensure proper null values for unused fields\n          parentInstanceId: formData.sourceType === 'internal' ? formData.parentInstanceId : null,\n          externalSource: formData.sourceType === 'external' ? formData.externalSource : null,\n          externalSourceDetails: formData.sourceType === 'external' ? formData.externalSourceDetails : null,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to save propagation');\n      }\n\n      onSuccess();\n    } catch (error) {\n      console.error('Error saving propagation:', error);\n      setErrors({\n        submit: error instanceof Error ? error.message : 'Failed to save propagation'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50\">\n      <div className=\"absolute inset-0 bg-slate-900/30\" onClick={onClose} />\n      <div className=\"absolute inset-2 sm:inset-8 bg-white rounded-2xl shadow-xl flex flex-col border border-slate-200/70 max-h-[95vh]\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between px-6 py-4 border-b border-gray-200 flex-shrink-0\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">\n            {propagation ? 'Edit Propagation' : 'Add New Propagation'}\n          </h2>\n          <button\n            onClick={onClose}\n            className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 transition-colors\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"flex-1 flex flex-col min-h-0\">\n          <div className=\"flex-1 overflow-y-auto px-6 py-4 space-y-4\">\n          {/* Plant Selection */}\n          <div className=\"bg-primary-50 border border-primary-200 rounded-lg p-3\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Plant Type *\n            </label>\n            <p className=\"text-xs text-gray-600 mb-2\">\n              First, search for the type of plant you want to propagate\n            </p>\n            <PlantTaxonomySelector\n              selectedPlant={selectedPlant ? {\n                id: selectedPlant.id,\n                family: selectedPlant.family,\n                genus: selectedPlant.genus,\n                species: selectedPlant.species,\n                cultivar: selectedPlant.cultivar,\n                commonName: selectedPlant.commonName,\n                isVerified: selectedPlant.isVerified,\n              } : null}\n              onSelect={handlePlantSelect}\n              onAddNew={handleAddNewPlant}\n              placeholder=\"e.g., Global Green Pothos, Monstera Deliciosa...\"\n              autoFocus={true}\n            />\n            {errors.plantId && (\n              <p className=\"mt-1 text-sm text-red-600\">{errors.plantId}</p>\n            )}\n            {selectedPlant && (\n              <p className=\"mt-1 text-xs text-green-600\">\n                \u2713 Selected: {selectedPlant.commonName}\n              </p>\n            )}\n          </div>\n\n          {/* Source Type Selection - Only show after plant type is selected */}\n          {formData.plantId && (\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Propagation Source *\n              </label>\n              <div className=\"grid grid-cols-2 gap-3\">\n                <label className=\"flex items-center p-2 border rounded-lg cursor-pointer hover:bg-gray-50\">\n                  <input\n                    type=\"radio\"\n                    name=\"sourceType\"\n                    value=\"internal\"\n                    checked={formData.sourceType === 'internal'}\n                    onChange={(e) => setFormData(prev => ({\n                      ...prev,\n                      sourceType: e.target.value as 'internal' | 'external',\n                      parentInstanceId: null, // Reset selections when changing type\n                      externalSource: null,\n                      externalSourceDetails: '',\n                    }))}\n                    className=\"mr-2 text-primary-600\"\n                  />\n                  <div>\n                    <div className=\"font-medium text-gray-900 text-sm\">From My Plants</div>\n                    <div className=\"text-xs text-gray-500\">Propagated from one of your existing plants</div>\n                  </div>\n                </label>\n                \n                <label className=\"flex items-center p-2 border rounded-lg cursor-pointer hover:bg-gray-50\">\n                  <input\n                    type=\"radio\"\n                    name=\"sourceType\"\n                    value=\"external\"\n                    checked={formData.sourceType === 'external'}\n                    onChange={(e) => setFormData(prev => ({\n                      ...prev,\n                      sourceType: e.target.value as 'internal' | 'external',\n                      parentInstanceId: null, // Reset selections when changing type\n                      externalSource: null,\n                      externalSourceDetails: '',\n                    }))}\n                    className=\"mr-2 text-primary-600\"\n                  />\n                  <div>\n                    <div className=\"font-medium text-gray-900 text-sm\">External Source</div>\n                    <div className=\"text-xs text-gray-500\">Gift, trade, purchase, or other source</div>\n                  </div>\n                </label>\n              </div>\n            </div>\n          )}\n\n          {/* Parent Plant Instance - Only for Internal */}\n          {formData.sourceType === 'internal' && (\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Parent Plant *\n              </label>\n              \n              {/* Only show parent plant selection if a plant type is selected */}\n              {!formData.plantId ? (\n                <div className=\"p-2 bg-blue-50 border border-blue-200 rounded-lg\">\n                  <p className=\"text-sm text-blue-800\">\n                    Please select a plant type above first to see available parent plants.\n                  </p>\n                </div>\n              ) : parentInstances.length > 0 ? (\n                <div className=\"space-y-2\">\n                  <select\n                    value={formData.parentInstanceId || ''}\n                    onChange={(e) => setFormData(prev => ({\n                      ...prev,\n                      parentInstanceId: e.target.value ? parseInt(e.target.value) : null\n                    }))}\n                    className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\n                      errors.parentInstanceId ? 'border-red-300' : 'border-gray-300'\n                    }`}\n                  >\n                    <option value=\"\">Select parent plant</option>\n                    {parentInstances.map((instance) => (\n                      <option key={instance.id} value={instance.id}>\n                        {instance.nickname} - {instance.location}\n                      </option>\n                    ))}\n                  </select>\n                  <p className=\"text-xs text-gray-500\">\n                    Choose which of your existing plants to propagate from\n                  </p>\n                </div>\n              ) : (\n                <div className=\"p-2 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                  <p className=\"text-sm text-yellow-800\">\n                    No existing plants of this type found. You'll need to add a plant instance first, or select \"External Source\" instead.\n                  </p>\n                </div>\n              )}\n              {errors.parentInstanceId && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.parentInstanceId}</p>\n              )}\n            </div>\n          )}\n\n          {/* External Source Details - Only for External */}\n          {formData.sourceType === 'external' && (\n            <div className=\"space-y-3\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Source Type *\n                </label>\n                <select\n                  value={formData.externalSource || ''}\n                  onChange={(e) => setFormData(prev => ({\n                    ...prev,\n                    externalSource: e.target.value as FormData['externalSource']\n                  }))}\n                  className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\n                    errors.externalSource ? 'border-red-300' : 'border-gray-300'\n                  }`}\n                >\n                  <option value=\"\">Select source type</option>\n                  <option value=\"gift\">Gift (received from someone)</option>\n                  <option value=\"trade\">Trade/Swap (exchanged with someone)</option>\n                  <option value=\"purchase\">Purchase (bought from store/online)</option>\n                  <option value=\"other\">Other</option>\n                </select>\n                {errors.externalSource && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.externalSource}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Source Details (Optional)\n                </label>\n                <textarea\n                  value={formData.externalSourceDetails}\n                  onChange={(e) => setFormData(prev => ({ ...prev, externalSourceDetails: e.target.value }))}\n                  rows={2}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  placeholder=\"e.g., Gift from Sarah, Purchased at Home Depot, Trade with local plant group...\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Basic Information - Only show after source type is selected */}\n          {formData.plantId && formData.sourceType && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Nickname *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.nickname}\n                  onChange={(e) => setFormData(prev => ({ ...prev, nickname: e.target.value }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  placeholder=\"e.g., Monstera Cutting #1\"\n                />\n                {errors.nickname && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.nickname}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Location *\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.location}\n                  onChange={(e) => setFormData(prev => ({ ...prev, location: e.target.value }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  placeholder=\"e.g., Propagation Station, Kitchen Window\"\n                />\n                {errors.location && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.location}</p>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Date and Status - Only show after source type is selected */}\n          {formData.plantId && formData.sourceType && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Date Started *\n                </label>\n                <input\n                  type=\"date\"\n                  value={formData.dateStarted}\n                  onChange={(e) => setFormData(prev => ({ ...prev, dateStarted: e.target.value }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                />\n                {errors.dateStarted && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.dateStarted}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Status\n                </label>\n                <select\n                  value={formData.status}\n                  onChange={(e) => setFormData(prev => ({ \n                    ...prev, \n                    status: e.target.value as FormData['status']\n                  }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                >\n                  <option value=\"started\">Started</option>\n                  <option value=\"rooting\">Rooting</option>\n                  <option value=\"planted\">Planted</option>\n                  <option value=\"established\">Established</option>\n                </select>\n              </div>\n            </div>\n          )}\n\n          {/* Notes - Only show after source type is selected */}\n          {formData.plantId && formData.sourceType && (\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Notes\n              </label>\n              <textarea\n                value={formData.notes}\n                onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n                rows={2}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                placeholder=\"Add any notes about the propagation method, progress, or observations...\"\n              />\n            </div>\n          )}\n\n          {/* Images - Only show after source type is selected */}\n          {formData.plantId && formData.sourceType && (\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Images\n              </label>\n              \n              {/* Existing Images */}\n              {formData.images.length > 0 && (\n                <div className=\"grid grid-cols-4 gap-2 mb-3\">\n                  {formData.images.map((image, index) => (\n                    <div key={index} className=\"relative group\">\n                      <Image\n                        src={image}\n                        alt={`Propagation image ${index + 1}`}\n                        width={80}\n                        height={80}\n                        className=\"w-full h-16 object-cover rounded-lg\"\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => handleImageRemove(index)}\n                        className=\"absolute top-1 right-1 p-1 bg-red-600 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\n                      >\n                        <Trash2 className=\"w-2 h-2\" />\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              )}\n\n              {/* Image Upload */}\n              <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center hover:border-primary-400 transition-colors\">\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  multiple\n                  onChange={(e) => {\n                    const files = Array.from(e.target.files || []);\n                    files.forEach(file => {\n                      const reader = new FileReader();\n                      reader.onload = (event) => {\n                        if (event.target?.result) {\n                          handleImageUpload(event.target.result as string);\n                        }\n                      };\n                      reader.readAsDataURL(file);\n                    });\n                  }}\n                  className=\"hidden\"\n                  id=\"image-upload\"\n                />\n                <label htmlFor=\"image-upload\" className=\"cursor-pointer\">\n                  <Upload className=\"w-6 h-6 text-gray-400 mx-auto mb-1\" />\n                  <p className=\"text-sm text-gray-600\">\n                    Click to upload images\n                  </p>\n                  <p className=\"text-xs text-gray-500\">\n                    PNG, JPG up to 5MB each\n                  </p>\n                </label>\n              </div>\n            </div>\n          )}\n\n          {/* Submit Error */}\n          {errors.submit && (\n            <div className=\"p-2 bg-red-50 border border-red-200 rounded-lg\">\n              <p className=\"text-sm text-red-600\">{errors.submit}</p>\n            </div>\n          )}\n\n          </div>\n          \n          {/* Form Actions */}\n          <div className=\"flex justify-end space-x-3 px-6 py-4 border-t border-gray-200 flex-shrink-0\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors disabled:opacity-50\"\n            >\n              {isSubmitting \n                ? (propagation ? 'Updating...' : 'Creating...') \n                : (propagation ? 'Update Propagation' : 'Create Propagation')\n              }\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}"],
      names: ["PropagationForm", "propagation", "onClose", "onSuccess", "formData", "setFormData", "useState", "plantId", "parentInstanceId", "nickname", "location", "dateStarted", "Date", "toISOString", "split", "status", "sourceType", "externalSource", "externalSourceDetails", "notes", "images", "selectedPlant", "setSelectedPlant", "parentInstances", "setParentInstances", "isSubmitting", "setIsSubmitting", "errors", "setErrors", "useEffect", "plant", "fetchParentInstances", "response", "fetch", "ok", "result", "json", "instances", "error", "console", "handlePlantSelect", "plantData", "id", "family", "genus", "species", "cultivar", "commonName", "careInstructions", "defaultImage", "createdBy", "isVerified", "createdAt", "updatedAt", "prev", "handleAddNewPlant", "query", "alert", "handleImageUpload", "imageData", "handleImageRemove", "index", "filter", "_", "i", "validateForm", "newErrors", "trim", "Object", "keys", "length", "handleSubmit", "e", "preventDefault", "url", "method", "headers", "body", "JSON", "stringify", "errorData", "Error", "submit", "message", "div", "className", "onClick", "h2", "button", "X", "form", "onSubmit", "label", "p", "PlantTaxonomySelector", "onSelect", "onAddNew", "placeholder", "autoFocus", "input", "type", "name", "value", "checked", "onChange", "target", "select", "parseInt", "option", "map", "instance", "textarea", "rows", "image", "Image", "src", "alt", "width", "height", "Trash2", "accept", "multiple", "files", "Array", "from", "forEach", "file", "reader", "FileReader", "onload", "event", "readAsDataURL", "htmlFor", "Upload", "disabled"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e51d926474927c55ded4a54861382a692f2eeb32"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lx4bagxiv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1lx4bagxiv();
cov_1lx4bagxiv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1lx4bagxiv().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lx4bagxiv().f[0]++;
    cov_1lx4bagxiv().s[2]++;
    return PropagationForm;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1lx4bagxiv().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1lx4bagxiv().s[4]++, require("react"));
const _lucidereact =
/* istanbul ignore next */
(cov_1lx4bagxiv().s[5]++, require("lucide-react"));
const _image =
/* istanbul ignore next */
(/*#__PURE__*/cov_1lx4bagxiv().s[6]++, _interop_require_default(require("next/image")));
const _PlantTaxonomySelector =
/* istanbul ignore next */
(/*#__PURE__*/cov_1lx4bagxiv().s[7]++, _interop_require_default(require("../plants/PlantTaxonomySelector")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1lx4bagxiv().f[1]++;
  cov_1lx4bagxiv().s[8]++;
  return /* istanbul ignore next */(cov_1lx4bagxiv().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1lx4bagxiv().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1lx4bagxiv().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1lx4bagxiv().b[0][1]++, {
    default: obj
  });
}
function PropagationForm({
  propagation,
  onClose,
  onSuccess
}) {
  /* istanbul ignore next */
  cov_1lx4bagxiv().f[2]++;
  const [formData, setFormData] =
  /* istanbul ignore next */
  (cov_1lx4bagxiv().s[9]++, (0, _react.useState)({
    plantId:
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[2][0]++, propagation?.plantId) ||
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[2][1]++, null),
    parentInstanceId:
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[3][0]++, propagation?.parentInstanceId) ||
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[3][1]++, null),
    nickname:
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[4][0]++, propagation?.nickname) ||
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[4][1]++, ''),
    location:
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[5][0]++, propagation?.location) ||
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[5][1]++, ''),
    dateStarted: propagation?.dateStarted ?
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[6][0]++, new Date(propagation.dateStarted).toISOString().split('T')[0]) :
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[6][1]++, new Date().toISOString().split('T')[0]),
    status:
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[7][0]++, propagation?.status) ||
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[7][1]++, 'started'),
    sourceType:
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[8][0]++, propagation?.sourceType) ||
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[8][1]++, 'internal'),
    externalSource:
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[9][0]++, propagation?.externalSource) ||
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[9][1]++, null),
    externalSourceDetails:
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[10][0]++, propagation?.externalSourceDetails) ||
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[10][1]++, ''),
    notes:
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[11][0]++, propagation?.notes) ||
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[11][1]++, ''),
    images:
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[12][0]++, propagation?.images) ||
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[12][1]++, [])
  }));
  const [selectedPlant, setSelectedPlant] =
  /* istanbul ignore next */
  (cov_1lx4bagxiv().s[10]++, (0, _react.useState)(null));
  const [parentInstances, setParentInstances] =
  /* istanbul ignore next */
  (cov_1lx4bagxiv().s[11]++, (0, _react.useState)([]));
  const [isSubmitting, setIsSubmitting] =
  /* istanbul ignore next */
  (cov_1lx4bagxiv().s[12]++, (0, _react.useState)(false));
  const [errors, setErrors] =
  /* istanbul ignore next */
  (cov_1lx4bagxiv().s[13]++, (0, _react.useState)({}));
  // Load plant data if editing
  /* istanbul ignore next */
  cov_1lx4bagxiv().s[14]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1lx4bagxiv().f[3]++;
    cov_1lx4bagxiv().s[15]++;
    if (propagation?.plant) {
      /* istanbul ignore next */
      cov_1lx4bagxiv().b[13][0]++;
      cov_1lx4bagxiv().s[16]++;
      setSelectedPlant(propagation.plant);
    } else
    /* istanbul ignore next */
    {
      cov_1lx4bagxiv().b[13][1]++;
    }
  }, [propagation]);
  // Load parent instances when plant is selected
  /* istanbul ignore next */
  cov_1lx4bagxiv().s[17]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1lx4bagxiv().f[4]++;
    cov_1lx4bagxiv().s[18]++;
    if (formData.plantId) {
      /* istanbul ignore next */
      cov_1lx4bagxiv().b[14][0]++;
      cov_1lx4bagxiv().s[19]++;
      fetchParentInstances(formData.plantId);
    } else
    /* istanbul ignore next */
    {
      cov_1lx4bagxiv().b[14][1]++;
    }
  }, [formData.plantId]);
  /* istanbul ignore next */
  cov_1lx4bagxiv().s[20]++;
  const fetchParentInstances = async plantId => {
    /* istanbul ignore next */
    cov_1lx4bagxiv().f[5]++;
    cov_1lx4bagxiv().s[21]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1lx4bagxiv().s[22]++, await fetch(`/api/plant-instances?plantId=${plantId}&isActive=true`));
      /* istanbul ignore next */
      cov_1lx4bagxiv().s[23]++;
      if (response.ok) {
        /* istanbul ignore next */
        cov_1lx4bagxiv().b[15][0]++;
        const result =
        /* istanbul ignore next */
        (cov_1lx4bagxiv().s[24]++, await response.json());
        // Extract instances from the API response structure
        const instances =
        /* istanbul ignore next */
        (cov_1lx4bagxiv().s[25]++,
        /* istanbul ignore next */
        (cov_1lx4bagxiv().b[16][0]++, result.instances) ||
        /* istanbul ignore next */
        (cov_1lx4bagxiv().b[16][1]++, result) ||
        /* istanbul ignore next */
        (cov_1lx4bagxiv().b[16][2]++, []));
        /* istanbul ignore next */
        cov_1lx4bagxiv().s[26]++;
        setParentInstances(instances);
      } else
      /* istanbul ignore next */
      {
        cov_1lx4bagxiv().b[15][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1lx4bagxiv().s[27]++;
      console.error('Error fetching parent instances:', error);
      /* istanbul ignore next */
      cov_1lx4bagxiv().s[28]++;
      setParentInstances([]);
    }
  };
  /* istanbul ignore next */
  cov_1lx4bagxiv().s[29]++;
  const handlePlantSelect = plant => {
    /* istanbul ignore next */
    cov_1lx4bagxiv().f[6]++;
    cov_1lx4bagxiv().s[30]++;
    if (plant) {
      /* istanbul ignore next */
      cov_1lx4bagxiv().b[17][0]++;
      // Convert PlantSuggestion to Plant for compatibility
      const plantData =
      /* istanbul ignore next */
      (cov_1lx4bagxiv().s[31]++, {
        id: plant.id,
        family: plant.family,
        genus: plant.genus,
        species: plant.species,
        cultivar:
        /* istanbul ignore next */
        (cov_1lx4bagxiv().b[18][0]++, plant.cultivar) ||
        /* istanbul ignore next */
        (cov_1lx4bagxiv().b[18][1]++, null),
        commonName: plant.commonName,
        careInstructions: null,
        defaultImage: null,
        createdBy: null,
        isVerified: plant.isVerified,
        createdAt: new Date(),
        updatedAt: new Date()
      });
      /* istanbul ignore next */
      cov_1lx4bagxiv().s[32]++;
      setSelectedPlant(plantData);
      /* istanbul ignore next */
      cov_1lx4bagxiv().s[33]++;
      setFormData(prev => {
        /* istanbul ignore next */
        cov_1lx4bagxiv().f[7]++;
        cov_1lx4bagxiv().s[34]++;
        return {
          ...prev,
          plantId: plant.id,
          parentInstanceId: null
        };
      });
    } else {
      /* istanbul ignore next */
      cov_1lx4bagxiv().b[17][1]++;
      cov_1lx4bagxiv().s[35]++;
      setSelectedPlant(null);
      /* istanbul ignore next */
      cov_1lx4bagxiv().s[36]++;
      setFormData(prev => {
        /* istanbul ignore next */
        cov_1lx4bagxiv().f[8]++;
        cov_1lx4bagxiv().s[37]++;
        return {
          ...prev,
          plantId: null,
          parentInstanceId: null
        };
      });
    }
  };
  /* istanbul ignore next */
  cov_1lx4bagxiv().s[38]++;
  const handleAddNewPlant = query => {
    /* istanbul ignore next */
    cov_1lx4bagxiv().f[9]++;
    cov_1lx4bagxiv().s[39]++;
    // For now, we'll just show an alert. In a full implementation,
    // this would open a plant creation form
    alert(`Add new plant functionality would be implemented here for: ${query}`);
  };
  /* istanbul ignore next */
  cov_1lx4bagxiv().s[40]++;
  const handleImageUpload = imageData => {
    /* istanbul ignore next */
    cov_1lx4bagxiv().f[10]++;
    cov_1lx4bagxiv().s[41]++;
    setFormData(prev => {
      /* istanbul ignore next */
      cov_1lx4bagxiv().f[11]++;
      cov_1lx4bagxiv().s[42]++;
      return {
        ...prev,
        images: [...prev.images, imageData]
      };
    });
  };
  /* istanbul ignore next */
  cov_1lx4bagxiv().s[43]++;
  const handleImageRemove = index => {
    /* istanbul ignore next */
    cov_1lx4bagxiv().f[12]++;
    cov_1lx4bagxiv().s[44]++;
    setFormData(prev => {
      /* istanbul ignore next */
      cov_1lx4bagxiv().f[13]++;
      cov_1lx4bagxiv().s[45]++;
      return {
        ...prev,
        images: prev.images.filter((_, i) => {
          /* istanbul ignore next */
          cov_1lx4bagxiv().f[14]++;
          cov_1lx4bagxiv().s[46]++;
          return i !== index;
        })
      };
    });
  };
  /* istanbul ignore next */
  cov_1lx4bagxiv().s[47]++;
  const validateForm = () => {
    /* istanbul ignore next */
    cov_1lx4bagxiv().f[15]++;
    const newErrors =
    /* istanbul ignore next */
    (cov_1lx4bagxiv().s[48]++, {});
    /* istanbul ignore next */
    cov_1lx4bagxiv().s[49]++;
    if (!formData.plantId) {
      /* istanbul ignore next */
      cov_1lx4bagxiv().b[19][0]++;
      cov_1lx4bagxiv().s[50]++;
      newErrors.plantId = 'Please select a plant type';
    } else
    /* istanbul ignore next */
    {
      cov_1lx4bagxiv().b[19][1]++;
    }
    cov_1lx4bagxiv().s[51]++;
    if (!formData.nickname.trim()) {
      /* istanbul ignore next */
      cov_1lx4bagxiv().b[20][0]++;
      cov_1lx4bagxiv().s[52]++;
      newErrors.nickname = 'Nickname is required';
    } else
    /* istanbul ignore next */
    {
      cov_1lx4bagxiv().b[20][1]++;
    }
    cov_1lx4bagxiv().s[53]++;
    if (!formData.location.trim()) {
      /* istanbul ignore next */
      cov_1lx4bagxiv().b[21][0]++;
      cov_1lx4bagxiv().s[54]++;
      newErrors.location = 'Location is required';
    } else
    /* istanbul ignore next */
    {
      cov_1lx4bagxiv().b[21][1]++;
    }
    cov_1lx4bagxiv().s[55]++;
    if (!formData.dateStarted) {
      /* istanbul ignore next */
      cov_1lx4bagxiv().b[22][0]++;
      cov_1lx4bagxiv().s[56]++;
      newErrors.dateStarted = 'Start date is required';
    } else
    /* istanbul ignore next */
    {
      cov_1lx4bagxiv().b[22][1]++;
    }
    cov_1lx4bagxiv().s[57]++;
    if (
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[24][0]++, formData.sourceType === 'internal') &&
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[24][1]++, !formData.parentInstanceId)) {
      /* istanbul ignore next */
      cov_1lx4bagxiv().b[23][0]++;
      cov_1lx4bagxiv().s[58]++;
      newErrors.parentInstanceId = 'Parent plant is required for internal propagations';
    } else
    /* istanbul ignore next */
    {
      cov_1lx4bagxiv().b[23][1]++;
    }
    cov_1lx4bagxiv().s[59]++;
    if (
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[26][0]++, formData.sourceType === 'external') &&
    /* istanbul ignore next */
    (cov_1lx4bagxiv().b[26][1]++, !formData.externalSource)) {
      /* istanbul ignore next */
      cov_1lx4bagxiv().b[25][0]++;
      cov_1lx4bagxiv().s[60]++;
      newErrors.externalSource = 'External source is required for external propagations';
    } else
    /* istanbul ignore next */
    {
      cov_1lx4bagxiv().b[25][1]++;
    }
    cov_1lx4bagxiv().s[61]++;
    setErrors(newErrors);
    /* istanbul ignore next */
    cov_1lx4bagxiv().s[62]++;
    return Object.keys(newErrors).length === 0;
  };
  /* istanbul ignore next */
  cov_1lx4bagxiv().s[63]++;
  const handleSubmit = async e => {
    /* istanbul ignore next */
    cov_1lx4bagxiv().f[16]++;
    cov_1lx4bagxiv().s[64]++;
    e.preventDefault();
    /* istanbul ignore next */
    cov_1lx4bagxiv().s[65]++;
    if (!validateForm()) {
      /* istanbul ignore next */
      cov_1lx4bagxiv().b[27][0]++;
      cov_1lx4bagxiv().s[66]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1lx4bagxiv().b[27][1]++;
    }
    cov_1lx4bagxiv().s[67]++;
    setIsSubmitting(true);
    /* istanbul ignore next */
    cov_1lx4bagxiv().s[68]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_1lx4bagxiv().s[69]++, propagation ?
      /* istanbul ignore next */
      (cov_1lx4bagxiv().b[28][0]++, `/api/propagations/${propagation.id}`) :
      /* istanbul ignore next */
      (cov_1lx4bagxiv().b[28][1]++, '/api/propagations'));
      const method =
      /* istanbul ignore next */
      (cov_1lx4bagxiv().s[70]++, propagation ?
      /* istanbul ignore next */
      (cov_1lx4bagxiv().b[29][0]++, 'PUT') :
      /* istanbul ignore next */
      (cov_1lx4bagxiv().b[29][1]++, 'POST'));
      const response =
      /* istanbul ignore next */
      (cov_1lx4bagxiv().s[71]++, await fetch(url, {
        method,
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          ...formData,
          dateStarted: new Date(formData.dateStarted),
          // Ensure proper null values for unused fields
          parentInstanceId: formData.sourceType === 'internal' ?
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[30][0]++, formData.parentInstanceId) :
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[30][1]++, null),
          externalSource: formData.sourceType === 'external' ?
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[31][0]++, formData.externalSource) :
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[31][1]++, null),
          externalSourceDetails: formData.sourceType === 'external' ?
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[32][0]++, formData.externalSourceDetails) :
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[32][1]++, null)
        })
      }));
      /* istanbul ignore next */
      cov_1lx4bagxiv().s[72]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1lx4bagxiv().b[33][0]++;
        const errorData =
        /* istanbul ignore next */
        (cov_1lx4bagxiv().s[73]++, await response.json());
        /* istanbul ignore next */
        cov_1lx4bagxiv().s[74]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_1lx4bagxiv().b[34][0]++, errorData.error) ||
        /* istanbul ignore next */
        (cov_1lx4bagxiv().b[34][1]++, 'Failed to save propagation'));
      } else
      /* istanbul ignore next */
      {
        cov_1lx4bagxiv().b[33][1]++;
      }
      cov_1lx4bagxiv().s[75]++;
      onSuccess();
    } catch (error) {
      /* istanbul ignore next */
      cov_1lx4bagxiv().s[76]++;
      console.error('Error saving propagation:', error);
      /* istanbul ignore next */
      cov_1lx4bagxiv().s[77]++;
      setErrors({
        submit: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1lx4bagxiv().b[35][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1lx4bagxiv().b[35][1]++, 'Failed to save propagation')
      });
    } finally {
      /* istanbul ignore next */
      cov_1lx4bagxiv().s[78]++;
      setIsSubmitting(false);
    }
  };
  /* istanbul ignore next */
  cov_1lx4bagxiv().s[79]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "fixed inset-0 z-50",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "absolute inset-0 bg-slate-900/30",
      onClick: onClose
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "absolute inset-2 sm:inset-8 bg-white rounded-2xl shadow-xl flex flex-col border border-slate-200/70 max-h-[95vh]",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between px-6 py-4 border-b border-gray-200 flex-shrink-0",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-lg font-semibold text-gray-900",
          children: propagation ?
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[36][0]++, 'Edit Propagation') :
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[36][1]++, 'Add New Propagation')
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: onClose,
          className: "p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100 transition-colors",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.X, {
            className: "w-5 h-5"
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("form", {
        onSubmit: handleSubmit,
        className: "flex-1 flex flex-col min-h-0",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex-1 overflow-y-auto px-6 py-4 space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "bg-primary-50 border border-primary-200 rounded-lg p-3",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Plant Type *"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-xs text-gray-600 mb-2",
              children: "First, search for the type of plant you want to propagate"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_PlantTaxonomySelector.default, {
              selectedPlant: selectedPlant ?
              /* istanbul ignore next */
              (cov_1lx4bagxiv().b[37][0]++, {
                id: selectedPlant.id,
                family: selectedPlant.family,
                genus: selectedPlant.genus,
                species: selectedPlant.species,
                cultivar: selectedPlant.cultivar,
                commonName: selectedPlant.commonName,
                isVerified: selectedPlant.isVerified
              }) :
              /* istanbul ignore next */
              (cov_1lx4bagxiv().b[37][1]++, null),
              onSelect: handlePlantSelect,
              onAddNew: handleAddNewPlant,
              placeholder: "e.g., Global Green Pothos, Monstera Deliciosa...",
              autoFocus: true
            }),
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[38][0]++, errors.plantId) &&
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[38][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "mt-1 text-sm text-red-600",
              children: errors.plantId
            })),
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[39][0]++, selectedPlant) &&
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[39][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
              className: "mt-1 text-xs text-green-600",
              children: ["✓ Selected: ", selectedPlant.commonName]
            }))]
          }),
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[40][0]++, formData.plantId) &&
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[40][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Propagation Source *"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "grid grid-cols-2 gap-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                className: "flex items-center p-2 border rounded-lg cursor-pointer hover:bg-gray-50",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                  type: "radio",
                  name: "sourceType",
                  value: "internal",
                  checked: formData.sourceType === 'internal',
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1lx4bagxiv().f[17]++;
                    cov_1lx4bagxiv().s[80]++;
                    return setFormData(prev => {
                      /* istanbul ignore next */
                      cov_1lx4bagxiv().f[18]++;
                      cov_1lx4bagxiv().s[81]++;
                      return {
                        ...prev,
                        sourceType: e.target.value,
                        parentInstanceId: null,
                        externalSource: null,
                        externalSourceDetails: ''
                      };
                    });
                  },
                  className: "mr-2 text-primary-600"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "font-medium text-gray-900 text-sm",
                    children: "From My Plants"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "text-xs text-gray-500",
                    children: "Propagated from one of your existing plants"
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                className: "flex items-center p-2 border rounded-lg cursor-pointer hover:bg-gray-50",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                  type: "radio",
                  name: "sourceType",
                  value: "external",
                  checked: formData.sourceType === 'external',
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1lx4bagxiv().f[19]++;
                    cov_1lx4bagxiv().s[82]++;
                    return setFormData(prev => {
                      /* istanbul ignore next */
                      cov_1lx4bagxiv().f[20]++;
                      cov_1lx4bagxiv().s[83]++;
                      return {
                        ...prev,
                        sourceType: e.target.value,
                        parentInstanceId: null,
                        externalSource: null,
                        externalSourceDetails: ''
                      };
                    });
                  },
                  className: "mr-2 text-primary-600"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "font-medium text-gray-900 text-sm",
                    children: "External Source"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "text-xs text-gray-500",
                    children: "Gift, trade, purchase, or other source"
                  })]
                })]
              })]
            })]
          })),
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[41][0]++, formData.sourceType === 'internal') &&
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[41][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Parent Plant *"
            }), !formData.plantId ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1lx4bagxiv().b[42][0]++, (0, _jsxruntime.jsx)("div", {
              className: "p-2 bg-blue-50 border border-blue-200 rounded-lg",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-sm text-blue-800",
                children: "Please select a plant type above first to see available parent plants."
              })
            })) :
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[42][1]++, parentInstances.length > 0 ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1lx4bagxiv().b[43][0]++, (0, _jsxruntime.jsxs)("div", {
              className: "space-y-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
                value:
                /* istanbul ignore next */
                (cov_1lx4bagxiv().b[44][0]++, formData.parentInstanceId) ||
                /* istanbul ignore next */
                (cov_1lx4bagxiv().b[44][1]++, ''),
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1lx4bagxiv().f[21]++;
                  cov_1lx4bagxiv().s[84]++;
                  return setFormData(prev => {
                    /* istanbul ignore next */
                    cov_1lx4bagxiv().f[22]++;
                    cov_1lx4bagxiv().s[85]++;
                    return {
                      ...prev,
                      parentInstanceId: e.target.value ?
                      /* istanbul ignore next */
                      (cov_1lx4bagxiv().b[45][0]++, parseInt(e.target.value)) :
                      /* istanbul ignore next */
                      (cov_1lx4bagxiv().b[45][1]++, null)
                    };
                  });
                },
                className: `w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${errors.parentInstanceId ?
                /* istanbul ignore next */
                (cov_1lx4bagxiv().b[46][0]++, 'border-red-300') :
                /* istanbul ignore next */
                (cov_1lx4bagxiv().b[46][1]++, 'border-gray-300')}`,
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "",
                  children: "Select parent plant"
                }), parentInstances.map(instance => {
                  /* istanbul ignore next */
                  cov_1lx4bagxiv().f[23]++;
                  cov_1lx4bagxiv().s[86]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("option", {
                    value: instance.id,
                    children: [instance.nickname, " - ", instance.location]
                  }, instance.id);
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-xs text-gray-500",
                children: "Choose which of your existing plants to propagate from"
              })]
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1lx4bagxiv().b[43][1]++, (0, _jsxruntime.jsx)("div", {
              className: "p-2 bg-yellow-50 border border-yellow-200 rounded-lg",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-sm text-yellow-800",
                children: 'No existing plants of this type found. You\'ll need to add a plant instance first, or select "External Source" instead.'
              })
            }))),
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[47][0]++, errors.parentInstanceId) &&
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[47][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "mt-1 text-sm text-red-600",
              children: errors.parentInstanceId
            }))]
          })),
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[48][0]++, formData.sourceType === 'external') &&
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[48][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "space-y-3",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "block text-sm font-medium text-gray-700 mb-1",
                children: "Source Type *"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
                value:
                /* istanbul ignore next */
                (cov_1lx4bagxiv().b[49][0]++, formData.externalSource) ||
                /* istanbul ignore next */
                (cov_1lx4bagxiv().b[49][1]++, ''),
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1lx4bagxiv().f[24]++;
                  cov_1lx4bagxiv().s[87]++;
                  return setFormData(prev => {
                    /* istanbul ignore next */
                    cov_1lx4bagxiv().f[25]++;
                    cov_1lx4bagxiv().s[88]++;
                    return {
                      ...prev,
                      externalSource: e.target.value
                    };
                  });
                },
                className: `w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${errors.externalSource ?
                /* istanbul ignore next */
                (cov_1lx4bagxiv().b[50][0]++, 'border-red-300') :
                /* istanbul ignore next */
                (cov_1lx4bagxiv().b[50][1]++, 'border-gray-300')}`,
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "",
                  children: "Select source type"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "gift",
                  children: "Gift (received from someone)"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "trade",
                  children: "Trade/Swap (exchanged with someone)"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "purchase",
                  children: "Purchase (bought from store/online)"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "other",
                  children: "Other"
                })]
              }),
              /* istanbul ignore next */
              (cov_1lx4bagxiv().b[51][0]++, errors.externalSource) &&
              /* istanbul ignore next */
              (cov_1lx4bagxiv().b[51][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "mt-1 text-sm text-red-600",
                children: errors.externalSource
              }))]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "block text-sm font-medium text-gray-700 mb-1",
                children: "Source Details (Optional)"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("textarea", {
                value: formData.externalSourceDetails,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1lx4bagxiv().f[26]++;
                  cov_1lx4bagxiv().s[89]++;
                  return setFormData(prev => {
                    /* istanbul ignore next */
                    cov_1lx4bagxiv().f[27]++;
                    cov_1lx4bagxiv().s[90]++;
                    return {
                      ...prev,
                      externalSourceDetails: e.target.value
                    };
                  });
                },
                rows: 2,
                className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500",
                placeholder: "e.g., Gift from Sarah, Purchased at Home Depot, Trade with local plant group..."
              })]
            })]
          })),
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[52][0]++, formData.plantId) &&
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[52][1]++, formData.sourceType) &&
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[52][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "grid grid-cols-1 md:grid-cols-2 gap-3",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "block text-sm font-medium text-gray-700 mb-1",
                children: "Nickname *"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                type: "text",
                value: formData.nickname,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1lx4bagxiv().f[28]++;
                  cov_1lx4bagxiv().s[91]++;
                  return setFormData(prev => {
                    /* istanbul ignore next */
                    cov_1lx4bagxiv().f[29]++;
                    cov_1lx4bagxiv().s[92]++;
                    return {
                      ...prev,
                      nickname: e.target.value
                    };
                  });
                },
                className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500",
                placeholder: "e.g., Monstera Cutting #1"
              }),
              /* istanbul ignore next */
              (cov_1lx4bagxiv().b[53][0]++, errors.nickname) &&
              /* istanbul ignore next */
              (cov_1lx4bagxiv().b[53][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "mt-1 text-sm text-red-600",
                children: errors.nickname
              }))]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "block text-sm font-medium text-gray-700 mb-1",
                children: "Location *"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                type: "text",
                value: formData.location,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1lx4bagxiv().f[30]++;
                  cov_1lx4bagxiv().s[93]++;
                  return setFormData(prev => {
                    /* istanbul ignore next */
                    cov_1lx4bagxiv().f[31]++;
                    cov_1lx4bagxiv().s[94]++;
                    return {
                      ...prev,
                      location: e.target.value
                    };
                  });
                },
                className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500",
                placeholder: "e.g., Propagation Station, Kitchen Window"
              }),
              /* istanbul ignore next */
              (cov_1lx4bagxiv().b[54][0]++, errors.location) &&
              /* istanbul ignore next */
              (cov_1lx4bagxiv().b[54][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "mt-1 text-sm text-red-600",
                children: errors.location
              }))]
            })]
          })),
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[55][0]++, formData.plantId) &&
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[55][1]++, formData.sourceType) &&
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[55][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "grid grid-cols-1 md:grid-cols-2 gap-3",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "block text-sm font-medium text-gray-700 mb-1",
                children: "Date Started *"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                type: "date",
                value: formData.dateStarted,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1lx4bagxiv().f[32]++;
                  cov_1lx4bagxiv().s[95]++;
                  return setFormData(prev => {
                    /* istanbul ignore next */
                    cov_1lx4bagxiv().f[33]++;
                    cov_1lx4bagxiv().s[96]++;
                    return {
                      ...prev,
                      dateStarted: e.target.value
                    };
                  });
                },
                className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
              }),
              /* istanbul ignore next */
              (cov_1lx4bagxiv().b[56][0]++, errors.dateStarted) &&
              /* istanbul ignore next */
              (cov_1lx4bagxiv().b[56][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "mt-1 text-sm text-red-600",
                children: errors.dateStarted
              }))]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "block text-sm font-medium text-gray-700 mb-1",
                children: "Status"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
                value: formData.status,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1lx4bagxiv().f[34]++;
                  cov_1lx4bagxiv().s[97]++;
                  return setFormData(prev => {
                    /* istanbul ignore next */
                    cov_1lx4bagxiv().f[35]++;
                    cov_1lx4bagxiv().s[98]++;
                    return {
                      ...prev,
                      status: e.target.value
                    };
                  });
                },
                className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "started",
                  children: "Started"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "rooting",
                  children: "Rooting"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "planted",
                  children: "Planted"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                  value: "established",
                  children: "Established"
                })]
              })]
            })]
          })),
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[57][0]++, formData.plantId) &&
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[57][1]++, formData.sourceType) &&
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[57][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Notes"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("textarea", {
              value: formData.notes,
              onChange: e => {
                /* istanbul ignore next */
                cov_1lx4bagxiv().f[36]++;
                cov_1lx4bagxiv().s[99]++;
                return setFormData(prev => {
                  /* istanbul ignore next */
                  cov_1lx4bagxiv().f[37]++;
                  cov_1lx4bagxiv().s[100]++;
                  return {
                    ...prev,
                    notes: e.target.value
                  };
                });
              },
              rows: 2,
              className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500",
              placeholder: "Add any notes about the propagation method, progress, or observations..."
            })]
          })),
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[58][0]++, formData.plantId) &&
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[58][1]++, formData.sourceType) &&
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[58][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "block text-sm font-medium text-gray-700 mb-1",
              children: "Images"
            }),
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[59][0]++, formData.images.length > 0) &&
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[59][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "grid grid-cols-4 gap-2 mb-3",
              children: formData.images.map((image, index) => {
                /* istanbul ignore next */
                cov_1lx4bagxiv().f[38]++;
                cov_1lx4bagxiv().s[101]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "relative group",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_image.default, {
                    src: image,
                    alt: `Propagation image ${index + 1}`,
                    width: 80,
                    height: 80,
                    className: "w-full h-16 object-cover rounded-lg"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                    type: "button",
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_1lx4bagxiv().f[39]++;
                      cov_1lx4bagxiv().s[102]++;
                      return handleImageRemove(index);
                    },
                    className: "absolute top-1 right-1 p-1 bg-red-600 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity",
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Trash2, {
                      className: "w-2 h-2"
                    })
                  })]
                }, index);
              })
            })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "border-2 border-dashed border-gray-300 rounded-lg p-4 text-center hover:border-primary-400 transition-colors",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                type: "file",
                accept: "image/*",
                multiple: true,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1lx4bagxiv().f[40]++;
                  const files =
                  /* istanbul ignore next */
                  (cov_1lx4bagxiv().s[103]++, Array.from(
                  /* istanbul ignore next */
                  (cov_1lx4bagxiv().b[60][0]++, e.target.files) ||
                  /* istanbul ignore next */
                  (cov_1lx4bagxiv().b[60][1]++, [])));
                  /* istanbul ignore next */
                  cov_1lx4bagxiv().s[104]++;
                  files.forEach(file => {
                    /* istanbul ignore next */
                    cov_1lx4bagxiv().f[41]++;
                    const reader =
                    /* istanbul ignore next */
                    (cov_1lx4bagxiv().s[105]++, new FileReader());
                    /* istanbul ignore next */
                    cov_1lx4bagxiv().s[106]++;
                    reader.onload = event => {
                      /* istanbul ignore next */
                      cov_1lx4bagxiv().f[42]++;
                      cov_1lx4bagxiv().s[107]++;
                      if (event.target?.result) {
                        /* istanbul ignore next */
                        cov_1lx4bagxiv().b[61][0]++;
                        cov_1lx4bagxiv().s[108]++;
                        handleImageUpload(event.target.result);
                      } else
                      /* istanbul ignore next */
                      {
                        cov_1lx4bagxiv().b[61][1]++;
                      }
                    };
                    /* istanbul ignore next */
                    cov_1lx4bagxiv().s[109]++;
                    reader.readAsDataURL(file);
                  });
                },
                className: "hidden",
                id: "image-upload"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                htmlFor: "image-upload",
                className: "cursor-pointer",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Upload, {
                  className: "w-6 h-6 text-gray-400 mx-auto mb-1"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "text-sm text-gray-600",
                  children: "Click to upload images"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "text-xs text-gray-500",
                  children: "PNG, JPG up to 5MB each"
                })]
              })]
            })]
          })),
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[62][0]++, errors.submit) &&
          /* istanbul ignore next */
          (cov_1lx4bagxiv().b[62][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "p-2 bg-red-50 border border-red-200 rounded-lg",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-sm text-red-600",
              children: errors.submit
            })
          }))]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-end space-x-3 px-6 py-4 border-t border-gray-200 flex-shrink-0",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            type: "button",
            onClick: onClose,
            className: "px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors",
            children: "Cancel"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            type: "submit",
            disabled: isSubmitting,
            className: "px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors disabled:opacity-50",
            children: isSubmitting ?
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[63][0]++, propagation ?
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[64][0]++, 'Updating...') :
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[64][1]++, 'Creating...')) :
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[63][1]++, propagation ?
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[65][0]++, 'Update Propagation') :
            /* istanbul ignore next */
            (cov_1lx4bagxiv().b[65][1]++, 'Create Propagation'))
          })]
        })]
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
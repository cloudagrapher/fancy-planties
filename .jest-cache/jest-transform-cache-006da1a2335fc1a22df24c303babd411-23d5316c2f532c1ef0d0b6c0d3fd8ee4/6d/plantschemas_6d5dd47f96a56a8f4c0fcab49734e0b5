eb2aeba6666b26d161f24d66a0204f30
"use strict";

/* istanbul ignore next */
function cov_12ex2sn7y2() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/lib/validation/plant-schemas.ts";
  var hash = "8e6924e9d2591397499047ef54a5cd52ea481741";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/lib/validation/plant-schemas.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 84,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 48
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 49
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 39
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 30
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 38
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 33
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 41
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 35
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 41
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 41
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 33
        }
      },
      "20": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 37
        }
      },
      "21": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 35
        }
      },
      "22": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 35
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 34
        }
      },
      "24": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 38
        }
      },
      "25": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 33
        }
      },
      "26": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 41
        }
      },
      "27": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 33
        }
      },
      "28": {
        start: {
          line: 85,
          column: 13
        },
        end: {
          line: 85,
          column: 27
        }
      },
      "29": {
        start: {
          line: 86,
          column: 28
        },
        end: {
          line: 94,
          column: 2
        }
      },
      "30": {
        start: {
          line: 87,
          column: 114
        },
        end: {
          line: 87,
          column: 170
        }
      },
      "31": {
        start: {
          line: 88,
          column: 111
        },
        end: {
          line: 88,
          column: 167
        }
      },
      "32": {
        start: {
          line: 95,
          column: 26
        },
        end: {
          line: 98,
          column: 2
        }
      },
      "33": {
        start: {
          line: 99,
          column: 26
        },
        end: {
          line: 101,
          column: 2
        }
      },
      "34": {
        start: {
          line: 102,
          column: 26
        },
        end: {
          line: 109,
          column: 2
        }
      },
      "35": {
        start: {
          line: 110,
          column: 26
        },
        end: {
          line: 117,
          column: 2
        }
      },
      "36": {
        start: {
          line: 118,
          column: 32
        },
        end: {
          line: 128,
          column: 2
        }
      },
      "37": {
        start: {
          line: 129,
          column: 30
        },
        end: {
          line: 139,
          column: 2
        }
      },
      "38": {
        start: {
          line: 140,
          column: 33
        },
        end: {
          line: 140,
          column: 253
        }
      },
      "39": {
        start: {
          line: 140,
          column: 146
        },
        end: {
          line: 140,
          column: 185
        }
      },
      "40": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 152,
          column: 2
        }
      },
      "41": {
        start: {
          line: 153,
          column: 34
        },
        end: {
          line: 155,
          column: 2
        }
      },
      "42": {
        start: {
          line: 156,
          column: 34
        },
        end: {
          line: 159,
          column: 2
        }
      },
      "43": {
        start: {
          line: 160,
          column: 34
        },
        end: {
          line: 166,
          column: 2
        }
      },
      "44": {
        start: {
          line: 167,
          column: 34
        },
        end: {
          line: 182,
          column: 2
        }
      },
      "45": {
        start: {
          line: 183,
          column: 28
        },
        end: {
          line: 187,
          column: 2
        }
      },
      "46": {
        start: {
          line: 188,
          column: 23
        },
        end: {
          line: 194,
          column: 2
        }
      },
      "47": {
        start: {
          line: 195,
          column: 34
        },
        end: {
          line: 198,
          column: 2
        }
      },
      "48": {
        start: {
          line: 199,
          column: 41
        },
        end: {
          line: 210,
          column: 2
        }
      },
      "49": {
        start: {
          line: 211,
          column: 31
        },
        end: {
          line: 232,
          column: 2
        }
      },
      "50": {
        start: {
          line: 233,
          column: 27
        },
        end: {
          line: 253,
          column: 2
        }
      },
      "51": {
        start: {
          line: 254,
          column: 28
        },
        end: {
          line: 259,
          column: 2
        }
      },
      "52": {
        start: {
          line: 257,
          column: 41
        },
        end: {
          line: 257,
          column: 51
        }
      },
      "53": {
        start: {
          line: 260,
          column: 35
        },
        end: {
          line: 269,
          column: 2
        }
      },
      "54": {
        start: {
          line: 270,
          column: 26
        },
        end: {
          line: 277,
          column: 2
        }
      },
      "55": {
        start: {
          line: 278,
          column: 42
        },
        end: {
          line: 328,
          column: 2
        }
      },
      "56": {
        start: {
          line: 329,
          column: 31
        },
        end: {
          line: 336,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 38
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 44
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 37
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 45
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 36
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 35
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 34
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 29
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 37
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 54
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 29
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 60
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 31
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 63
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 31
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 66
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 30
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 69
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 34
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 72
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 75
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 37
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 78
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 29
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 81
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 87,
            column: 107
          },
          end: {
            line: 87,
            column: 108
          }
        },
        loc: {
          start: {
            line: 87,
            column: 114
          },
          end: {
            line: 87,
            column: 170
          }
        },
        line: 87
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 88,
            column: 104
          },
          end: {
            line: 88,
            column: 105
          }
        },
        loc: {
          start: {
            line: 88,
            column: 111
          },
          end: {
            line: 88,
            column: 167
          }
        },
        line: 88
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 140,
            column: 139
          },
          end: {
            line: 140,
            column: 140
          }
        },
        loc: {
          start: {
            line: 140,
            column: 146
          },
          end: {
            line: 140,
            column: 185
          }
        },
        line: 140
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 257,
            column: 37
          },
          end: {
            line: 257,
            column: 38
          }
        },
        loc: {
          start: {
            line: 257,
            column: 41
          },
          end: {
            line: 257,
            column: 51
          }
        },
        line: 257
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/lib/validation/plant-schemas.ts"],
      sourcesContent: ["import { z } from 'zod';\n\n// Plant taxonomy validation schemas\nexport const plantTaxonomySchema = z.object({\n  family: z.string()\n    .min(1, 'Family is required')\n    .max(100, 'Family name too long')\n    .trim()\n    .transform(val => val.charAt(0).toUpperCase() + val.slice(1).toLowerCase()),\n  \n  genus: z.string()\n    .min(1, 'Genus is required')\n    .max(100, 'Genus name too long')\n    .trim()\n    .transform(val => val.charAt(0).toUpperCase() + val.slice(1).toLowerCase()),\n  \n  species: z.string()\n    .min(1, 'Species is required')\n    .max(100, 'Species name too long')\n    .trim()\n    .toLowerCase(),\n  \n  cultivar: z.string()\n    .max(100, 'Cultivar name too long')\n    .trim()\n    .optional()\n    .nullable(),\n  \n  commonName: z.string()\n    .min(1, 'Common name is required')\n    .max(200, 'Common name too long')\n    .trim(),\n  \n  careInstructions: z.string()\n    .max(2000, 'Care instructions too long')\n    .optional()\n    .nullable(),\n  \n  defaultImage: z.string()\n    .url('Invalid image URL')\n    .optional()\n    .nullable(),\n});\n\nexport const createPlantSchema = plantTaxonomySchema.extend({\n  createdBy: z.number().int().positive().optional(),\n  isVerified: z.boolean().default(false),\n});\n\nexport const updatePlantSchema = plantTaxonomySchema.partial().extend({\n  id: z.number().int().positive(),\n});\n\n// Plant search and filter schemas\nexport const plantSearchSchema = z.object({\n  query: z.string()\n    .min(1, 'Search query is required')\n    .max(200, 'Search query too long')\n    .trim(),\n  \n  limit: z.number()\n    .int()\n    .min(1)\n    .max(100)\n    .default(20),\n  \n  offset: z.number()\n    .int()\n    .min(0)\n    .default(0),\n  \n  includeUnverified: z.boolean().default(true),\n  \n  familyFilter: z.string().optional(),\n  genusFilter: z.string().optional(),\n});\n\nexport const plantFilterSchema = z.object({\n  family: z.string().optional(),\n  genus: z.string().optional(),\n  isVerified: z.boolean().optional(),\n  createdBy: z.number().int().positive().optional(),\n  limit: z.number().int().min(1).max(100).default(20),\n  offset: z.number().int().min(0).default(0),\n});\n\n// Fuzzy search configuration schema\nexport const fuzzySearchConfigSchema = z.object({\n  threshold: z.number().min(0).max(1).default(0.6),\n  includeScore: z.boolean().default(true),\n  keys: z.array(z.string()).default(['family', 'genus', 'species', 'cultivar', 'commonName']),\n});\n\n// Plant taxonomy suggestion schema for autocomplete\nexport const plantSuggestionSchema = z.object({\n  id: z.number().int().positive(),\n  family: z.string(),\n  genus: z.string(),\n  species: z.string(),\n  cultivar: z.string().optional().nullable(),\n  commonName: z.string(),\n  isVerified: z.boolean(),\n  score: z.number().optional(), // For fuzzy search scoring\n  matchedFields: z.array(z.string()).optional(), // Which fields matched the search\n});\n\n// Plant instance validation schemas\nexport const fertilizerScheduleSchema = z.string()\n  .min(1, 'Fertilizer schedule is required')\n  .max(50, 'Schedule description too long')\n  .refine(\n    (val) => /^\\d+\\s*(day|week|month)s?$/i.test(val),\n    'Schedule must be in format like \"2 weeks\", \"1 month\", \"14 days\"'\n  );\n\nexport const plantInstanceSchema = z.object({\n  plantId: z.number().int().positive('Plant ID is required'),\n  nickname: z.string()\n    .min(1, 'Plant nickname is required')\n    .max(100, 'Nickname too long')\n    .trim(),\n  \n  location: z.string()\n    .min(1, 'Location is required')\n    .max(100, 'Location description too long')\n    .trim(),\n  \n  fertilizerSchedule: fertilizerScheduleSchema,\n  \n  lastFertilized: z.date().optional().nullable(),\n  fertilizerDue: z.date().optional().nullable(),\n  lastRepot: z.date().optional().nullable(),\n  \n  notes: z.string()\n    .max(2000, 'Notes too long')\n    .optional()\n    .nullable(),\n  \n  images: z.array(z.string())\n    .max(10, 'Maximum 10 images allowed')\n    .default([]),\n  \n  isActive: z.boolean().default(true),\n});\n\nexport const createPlantInstanceSchema = plantInstanceSchema.extend({\n  userId: z.number().int().positive('User ID is required'),\n});\n\nexport const updatePlantInstanceSchema = plantInstanceSchema.partial().extend({\n  id: z.number().int().positive(),\n  userId: z.number().int().positive().optional(),\n});\n\n// Plant instance search and filter schemas\nexport const plantInstanceSearchSchema = z.object({\n  query: z.string()\n    .min(1, 'Search query is required')\n    .max(200, 'Search query too long')\n    .trim(),\n  \n  userId: z.number().int().positive('User ID is required'),\n  \n  activeOnly: z.boolean().default(true),\n  \n  limit: z.number()\n    .int()\n    .min(1)\n    .max(100)\n    .default(20),\n  \n  offset: z.number()\n    .int()\n    .min(0)\n    .default(0),\n});\n\nexport const plantInstanceFilterSchema = z.object({\n  userId: z.number().int().positive('User ID is required'),\n  \n  location: z.string().optional(),\n  plantId: z.number().int().positive().optional(),\n  isActive: z.boolean().optional(),\n  \n  // Care status filters\n  overdueOnly: z.boolean().default(false),\n  dueSoonDays: z.number().int().min(1).max(30).optional(),\n  \n  // Date range filters\n  createdAfter: z.date().optional(),\n  createdBefore: z.date().optional(),\n  lastFertilizedAfter: z.date().optional(),\n  lastFertilizedBefore: z.date().optional(),\n  \n  limit: z.number().int().min(1).max(100).default(20),\n  offset: z.number().int().min(0).default(0),\n});\n\n// Care logging schemas\nexport const logFertilizerSchema = z.object({\n  plantInstanceId: z.number().int().positive('Plant instance ID is required'),\n  fertilizerDate: z.date().optional(),\n  notes: z.string().max(500, 'Notes too long').optional(),\n});\n\nexport const logRepotSchema = z.object({\n  plantInstanceId: z.number().int().positive('Plant instance ID is required'),\n  repotDate: z.date().optional(),\n  notes: z.string().max(500, 'Notes too long').optional(),\n  potSize: z.string().max(50, 'Pot size description too long').optional(),\n  soilType: z.string().max(100, 'Soil type description too long').optional(),\n});\n\n// Plant instance status management\nexport const plantInstanceStatusSchema = z.object({\n  id: z.number().int().positive(),\n  isActive: z.boolean(),\n});\n\n// Bulk operations schema\nexport const bulkPlantInstanceOperationSchema = z.object({\n  plantInstanceIds: z.array(z.number().int().positive())\n    .min(1, 'At least one plant instance ID is required')\n    .max(50, 'Maximum 50 plant instances allowed per bulk operation'),\n  \n  operation: z.enum(['activate', 'deactivate', 'delete', 'fertilize']),\n  \n  // Optional data for specific operations\n  fertilizerDate: z.date().optional(),\n  notes: z.string().max(500, 'Notes too long').optional(),\n});\n\n// Advanced search schemas\nexport const multiFieldSearchSchema = z.object({\n  // Text search fields\n  nickname: z.string().optional(),\n  location: z.string().optional(),\n  notes: z.string().optional(),\n  plantName: z.string().optional(),\n  \n  // Plant taxonomy fields\n  family: z.string().optional(),\n  genus: z.string().optional(),\n  species: z.string().optional(),\n  cultivar: z.string().optional(),\n  commonName: z.string().optional(),\n  \n  // Care-related fields\n  fertilizerSchedule: z.string().optional(),\n  \n  // Search logic\n  operator: z.enum(['AND', 'OR']).default('OR'),\n  \n  // Field weights for relevance scoring\n  fieldWeights: z.record(z.string(), z.number().min(0).max(1)).optional(),\n});\n\nexport const searchPresetSchema = z.object({\n  id: z.string().optional(),\n  name: z.string().min(1, 'Preset name is required').max(100, 'Name too long'),\n  description: z.string().max(500, 'Description too long').optional(),\n  filters: plantInstanceFilterSchema,\n  sortBy: z.enum(['nickname', 'location', 'created_at', 'last_fertilized', 'fertilizer_due', 'care_urgency', 'plant_name']),\n  sortOrder: z.enum(['asc', 'desc']),\n  userId: z.number().int().positive(),\n  isDefault: z.boolean().default(false),\n});\n\nexport const searchHistorySchema = z.object({\n  query: z.string().min(1, 'Search query is required'),\n  filters: plantInstanceFilterSchema.partial(),\n  timestamp: z.date().default(() => new Date()),\n  userId: z.number().int().positive(),\n});\n\nexport const advancedSearchConfigSchema = z.object({\n  enableFuzzySearch: z.boolean().default(true),\n  fuzzyThreshold: z.number().min(0).max(1).default(0.6),\n  maxSuggestions: z.number().int().min(1).max(20).default(10),\n  searchTimeout: z.number().int().min(1000).max(30000).default(5000),\n  cacheResults: z.boolean().default(true),\n  cacheDuration: z.number().int().min(60000).default(300000), // 5 minutes\n  highlightMatches: z.boolean().default(true),\n  maxHighlights: z.number().int().min(1).max(10).default(3),\n});\n\nexport const smartSearchSchema = z.object({\n  query: z.string().min(1, 'Search query is required').max(200, 'Query too long'),\n  userId: z.number().int().positive(),\n  limit: z.number().int().min(1).max(100).default(20),\n  offset: z.number().int().min(0).default(0),\n  autoCorrect: z.boolean().default(true),\n  includeInactive: z.boolean().default(false),\n});\n\n// Enhanced plant instance filter with additional search options\nexport const enhancedPlantInstanceFilterSchema = plantInstanceFilterSchema.extend({\n  // Text search\n  searchQuery: z.string().optional(),\n  searchFields: z.array(z.enum(['nickname', 'location', 'notes', 'plant_name'])).optional(),\n  \n  // Advanced filters\n  hasImages: z.boolean().optional(),\n  imageCount: z.object({\n    min: z.number().int().min(0).optional(),\n    max: z.number().int().min(0).optional(),\n  }).optional(),\n  \n  // Care frequency filters\n  fertilizerFrequency: z.object({\n    unit: z.enum(['days', 'weeks', 'months']),\n    min: z.number().int().min(1).optional(),\n    max: z.number().int().min(1).optional(),\n  }).optional(),\n  \n  // Date range presets\n  datePreset: z.enum(['today', 'this_week', 'this_month', 'last_month', 'last_3_months']).optional(),\n  \n  // Sorting options\n  sortBy: z.enum(['nickname', 'location', 'created_at', 'last_fertilized', 'fertilizer_due', 'care_urgency', 'plant_name']).default('created_at'),\n  sortOrder: z.enum(['asc', 'desc']).default('desc'),\n  \n  // Result options\n  includeStats: z.boolean().default(false),\n  includeFacets: z.boolean().default(false),\n});\n\n// Search suggestion schema\nexport const searchSuggestionSchema = z.object({\n  query: z.string().min(1, 'Query is required'),\n  userId: z.number().int().positive(),\n  limit: z.number().int().min(1).max(20).default(5),\n  includeHistory: z.boolean().default(true),\n  includeTaxonomy: z.boolean().default(true),\n  includeInstances: z.boolean().default(true),\n});\n\n// Export types from schemas\nexport type PlantTaxonomy = z.infer<typeof plantTaxonomySchema>;\nexport type CreatePlant = z.infer<typeof createPlantSchema>;\nexport type UpdatePlant = z.infer<typeof updatePlantSchema>;\nexport type PlantSearch = z.infer<typeof plantSearchSchema>;\nexport type PlantFilter = z.infer<typeof plantFilterSchema>;\nexport type FuzzySearchConfig = z.infer<typeof fuzzySearchConfigSchema>;\nexport type PlantSuggestion = z.infer<typeof plantSuggestionSchema>;\n\nexport type PlantInstanceData = z.infer<typeof plantInstanceSchema>;\nexport type CreatePlantInstance = z.infer<typeof createPlantInstanceSchema>;\nexport type UpdatePlantInstance = z.infer<typeof updatePlantInstanceSchema>;\nexport type PlantInstanceSearch = z.infer<typeof plantInstanceSearchSchema>;\nexport type PlantInstanceFilter = z.infer<typeof plantInstanceFilterSchema>;\nexport type LogFertilizer = z.infer<typeof logFertilizerSchema>;\nexport type LogRepot = z.infer<typeof logRepotSchema>;\nexport type PlantInstanceStatus = z.infer<typeof plantInstanceStatusSchema>;\nexport type BulkPlantInstanceOperation = z.infer<typeof bulkPlantInstanceOperationSchema>;\n\n// Advanced search types\nexport type MultiFieldSearch = z.infer<typeof multiFieldSearchSchema>;\nexport type SearchPreset = z.infer<typeof searchPresetSchema>;\nexport type SearchHistory = z.infer<typeof searchHistorySchema>;\nexport type AdvancedSearchConfig = z.infer<typeof advancedSearchConfigSchema>;\nexport type SmartSearch = z.infer<typeof smartSearchSchema>;\nexport type EnhancedPlantInstanceFilter = z.infer<typeof enhancedPlantInstanceFilterSchema>;\nexport type SearchSuggestion = z.infer<typeof searchSuggestionSchema>;"],
      names: ["advancedSearchConfigSchema", "bulkPlantInstanceOperationSchema", "createPlantInstanceSchema", "createPlantSchema", "enhancedPlantInstanceFilterSchema", "fertilizerScheduleSchema", "fuzzySearchConfigSchema", "logFertilizerSchema", "logRepotSchema", "multiFieldSearchSchema", "plantFilterSchema", "plantInstanceFilterSchema", "plantInstanceSchema", "plantInstanceSearchSchema", "plantInstanceStatusSchema", "plantSearchSchema", "plantSuggestionSchema", "plantTaxonomySchema", "searchHistorySchema", "searchPresetSchema", "searchSuggestionSchema", "smartSearchSchema", "updatePlantInstanceSchema", "updatePlantSchema", "z", "object", "family", "string", "min", "max", "trim", "transform", "val", "charAt", "toUpperCase", "slice", "toLowerCase", "genus", "species", "cultivar", "optional", "nullable", "commonName", "careInstructions", "defaultImage", "url", "extend", "createdBy", "number", "int", "positive", "isVerified", "boolean", "default", "partial", "id", "query", "limit", "offset", "includeUnverified", "familyFilter", "genusFilter", "threshold", "includeScore", "keys", "array", "score", "matchedFields", "refine", "test", "plantId", "nickname", "location", "fertilizerSchedule", "lastFertilized", "date", "fertilizerDue", "lastRepot", "notes", "images", "isActive", "userId", "activeOnly", "overdueOnly", "dueSoonDays", "createdAfter", "createdBefore", "lastFertilizedAfter", "lastFertilizedBefore", "plantInstanceId", "fertilizerDate", "repotDate", "potSize", "soilType", "plantInstanceIds", "operation", "enum", "plantName", "operator", "fieldWeights", "record", "name", "description", "filters", "sortBy", "sortOrder", "isDefault", "timestamp", "Date", "enableFuzzySearch", "fuzzyThreshold", "maxSuggestions", "searchTimeout", "cacheResults", "cacheDuration", "highlightMatches", "maxHighlights", "autoCorrect", "includeInactive", "searchQuery", "searchFields", "hasImages", "imageCount", "fertilizerFrequency", "unit", "datePreset", "includeStats", "includeFacets", "includeHistory", "includeTaxonomy", "includeInstances"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8e6924e9d2591397499047ef54a5cd52ea481741"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12ex2sn7y2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12ex2sn7y2();
cov_12ex2sn7y2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_12ex2sn7y2().f[0]++;
  cov_12ex2sn7y2().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_12ex2sn7y2().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_12ex2sn7y2().s[3]++;
_export(exports, {
  get advancedSearchConfigSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[1]++;
    cov_12ex2sn7y2().s[4]++;
    return advancedSearchConfigSchema;
  },
  get bulkPlantInstanceOperationSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[2]++;
    cov_12ex2sn7y2().s[5]++;
    return bulkPlantInstanceOperationSchema;
  },
  get createPlantInstanceSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[3]++;
    cov_12ex2sn7y2().s[6]++;
    return createPlantInstanceSchema;
  },
  get createPlantSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[4]++;
    cov_12ex2sn7y2().s[7]++;
    return createPlantSchema;
  },
  get enhancedPlantInstanceFilterSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[5]++;
    cov_12ex2sn7y2().s[8]++;
    return enhancedPlantInstanceFilterSchema;
  },
  get fertilizerScheduleSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[6]++;
    cov_12ex2sn7y2().s[9]++;
    return fertilizerScheduleSchema;
  },
  get fuzzySearchConfigSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[7]++;
    cov_12ex2sn7y2().s[10]++;
    return fuzzySearchConfigSchema;
  },
  get logFertilizerSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[8]++;
    cov_12ex2sn7y2().s[11]++;
    return logFertilizerSchema;
  },
  get logRepotSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[9]++;
    cov_12ex2sn7y2().s[12]++;
    return logRepotSchema;
  },
  get multiFieldSearchSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[10]++;
    cov_12ex2sn7y2().s[13]++;
    return multiFieldSearchSchema;
  },
  get plantFilterSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[11]++;
    cov_12ex2sn7y2().s[14]++;
    return plantFilterSchema;
  },
  get plantInstanceFilterSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[12]++;
    cov_12ex2sn7y2().s[15]++;
    return plantInstanceFilterSchema;
  },
  get plantInstanceSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[13]++;
    cov_12ex2sn7y2().s[16]++;
    return plantInstanceSchema;
  },
  get plantInstanceSearchSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[14]++;
    cov_12ex2sn7y2().s[17]++;
    return plantInstanceSearchSchema;
  },
  get plantInstanceStatusSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[15]++;
    cov_12ex2sn7y2().s[18]++;
    return plantInstanceStatusSchema;
  },
  get plantSearchSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[16]++;
    cov_12ex2sn7y2().s[19]++;
    return plantSearchSchema;
  },
  get plantSuggestionSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[17]++;
    cov_12ex2sn7y2().s[20]++;
    return plantSuggestionSchema;
  },
  get plantTaxonomySchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[18]++;
    cov_12ex2sn7y2().s[21]++;
    return plantTaxonomySchema;
  },
  get searchHistorySchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[19]++;
    cov_12ex2sn7y2().s[22]++;
    return searchHistorySchema;
  },
  get searchPresetSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[20]++;
    cov_12ex2sn7y2().s[23]++;
    return searchPresetSchema;
  },
  get searchSuggestionSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[21]++;
    cov_12ex2sn7y2().s[24]++;
    return searchSuggestionSchema;
  },
  get smartSearchSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[22]++;
    cov_12ex2sn7y2().s[25]++;
    return smartSearchSchema;
  },
  get updatePlantInstanceSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[23]++;
    cov_12ex2sn7y2().s[26]++;
    return updatePlantInstanceSchema;
  },
  get updatePlantSchema() {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[24]++;
    cov_12ex2sn7y2().s[27]++;
    return updatePlantSchema;
  }
});
const _zod =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[28]++, require("zod"));
const plantTaxonomySchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[29]++, _zod.z.object({
  family: _zod.z.string().min(1, 'Family is required').max(100, 'Family name too long').trim().transform(val => {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[25]++;
    cov_12ex2sn7y2().s[30]++;
    return val.charAt(0).toUpperCase() + val.slice(1).toLowerCase();
  }),
  genus: _zod.z.string().min(1, 'Genus is required').max(100, 'Genus name too long').trim().transform(val => {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[26]++;
    cov_12ex2sn7y2().s[31]++;
    return val.charAt(0).toUpperCase() + val.slice(1).toLowerCase();
  }),
  species: _zod.z.string().min(1, 'Species is required').max(100, 'Species name too long').trim().toLowerCase(),
  cultivar: _zod.z.string().max(100, 'Cultivar name too long').trim().optional().nullable(),
  commonName: _zod.z.string().min(1, 'Common name is required').max(200, 'Common name too long').trim(),
  careInstructions: _zod.z.string().max(2000, 'Care instructions too long').optional().nullable(),
  defaultImage: _zod.z.string().url('Invalid image URL').optional().nullable()
}));
const createPlantSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[32]++, plantTaxonomySchema.extend({
  createdBy: _zod.z.number().int().positive().optional(),
  isVerified: _zod.z.boolean().default(false)
}));
const updatePlantSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[33]++, plantTaxonomySchema.partial().extend({
  id: _zod.z.number().int().positive()
}));
const plantSearchSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[34]++, _zod.z.object({
  query: _zod.z.string().min(1, 'Search query is required').max(200, 'Search query too long').trim(),
  limit: _zod.z.number().int().min(1).max(100).default(20),
  offset: _zod.z.number().int().min(0).default(0),
  includeUnverified: _zod.z.boolean().default(true),
  familyFilter: _zod.z.string().optional(),
  genusFilter: _zod.z.string().optional()
}));
const plantFilterSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[35]++, _zod.z.object({
  family: _zod.z.string().optional(),
  genus: _zod.z.string().optional(),
  isVerified: _zod.z.boolean().optional(),
  createdBy: _zod.z.number().int().positive().optional(),
  limit: _zod.z.number().int().min(1).max(100).default(20),
  offset: _zod.z.number().int().min(0).default(0)
}));
const fuzzySearchConfigSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[36]++, _zod.z.object({
  threshold: _zod.z.number().min(0).max(1).default(0.6),
  includeScore: _zod.z.boolean().default(true),
  keys: _zod.z.array(_zod.z.string()).default(['family', 'genus', 'species', 'cultivar', 'commonName'])
}));
const plantSuggestionSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[37]++, _zod.z.object({
  id: _zod.z.number().int().positive(),
  family: _zod.z.string(),
  genus: _zod.z.string(),
  species: _zod.z.string(),
  cultivar: _zod.z.string().optional().nullable(),
  commonName: _zod.z.string(),
  isVerified: _zod.z.boolean(),
  score: _zod.z.number().optional(),
  matchedFields: _zod.z.array(_zod.z.string()).optional()
}));
const fertilizerScheduleSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[38]++, _zod.z.string().min(1, 'Fertilizer schedule is required').max(50, 'Schedule description too long').refine(val => {
  /* istanbul ignore next */
  cov_12ex2sn7y2().f[27]++;
  cov_12ex2sn7y2().s[39]++;
  return /^\d+\s*(day|week|month)s?$/i.test(val);
}, 'Schedule must be in format like "2 weeks", "1 month", "14 days"'));
const plantInstanceSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[40]++, _zod.z.object({
  plantId: _zod.z.number().int().positive('Plant ID is required'),
  nickname: _zod.z.string().min(1, 'Plant nickname is required').max(100, 'Nickname too long').trim(),
  location: _zod.z.string().min(1, 'Location is required').max(100, 'Location description too long').trim(),
  fertilizerSchedule: fertilizerScheduleSchema,
  lastFertilized: _zod.z.date().optional().nullable(),
  fertilizerDue: _zod.z.date().optional().nullable(),
  lastRepot: _zod.z.date().optional().nullable(),
  notes: _zod.z.string().max(2000, 'Notes too long').optional().nullable(),
  images: _zod.z.array(_zod.z.string()).max(10, 'Maximum 10 images allowed').default([]),
  isActive: _zod.z.boolean().default(true)
}));
const createPlantInstanceSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[41]++, plantInstanceSchema.extend({
  userId: _zod.z.number().int().positive('User ID is required')
}));
const updatePlantInstanceSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[42]++, plantInstanceSchema.partial().extend({
  id: _zod.z.number().int().positive(),
  userId: _zod.z.number().int().positive().optional()
}));
const plantInstanceSearchSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[43]++, _zod.z.object({
  query: _zod.z.string().min(1, 'Search query is required').max(200, 'Search query too long').trim(),
  userId: _zod.z.number().int().positive('User ID is required'),
  activeOnly: _zod.z.boolean().default(true),
  limit: _zod.z.number().int().min(1).max(100).default(20),
  offset: _zod.z.number().int().min(0).default(0)
}));
const plantInstanceFilterSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[44]++, _zod.z.object({
  userId: _zod.z.number().int().positive('User ID is required'),
  location: _zod.z.string().optional(),
  plantId: _zod.z.number().int().positive().optional(),
  isActive: _zod.z.boolean().optional(),
  // Care status filters
  overdueOnly: _zod.z.boolean().default(false),
  dueSoonDays: _zod.z.number().int().min(1).max(30).optional(),
  // Date range filters
  createdAfter: _zod.z.date().optional(),
  createdBefore: _zod.z.date().optional(),
  lastFertilizedAfter: _zod.z.date().optional(),
  lastFertilizedBefore: _zod.z.date().optional(),
  limit: _zod.z.number().int().min(1).max(100).default(20),
  offset: _zod.z.number().int().min(0).default(0)
}));
const logFertilizerSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[45]++, _zod.z.object({
  plantInstanceId: _zod.z.number().int().positive('Plant instance ID is required'),
  fertilizerDate: _zod.z.date().optional(),
  notes: _zod.z.string().max(500, 'Notes too long').optional()
}));
const logRepotSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[46]++, _zod.z.object({
  plantInstanceId: _zod.z.number().int().positive('Plant instance ID is required'),
  repotDate: _zod.z.date().optional(),
  notes: _zod.z.string().max(500, 'Notes too long').optional(),
  potSize: _zod.z.string().max(50, 'Pot size description too long').optional(),
  soilType: _zod.z.string().max(100, 'Soil type description too long').optional()
}));
const plantInstanceStatusSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[47]++, _zod.z.object({
  id: _zod.z.number().int().positive(),
  isActive: _zod.z.boolean()
}));
const bulkPlantInstanceOperationSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[48]++, _zod.z.object({
  plantInstanceIds: _zod.z.array(_zod.z.number().int().positive()).min(1, 'At least one plant instance ID is required').max(50, 'Maximum 50 plant instances allowed per bulk operation'),
  operation: _zod.z.enum(['activate', 'deactivate', 'delete', 'fertilize']),
  // Optional data for specific operations
  fertilizerDate: _zod.z.date().optional(),
  notes: _zod.z.string().max(500, 'Notes too long').optional()
}));
const multiFieldSearchSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[49]++, _zod.z.object({
  // Text search fields
  nickname: _zod.z.string().optional(),
  location: _zod.z.string().optional(),
  notes: _zod.z.string().optional(),
  plantName: _zod.z.string().optional(),
  // Plant taxonomy fields
  family: _zod.z.string().optional(),
  genus: _zod.z.string().optional(),
  species: _zod.z.string().optional(),
  cultivar: _zod.z.string().optional(),
  commonName: _zod.z.string().optional(),
  // Care-related fields
  fertilizerSchedule: _zod.z.string().optional(),
  // Search logic
  operator: _zod.z.enum(['AND', 'OR']).default('OR'),
  // Field weights for relevance scoring
  fieldWeights: _zod.z.record(_zod.z.string(), _zod.z.number().min(0).max(1)).optional()
}));
const searchPresetSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[50]++, _zod.z.object({
  id: _zod.z.string().optional(),
  name: _zod.z.string().min(1, 'Preset name is required').max(100, 'Name too long'),
  description: _zod.z.string().max(500, 'Description too long').optional(),
  filters: plantInstanceFilterSchema,
  sortBy: _zod.z.enum(['nickname', 'location', 'created_at', 'last_fertilized', 'fertilizer_due', 'care_urgency', 'plant_name']),
  sortOrder: _zod.z.enum(['asc', 'desc']),
  userId: _zod.z.number().int().positive(),
  isDefault: _zod.z.boolean().default(false)
}));
const searchHistorySchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[51]++, _zod.z.object({
  query: _zod.z.string().min(1, 'Search query is required'),
  filters: plantInstanceFilterSchema.partial(),
  timestamp: _zod.z.date().default(() => {
    /* istanbul ignore next */
    cov_12ex2sn7y2().f[28]++;
    cov_12ex2sn7y2().s[52]++;
    return new Date();
  }),
  userId: _zod.z.number().int().positive()
}));
const advancedSearchConfigSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[53]++, _zod.z.object({
  enableFuzzySearch: _zod.z.boolean().default(true),
  fuzzyThreshold: _zod.z.number().min(0).max(1).default(0.6),
  maxSuggestions: _zod.z.number().int().min(1).max(20).default(10),
  searchTimeout: _zod.z.number().int().min(1000).max(30000).default(5000),
  cacheResults: _zod.z.boolean().default(true),
  cacheDuration: _zod.z.number().int().min(60000).default(300000),
  highlightMatches: _zod.z.boolean().default(true),
  maxHighlights: _zod.z.number().int().min(1).max(10).default(3)
}));
const smartSearchSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[54]++, _zod.z.object({
  query: _zod.z.string().min(1, 'Search query is required').max(200, 'Query too long'),
  userId: _zod.z.number().int().positive(),
  limit: _zod.z.number().int().min(1).max(100).default(20),
  offset: _zod.z.number().int().min(0).default(0),
  autoCorrect: _zod.z.boolean().default(true),
  includeInactive: _zod.z.boolean().default(false)
}));
const enhancedPlantInstanceFilterSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[55]++, plantInstanceFilterSchema.extend({
  // Text search
  searchQuery: _zod.z.string().optional(),
  searchFields: _zod.z.array(_zod.z.enum(['nickname', 'location', 'notes', 'plant_name'])).optional(),
  // Advanced filters
  hasImages: _zod.z.boolean().optional(),
  imageCount: _zod.z.object({
    min: _zod.z.number().int().min(0).optional(),
    max: _zod.z.number().int().min(0).optional()
  }).optional(),
  // Care frequency filters
  fertilizerFrequency: _zod.z.object({
    unit: _zod.z.enum(['days', 'weeks', 'months']),
    min: _zod.z.number().int().min(1).optional(),
    max: _zod.z.number().int().min(1).optional()
  }).optional(),
  // Date range presets
  datePreset: _zod.z.enum(['today', 'this_week', 'this_month', 'last_month', 'last_3_months']).optional(),
  // Sorting options
  sortBy: _zod.z.enum(['nickname', 'location', 'created_at', 'last_fertilized', 'fertilizer_due', 'care_urgency', 'plant_name']).default('created_at'),
  sortOrder: _zod.z.enum(['asc', 'desc']).default('desc'),
  // Result options
  includeStats: _zod.z.boolean().default(false),
  includeFacets: _zod.z.boolean().default(false)
}));
const searchSuggestionSchema =
/* istanbul ignore next */
(cov_12ex2sn7y2().s[56]++, _zod.z.object({
  query: _zod.z.string().min(1, 'Query is required'),
  userId: _zod.z.number().int().positive(),
  limit: _zod.z.number().int().min(1).max(20).default(5),
  includeHistory: _zod.z.boolean().default(true),
  includeTaxonomy: _zod.z.boolean().default(true),
  includeInstances: _zod.z.boolean().default(true)
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
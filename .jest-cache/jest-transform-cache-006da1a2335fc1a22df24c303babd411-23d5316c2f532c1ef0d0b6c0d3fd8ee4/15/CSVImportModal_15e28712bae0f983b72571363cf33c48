1f009c15bdebbb17c89e46cfaf90fadc
'use client';
"use strict";

/* istanbul ignore next */
function cov_2658cs4ann() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/components/import/CSVImportModal.tsx";
  var hash = "4df7a005fa2b79444f8cb24ea7e9c247282d5cd2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/components/import/CSVImportModal.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "8": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "9": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 43
        }
      },
      "10": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 59
        }
      },
      "11": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 25,
          column: 43
        }
      },
      "12": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "13": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 63
        }
      },
      "14": {
        start: {
          line: 29,
          column: 40
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "15": {
        start: {
          line: 30,
          column: 44
        },
        end: {
          line: 30,
          column: 70
        }
      },
      "16": {
        start: {
          line: 31,
          column: 42
        },
        end: {
          line: 31,
          column: 66
        }
      },
      "17": {
        start: {
          line: 32,
          column: 40
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "18": {
        start: {
          line: 33,
          column: 36
        },
        end: {
          line: 33,
          column: 62
        }
      },
      "19": {
        start: {
          line: 34,
          column: 38
        },
        end: {
          line: 34,
          column: 65
        }
      },
      "20": {
        start: {
          line: 35,
          column: 30
        },
        end: {
          line: 35,
          column: 56
        }
      },
      "21": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "22": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 31
        }
      },
      "23": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 28
        }
      },
      "24": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "25": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 27
        }
      },
      "26": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 28
        }
      },
      "27": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 26
        }
      },
      "28": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 28
        }
      },
      "29": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 23
        }
      },
      "30": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "31": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 21
        }
      },
      "32": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 18
        }
      },
      "33": {
        start: {
          line: 50,
          column: 29
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "34": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 28
        }
      },
      "35": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "36": {
        start: {
          line: 54,
          column: 29
        },
        end: {
          line: 88,
          column: 6
        }
      },
      "37": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 30
        }
      },
      "38": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 27
        }
      },
      "39": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 23
        }
      },
      "40": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "41": {
        start: {
          line: 60,
          column: 28
        },
        end: {
          line: 60,
          column: 54
        }
      },
      "42": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 36
        }
      },
      "43": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "44": {
        start: {
          line: 64,
          column: 33
        },
        end: {
          line: 73,
          column: 18
        }
      },
      "45": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 76,
          column: 17
        }
      },
      "46": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 62
        }
      },
      "47": {
        start: {
          line: 77,
          column: 41
        },
        end: {
          line: 77,
          column: 62
        }
      },
      "48": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 48
        }
      },
      "49": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 35
        }
      },
      "50": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 84
        }
      },
      "51": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 32
        }
      },
      "52": {
        start: {
          line: 89,
          column: 27
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "53": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 95,
          column: 11
        }
      },
      "54": {
        start: {
          line: 91,
          column: 27
        },
        end: {
          line: 91,
          column: 43
        }
      },
      "55": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 59
        }
      },
      "56": {
        start: {
          line: 92,
          column: 33
        },
        end: {
          line: 92,
          column: 58
        }
      },
      "57": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 74
        }
      },
      "58": {
        start: {
          line: 93,
          column: 33
        },
        end: {
          line: 93,
          column: 73
        }
      },
      "59": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 36
        }
      },
      "60": {
        start: {
          line: 97,
          column: 30
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "61": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 65
        }
      },
      "62": {
        start: {
          line: 98,
          column: 58
        },
        end: {
          line: 98,
          column: 65
        }
      },
      "63": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 27
        }
      },
      "64": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 23
        }
      },
      "65": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "66": {
        start: {
          line: 102,
          column: 29
        },
        end: {
          line: 121,
          column: 14
        }
      },
      "67": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "68": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 58
        }
      },
      "69": {
        start: {
          line: 125,
          column: 27
        },
        end: {
          line: 125,
          column: 48
        }
      },
      "70": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 41
        }
      },
      "71": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 33
        }
      },
      "72": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 84
        }
      },
      "73": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 32
        }
      },
      "74": {
        start: {
          line: 134,
          column: 33
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "75": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 28
        }
      },
      "76": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 45
        }
      },
      "77": {
        start: {
          line: 138,
          column: 30
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "78": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 31
        }
      },
      "79": {
        start: {
          line: 141,
          column: 25
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "80": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "81": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 41
        }
      },
      "82": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 41
        }
      },
      "83": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 43
        }
      },
      "84": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 40
        }
      },
      "85": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 41
        }
      },
      "86": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 41
        }
      },
      "87": {
        start: {
          line: 157,
          column: 22
        },
        end: {
          line: 157,
          column: 68
        }
      },
      "88": {
        start: {
          line: 158,
          column: 22
        },
        end: {
          line: 158,
          column: 145
        }
      },
      "89": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 29
        }
      },
      "90": {
        start: {
          line: 159,
          column: 17
        },
        end: {
          line: 159,
          column: 29
        }
      },
      "91": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 319,
          column: 7
        }
      },
      "92": {
        start: {
          line: 289,
          column: 36
        },
        end: {
          line: 290,
          column: 88
        }
      },
      "93": {
        start: {
          line: 289,
          column: 64
        },
        end: {
          line: 289,
          column: 87
        }
      },
      "94": {
        start: {
          line: 290,
          column: 41
        },
        end: {
          line: 290,
          column: 88
        }
      },
      "95": {
        start: {
          line: 290,
          column: 65
        },
        end: {
          line: 290,
          column: 88
        }
      },
      "96": {
        start: {
          line: 321,
          column: 17
        },
        end: {
          line: 321,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "CSVImportModal",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 23
          }
        },
        loc: {
          start: {
            line: 27,
            column: 63
          },
          end: {
            line: 320,
            column: 1
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 36,
            column: 24
          }
        },
        loc: {
          start: {
            line: 36,
            column: 27
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 46,
            column: 24
          },
          end: {
            line: 46,
            column: 25
          }
        },
        loc: {
          start: {
            line: 46,
            column: 28
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 46
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 50,
            column: 29
          },
          end: {
            line: 50,
            column: 30
          }
        },
        loc: {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 50
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 54,
            column: 53
          },
          end: {
            line: 54,
            column: 54
          }
        },
        loc: {
          start: {
            line: 54,
            column: 67
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 54
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 89,
            column: 27
          },
          end: {
            line: 89,
            column: 28
          }
        },
        loc: {
          start: {
            line: 89,
            column: 35
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 89
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 28
          }
        },
        loc: {
          start: {
            line: 90,
            column: 46
          },
          end: {
            line: 95,
            column: 9
          }
        },
        line: 90
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 92,
            column: 28
          },
          end: {
            line: 92,
            column: 29
          }
        },
        loc: {
          start: {
            line: 92,
            column: 33
          },
          end: {
            line: 92,
            column: 58
          }
        },
        line: 92
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 93,
            column: 29
          },
          end: {
            line: 93,
            column: 30
          }
        },
        loc: {
          start: {
            line: 93,
            column: 33
          },
          end: {
            line: 93,
            column: 73
          }
        },
        line: 93
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 97,
            column: 30
          },
          end: {
            line: 97,
            column: 31
          }
        },
        loc: {
          start: {
            line: 97,
            column: 40
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 97
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 134,
            column: 33
          },
          end: {
            line: 134,
            column: 34
          }
        },
        loc: {
          start: {
            line: 134,
            column: 45
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 134
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 138,
            column: 30
          },
          end: {
            line: 138,
            column: 31
          }
        },
        loc: {
          start: {
            line: 138,
            column: 46
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 138
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 141,
            column: 25
          },
          end: {
            line: 141,
            column: 26
          }
        },
        loc: {
          start: {
            line: 141,
            column: 29
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 141
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 288,
            column: 41
          },
          end: {
            line: 288,
            column: 42
          }
        },
        loc: {
          start: {
            line: 288,
            column: 45
          },
          end: {
            line: 291,
            column: 33
          }
        },
        line: 288
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "1": {
        loc: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "2": {
        loc: {
          start: {
            line: 82,
            column: 21
          },
          end: {
            line: 82,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 44
          },
          end: {
            line: 82,
            column: 55
          }
        }, {
          start: {
            line: 82,
            column: 58
          },
          end: {
            line: 82,
            column: 82
          }
        }],
        line: 82
      },
      "3": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "4": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 98,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 98,
            column: 25
          }
        }, {
          start: {
            line: 98,
            column: 29
          },
          end: {
            line: 98,
            column: 40
          }
        }, {
          start: {
            line: 98,
            column: 44
          },
          end: {
            line: 98,
            column: 56
          }
        }],
        line: 98
      },
      "5": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "6": {
        loc: {
          start: {
            line: 129,
            column: 21
          },
          end: {
            line: 129,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 44
          },
          end: {
            line: 129,
            column: 55
          }
        }, {
          start: {
            line: 129,
            column: 58
          },
          end: {
            line: 129,
            column: 82
          }
        }],
        line: 129
      },
      "7": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 144,
            column: 41
          }
        }, {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 146,
            column: 41
          }
        }, {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 148,
            column: 43
          }
        }, {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 150,
            column: 40
          }
        }, {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 152,
            column: 41
          }
        }, {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 154,
            column: 41
          }
        }],
        line: 142
      },
      "8": {
        loc: {
          start: {
            line: 157,
            column: 22
          },
          end: {
            line: 157,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 22
          },
          end: {
            line: 157,
            column: 44
          }
        }, {
          start: {
            line: 157,
            column: 48
          },
          end: {
            line: 157,
            column: 68
          }
        }],
        line: 157
      },
      "9": {
        loc: {
          start: {
            line: 158,
            column: 22
          },
          end: {
            line: 158,
            column: 145
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 22
          },
          end: {
            line: 158,
            column: 44
          }
        }, {
          start: {
            line: 158,
            column: 48
          },
          end: {
            line: 158,
            column: 58
          }
        }, {
          start: {
            line: 158,
            column: 62
          },
          end: {
            line: 158,
            column: 84
          }
        }, {
          start: {
            line: 158,
            column: 88
          },
          end: {
            line: 158,
            column: 100
          }
        }, {
          start: {
            line: 158,
            column: 104
          },
          end: {
            line: 158,
            column: 122
          }
        }, {
          start: {
            line: 158,
            column: 126
          },
          end: {
            line: 158,
            column: 145
          }
        }],
        line: 158
      },
      "10": {
        loc: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "11": {
        loc: {
          start: {
            line: 175,
            column: 54
          },
          end: {
            line: 175,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 175,
            column: 66
          },
          end: {
            line: 175,
            column: 97
          }
        }, {
          start: {
            line: 175,
            column: 100
          },
          end: {
            line: 175,
            column: 102
          }
        }],
        line: 175
      },
      "12": {
        loc: {
          start: {
            line: 176,
            column: 35
          },
          end: {
            line: 176,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 176,
            column: 47
          },
          end: {
            line: 176,
            column: 63
          }
        }, {
          start: {
            line: 176,
            column: 66
          },
          end: {
            line: 176,
            column: 73
          }
        }],
        line: 176
      },
      "13": {
        loc: {
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 192,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 186,
            column: 29
          }
        }, {
          start: {
            line: 186,
            column: 47
          },
          end: {
            line: 192,
            column: 26
          }
        }],
        line: 186
      },
      "14": {
        loc: {
          start: {
            line: 193,
            column: 24
          },
          end: {
            line: 196,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 24
          },
          end: {
            line: 193,
            column: 46
          }
        }, {
          start: {
            line: 193,
            column: 64
          },
          end: {
            line: 196,
            column: 26
          }
        }],
        line: 193
      },
      "15": {
        loc: {
          start: {
            line: 197,
            column: 24
          },
          end: {
            line: 228,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 24
          },
          end: {
            line: 197,
            column: 46
          }
        }, {
          start: {
            line: 197,
            column: 64
          },
          end: {
            line: 228,
            column: 26
          }
        }],
        line: 197
      },
      "16": {
        loc: {
          start: {
            line: 229,
            column: 24
          },
          end: {
            line: 254,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 24
          },
          end: {
            line: 229,
            column: 42
          }
        }, {
          start: {
            line: 229,
            column: 46
          },
          end: {
            line: 229,
            column: 56
          }
        }, {
          start: {
            line: 229,
            column: 74
          },
          end: {
            line: 254,
            column: 26
          }
        }],
        line: 229
      },
      "17": {
        loc: {
          start: {
            line: 255,
            column: 24
          },
          end: {
            line: 259,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 24
          },
          end: {
            line: 255,
            column: 44
          }
        }, {
          start: {
            line: 255,
            column: 48
          },
          end: {
            line: 255,
            column: 56
          }
        }, {
          start: {
            line: 255,
            column: 74
          },
          end: {
            line: 259,
            column: 26
          }
        }],
        line: 255
      },
      "18": {
        loc: {
          start: {
            line: 260,
            column: 24
          },
          end: {
            line: 279,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 24
          },
          end: {
            line: 260,
            column: 43
          }
        }, {
          start: {
            line: 260,
            column: 61
          },
          end: {
            line: 279,
            column: 26
          }
        }],
        line: 260
      },
      "19": {
        loc: {
          start: {
            line: 287,
            column: 38
          },
          end: {
            line: 295,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 38
          },
          end: {
            line: 287,
            column: 47
          }
        }, {
          start: {
            line: 287,
            column: 65
          },
          end: {
            line: 295,
            column: 30
          }
        }],
        line: 287
      },
      "20": {
        loc: {
          start: {
            line: 289,
            column: 36
          },
          end: {
            line: 290,
            column: 88
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 36
          },
          end: {
            line: 290,
            column: 88
          }
        }, {
          start: {
            line: 290,
            column: 41
          },
          end: {
            line: 290,
            column: 88
          }
        }],
        line: 289
      },
      "21": {
        loc: {
          start: {
            line: 290,
            column: 41
          },
          end: {
            line: 290,
            column: 88
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 41
          },
          end: {
            line: 290,
            column: 88
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "22": {
        loc: {
          start: {
            line: 293,
            column: 63
          },
          end: {
            line: 293,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 75
          },
          end: {
            line: 293,
            column: 106
          }
        }, {
          start: {
            line: 293,
            column: 109
          },
          end: {
            line: 293,
            column: 111
          }
        }],
        line: 293
      },
      "23": {
        loc: {
          start: {
            line: 299,
            column: 38
          },
          end: {
            line: 313,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 299,
            column: 74
          },
          end: {
            line: 303,
            column: 30
          }
        }, {
          start: {
            line: 303,
            column: 33
          },
          end: {
            line: 313,
            column: 30
          }
        }],
        line: 299
      },
      "24": {
        loc: {
          start: {
            line: 303,
            column: 33
          },
          end: {
            line: 313,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 303,
            column: 91
          },
          end: {
            line: 308,
            column: 30
          }
        }, {
          start: {
            line: 308,
            column: 47
          },
          end: {
            line: 313,
            column: 30
          }
        }],
        line: 303
      },
      "25": {
        loc: {
          start: {
            line: 303,
            column: 33
          },
          end: {
            line: 303,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 33
          },
          end: {
            line: 303,
            column: 51
          }
        }, {
          start: {
            line: 303,
            column: 55
          },
          end: {
            line: 303,
            column: 74
          }
        }],
        line: 303
      },
      "26": {
        loc: {
          start: {
            line: 306,
            column: 63
          },
          end: {
            line: 306,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 306,
            column: 75
          },
          end: {
            line: 306,
            column: 89
          }
        }, {
          start: {
            line: 306,
            column: 92
          },
          end: {
            line: 306,
            column: 94
          }
        }],
        line: 306
      },
      "27": {
        loc: {
          start: {
            line: 307,
            column: 42
          },
          end: {
            line: 307,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 307,
            column: 54
          },
          end: {
            line: 307,
            column: 67
          }
        }, {
          start: {
            line: 307,
            column: 70
          },
          end: {
            line: 307,
            column: 84
          }
        }],
        line: 307
      },
      "28": {
        loc: {
          start: {
            line: 311,
            column: 63
          },
          end: {
            line: 311,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 311,
            column: 75
          },
          end: {
            line: 311,
            column: 106
          }
        }, {
          start: {
            line: 311,
            column: 109
          },
          end: {
            line: 311,
            column: 111
          }
        }],
        line: 311
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0, 0, 0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/components/import/CSVImportModal.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useCallback } from 'react';\nimport { X, Upload, FileText, CheckCircle } from 'lucide-react';\nimport { FileUpload } from './FileUpload';\nimport { ImportTypeSelector, type ImportType } from './ImportTypeSelector';\nimport { CSVPreview } from './CSVPreview';\nimport { ImportProgress } from './ImportProgress';\nimport type { ImportProgress as ImportProgressType } from '@/lib/validation/csv-schemas';\n\ninterface CSVImportModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onImportComplete?: (summary: any) => void;\n}\n\ntype Step = 'select-type' | 'upload-file' | 'preview' | 'importing' | 'complete';\n\ninterface ValidationResult {\n  isValid: boolean;\n  errors: string[];\n  preview: any[];\n}\n\nexport function CSVImportModal({\n  isOpen,\n  onClose,\n  onImportComplete,\n}: CSVImportModalProps) {\n  const [step, setStep] = useState<Step>('select-type');\n  const [importType, setImportType] = useState<ImportType | null>(null);\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [fileContent, setFileContent] = useState<string>('');\n  const [validation, setValidation] = useState<ValidationResult | null>(null);\n  const [importId, setImportId] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const resetModal = () => {\n    setStep('select-type');\n    setImportType(null);\n    setSelectedFile(null);\n    setFileContent('');\n    setValidation(null);\n    setImportId(null);\n    setIsLoading(false);\n    setError(null);\n  };\n\n  const handleClose = () => {\n    resetModal();\n    onClose();\n  };\n\n  const handleTypeSelect = (type: ImportType) => {\n    setImportType(type);\n    setStep('upload-file');\n  };\n\n  const handleFileSelect = useCallback(async (file: File) => {\n    setSelectedFile(file);\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Read file content\n      const content = await readFileAsText(file);\n      setFileContent(content);\n\n      // Validate CSV content\n      if (importType) {\n        const response = await fetch('/api/import/csv/validate', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            content,\n            importType,\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to validate CSV');\n        }\n\n        const validationResult = await response.json();\n        setValidation(validationResult);\n        setStep('preview');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to process file');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [importType]);\n\n  const readFileAsText = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (e) => resolve(e.target?.result as string);\n      reader.onerror = () => reject(new Error('Failed to read file'));\n      reader.readAsText(file);\n    });\n  };\n\n  const handleStartImport = async () => {\n    if (!selectedFile || !importType || !fileContent) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('/api/import/csv', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          file: {\n            name: selectedFile.name,\n            size: selectedFile.size,\n            type: selectedFile.type,\n            content: fileContent,\n          },\n          importType,\n          config: {\n            skipEmptyRows: true,\n            createMissingPlants: true,\n            handleDuplicates: 'skip',\n          },\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to start import');\n      }\n\n      const result = await response.json();\n      setImportId(result.importId);\n      setStep('importing');\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to start import');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleImportComplete = (progress: ImportProgressType) => {\n    setStep('complete');\n    onImportComplete?.(progress.summary);\n  };\n\n  const handleImportError = (errorMessage: string) => {\n    setError(errorMessage);\n  };\n\n  const getStepTitle = () => {\n    switch (step) {\n      case 'select-type':\n        return 'Import CSV Data';\n      case 'upload-file':\n        return 'Upload CSV File';\n      case 'preview':\n        return 'Preview & Confirm';\n      case 'importing':\n        return 'Importing Data';\n      case 'complete':\n        return 'Import Complete';\n      default:\n        return 'Import CSV Data';\n    }\n  };\n\n  const canGoBack = step !== 'select-type' && step !== 'importing';\n  const canGoNext = \n    (step === 'select-type' && importType) ||\n    (step === 'upload-file' && selectedFile) ||\n    (step === 'preview' && validation?.isValid);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content modal-content--large\">\n        {/* Header */}\n        <div className=\"modal-header\">\n          <h2 className=\"modal-title\">\n            {getStepTitle()}\n          </h2>\n          <button\n            onClick={handleClose}\n            disabled={isLoading}\n            className={`modal-close ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\n            title={isLoading ? 'Please wait...' : 'Close'}\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"modal-body\">\n          {error && (\n            <div className=\"mb-6 card card-body bg-red-50 border border-red-200\">\n              <p className=\"text-sm text-error\">{error}</p>\n            </div>\n          )}\n\n          {step === 'select-type' && (\n            <ImportTypeSelector\n              selectedType={importType}\n              onTypeSelect={handleTypeSelect}\n            />\n          )}\n\n          {step === 'upload-file' && (\n            <div className=\"space-y-6\">\n              <div className=\"text-center\">\n                <Upload className=\"w-12 h-12 text-primary-500 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-neutral-900 mb-2\">\n                  Upload your {importType?.replace('_', ' ')} CSV file\n                </h3>\n                <p className=\"text-neutral-600\">\n                  Make sure your CSV file has the required columns for this import type.\n                </p>\n              </div>\n              <FileUpload\n                onFileSelect={handleFileSelect}\n                acceptedTypes={['.csv', 'text/csv']}\n              />\n            </div>\n          )}\n\n          {step === 'preview' && validation && (\n            <div className=\"space-y-6\">\n              <div className=\"text-center\">\n                <FileText className=\"w-12 h-12 text-blue-500 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                  Review your data\n                </h3>\n                <p className=\"text-gray-600\">\n                  Check the preview below and confirm the import when ready.\n                </p>\n              </div>\n              <CSVPreview\n                data={validation.preview}\n                errors={validation.errors}\n                isValid={validation.isValid}\n              />\n            </div>\n          )}\n\n          {step === 'importing' && importId && (\n            <ImportProgress\n              importId={importId}\n              onComplete={handleImportComplete}\n              onError={handleImportError}\n            />\n          )}\n\n          {step === 'complete' && (\n            <div className=\"text-center space-y-6\">\n              <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto\" />\n              <div>\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                  Import completed successfully!\n                </h3>\n                <p className=\"text-gray-600\">\n                  Your CSV data has been imported into your plant collection.\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        <div className=\"flex items-center justify-between p-6 border-t border-gray-200 bg-gray-50\">\n          <div className=\"flex space-x-2\">\n            {canGoBack && (\n              <button\n                onClick={() => {\n                  if (step === 'upload-file') setStep('select-type');\n                  else if (step === 'preview') setStep('upload-file');\n                }}\n                disabled={isLoading}\n                className={`btn btn--outline ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\n              >\n                Back\n              </button>\n            )}\n          </div>\n\n          <div className=\"flex space-x-2\">\n            {step === 'complete' ? (\n              <button\n                onClick={handleClose}\n                className=\"btn btn--primary\"\n              >\n                Done\n              </button>\n            ) : step === 'preview' && validation?.isValid ? (\n              <button\n                onClick={handleStartImport}\n                disabled={isLoading}\n                className={`btn btn--primary ${isLoading ? 'btn--loading' : ''}`}\n              >\n                {isLoading ? 'Starting...' : 'Start Import'}\n              </button>\n            ) : (\n              <button\n                onClick={handleClose}\n                disabled={isLoading}\n                className={`btn btn--outline ${isLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\n              >\n                Cancel\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CSVImportModal;"],
      names: ["CSVImportModal", "isOpen", "onClose", "onImportComplete", "step", "setStep", "useState", "importType", "setImportType", "selectedFile", "setSelectedFile", "fileContent", "setFileContent", "validation", "setValidation", "importId", "setImportId", "isLoading", "setIsLoading", "error", "setError", "resetModal", "handleClose", "handleTypeSelect", "type", "handleFileSelect", "useCallback", "file", "content", "readFileAsText", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "ok", "Error", "validationResult", "json", "err", "message", "Promise", "resolve", "reject", "reader", "FileReader", "onload", "e", "target", "result", "onerror", "readAsText", "handleStartImport", "name", "size", "config", "skipEmptyRows", "createMissingPlants", "handleDuplicates", "handleImportComplete", "progress", "summary", "handleImportError", "errorMessage", "getStepTitle", "canGoBack", "canGoNext", "isValid", "div", "className", "h2", "button", "onClick", "disabled", "title", "X", "p", "ImportTypeSelector", "selectedType", "onTypeSelect", "Upload", "h3", "replace", "FileUpload", "onFileSelect", "acceptedTypes", "FileText", "CSVPreview", "data", "preview", "errors", "ImportProgress", "onComplete", "onError", "CheckCircle"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4df7a005fa2b79444f8cb24ea7e9c247282d5cd2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2658cs4ann = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2658cs4ann();
cov_2658cs4ann().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2658cs4ann().f[0]++;
  cov_2658cs4ann().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2658cs4ann().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2658cs4ann().s[3]++;
_export(exports, {
  get CSVImportModal() {
    /* istanbul ignore next */
    cov_2658cs4ann().f[1]++;
    cov_2658cs4ann().s[4]++;
    return CSVImportModal;
  },
  get default() {
    /* istanbul ignore next */
    cov_2658cs4ann().f[2]++;
    cov_2658cs4ann().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2658cs4ann().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2658cs4ann().s[7]++, require("react"));
const _lucidereact =
/* istanbul ignore next */
(cov_2658cs4ann().s[8]++, require("lucide-react"));
const _FileUpload =
/* istanbul ignore next */
(cov_2658cs4ann().s[9]++, require("./FileUpload"));
const _ImportTypeSelector =
/* istanbul ignore next */
(cov_2658cs4ann().s[10]++, require("./ImportTypeSelector"));
const _CSVPreview =
/* istanbul ignore next */
(cov_2658cs4ann().s[11]++, require("./CSVPreview"));
const _ImportProgress =
/* istanbul ignore next */
(cov_2658cs4ann().s[12]++, require("./ImportProgress"));
function CSVImportModal({
  isOpen,
  onClose,
  onImportComplete
}) {
  /* istanbul ignore next */
  cov_2658cs4ann().f[3]++;
  const [step, setStep] =
  /* istanbul ignore next */
  (cov_2658cs4ann().s[13]++, (0, _react.useState)('select-type'));
  const [importType, setImportType] =
  /* istanbul ignore next */
  (cov_2658cs4ann().s[14]++, (0, _react.useState)(null));
  const [selectedFile, setSelectedFile] =
  /* istanbul ignore next */
  (cov_2658cs4ann().s[15]++, (0, _react.useState)(null));
  const [fileContent, setFileContent] =
  /* istanbul ignore next */
  (cov_2658cs4ann().s[16]++, (0, _react.useState)(''));
  const [validation, setValidation] =
  /* istanbul ignore next */
  (cov_2658cs4ann().s[17]++, (0, _react.useState)(null));
  const [importId, setImportId] =
  /* istanbul ignore next */
  (cov_2658cs4ann().s[18]++, (0, _react.useState)(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_2658cs4ann().s[19]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2658cs4ann().s[20]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_2658cs4ann().s[21]++;
  const resetModal = () => {
    /* istanbul ignore next */
    cov_2658cs4ann().f[4]++;
    cov_2658cs4ann().s[22]++;
    setStep('select-type');
    /* istanbul ignore next */
    cov_2658cs4ann().s[23]++;
    setImportType(null);
    /* istanbul ignore next */
    cov_2658cs4ann().s[24]++;
    setSelectedFile(null);
    /* istanbul ignore next */
    cov_2658cs4ann().s[25]++;
    setFileContent('');
    /* istanbul ignore next */
    cov_2658cs4ann().s[26]++;
    setValidation(null);
    /* istanbul ignore next */
    cov_2658cs4ann().s[27]++;
    setImportId(null);
    /* istanbul ignore next */
    cov_2658cs4ann().s[28]++;
    setIsLoading(false);
    /* istanbul ignore next */
    cov_2658cs4ann().s[29]++;
    setError(null);
  };
  /* istanbul ignore next */
  cov_2658cs4ann().s[30]++;
  const handleClose = () => {
    /* istanbul ignore next */
    cov_2658cs4ann().f[5]++;
    cov_2658cs4ann().s[31]++;
    resetModal();
    /* istanbul ignore next */
    cov_2658cs4ann().s[32]++;
    onClose();
  };
  /* istanbul ignore next */
  cov_2658cs4ann().s[33]++;
  const handleTypeSelect = type => {
    /* istanbul ignore next */
    cov_2658cs4ann().f[6]++;
    cov_2658cs4ann().s[34]++;
    setImportType(type);
    /* istanbul ignore next */
    cov_2658cs4ann().s[35]++;
    setStep('upload-file');
  };
  const handleFileSelect =
  /* istanbul ignore next */
  (cov_2658cs4ann().s[36]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_2658cs4ann().f[7]++;
    cov_2658cs4ann().s[37]++;
    setSelectedFile(file);
    /* istanbul ignore next */
    cov_2658cs4ann().s[38]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2658cs4ann().s[39]++;
    setError(null);
    /* istanbul ignore next */
    cov_2658cs4ann().s[40]++;
    try {
      // Read file content
      const content =
      /* istanbul ignore next */
      (cov_2658cs4ann().s[41]++, await readFileAsText(file));
      /* istanbul ignore next */
      cov_2658cs4ann().s[42]++;
      setFileContent(content);
      // Validate CSV content
      /* istanbul ignore next */
      cov_2658cs4ann().s[43]++;
      if (importType) {
        /* istanbul ignore next */
        cov_2658cs4ann().b[0][0]++;
        const response =
        /* istanbul ignore next */
        (cov_2658cs4ann().s[44]++, await fetch('/api/import/csv/validate', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            content,
            importType
          })
        }));
        /* istanbul ignore next */
        cov_2658cs4ann().s[45]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_2658cs4ann().b[1][0]++;
          cov_2658cs4ann().s[46]++;
          throw new Error('Failed to validate CSV');
        } else
        /* istanbul ignore next */
        {
          cov_2658cs4ann().b[1][1]++;
        }
        const validationResult =
        /* istanbul ignore next */
        (cov_2658cs4ann().s[47]++, await response.json());
        /* istanbul ignore next */
        cov_2658cs4ann().s[48]++;
        setValidation(validationResult);
        /* istanbul ignore next */
        cov_2658cs4ann().s[49]++;
        setStep('preview');
      } else
      /* istanbul ignore next */
      {
        cov_2658cs4ann().b[0][1]++;
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_2658cs4ann().s[50]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_2658cs4ann().b[2][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2658cs4ann().b[2][1]++, 'Failed to process file'));
    } finally {
      /* istanbul ignore next */
      cov_2658cs4ann().s[51]++;
      setIsLoading(false);
    }
  }, [importType]));
  /* istanbul ignore next */
  cov_2658cs4ann().s[52]++;
  const readFileAsText = file => {
    /* istanbul ignore next */
    cov_2658cs4ann().f[8]++;
    cov_2658cs4ann().s[53]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2658cs4ann().f[9]++;
      const reader =
      /* istanbul ignore next */
      (cov_2658cs4ann().s[54]++, new FileReader());
      /* istanbul ignore next */
      cov_2658cs4ann().s[55]++;
      reader.onload = e => {
        /* istanbul ignore next */
        cov_2658cs4ann().f[10]++;
        cov_2658cs4ann().s[56]++;
        return resolve(e.target?.result);
      };
      /* istanbul ignore next */
      cov_2658cs4ann().s[57]++;
      reader.onerror = () => {
        /* istanbul ignore next */
        cov_2658cs4ann().f[11]++;
        cov_2658cs4ann().s[58]++;
        return reject(new Error('Failed to read file'));
      };
      /* istanbul ignore next */
      cov_2658cs4ann().s[59]++;
      reader.readAsText(file);
    });
  };
  /* istanbul ignore next */
  cov_2658cs4ann().s[60]++;
  const handleStartImport = async () => {
    /* istanbul ignore next */
    cov_2658cs4ann().f[12]++;
    cov_2658cs4ann().s[61]++;
    if (
    /* istanbul ignore next */
    (cov_2658cs4ann().b[4][0]++, !selectedFile) ||
    /* istanbul ignore next */
    (cov_2658cs4ann().b[4][1]++, !importType) ||
    /* istanbul ignore next */
    (cov_2658cs4ann().b[4][2]++, !fileContent)) {
      /* istanbul ignore next */
      cov_2658cs4ann().b[3][0]++;
      cov_2658cs4ann().s[62]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2658cs4ann().b[3][1]++;
    }
    cov_2658cs4ann().s[63]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_2658cs4ann().s[64]++;
    setError(null);
    /* istanbul ignore next */
    cov_2658cs4ann().s[65]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2658cs4ann().s[66]++, await fetch('/api/import/csv', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          file: {
            name: selectedFile.name,
            size: selectedFile.size,
            type: selectedFile.type,
            content: fileContent
          },
          importType,
          config: {
            skipEmptyRows: true,
            createMissingPlants: true,
            handleDuplicates: 'skip'
          }
        })
      }));
      /* istanbul ignore next */
      cov_2658cs4ann().s[67]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2658cs4ann().b[5][0]++;
        cov_2658cs4ann().s[68]++;
        throw new Error('Failed to start import');
      } else
      /* istanbul ignore next */
      {
        cov_2658cs4ann().b[5][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_2658cs4ann().s[69]++, await response.json());
      /* istanbul ignore next */
      cov_2658cs4ann().s[70]++;
      setImportId(result.importId);
      /* istanbul ignore next */
      cov_2658cs4ann().s[71]++;
      setStep('importing');
    } catch (err) {
      /* istanbul ignore next */
      cov_2658cs4ann().s[72]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_2658cs4ann().b[6][0]++, err.message) :
      /* istanbul ignore next */
      (cov_2658cs4ann().b[6][1]++, 'Failed to start import'));
    } finally {
      /* istanbul ignore next */
      cov_2658cs4ann().s[73]++;
      setIsLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_2658cs4ann().s[74]++;
  const handleImportComplete = progress => {
    /* istanbul ignore next */
    cov_2658cs4ann().f[13]++;
    cov_2658cs4ann().s[75]++;
    setStep('complete');
    /* istanbul ignore next */
    cov_2658cs4ann().s[76]++;
    onImportComplete?.(progress.summary);
  };
  /* istanbul ignore next */
  cov_2658cs4ann().s[77]++;
  const handleImportError = errorMessage => {
    /* istanbul ignore next */
    cov_2658cs4ann().f[14]++;
    cov_2658cs4ann().s[78]++;
    setError(errorMessage);
  };
  /* istanbul ignore next */
  cov_2658cs4ann().s[79]++;
  const getStepTitle = () => {
    /* istanbul ignore next */
    cov_2658cs4ann().f[15]++;
    cov_2658cs4ann().s[80]++;
    switch (step) {
      case 'select-type':
        /* istanbul ignore next */
        cov_2658cs4ann().b[7][0]++;
        cov_2658cs4ann().s[81]++;
        return 'Import CSV Data';
      case 'upload-file':
        /* istanbul ignore next */
        cov_2658cs4ann().b[7][1]++;
        cov_2658cs4ann().s[82]++;
        return 'Upload CSV File';
      case 'preview':
        /* istanbul ignore next */
        cov_2658cs4ann().b[7][2]++;
        cov_2658cs4ann().s[83]++;
        return 'Preview & Confirm';
      case 'importing':
        /* istanbul ignore next */
        cov_2658cs4ann().b[7][3]++;
        cov_2658cs4ann().s[84]++;
        return 'Importing Data';
      case 'complete':
        /* istanbul ignore next */
        cov_2658cs4ann().b[7][4]++;
        cov_2658cs4ann().s[85]++;
        return 'Import Complete';
      default:
        /* istanbul ignore next */
        cov_2658cs4ann().b[7][5]++;
        cov_2658cs4ann().s[86]++;
        return 'Import CSV Data';
    }
  };
  const canGoBack =
  /* istanbul ignore next */
  (cov_2658cs4ann().s[87]++,
  /* istanbul ignore next */
  (cov_2658cs4ann().b[8][0]++, step !== 'select-type') &&
  /* istanbul ignore next */
  (cov_2658cs4ann().b[8][1]++, step !== 'importing'));
  const canGoNext =
  /* istanbul ignore next */
  (cov_2658cs4ann().s[88]++,
  /* istanbul ignore next */
  (cov_2658cs4ann().b[9][0]++, step === 'select-type') &&
  /* istanbul ignore next */
  (cov_2658cs4ann().b[9][1]++, importType) ||
  /* istanbul ignore next */
  (cov_2658cs4ann().b[9][2]++, step === 'upload-file') &&
  /* istanbul ignore next */
  (cov_2658cs4ann().b[9][3]++, selectedFile) ||
  /* istanbul ignore next */
  (cov_2658cs4ann().b[9][4]++, step === 'preview') &&
  /* istanbul ignore next */
  (cov_2658cs4ann().b[9][5]++, validation?.isValid));
  /* istanbul ignore next */
  cov_2658cs4ann().s[89]++;
  if (!isOpen) {
    /* istanbul ignore next */
    cov_2658cs4ann().b[10][0]++;
    cov_2658cs4ann().s[90]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2658cs4ann().b[10][1]++;
  }
  cov_2658cs4ann().s[91]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "modal-overlay",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "modal-content modal-content--large",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "modal-header",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "modal-title",
          children: getStepTitle()
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: handleClose,
          disabled: isLoading,
          className: `modal-close ${isLoading ?
          /* istanbul ignore next */
          (cov_2658cs4ann().b[11][0]++, 'opacity-50 cursor-not-allowed') :
          /* istanbul ignore next */
          (cov_2658cs4ann().b[11][1]++, '')}`,
          title: isLoading ?
          /* istanbul ignore next */
          (cov_2658cs4ann().b[12][0]++, 'Please wait...') :
          /* istanbul ignore next */
          (cov_2658cs4ann().b[12][1]++, 'Close'),
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.X, {
            className: "w-5 h-5"
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "modal-body",
        children: [
        /* istanbul ignore next */
        (cov_2658cs4ann().b[13][0]++, error) &&
        /* istanbul ignore next */
        (cov_2658cs4ann().b[13][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "mb-6 card card-body bg-red-50 border border-red-200",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-sm text-error",
            children: error
          })
        })),
        /* istanbul ignore next */
        (cov_2658cs4ann().b[14][0]++, step === 'select-type') &&
        /* istanbul ignore next */
        (cov_2658cs4ann().b[14][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_ImportTypeSelector.ImportTypeSelector, {
          selectedType: importType,
          onTypeSelect: handleTypeSelect
        })),
        /* istanbul ignore next */
        (cov_2658cs4ann().b[15][0]++, step === 'upload-file') &&
        /* istanbul ignore next */
        (cov_2658cs4ann().b[15][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-6",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Upload, {
              className: "w-12 h-12 text-primary-500 mx-auto mb-4"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("h3", {
              className: "text-lg font-medium text-neutral-900 mb-2",
              children: ["Upload your ", importType?.replace('_', ' '), " CSV file"]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-neutral-600",
              children: "Make sure your CSV file has the required columns for this import type."
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_FileUpload.FileUpload, {
            onFileSelect: handleFileSelect,
            acceptedTypes: ['.csv', 'text/csv']
          })]
        })),
        /* istanbul ignore next */
        (cov_2658cs4ann().b[16][0]++, step === 'preview') &&
        /* istanbul ignore next */
        (cov_2658cs4ann().b[16][1]++, validation) &&
        /* istanbul ignore next */
        (cov_2658cs4ann().b[16][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-6",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.FileText, {
              className: "w-12 h-12 text-blue-500 mx-auto mb-4"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "text-lg font-medium text-gray-900 mb-2",
              children: "Review your data"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: "Check the preview below and confirm the import when ready."
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_CSVPreview.CSVPreview, {
            data: validation.preview,
            errors: validation.errors,
            isValid: validation.isValid
          })]
        })),
        /* istanbul ignore next */
        (cov_2658cs4ann().b[17][0]++, step === 'importing') &&
        /* istanbul ignore next */
        (cov_2658cs4ann().b[17][1]++, importId) &&
        /* istanbul ignore next */
        (cov_2658cs4ann().b[17][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_ImportProgress.ImportProgress, {
          importId: importId,
          onComplete: handleImportComplete,
          onError: handleImportError
        })),
        /* istanbul ignore next */
        (cov_2658cs4ann().b[18][0]++, step === 'complete') &&
        /* istanbul ignore next */
        (cov_2658cs4ann().b[18][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-center space-y-6",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
            className: "w-16 h-16 text-green-500 mx-auto"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "text-lg font-medium text-gray-900 mb-2",
              children: "Import completed successfully!"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-gray-600",
              children: "Your CSV data has been imported into your plant collection."
            })]
          })]
        }))]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between p-6 border-t border-gray-200 bg-gray-50",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "flex space-x-2",
          children:
          /* istanbul ignore next */
          (cov_2658cs4ann().b[19][0]++, canGoBack) &&
          /* istanbul ignore next */
          (cov_2658cs4ann().b[19][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_2658cs4ann().f[16]++;
              cov_2658cs4ann().s[92]++;
              if (step === 'upload-file') {
                /* istanbul ignore next */
                cov_2658cs4ann().b[20][0]++;
                cov_2658cs4ann().s[93]++;
                setStep('select-type');
              } else {
                /* istanbul ignore next */
                cov_2658cs4ann().b[20][1]++;
                cov_2658cs4ann().s[94]++;
                if (step === 'preview') {
                  /* istanbul ignore next */
                  cov_2658cs4ann().b[21][0]++;
                  cov_2658cs4ann().s[95]++;
                  setStep('upload-file');
                } else
                /* istanbul ignore next */
                {
                  cov_2658cs4ann().b[21][1]++;
                }
              }
            },
            disabled: isLoading,
            className: `btn btn--outline ${isLoading ?
            /* istanbul ignore next */
            (cov_2658cs4ann().b[22][0]++, 'opacity-50 cursor-not-allowed') :
            /* istanbul ignore next */
            (cov_2658cs4ann().b[22][1]++, '')}`,
            children: "Back"
          }))
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "flex space-x-2",
          children: step === 'complete' ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_2658cs4ann().b[23][0]++, (0, _jsxruntime.jsx)("button", {
            onClick: handleClose,
            className: "btn btn--primary",
            children: "Done"
          })) :
          /* istanbul ignore next */
          (cov_2658cs4ann().b[23][1]++,
          /* istanbul ignore next */
          (cov_2658cs4ann().b[25][0]++, step === 'preview') &&
          /* istanbul ignore next */
          (cov_2658cs4ann().b[25][1]++, validation?.isValid) ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_2658cs4ann().b[24][0]++, (0, _jsxruntime.jsx)("button", {
            onClick: handleStartImport,
            disabled: isLoading,
            className: `btn btn--primary ${isLoading ?
            /* istanbul ignore next */
            (cov_2658cs4ann().b[26][0]++, 'btn--loading') :
            /* istanbul ignore next */
            (cov_2658cs4ann().b[26][1]++, '')}`,
            children: isLoading ?
            /* istanbul ignore next */
            (cov_2658cs4ann().b[27][0]++, 'Starting...') :
            /* istanbul ignore next */
            (cov_2658cs4ann().b[27][1]++, 'Start Import')
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_2658cs4ann().b[24][1]++, (0, _jsxruntime.jsx)("button", {
            onClick: handleClose,
            disabled: isLoading,
            className: `btn btn--outline ${isLoading ?
            /* istanbul ignore next */
            (cov_2658cs4ann().b[28][0]++, 'opacity-50 cursor-not-allowed') :
            /* istanbul ignore next */
            (cov_2658cs4ann().b[28][1]++, '')}`,
            children: "Cancel"
          })))
        })]
      })]
    })
  });
}
const _default =
/* istanbul ignore next */
(cov_2658cs4ann().s[96]++, CSVImportModal);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
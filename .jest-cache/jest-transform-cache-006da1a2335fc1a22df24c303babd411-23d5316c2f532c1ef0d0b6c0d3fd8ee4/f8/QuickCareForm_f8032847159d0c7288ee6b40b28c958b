793a1276b6f7d5520ce5399501ef3a5d
'use client';
"use strict";

/* istanbul ignore next */
function cov_1usgbljaji() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/components/care/QuickCareForm.tsx";
  var hash = "0f19a621c3198825a33692b57afee26936397321";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/components/care/QuickCareForm.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 14,
          column: 56
        }
      },
      "6": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 53
        }
      },
      "7": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 64
        }
      },
      "8": {
        start: {
          line: 18,
          column: 46
        },
        end: {
          line: 18,
          column: 75
        }
      },
      "9": {
        start: {
          line: 19,
          column: 39
        },
        end: {
          line: 19,
          column: 77
        }
      },
      "10": {
        start: {
          line: 20,
          column: 36
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "11": {
        start: {
          line: 29,
          column: 44
        },
        end: {
          line: 29,
          column: 71
        }
      },
      "12": {
        start: {
          line: 30,
          column: 30
        },
        end: {
          line: 30,
          column: 56
        }
      },
      "13": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "14": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "15": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 27
        }
      },
      "16": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 30
        }
      },
      "17": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 23
        }
      },
      "18": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "19": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "20": {
        start: {
          line: 70,
          column: 33
        },
        end: {
          line: 80,
          column: 18
        }
      },
      "21": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 84,
          column: 17
        }
      },
      "22": {
        start: {
          line: 82,
          column: 38
        },
        end: {
          line: 82,
          column: 59
        }
      },
      "23": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 83,
          column: 77
        }
      },
      "24": {
        start: {
          line: 87,
          column: 34
        },
        end: {
          line: 91,
          column: 18
        }
      },
      "25": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 41
        }
      },
      "26": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 70
        }
      },
      "27": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 105,
          column: 15
        }
      },
      "28": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 26
        }
      },
      "29": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 80
        }
      },
      "30": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 35
        }
      },
      "31": {
        start: {
          line: 113,
          column: 30
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "32": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 117,
          column: 16
        }
      },
      "33": {
        start: {
          line: 114,
          column: 29
        },
        end: {
          line: 117,
          column: 13
        }
      },
      "34": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 344,
          column: 7
        }
      },
      "35": {
        start: {
          line: 166,
          column: 70
        },
        end: {
          line: 181,
          column: 42
        }
      },
      "36": {
        start: {
          line: 168,
          column: 45
        },
        end: {
          line: 168,
          column: 86
        }
      },
      "37": {
        start: {
          line: 196,
          column: 39
        },
        end: {
          line: 196,
          column: 84
        }
      },
      "38": {
        start: {
          line: 215,
          column: 39
        },
        end: {
          line: 215,
          column: 90
        }
      },
      "39": {
        start: {
          line: 236,
          column: 47
        },
        end: {
          line: 236,
          column: 91
        }
      },
      "40": {
        start: {
          line: 254,
          column: 47
        },
        end: {
          line: 254,
          column: 92
        }
      },
      "41": {
        start: {
          line: 273,
          column: 39
        },
        end: {
          line: 273,
          column: 81
        }
      },
      "42": {
        start: {
          line: 291,
          column: 39
        },
        end: {
          line: 291,
          column: 91
        }
      },
      "43": {
        start: {
          line: 332,
          column: 52
        },
        end: {
          line: 332,
          column: 81
        }
      },
      "44": {
        start: {
          line: 334,
          column: 52
        },
        end: {
          line: 334,
          column: 81
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "QuickCareForm",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 22
          }
        },
        loc: {
          start: {
            line: 17,
            column: 97
          },
          end: {
            line: 345,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 26
          }
        },
        loc: {
          start: {
            line: 63,
            column: 36
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 63
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 113,
            column: 30
          },
          end: {
            line: 113,
            column: 31
          }
        },
        loc: {
          start: {
            line: 113,
            column: 46
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 113
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 114,
            column: 20
          },
          end: {
            line: 114,
            column: 21
          }
        },
        loc: {
          start: {
            line: 114,
            column: 29
          },
          end: {
            line: 117,
            column: 13
          }
        },
        line: 114
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 166,
            column: 48
          },
          end: {
            line: 166,
            column: 49
          }
        },
        loc: {
          start: {
            line: 166,
            column: 70
          },
          end: {
            line: 181,
            column: 42
          }
        },
        line: 166
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 168,
            column: 41
          },
          end: {
            line: 168,
            column: 42
          }
        },
        loc: {
          start: {
            line: 168,
            column: 45
          },
          end: {
            line: 168,
            column: 86
          }
        },
        line: 168
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 196,
            column: 34
          },
          end: {
            line: 196,
            column: 35
          }
        },
        loc: {
          start: {
            line: 196,
            column: 39
          },
          end: {
            line: 196,
            column: 84
          }
        },
        line: 196
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 215,
            column: 34
          },
          end: {
            line: 215,
            column: 35
          }
        },
        loc: {
          start: {
            line: 215,
            column: 39
          },
          end: {
            line: 215,
            column: 90
          }
        },
        line: 215
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 236,
            column: 42
          },
          end: {
            line: 236,
            column: 43
          }
        },
        loc: {
          start: {
            line: 236,
            column: 47
          },
          end: {
            line: 236,
            column: 91
          }
        },
        line: 236
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 254,
            column: 42
          },
          end: {
            line: 254,
            column: 43
          }
        },
        loc: {
          start: {
            line: 254,
            column: 47
          },
          end: {
            line: 254,
            column: 92
          }
        },
        line: 254
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 273,
            column: 34
          },
          end: {
            line: 273,
            column: 35
          }
        },
        loc: {
          start: {
            line: 273,
            column: 39
          },
          end: {
            line: 273,
            column: 81
          }
        },
        line: 273
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 291,
            column: 34
          },
          end: {
            line: 291,
            column: 35
          }
        },
        loc: {
          start: {
            line: 291,
            column: 39
          },
          end: {
            line: 291,
            column: 91
          }
        },
        line: 291
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 332,
            column: 47
          },
          end: {
            line: 332,
            column: 48
          }
        },
        loc: {
          start: {
            line: 332,
            column: 52
          },
          end: {
            line: 332,
            column: 81
          }
        },
        line: 332
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 334,
            column: 47
          },
          end: {
            line: 334,
            column: 48
          }
        },
        loc: {
          start: {
            line: 334,
            column: 52
          },
          end: {
            line: 334,
            column: 81
          }
        },
        line: 334
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 63
          },
          end: {
            line: 17,
            column: 93
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 81
          },
          end: {
            line: 17,
            column: 93
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 40
          }
        }, {
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 45
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: 85,
            column: 19
          },
          end: {
            line: 95,
            column: 13
          }
        }],
        line: 68
      },
      "3": {
        loc: {
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 36
          },
          end: {
            line: 83,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 36
          },
          end: {
            line: 83,
            column: 51
          }
        }, {
          start: {
            line: 83,
            column: 55
          },
          end: {
            line: 83,
            column: 75
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 41
          }
        }, {
          start: {
            line: 90,
            column: 45
          },
          end: {
            line: 90,
            column: 54
          }
        }],
        line: 90
      },
      "6": {
        loc: {
          start: {
            line: 98,
            column: 33
          },
          end: {
            line: 98,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 33
          },
          end: {
            line: 98,
            column: 48
          }
        }, {
          start: {
            line: 98,
            column: 52
          },
          end: {
            line: 98,
            column: 53
          }
        }],
        line: 98
      },
      "7": {
        loc: {
          start: {
            line: 108,
            column: 21
          },
          end: {
            line: 108,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 44
          },
          end: {
            line: 108,
            column: 55
          }
        }, {
          start: {
            line: 108,
            column: 58
          },
          end: {
            line: 108,
            column: 78
          }
        }],
        line: 108
      },
      "8": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 129,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 17
          }
        }, {
          start: {
            line: 123,
            column: 35
          },
          end: {
            line: 129,
            column: 14
          }
        }],
        line: 123
      },
      "9": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 157,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 130,
            column: 21
          }
        }, {
          start: {
            line: 130,
            column: 39
          },
          end: {
            line: 157,
            column: 14
          }
        }],
        line: 130
      },
      "10": {
        loc: {
          start: {
            line: 170,
            column: 50
          },
          end: {
            line: 170,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 85
          },
          end: {
            line: 170,
            column: 99
          }
        }, {
          start: {
            line: 170,
            column: 102
          },
          end: {
            line: 170,
            column: 116
          }
        }],
        line: 170
      },
      "11": {
        loc: {
          start: {
            line: 170,
            column: 141
          },
          end: {
            line: 170,
            column: 192
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 156
          },
          end: {
            line: 170,
            column: 187
          }
        }, {
          start: {
            line: 170,
            column: 190
          },
          end: {
            line: 170,
            column: 192
          }
        }],
        line: 170
      },
      "12": {
        loc: {
          start: {
            line: 199,
            column: 150
          },
          end: {
            line: 199,
            column: 201
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 199,
            column: 165
          },
          end: {
            line: 199,
            column: 196
          }
        }, {
          start: {
            line: 199,
            column: 199
          },
          end: {
            line: 199,
            column: 201
          }
        }],
        line: 199
      },
      "13": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 221,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 46
          }
        }, {
          start: {
            line: 204,
            column: 64
          },
          end: {
            line: 221,
            column: 14
          }
        }],
        line: 204
      },
      "14": {
        loc: {
          start: {
            line: 218,
            column: 150
          },
          end: {
            line: 218,
            column: 201
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 218,
            column: 165
          },
          end: {
            line: 218,
            column: 196
          }
        }, {
          start: {
            line: 218,
            column: 199
          },
          end: {
            line: 218,
            column: 201
          }
        }],
        line: 218
      },
      "15": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 262,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 222,
            column: 41
          }
        }, {
          start: {
            line: 222,
            column: 59
          },
          end: {
            line: 262,
            column: 14
          }
        }],
        line: 222
      },
      "16": {
        loc: {
          start: {
            line: 239,
            column: 158
          },
          end: {
            line: 239,
            column: 209
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 239,
            column: 173
          },
          end: {
            line: 239,
            column: 204
          }
        }, {
          start: {
            line: 239,
            column: 207
          },
          end: {
            line: 239,
            column: 209
          }
        }],
        line: 239
      },
      "17": {
        loc: {
          start: {
            line: 257,
            column: 158
          },
          end: {
            line: 257,
            column: 209
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 257,
            column: 173
          },
          end: {
            line: 257,
            column: 204
          }
        }, {
          start: {
            line: 257,
            column: 207
          },
          end: {
            line: 257,
            column: 209
          }
        }],
        line: 257
      },
      "18": {
        loc: {
          start: {
            line: 277,
            column: 162
          },
          end: {
            line: 277,
            column: 213
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 277,
            column: 177
          },
          end: {
            line: 277,
            column: 208
          }
        }, {
          start: {
            line: 277,
            column: 211
          },
          end: {
            line: 277,
            column: 213
          }
        }],
        line: 277
      },
      "19": {
        loc: {
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 305,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 281,
            column: 28
          }
        }, {
          start: {
            line: 281,
            column: 46
          },
          end: {
            line: 305,
            column: 14
          }
        }],
        line: 281
      },
      "20": {
        loc: {
          start: {
            line: 293,
            column: 150
          },
          end: {
            line: 293,
            column: 201
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 165
          },
          end: {
            line: 293,
            column: 196
          }
        }, {
          start: {
            line: 293,
            column: 199
          },
          end: {
            line: 293,
            column: 201
          }
        }],
        line: 293
      },
      "21": {
        loc: {
          start: {
            line: 309,
            column: 20
          },
          end: {
            line: 315,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 20
          },
          end: {
            line: 309,
            column: 28
          }
        }, {
          start: {
            line: 309,
            column: 46
          },
          end: {
            line: 315,
            column: 22
          }
        }],
        line: 309
      },
      "22": {
        loc: {
          start: {
            line: 313,
            column: 65
          },
          end: {
            line: 313,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 80
          },
          end: {
            line: 313,
            column: 111
          }
        }, {
          start: {
            line: 313,
            column: 114
          },
          end: {
            line: 313,
            column: 116
          }
        }],
        line: 313
      },
      "23": {
        loc: {
          start: {
            line: 318,
            column: 34
          },
          end: {
            line: 318,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 318,
            column: 34
          },
          end: {
            line: 318,
            column: 46
          }
        }, {
          start: {
            line: 318,
            column: 50
          },
          end: {
            line: 318,
            column: 75
          }
        }],
        line: 318
      },
      "24": {
        loc: {
          start: {
            line: 319,
            column: 65
          },
          end: {
            line: 319,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 319,
            column: 80
          },
          end: {
            line: 319,
            column: 94
          }
        }, {
          start: {
            line: 319,
            column: 97
          },
          end: {
            line: 319,
            column: 99
          }
        }],
        line: 319
      },
      "25": {
        loc: {
          start: {
            line: 320,
            column: 34
          },
          end: {
            line: 320,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 320,
            column: 49
          },
          end: {
            line: 320,
            column: 61
          }
        }, {
          start: {
            line: 320,
            column: 64
          },
          end: {
            line: 320,
            column: 104
          }
        }],
        line: 320
      },
      "26": {
        loc: {
          start: {
            line: 320,
            column: 64
          },
          end: {
            line: 320,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 320,
            column: 75
          },
          end: {
            line: 320,
            column: 85
          }
        }, {
          start: {
            line: 320,
            column: 88
          },
          end: {
            line: 320,
            column: 104
          }
        }],
        line: 320
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/components/care/QuickCareForm.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport type { CareType } from '@/lib/types/care-types';\nimport { careHelpers } from '@/lib/types/care-types';\nimport { useOffline } from '@/hooks/useOffline';\nimport { useServiceWorker } from '@/lib/utils/service-worker';\n\ninterface QuickCareFormProps {\n  plantInstanceId?: number;\n  onSuccess?: () => void;\n  onCancel?: () => void;\n  defaultCareType?: CareType;\n}\n\nexport default function QuickCareForm({ \n  plantInstanceId, \n  onSuccess, \n  onCancel,\n  defaultCareType = 'fertilizer'\n}: QuickCareFormProps) {\n  const { isOnline, addPendingCareEntry } = useOffline();\n  const { registerBackgroundSync } = useServiceWorker();\n  \n  const [formData, setFormData] = useState({\n    plantInstanceId: plantInstanceId || 0,\n    careType: defaultCareType,\n    careDate: new Date().toISOString().split('T')[0], // Today's date\n    notes: '',\n    fertilizerType: '',\n    potSize: '',\n    soilType: '',\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const careTypes: { value: CareType; label: string; icon: string }[] = [\n    { value: 'fertilizer', label: 'Fertilizer', icon: '\uD83C\uDF31' },\n    { value: 'water', label: 'Water', icon: '\uD83D\uDCA7' },\n    { value: 'repot', label: 'Repot', icon: '\uD83E\uDEB4' },\n    { value: 'prune', label: 'Prune', icon: '\u2702\uFE0F' },\n    { value: 'inspect', label: 'Inspect', icon: '\uD83D\uDD0D' },\n    { value: 'other', label: 'Other', icon: '\uD83D\uDCDD' },\n  ];\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setError(null);\n\n    try {\n      if (isOnline) {\n        // Online: Submit directly to API\n        const response = await fetch('/api/care/log', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            ...formData,\n            careDate: new Date(formData.careDate),\n            plantInstanceId: Number(formData.plantInstanceId),\n          }),\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || 'Failed to log care');\n        }\n      } else {\n        // Offline: Add to pending queue\n        const pendingId = addPendingCareEntry({\n          plantInstanceId: Number(formData.plantInstanceId),\n          careType: formData.careType as CareType,\n          notes: formData.notes || undefined,\n        });\n\n        // Register for background sync\n        registerBackgroundSync();\n\n        console.log('Care entry queued for sync:', pendingId);\n      }\n\n      // Reset form\n      setFormData({\n        plantInstanceId: plantInstanceId || 0,\n        careType: defaultCareType,\n        careDate: new Date().toISOString().split('T')[0],\n        notes: '',\n        fertilizerType: '',\n        potSize: '',\n        soilType: '',\n      });\n\n      onSuccess?.();\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to log care');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n          <p className=\"text-red-800 text-sm\">{error}</p>\n        </div>\n      )}\n\n      {/* Offline Mode Indicator */}\n      {!isOnline && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n          <div className=\"flex items-center gap-2\">\n            <svg className=\"w-4 h-4 text-yellow-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n            </svg>\n            <p className=\"text-yellow-800 text-sm\">\n              <span className=\"font-medium\">Offline Mode:</span> Care will be logged when you're back online.\n            </p>\n          </div>\n        </div>\n      )}\n\n      {/* Care Type Selection */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Care Type\n        </label>\n        <div className=\"grid grid-cols-3 gap-2\">\n          {careTypes.map((type) => (\n            <button\n              key={type.value}\n              type=\"button\"\n              onClick={() => handleInputChange('careType', type.value)}\n              disabled={isSubmitting}\n              className={`btn ${formData.careType === type.value ? 'btn--primary' : 'btn--outline'} flex-col h-auto py-3 ${isSubmitting ? 'opacity-50 cursor-not-allowed' : ''}`}\n            >\n              <span className=\"text-lg mb-1\">{type.icon}</span>\n              <span className=\"text-xs font-medium\">{type.label}</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Care Date */}\n      <div>\n        <label htmlFor=\"careDate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Care Date\n        </label>\n        <input\n          type=\"date\"\n          id=\"careDate\"\n          value={formData.careDate}\n          onChange={(e) => handleInputChange('careDate', e.target.value)}\n          max={new Date().toISOString().split('T')[0]} // Can't be in the future\n          disabled={isSubmitting}\n          className={`w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n          required\n        />\n      </div>\n\n      {/* Conditional Fields */}\n      {formData.careType === 'fertilizer' && (\n        <div>\n          <label htmlFor=\"fertilizerType\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Fertilizer Type (Optional)\n          </label>\n          <input\n            type=\"text\"\n            id=\"fertilizerType\"\n            value={formData.fertilizerType}\n            onChange={(e) => handleInputChange('fertilizerType', e.target.value)}\n            placeholder=\"e.g., Liquid fertilizer, Slow-release pellets\"\n            disabled={isSubmitting}\n            className={`w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n          />\n        </div>\n      )}\n\n      {formData.careType === 'repot' && (\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div>\n            <label htmlFor=\"potSize\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Pot Size (Optional)\n            </label>\n            <input\n              type=\"text\"\n              id=\"potSize\"\n              value={formData.potSize}\n              onChange={(e) => handleInputChange('potSize', e.target.value)}\n              placeholder=\"e.g., 6 inch, 15cm\"\n              disabled={isSubmitting}\n              className={`w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"soilType\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Soil Type (Optional)\n            </label>\n            <input\n              type=\"text\"\n              id=\"soilType\"\n              value={formData.soilType}\n              onChange={(e) => handleInputChange('soilType', e.target.value)}\n              placeholder=\"e.g., Potting mix, Cactus soil\"\n              disabled={isSubmitting}\n              className={`w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Notes */}\n      <div>\n        <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Notes (Optional)\n        </label>\n        <textarea\n          id=\"notes\"\n          value={formData.notes}\n          onChange={(e) => handleInputChange('notes', e.target.value)}\n          placeholder=\"Any additional observations or notes...\"\n          rows={3}\n          disabled={isSubmitting}\n          className={`w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 resize-none ${isSubmitting ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n        />\n      </div>\n\n      {/* Plant Instance Selection (if not provided) */}\n      {!plantInstanceId && (\n        <div>\n          <label htmlFor=\"plantInstanceId\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Plant\n          </label>\n          <select\n            id=\"plantInstanceId\"\n            value={formData.plantInstanceId}\n            onChange={(e) => handleInputChange('plantInstanceId', e.target.value)}\n            disabled={isSubmitting}\n            className={`w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n            required\n          >\n            <option value=\"\">Select a plant...</option>\n            {/* Plant options will be populated dynamically */}\n          </select>\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Plant selection will be implemented when plant instances are available\n          </p>\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"form-actions\">\n        {onCancel && (\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            disabled={isSubmitting}\n            className={`btn btn--outline btn--full ${isSubmitting ? 'opacity-50 cursor-not-allowed' : ''}`}\n          >\n            Cancel\n          </button>\n        )}\n        <button\n          type=\"submit\"\n          disabled={isSubmitting || !formData.plantInstanceId}\n          className={`btn btn--primary btn--full ${isSubmitting ? 'btn--loading' : ''}`}\n        >\n          {isSubmitting ? 'Logging...' : isOnline ? 'Log Care' : 'Queue for Sync'}\n        </button>\n      </div>\n\n      {/* Care Type Description */}\n      <div className=\"bg-gray-50 rounded-lg p-3\">\n        <p className=\"text-sm text-gray-600\">\n          <span className=\"font-medium\">\n            {careTypes.find(t => t.value === formData.careType)?.icon} {careTypes.find(t => t.value === formData.careType)?.label}:\n          </span>\n          {' '}\n          {careHelpers.getCareTypeDisplay(formData.careType).description}\n        </p>\n      </div>\n    </form>\n  );\n}"],
      names: ["QuickCareForm", "plantInstanceId", "onSuccess", "onCancel", "defaultCareType", "isOnline", "addPendingCareEntry", "useOffline", "registerBackgroundSync", "useServiceWorker", "formData", "setFormData", "useState", "careType", "careDate", "Date", "toISOString", "split", "notes", "fertilizerType", "potSize", "soilType", "isSubmitting", "setIsSubmitting", "error", "setError", "careTypes", "value", "label", "icon", "handleSubmit", "e", "preventDefault", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "Number", "ok", "errorData", "json", "Error", "pendingId", "undefined", "console", "log", "err", "message", "handleInputChange", "field", "prev", "form", "onSubmit", "className", "div", "p", "svg", "fill", "viewBox", "path", "fillRule", "d", "clipRule", "span", "map", "type", "button", "onClick", "disabled", "htmlFor", "input", "id", "onChange", "target", "max", "required", "placeholder", "textarea", "rows", "select", "option", "find", "t", "careHelpers", "getCareTypeDisplay", "description"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0f19a621c3198825a33692b57afee26936397321"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1usgbljaji = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1usgbljaji();
cov_1usgbljaji().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1usgbljaji().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1usgbljaji().f[0]++;
    cov_1usgbljaji().s[2]++;
    return QuickCareForm;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1usgbljaji().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1usgbljaji().s[4]++, require("react"));
const _caretypes =
/* istanbul ignore next */
(cov_1usgbljaji().s[5]++, require("../../lib/types/care-types"));
const _useOffline =
/* istanbul ignore next */
(cov_1usgbljaji().s[6]++, require("../../hooks/useOffline"));
const _serviceworker =
/* istanbul ignore next */
(cov_1usgbljaji().s[7]++, require("../../lib/utils/service-worker"));
function QuickCareForm({
  plantInstanceId,
  onSuccess,
  onCancel,
  defaultCareType =
  /* istanbul ignore next */
  (cov_1usgbljaji().b[0][0]++, 'fertilizer')
}) {
  /* istanbul ignore next */
  cov_1usgbljaji().f[1]++;
  const {
    isOnline,
    addPendingCareEntry
  } =
  /* istanbul ignore next */
  (cov_1usgbljaji().s[8]++, (0, _useOffline.useOffline)());
  const {
    registerBackgroundSync
  } =
  /* istanbul ignore next */
  (cov_1usgbljaji().s[9]++, (0, _serviceworker.useServiceWorker)());
  const [formData, setFormData] =
  /* istanbul ignore next */
  (cov_1usgbljaji().s[10]++, (0, _react.useState)({
    plantInstanceId:
    /* istanbul ignore next */
    (cov_1usgbljaji().b[1][0]++, plantInstanceId) ||
    /* istanbul ignore next */
    (cov_1usgbljaji().b[1][1]++, 0),
    careType: defaultCareType,
    careDate: new Date().toISOString().split('T')[0],
    notes: '',
    fertilizerType: '',
    potSize: '',
    soilType: ''
  }));
  const [isSubmitting, setIsSubmitting] =
  /* istanbul ignore next */
  (cov_1usgbljaji().s[11]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1usgbljaji().s[12]++, (0, _react.useState)(null));
  const careTypes =
  /* istanbul ignore next */
  (cov_1usgbljaji().s[13]++, [{
    value: 'fertilizer',
    label: 'Fertilizer',
    icon: '🌱'
  }, {
    value: 'water',
    label: 'Water',
    icon: '💧'
  }, {
    value: 'repot',
    label: 'Repot',
    icon: '🪴'
  }, {
    value: 'prune',
    label: 'Prune',
    icon: '✂️'
  }, {
    value: 'inspect',
    label: 'Inspect',
    icon: '🔍'
  }, {
    value: 'other',
    label: 'Other',
    icon: '📝'
  }]);
  /* istanbul ignore next */
  cov_1usgbljaji().s[14]++;
  const handleSubmit = async e => {
    /* istanbul ignore next */
    cov_1usgbljaji().f[2]++;
    cov_1usgbljaji().s[15]++;
    e.preventDefault();
    /* istanbul ignore next */
    cov_1usgbljaji().s[16]++;
    setIsSubmitting(true);
    /* istanbul ignore next */
    cov_1usgbljaji().s[17]++;
    setError(null);
    /* istanbul ignore next */
    cov_1usgbljaji().s[18]++;
    try {
      /* istanbul ignore next */
      cov_1usgbljaji().s[19]++;
      if (isOnline) {
        /* istanbul ignore next */
        cov_1usgbljaji().b[2][0]++;
        // Online: Submit directly to API
        const response =
        /* istanbul ignore next */
        (cov_1usgbljaji().s[20]++, await fetch('/api/care/log', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            ...formData,
            careDate: new Date(formData.careDate),
            plantInstanceId: Number(formData.plantInstanceId)
          })
        }));
        /* istanbul ignore next */
        cov_1usgbljaji().s[21]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_1usgbljaji().b[3][0]++;
          const errorData =
          /* istanbul ignore next */
          (cov_1usgbljaji().s[22]++, await response.json());
          /* istanbul ignore next */
          cov_1usgbljaji().s[23]++;
          throw new Error(
          /* istanbul ignore next */
          (cov_1usgbljaji().b[4][0]++, errorData.error) ||
          /* istanbul ignore next */
          (cov_1usgbljaji().b[4][1]++, 'Failed to log care'));
        } else
        /* istanbul ignore next */
        {
          cov_1usgbljaji().b[3][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_1usgbljaji().b[2][1]++;
        // Offline: Add to pending queue
        const pendingId =
        /* istanbul ignore next */
        (cov_1usgbljaji().s[24]++, addPendingCareEntry({
          plantInstanceId: Number(formData.plantInstanceId),
          careType: formData.careType,
          notes:
          /* istanbul ignore next */
          (cov_1usgbljaji().b[5][0]++, formData.notes) ||
          /* istanbul ignore next */
          (cov_1usgbljaji().b[5][1]++, undefined)
        }));
        // Register for background sync
        /* istanbul ignore next */
        cov_1usgbljaji().s[25]++;
        registerBackgroundSync();
        /* istanbul ignore next */
        cov_1usgbljaji().s[26]++;
        console.log('Care entry queued for sync:', pendingId);
      }
      // Reset form
      /* istanbul ignore next */
      cov_1usgbljaji().s[27]++;
      setFormData({
        plantInstanceId:
        /* istanbul ignore next */
        (cov_1usgbljaji().b[6][0]++, plantInstanceId) ||
        /* istanbul ignore next */
        (cov_1usgbljaji().b[6][1]++, 0),
        careType: defaultCareType,
        careDate: new Date().toISOString().split('T')[0],
        notes: '',
        fertilizerType: '',
        potSize: '',
        soilType: ''
      });
      /* istanbul ignore next */
      cov_1usgbljaji().s[28]++;
      onSuccess?.();
    } catch (err) {
      /* istanbul ignore next */
      cov_1usgbljaji().s[29]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_1usgbljaji().b[7][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1usgbljaji().b[7][1]++, 'Failed to log care'));
    } finally {
      /* istanbul ignore next */
      cov_1usgbljaji().s[30]++;
      setIsSubmitting(false);
    }
  };
  /* istanbul ignore next */
  cov_1usgbljaji().s[31]++;
  const handleInputChange = (field, value) => {
    /* istanbul ignore next */
    cov_1usgbljaji().f[3]++;
    cov_1usgbljaji().s[32]++;
    setFormData(prev => {
      /* istanbul ignore next */
      cov_1usgbljaji().f[4]++;
      cov_1usgbljaji().s[33]++;
      return {
        ...prev,
        [field]: value
      };
    });
  };
  /* istanbul ignore next */
  cov_1usgbljaji().s[34]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("form", {
    onSubmit: handleSubmit,
    className: "space-y-4",
    children: [
    /* istanbul ignore next */
    (cov_1usgbljaji().b[8][0]++, error) &&
    /* istanbul ignore next */
    (cov_1usgbljaji().b[8][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-red-50 border border-red-200 rounded-lg p-3",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-red-800 text-sm",
        children: error
      })
    })),
    /* istanbul ignore next */
    (cov_1usgbljaji().b[9][0]++, !isOnline) &&
    /* istanbul ignore next */
    (cov_1usgbljaji().b[9][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-yellow-50 border border-yellow-200 rounded-lg p-3",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
          className: "w-4 h-4 text-yellow-600",
          fill: "currentColor",
          viewBox: "0 0 20 20",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
            fillRule: "evenodd",
            d: "M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z",
            clipRule: "evenodd"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
          className: "text-yellow-800 text-sm",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "font-medium",
            children: "Offline Mode:"
          }), " Care will be logged when you're back online."]
        })]
      })
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
        className: "block text-sm font-medium text-gray-700 mb-2",
        children: "Care Type"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "grid grid-cols-3 gap-2",
        children: careTypes.map(type => {
          /* istanbul ignore next */
          cov_1usgbljaji().f[5]++;
          cov_1usgbljaji().s[35]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
            type: "button",
            onClick: () => {
              /* istanbul ignore next */
              cov_1usgbljaji().f[6]++;
              cov_1usgbljaji().s[36]++;
              return handleInputChange('careType', type.value);
            },
            disabled: isSubmitting,
            className: `btn ${formData.careType === type.value ?
            /* istanbul ignore next */
            (cov_1usgbljaji().b[10][0]++, 'btn--primary') :
            /* istanbul ignore next */
            (cov_1usgbljaji().b[10][1]++, 'btn--outline')} flex-col h-auto py-3 ${isSubmitting ?
            /* istanbul ignore next */
            (cov_1usgbljaji().b[11][0]++, 'opacity-50 cursor-not-allowed') :
            /* istanbul ignore next */
            (cov_1usgbljaji().b[11][1]++, '')}`,
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-lg mb-1",
              children: type.icon
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-xs font-medium",
              children: type.label
            })]
          }, type.value);
        })
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
        htmlFor: "careDate",
        className: "block text-sm font-medium text-gray-700 mb-1",
        children: "Care Date"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
        type: "date",
        id: "careDate",
        value: formData.careDate,
        onChange: e => {
          /* istanbul ignore next */
          cov_1usgbljaji().f[7]++;
          cov_1usgbljaji().s[37]++;
          return handleInputChange('careDate', e.target.value);
        },
        max: new Date().toISOString().split('T')[0],
        disabled: isSubmitting,
        className: `w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ?
        /* istanbul ignore next */
        (cov_1usgbljaji().b[12][0]++, 'bg-gray-50 cursor-not-allowed') :
        /* istanbul ignore next */
        (cov_1usgbljaji().b[12][1]++, '')}`,
        required: true
      })]
    }),
    /* istanbul ignore next */
    (cov_1usgbljaji().b[13][0]++, formData.careType === 'fertilizer') &&
    /* istanbul ignore next */
    (cov_1usgbljaji().b[13][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
        htmlFor: "fertilizerType",
        className: "block text-sm font-medium text-gray-700 mb-1",
        children: "Fertilizer Type (Optional)"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
        type: "text",
        id: "fertilizerType",
        value: formData.fertilizerType,
        onChange: e => {
          /* istanbul ignore next */
          cov_1usgbljaji().f[8]++;
          cov_1usgbljaji().s[38]++;
          return handleInputChange('fertilizerType', e.target.value);
        },
        placeholder: "e.g., Liquid fertilizer, Slow-release pellets",
        disabled: isSubmitting,
        className: `w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ?
        /* istanbul ignore next */
        (cov_1usgbljaji().b[14][0]++, 'bg-gray-50 cursor-not-allowed') :
        /* istanbul ignore next */
        (cov_1usgbljaji().b[14][1]++, '')}`
      })]
    })),
    /* istanbul ignore next */
    (cov_1usgbljaji().b[15][0]++, formData.careType === 'repot') &&
    /* istanbul ignore next */
    (cov_1usgbljaji().b[15][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-2 gap-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
          htmlFor: "potSize",
          className: "block text-sm font-medium text-gray-700 mb-1",
          children: "Pot Size (Optional)"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
          type: "text",
          id: "potSize",
          value: formData.potSize,
          onChange: e => {
            /* istanbul ignore next */
            cov_1usgbljaji().f[9]++;
            cov_1usgbljaji().s[39]++;
            return handleInputChange('potSize', e.target.value);
          },
          placeholder: "e.g., 6 inch, 15cm",
          disabled: isSubmitting,
          className: `w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ?
          /* istanbul ignore next */
          (cov_1usgbljaji().b[16][0]++, 'bg-gray-50 cursor-not-allowed') :
          /* istanbul ignore next */
          (cov_1usgbljaji().b[16][1]++, '')}`
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
          htmlFor: "soilType",
          className: "block text-sm font-medium text-gray-700 mb-1",
          children: "Soil Type (Optional)"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
          type: "text",
          id: "soilType",
          value: formData.soilType,
          onChange: e => {
            /* istanbul ignore next */
            cov_1usgbljaji().f[10]++;
            cov_1usgbljaji().s[40]++;
            return handleInputChange('soilType', e.target.value);
          },
          placeholder: "e.g., Potting mix, Cactus soil",
          disabled: isSubmitting,
          className: `w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ?
          /* istanbul ignore next */
          (cov_1usgbljaji().b[17][0]++, 'bg-gray-50 cursor-not-allowed') :
          /* istanbul ignore next */
          (cov_1usgbljaji().b[17][1]++, '')}`
        })]
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
        htmlFor: "notes",
        className: "block text-sm font-medium text-gray-700 mb-1",
        children: "Notes (Optional)"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("textarea", {
        id: "notes",
        value: formData.notes,
        onChange: e => {
          /* istanbul ignore next */
          cov_1usgbljaji().f[11]++;
          cov_1usgbljaji().s[41]++;
          return handleInputChange('notes', e.target.value);
        },
        placeholder: "Any additional observations or notes...",
        rows: 3,
        disabled: isSubmitting,
        className: `w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 resize-none ${isSubmitting ?
        /* istanbul ignore next */
        (cov_1usgbljaji().b[18][0]++, 'bg-gray-50 cursor-not-allowed') :
        /* istanbul ignore next */
        (cov_1usgbljaji().b[18][1]++, '')}`
      })]
    }),
    /* istanbul ignore next */
    (cov_1usgbljaji().b[19][0]++, !plantInstanceId) &&
    /* istanbul ignore next */
    (cov_1usgbljaji().b[19][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
        htmlFor: "plantInstanceId",
        className: "block text-sm font-medium text-gray-700 mb-1",
        children: "Plant"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("select", {
        id: "plantInstanceId",
        value: formData.plantInstanceId,
        onChange: e => {
          /* istanbul ignore next */
          cov_1usgbljaji().f[12]++;
          cov_1usgbljaji().s[42]++;
          return handleInputChange('plantInstanceId', e.target.value);
        },
        disabled: isSubmitting,
        className: `w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ?
        /* istanbul ignore next */
        (cov_1usgbljaji().b[20][0]++, 'bg-gray-50 cursor-not-allowed') :
        /* istanbul ignore next */
        (cov_1usgbljaji().b[20][1]++, '')}`,
        required: true,
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
          value: "",
          children: "Select a plant..."
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-xs text-gray-500 mt-1",
        children: "Plant selection will be implemented when plant instances are available"
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "form-actions",
      children: [
      /* istanbul ignore next */
      (cov_1usgbljaji().b[21][0]++, onCancel) &&
      /* istanbul ignore next */
      (cov_1usgbljaji().b[21][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        type: "button",
        onClick: onCancel,
        disabled: isSubmitting,
        className: `btn btn--outline btn--full ${isSubmitting ?
        /* istanbul ignore next */
        (cov_1usgbljaji().b[22][0]++, 'opacity-50 cursor-not-allowed') :
        /* istanbul ignore next */
        (cov_1usgbljaji().b[22][1]++, '')}`,
        children: "Cancel"
      })), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        type: "submit",
        disabled:
        /* istanbul ignore next */
        (cov_1usgbljaji().b[23][0]++, isSubmitting) ||
        /* istanbul ignore next */
        (cov_1usgbljaji().b[23][1]++, !formData.plantInstanceId),
        className: `btn btn--primary btn--full ${isSubmitting ?
        /* istanbul ignore next */
        (cov_1usgbljaji().b[24][0]++, 'btn--loading') :
        /* istanbul ignore next */
        (cov_1usgbljaji().b[24][1]++, '')}`,
        children: isSubmitting ?
        /* istanbul ignore next */
        (cov_1usgbljaji().b[25][0]++, 'Logging...') :
        /* istanbul ignore next */
        (cov_1usgbljaji().b[25][1]++, isOnline ?
        /* istanbul ignore next */
        (cov_1usgbljaji().b[26][0]++, 'Log Care') :
        /* istanbul ignore next */
        (cov_1usgbljaji().b[26][1]++, 'Queue for Sync'))
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-gray-50 rounded-lg p-3",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
        className: "text-sm text-gray-600",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          className: "font-medium",
          children: [careTypes.find(t => {
            /* istanbul ignore next */
            cov_1usgbljaji().f[13]++;
            cov_1usgbljaji().s[43]++;
            return t.value === formData.careType;
          })?.icon, " ", careTypes.find(t => {
            /* istanbul ignore next */
            cov_1usgbljaji().f[14]++;
            cov_1usgbljaji().s[44]++;
            return t.value === formData.careType;
          })?.label, ":"]
        }), ' ', _caretypes.careHelpers.getCareTypeDisplay(formData.careType).description]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
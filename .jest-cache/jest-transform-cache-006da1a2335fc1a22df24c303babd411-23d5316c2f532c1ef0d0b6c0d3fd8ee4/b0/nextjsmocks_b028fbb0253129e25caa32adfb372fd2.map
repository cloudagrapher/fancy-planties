{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/test-utils/mocks/nextjs-mocks.js"],"sourcesContent":["// Next.js specific mocks for testing\n\nconst navigationMock = {\n  useRouter: () => ({\n    push: jest.fn(),\n    replace: jest.fn(),\n    back: jest.fn(),\n    forward: jest.fn(),\n    refresh: jest.fn(),\n    prefetch: jest.fn(),\n    pathname: '/dashboard/plants',\n    query: {},\n    asPath: '/dashboard/plants',\n    route: '/dashboard/plants',\n    events: {\n      on: jest.fn(),\n      off: jest.fn(),\n      emit: jest.fn(),\n    },\n  }),\n  usePathname: () => '/dashboard/plants',\n  useSearchParams: () => {\n    const searchParams = new URLSearchParams();\n    return {\n      get: (key) => searchParams.get(key),\n      getAll: (key) => searchParams.getAll(key),\n      has: (key) => searchParams.has(key),\n      keys: () => searchParams.keys(),\n      values: () => searchParams.values(),\n      entries: () => searchParams.entries(),\n      forEach: (callback) => searchParams.forEach(callback),\n      toString: () => searchParams.toString(),\n    };\n  },\n  useParams: () => ({}),\n};\n\nconst imageMock = (() => {\n  const React = require('react');\n  return React.forwardRef((props, ref) => {\n    const { src, alt, width, height, fill, priority, placeholder, blurDataURL, sizes, quality, loader, onLoad, onError, ...rest } = props;\n    return React.createElement('img', { ref, src, alt, ...rest });\n  });\n})();\n\nconst serverMock = {\n  NextRequest: class MockNextRequest {\n    constructor(input, init = {}) {\n      this.url = input instanceof MockNextRequest ? input.url : input.toString();\n      this.method = init.method || 'GET';\n      this.headers = new Headers(init.headers || {});\n      this.body = init.body || null;\n      this.nextUrl = new URL(this.url);\n    }\n    \n    async json() {\n      return this.body ? JSON.parse(this.body) : {};\n    }\n    \n    async text() {\n      return this.body ? this.body.toString() : '';\n    }\n    \n    static from(request) {\n      return new MockNextRequest(request.url, {\n        method: request.method,\n        headers: request.headers,\n        body: request.body,\n      });\n    }\n  },\n\n  NextResponse: class MockNextResponse {\n    constructor(body, init = {}) {\n      this.body = body;\n      this.status = init.status || 200;\n      this.statusText = init.statusText || 'OK';\n      this.headers = new Headers(init.headers || {});\n      this.ok = this.status >= 200 && this.status < 300;\n    }\n    \n    static json(object, init = {}) {\n      return new MockNextResponse(JSON.stringify(object), {\n        ...init,\n        headers: {\n          'content-type': 'application/json',\n          ...init?.headers,\n        },\n      });\n    }\n\n    static redirect(url, init = {}) {\n      return new MockNextResponse(null, {\n        ...init,\n        status: init?.status || 302,\n        headers: {\n          location: url.toString(),\n          ...init?.headers,\n        },\n      });\n    }\n    \n    async json() {\n      return JSON.parse(this.body);\n    }\n    \n    async text() {\n      return this.body;\n    }\n  }\n};\n\nconst headersMock = {\n  headers: () => {\n    const headerMap = new Map([\n      ['user-agent', 'Mozilla/5.0 (Test Environment)'],\n      ['accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'],\n      ['accept-language', 'en-US,en;q=0.5'],\n    ]);\n\n    return {\n      get: (key) => headerMap.get(key.toLowerCase()) || null,\n      has: (key) => headerMap.has(key.toLowerCase()),\n      keys: () => Array.from(headerMap.keys()),\n      values: () => Array.from(headerMap.values()),\n      entries: () => Array.from(headerMap.entries()),\n      forEach: (callback) => headerMap.forEach(callback),\n    };\n  },\n\n  cookies: () => {\n    const cookieMap = new Map();\n    return {\n      get: (key) => ({ name: key, value: cookieMap.get(key) || '' }),\n      set: (key, value) => cookieMap.set(key, value),\n      delete: (key) => cookieMap.delete(key),\n      has: (key) => cookieMap.has(key),\n      getAll: () => Array.from(cookieMap.entries()).map(([name, value]) => ({ name, value })),\n      clear: () => cookieMap.clear(),\n    };\n  }\n};\n\nmodule.exports = {\n  navigationMock,\n  imageMock,\n  serverMock,\n  headersMock,\n};"],"names":["navigationMock","useRouter","push","jest","fn","replace","back","forward","refresh","prefetch","pathname","query","asPath","route","events","on","off","emit","usePathname","useSearchParams","searchParams","URLSearchParams","get","key","getAll","has","keys","values","entries","forEach","callback","toString","useParams","imageMock","React","require","forwardRef","props","ref","src","alt","width","height","fill","priority","placeholder","blurDataURL","sizes","quality","loader","onLoad","onError","rest","createElement","serverMock","NextRequest","MockNextRequest","input","init","url","method","headers","Headers","body","nextUrl","URL","json","JSON","parse","text","from","request","NextResponse","MockNextResponse","status","statusText","ok","object","stringify","redirect","location","headersMock","headerMap","Map","toLowerCase","Array","cookies","cookieMap","name","value","set","delete","map","clear","module","exports"],"mappings":"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"}
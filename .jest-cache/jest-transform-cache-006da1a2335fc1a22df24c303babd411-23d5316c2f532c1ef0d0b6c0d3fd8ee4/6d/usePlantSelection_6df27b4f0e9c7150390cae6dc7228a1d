9504c6188cc37a894eefb594750b2b67
'use client';
"use strict";

/* istanbul ignore next */
function cov_1x8k4f7lf2() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/hooks/usePlantSelection.ts";
  var hash = "d00c7b87fce9e89514af326fe4499dab4c5a3422";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/hooks/usePlantSelection.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "6": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "7": {
        start: {
          line: 22,
          column: 46
        },
        end: {
          line: 22,
          column: 80
        }
      },
      "8": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "9": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 32
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 35
        }
      },
      "11": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "12": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 26
        }
      },
      "13": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 45
        }
      },
      "15": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 44,
          column: 6
        }
      },
      "16": {
        start: {
          line: 47,
          column: 48
        },
        end: {
          line: 47,
          column: 83
        }
      },
      "17": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 68,
          column: 6
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "19": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "20": {
        start: {
          line: 51,
          column: 31
        },
        end: {
          line: 51,
          column: 48
        }
      },
      "21": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 28
        }
      },
      "22": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "23": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 28
        }
      },
      "24": {
        start: {
          line: 58,
          column: 33
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "25": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 46
        }
      },
      "26": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 32
        }
      },
      "27": {
        start: {
          line: 69,
          column: 26
        },
        end: {
          line: 77,
          column: 6
        }
      },
      "28": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "29": {
        start: {
          line: 71,
          column: 33
        },
        end: {
          line: 71,
          column: 67
        }
      },
      "30": {
        start: {
          line: 71,
          column: 50
        },
        end: {
          line: 71,
          column: 66
        }
      },
      "31": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 46
        }
      },
      "32": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 32
        }
      },
      "33": {
        start: {
          line: 78,
          column: 24
        },
        end: {
          line: 101,
          column: 6
        }
      },
      "34": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "35": {
        start: {
          line: 80,
          column: 40
        },
        end: {
          line: 80,
          column: 73
        }
      },
      "36": {
        start: {
          line: 80,
          column: 55
        },
        end: {
          line: 80,
          column: 72
        }
      },
      "37": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "38": {
        start: {
          line: 82,
          column: 37
        },
        end: {
          line: 82,
          column: 72
        }
      },
      "39": {
        start: {
          line: 82,
          column: 54
        },
        end: {
          line: 82,
          column: 71
        }
      },
      "40": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 50
        }
      },
      "41": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 36
        }
      },
      "42": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 89,
          column: 17
        }
      },
      "43": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 88,
          column: 32
        }
      },
      "44": {
        start: {
          line: 90,
          column: 37
        },
        end: {
          line: 93,
          column: 17
        }
      },
      "45": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 50
        }
      },
      "46": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 36
        }
      },
      "47": {
        start: {
          line: 102,
          column: 28
        },
        end: {
          line: 107,
          column: 6
        }
      },
      "48": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 30
        }
      },
      "49": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 32
        }
      },
      "50": {
        start: {
          line: 108,
          column: 23
        },
        end: {
          line: 112,
          column: 6
        }
      },
      "51": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 58
        }
      },
      "52": {
        start: {
          line: 109,
          column: 40
        },
        end: {
          line: 109,
          column: 56
        }
      },
      "53": {
        start: {
          line: 113,
          column: 26
        },
        end: {
          line: 113,
          column: 81
        }
      },
      "54": {
        start: {
          line: 114,
          column: 27
        },
        end: {
          line: 114,
          column: 48
        }
      },
      "55": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 124,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 37
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "usePlantSelection",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 26
          }
        },
        loc: {
          start: {
            line: 21,
            column: 76
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 23,
            column: 49
          }
        },
        loc: {
          start: {
            line: 23,
            column: 57
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 51
          },
          end: {
            line: 29,
            column: 52
          }
        },
        loc: {
          start: {
            line: 29,
            column: 55
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 34,
            column: 47
          },
          end: {
            line: 34,
            column: 48
          }
        },
        loc: {
          start: {
            line: 34,
            column: 58
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "7": {
        name: "useMultiplePlantSelection",
        decl: {
          start: {
            line: 46,
            column: 9
          },
          end: {
            line: 46,
            column: 34
          }
        },
        loc: {
          start: {
            line: 46,
            column: 98
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 46
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 48,
            column: 48
          },
          end: {
            line: 48,
            column: 49
          }
        },
        loc: {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 48
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 49,
            column: 26
          },
          end: {
            line: 49,
            column: 27
          }
        },
        loc: {
          start: {
            line: 49,
            column: 34
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 49
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 51,
            column: 27
          }
        },
        loc: {
          start: {
            line: 51,
            column: 31
          },
          end: {
            line: 51,
            column: 48
          }
        },
        line: 51
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 69,
            column: 50
          },
          end: {
            line: 69,
            column: 51
          }
        },
        loc: {
          start: {
            line: 69,
            column: 61
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 69
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 70,
            column: 27
          }
        },
        loc: {
          start: {
            line: 70,
            column: 34
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 70
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 71,
            column: 45
          },
          end: {
            line: 71,
            column: 46
          }
        },
        loc: {
          start: {
            line: 71,
            column: 50
          },
          end: {
            line: 71,
            column: 66
          }
        },
        line: 71
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 78,
            column: 48
          },
          end: {
            line: 78,
            column: 49
          }
        },
        loc: {
          start: {
            line: 78,
            column: 57
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 78
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 79,
            column: 26
          },
          end: {
            line: 79,
            column: 27
          }
        },
        loc: {
          start: {
            line: 79,
            column: 34
          },
          end: {
            line: 97,
            column: 9
          }
        },
        line: 79
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 80,
            column: 50
          },
          end: {
            line: 80,
            column: 51
          }
        },
        loc: {
          start: {
            line: 80,
            column: 55
          },
          end: {
            line: 80,
            column: 72
          }
        },
        line: 80
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 82,
            column: 49
          },
          end: {
            line: 82,
            column: 50
          }
        },
        loc: {
          start: {
            line: 82,
            column: 54
          },
          end: {
            line: 82,
            column: 71
          }
        },
        line: 82
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 102,
            column: 52
          },
          end: {
            line: 102,
            column: 53
          }
        },
        loc: {
          start: {
            line: 102,
            column: 56
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 102
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 108,
            column: 47
          },
          end: {
            line: 108,
            column: 48
          }
        },
        loc: {
          start: {
            line: 108,
            column: 58
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 108
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 109,
            column: 35
          },
          end: {
            line: 109,
            column: 36
          }
        },
        loc: {
          start: {
            line: 109,
            column: 40
          },
          end: {
            line: 109,
            column: 56
          }
        },
        line: 109
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 72
          },
          end: {
            line: 21,
            column: 74
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 44
          },
          end: {
            line: 21,
            column: 48
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 35
          },
          end: {
            line: 46,
            column: 96
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 46,
            column: 94
          },
          end: {
            line: 46,
            column: 96
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 37
          },
          end: {
            line: 46,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 46,
            column: 53
          },
          end: {
            line: 46,
            column: 55
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 29
          }
        }, {
          start: {
            line: 55,
            column: 33
          },
          end: {
            line: 55,
            column: 61
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: 85,
            column: 19
          },
          end: {
            line: 96,
            column: 13
          }
        }],
        line: 81
      },
      "8": {
        loc: {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 89,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 89,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "9": {
        loc: {
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 87,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 87,
            column: 33
          }
        }, {
          start: {
            line: 87,
            column: 37
          },
          end: {
            line: 87,
            column: 65
          }
        }],
        line: 87
      },
      "10": {
        loc: {
          start: {
            line: 113,
            column: 26
          },
          end: {
            line: 113,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 26
          },
          end: {
            line: 113,
            column: 40
          }
        }, {
          start: {
            line: 113,
            column: 44
          },
          end: {
            line: 113,
            column: 81
          }
        }],
        line: 113
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/hooks/usePlantSelection.ts"],
      sourcesContent: ["'use client';\n\nimport { useState, useCallback } from 'react';\nimport type { PlantSuggestion } from '@/lib/validation/plant-schemas';\n\ninterface UsePlantSelectionOptions {\n  initialPlant?: PlantSuggestion | null;\n  onSelectionChange?: (plant: PlantSuggestion | null) => void;\n}\n\ninterface UsePlantSelectionReturn {\n  selectedPlant: PlantSuggestion | null;\n  selectPlant: (plant: PlantSuggestion | null) => void;\n  clearSelection: () => void;\n  isSelected: (plantId: number) => boolean;\n}\n\nexport function usePlantSelection({\n  initialPlant = null,\n  onSelectionChange,\n}: UsePlantSelectionOptions = {}): UsePlantSelectionReturn {\n  const [selectedPlant, setSelectedPlant] = useState<PlantSuggestion | null>(initialPlant);\n\n  const selectPlant = useCallback((plant: PlantSuggestion | null) => {\n    setSelectedPlant(plant);\n    onSelectionChange?.(plant);\n  }, [onSelectionChange]);\n\n  const clearSelection = useCallback(() => {\n    selectPlant(null);\n  }, [selectPlant]);\n\n  const isSelected = useCallback((plantId: number) => {\n    return selectedPlant?.id === plantId;\n  }, [selectedPlant]);\n\n  return {\n    selectedPlant,\n    selectPlant,\n    clearSelection,\n    isSelected,\n  };\n}\n\n// Hook for managing multiple plant selections\ninterface UseMultiplePlantSelectionOptions {\n  initialPlants?: PlantSuggestion[];\n  maxSelections?: number;\n  onSelectionChange?: (plants: PlantSuggestion[]) => void;\n}\n\ninterface UseMultiplePlantSelectionReturn {\n  selectedPlants: PlantSuggestion[];\n  selectPlant: (plant: PlantSuggestion) => void;\n  deselectPlant: (plantId: number) => void;\n  togglePlant: (plant: PlantSuggestion) => void;\n  clearSelections: () => void;\n  isSelected: (plantId: number) => boolean;\n  canSelectMore: boolean;\n  selectionCount: number;\n}\n\nexport function useMultiplePlantSelection({\n  initialPlants = [],\n  maxSelections,\n  onSelectionChange,\n}: UseMultiplePlantSelectionOptions = {}): UseMultiplePlantSelectionReturn {\n  const [selectedPlants, setSelectedPlants] = useState<PlantSuggestion[]>(initialPlants);\n\n  const selectPlant = useCallback((plant: PlantSuggestion) => {\n    setSelectedPlants(prev => {\n      // Don't add if already selected\n      if (prev.some(p => p.id === plant.id)) {\n        return prev;\n      }\n\n      // Don't add if at max capacity\n      if (maxSelections && prev.length >= maxSelections) {\n        return prev;\n      }\n\n      const newSelection = [...prev, plant];\n      onSelectionChange?.(newSelection);\n      return newSelection;\n    });\n  }, [maxSelections, onSelectionChange]);\n\n  const deselectPlant = useCallback((plantId: number) => {\n    setSelectedPlants(prev => {\n      const newSelection = prev.filter(p => p.id !== plantId);\n      onSelectionChange?.(newSelection);\n      return newSelection;\n    });\n  }, [onSelectionChange]);\n\n  const togglePlant = useCallback((plant: PlantSuggestion) => {\n    setSelectedPlants(prev => {\n      const isCurrentlySelected = prev.some(p => p.id === plant.id);\n      \n      if (isCurrentlySelected) {\n        const newSelection = prev.filter(p => p.id !== plant.id);\n        onSelectionChange?.(newSelection);\n        return newSelection;\n      } else {\n        // Don't add if at max capacity\n        if (maxSelections && prev.length >= maxSelections) {\n          return prev;\n        }\n\n        const newSelection = [...prev, plant];\n        onSelectionChange?.(newSelection);\n        return newSelection;\n      }\n    });\n  }, [maxSelections, onSelectionChange]);\n\n  const clearSelections = useCallback(() => {\n    setSelectedPlants([]);\n    onSelectionChange?.([]);\n  }, [onSelectionChange]);\n\n  const isSelected = useCallback((plantId: number) => {\n    return selectedPlants.some(p => p.id === plantId);\n  }, [selectedPlants]);\n\n  const canSelectMore = !maxSelections || selectedPlants.length < maxSelections;\n  const selectionCount = selectedPlants.length;\n\n  return {\n    selectedPlants,\n    selectPlant,\n    deselectPlant,\n    togglePlant,\n    clearSelections,\n    isSelected,\n    canSelectMore,\n    selectionCount,\n  };\n}"],
      names: ["useMultiplePlantSelection", "usePlantSelection", "initialPlant", "onSelectionChange", "selectedPlant", "setSelectedPlant", "useState", "selectPlant", "useCallback", "plant", "clearSelection", "isSelected", "plantId", "id", "initialPlants", "maxSelections", "selectedPlants", "setSelectedPlants", "prev", "some", "p", "length", "newSelection", "deselectPlant", "filter", "togglePlant", "isCurrentlySelected", "clearSelections", "canSelectMore", "selectionCount"],
      mappings: "AAAA;;;;;;;;;;;;QA8DgBA;eAAAA;;QA7CAC;eAAAA;;;uBAfsB;AAe/B,SAASA,kBAAkB,EAChCC,eAAe,IAAI,EACnBC,iBAAiB,EACQ,GAAG,CAAC,CAAC;IAC9B,MAAM,CAACC,eAAeC,iBAAiB,GAAGC,IAAAA,eAAQ,EAAyBJ;IAE3E,MAAMK,cAAcC,IAAAA,kBAAW,EAAC,CAACC;QAC/BJ,iBAAiBI;QACjBN,oBAAoBM;IACtB,GAAG;QAACN;KAAkB;IAEtB,MAAMO,iBAAiBF,IAAAA,kBAAW,EAAC;QACjCD,YAAY;IACd,GAAG;QAACA;KAAY;IAEhB,MAAMI,aAAaH,IAAAA,kBAAW,EAAC,CAACI;QAC9B,OAAOR,eAAeS,OAAOD;IAC/B,GAAG;QAACR;KAAc;IAElB,OAAO;QACLA;QACAG;QACAG;QACAC;IACF;AACF;AAoBO,SAASX,0BAA0B,EACxCc,gBAAgB,EAAE,EAClBC,aAAa,EACbZ,iBAAiB,EACgB,GAAG,CAAC,CAAC;IACtC,MAAM,CAACa,gBAAgBC,kBAAkB,GAAGX,IAAAA,eAAQ,EAAoBQ;IAExE,MAAMP,cAAcC,IAAAA,kBAAW,EAAC,CAACC;QAC/BQ,kBAAkBC,CAAAA;YAChB,gCAAgC;YAChC,IAAIA,KAAKC,IAAI,CAACC,CAAAA,IAAKA,EAAEP,EAAE,KAAKJ,MAAMI,EAAE,GAAG;gBACrC,OAAOK;YACT;YAEA,+BAA+B;YAC/B,IAAIH,iBAAiBG,KAAKG,MAAM,IAAIN,eAAe;gBACjD,OAAOG;YACT;YAEA,MAAMI,eAAe;mBAAIJ;gBAAMT;aAAM;YACrCN,oBAAoBmB;YACpB,OAAOA;QACT;IACF,GAAG;QAACP;QAAeZ;KAAkB;IAErC,MAAMoB,gBAAgBf,IAAAA,kBAAW,EAAC,CAACI;QACjCK,kBAAkBC,CAAAA;YAChB,MAAMI,eAAeJ,KAAKM,MAAM,CAACJ,CAAAA,IAAKA,EAAEP,EAAE,KAAKD;YAC/CT,oBAAoBmB;YACpB,OAAOA;QACT;IACF,GAAG;QAACnB;KAAkB;IAEtB,MAAMsB,cAAcjB,IAAAA,kBAAW,EAAC,CAACC;QAC/BQ,kBAAkBC,CAAAA;YAChB,MAAMQ,sBAAsBR,KAAKC,IAAI,CAACC,CAAAA,IAAKA,EAAEP,EAAE,KAAKJ,MAAMI,EAAE;YAE5D,IAAIa,qBAAqB;gBACvB,MAAMJ,eAAeJ,KAAKM,MAAM,CAACJ,CAAAA,IAAKA,EAAEP,EAAE,KAAKJ,MAAMI,EAAE;gBACvDV,oBAAoBmB;gBACpB,OAAOA;YACT,OAAO;gBACL,+BAA+B;gBAC/B,IAAIP,iBAAiBG,KAAKG,MAAM,IAAIN,eAAe;oBACjD,OAAOG;gBACT;gBAEA,MAAMI,eAAe;uBAAIJ;oBAAMT;iBAAM;gBACrCN,oBAAoBmB;gBACpB,OAAOA;YACT;QACF;IACF,GAAG;QAACP;QAAeZ;KAAkB;IAErC,MAAMwB,kBAAkBnB,IAAAA,kBAAW,EAAC;QAClCS,kBAAkB,EAAE;QACpBd,oBAAoB,EAAE;IACxB,GAAG;QAACA;KAAkB;IAEtB,MAAMQ,aAAaH,IAAAA,kBAAW,EAAC,CAACI;QAC9B,OAAOI,eAAeG,IAAI,CAACC,CAAAA,IAAKA,EAAEP,EAAE,KAAKD;IAC3C,GAAG;QAACI;KAAe;IAEnB,MAAMY,gBAAgB,CAACb,iBAAiBC,eAAeK,MAAM,GAAGN;IAChE,MAAMc,iBAAiBb,eAAeK,MAAM;IAE5C,OAAO;QACLL;QACAT;QACAgB;QACAE;QACAE;QACAhB;QACAiB;QACAC;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d00c7b87fce9e89514af326fe4499dab4c5a3422"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1x8k4f7lf2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1x8k4f7lf2();
cov_1x8k4f7lf2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1x8k4f7lf2().f[0]++;
  cov_1x8k4f7lf2().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1x8k4f7lf2().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1x8k4f7lf2().s[3]++;
_export(exports, {
  get useMultiplePlantSelection() {
    /* istanbul ignore next */
    cov_1x8k4f7lf2().f[1]++;
    cov_1x8k4f7lf2().s[4]++;
    return useMultiplePlantSelection;
  },
  get usePlantSelection() {
    /* istanbul ignore next */
    cov_1x8k4f7lf2().f[2]++;
    cov_1x8k4f7lf2().s[5]++;
    return usePlantSelection;
  }
});
const _react =
/* istanbul ignore next */
(cov_1x8k4f7lf2().s[6]++, require("react"));
function usePlantSelection({
  initialPlant =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().b[1][0]++, null),
  onSelectionChange
} =
/* istanbul ignore next */
(cov_1x8k4f7lf2().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_1x8k4f7lf2().f[3]++;
  const [selectedPlant, setSelectedPlant] =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().s[7]++, (0, _react.useState)(initialPlant));
  const selectPlant =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().s[8]++, (0, _react.useCallback)(plant => {
    /* istanbul ignore next */
    cov_1x8k4f7lf2().f[4]++;
    cov_1x8k4f7lf2().s[9]++;
    setSelectedPlant(plant);
    /* istanbul ignore next */
    cov_1x8k4f7lf2().s[10]++;
    onSelectionChange?.(plant);
  }, [onSelectionChange]));
  const clearSelection =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().s[11]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1x8k4f7lf2().f[5]++;
    cov_1x8k4f7lf2().s[12]++;
    selectPlant(null);
  }, [selectPlant]));
  const isSelected =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().s[13]++, (0, _react.useCallback)(plantId => {
    /* istanbul ignore next */
    cov_1x8k4f7lf2().f[6]++;
    cov_1x8k4f7lf2().s[14]++;
    return selectedPlant?.id === plantId;
  }, [selectedPlant]));
  /* istanbul ignore next */
  cov_1x8k4f7lf2().s[15]++;
  return {
    selectedPlant,
    selectPlant,
    clearSelection,
    isSelected
  };
}
function useMultiplePlantSelection({
  initialPlants =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().b[3][0]++, []),
  maxSelections,
  onSelectionChange
} =
/* istanbul ignore next */
(cov_1x8k4f7lf2().b[2][0]++, {})) {
  /* istanbul ignore next */
  cov_1x8k4f7lf2().f[7]++;
  const [selectedPlants, setSelectedPlants] =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().s[16]++, (0, _react.useState)(initialPlants));
  const selectPlant =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().s[17]++, (0, _react.useCallback)(plant => {
    /* istanbul ignore next */
    cov_1x8k4f7lf2().f[8]++;
    cov_1x8k4f7lf2().s[18]++;
    setSelectedPlants(prev => {
      /* istanbul ignore next */
      cov_1x8k4f7lf2().f[9]++;
      cov_1x8k4f7lf2().s[19]++;
      // Don't add if already selected
      if (prev.some(p => {
        /* istanbul ignore next */
        cov_1x8k4f7lf2().f[10]++;
        cov_1x8k4f7lf2().s[20]++;
        return p.id === plant.id;
      })) {
        /* istanbul ignore next */
        cov_1x8k4f7lf2().b[4][0]++;
        cov_1x8k4f7lf2().s[21]++;
        return prev;
      } else
      /* istanbul ignore next */
      {
        cov_1x8k4f7lf2().b[4][1]++;
      }
      // Don't add if at max capacity
      cov_1x8k4f7lf2().s[22]++;
      if (
      /* istanbul ignore next */
      (cov_1x8k4f7lf2().b[6][0]++, maxSelections) &&
      /* istanbul ignore next */
      (cov_1x8k4f7lf2().b[6][1]++, prev.length >= maxSelections)) {
        /* istanbul ignore next */
        cov_1x8k4f7lf2().b[5][0]++;
        cov_1x8k4f7lf2().s[23]++;
        return prev;
      } else
      /* istanbul ignore next */
      {
        cov_1x8k4f7lf2().b[5][1]++;
      }
      const newSelection =
      /* istanbul ignore next */
      (cov_1x8k4f7lf2().s[24]++, [...prev, plant]);
      /* istanbul ignore next */
      cov_1x8k4f7lf2().s[25]++;
      onSelectionChange?.(newSelection);
      /* istanbul ignore next */
      cov_1x8k4f7lf2().s[26]++;
      return newSelection;
    });
  }, [maxSelections, onSelectionChange]));
  const deselectPlant =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().s[27]++, (0, _react.useCallback)(plantId => {
    /* istanbul ignore next */
    cov_1x8k4f7lf2().f[11]++;
    cov_1x8k4f7lf2().s[28]++;
    setSelectedPlants(prev => {
      /* istanbul ignore next */
      cov_1x8k4f7lf2().f[12]++;
      const newSelection =
      /* istanbul ignore next */
      (cov_1x8k4f7lf2().s[29]++, prev.filter(p => {
        /* istanbul ignore next */
        cov_1x8k4f7lf2().f[13]++;
        cov_1x8k4f7lf2().s[30]++;
        return p.id !== plantId;
      }));
      /* istanbul ignore next */
      cov_1x8k4f7lf2().s[31]++;
      onSelectionChange?.(newSelection);
      /* istanbul ignore next */
      cov_1x8k4f7lf2().s[32]++;
      return newSelection;
    });
  }, [onSelectionChange]));
  const togglePlant =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().s[33]++, (0, _react.useCallback)(plant => {
    /* istanbul ignore next */
    cov_1x8k4f7lf2().f[14]++;
    cov_1x8k4f7lf2().s[34]++;
    setSelectedPlants(prev => {
      /* istanbul ignore next */
      cov_1x8k4f7lf2().f[15]++;
      const isCurrentlySelected =
      /* istanbul ignore next */
      (cov_1x8k4f7lf2().s[35]++, prev.some(p => {
        /* istanbul ignore next */
        cov_1x8k4f7lf2().f[16]++;
        cov_1x8k4f7lf2().s[36]++;
        return p.id === plant.id;
      }));
      /* istanbul ignore next */
      cov_1x8k4f7lf2().s[37]++;
      if (isCurrentlySelected) {
        /* istanbul ignore next */
        cov_1x8k4f7lf2().b[7][0]++;
        const newSelection =
        /* istanbul ignore next */
        (cov_1x8k4f7lf2().s[38]++, prev.filter(p => {
          /* istanbul ignore next */
          cov_1x8k4f7lf2().f[17]++;
          cov_1x8k4f7lf2().s[39]++;
          return p.id !== plant.id;
        }));
        /* istanbul ignore next */
        cov_1x8k4f7lf2().s[40]++;
        onSelectionChange?.(newSelection);
        /* istanbul ignore next */
        cov_1x8k4f7lf2().s[41]++;
        return newSelection;
      } else {
        /* istanbul ignore next */
        cov_1x8k4f7lf2().b[7][1]++;
        cov_1x8k4f7lf2().s[42]++;
        // Don't add if at max capacity
        if (
        /* istanbul ignore next */
        (cov_1x8k4f7lf2().b[9][0]++, maxSelections) &&
        /* istanbul ignore next */
        (cov_1x8k4f7lf2().b[9][1]++, prev.length >= maxSelections)) {
          /* istanbul ignore next */
          cov_1x8k4f7lf2().b[8][0]++;
          cov_1x8k4f7lf2().s[43]++;
          return prev;
        } else
        /* istanbul ignore next */
        {
          cov_1x8k4f7lf2().b[8][1]++;
        }
        const newSelection =
        /* istanbul ignore next */
        (cov_1x8k4f7lf2().s[44]++, [...prev, plant]);
        /* istanbul ignore next */
        cov_1x8k4f7lf2().s[45]++;
        onSelectionChange?.(newSelection);
        /* istanbul ignore next */
        cov_1x8k4f7lf2().s[46]++;
        return newSelection;
      }
    });
  }, [maxSelections, onSelectionChange]));
  const clearSelections =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().s[47]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1x8k4f7lf2().f[18]++;
    cov_1x8k4f7lf2().s[48]++;
    setSelectedPlants([]);
    /* istanbul ignore next */
    cov_1x8k4f7lf2().s[49]++;
    onSelectionChange?.([]);
  }, [onSelectionChange]));
  const isSelected =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().s[50]++, (0, _react.useCallback)(plantId => {
    /* istanbul ignore next */
    cov_1x8k4f7lf2().f[19]++;
    cov_1x8k4f7lf2().s[51]++;
    return selectedPlants.some(p => {
      /* istanbul ignore next */
      cov_1x8k4f7lf2().f[20]++;
      cov_1x8k4f7lf2().s[52]++;
      return p.id === plantId;
    });
  }, [selectedPlants]));
  const canSelectMore =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().s[53]++,
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().b[10][0]++, !maxSelections) ||
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().b[10][1]++, selectedPlants.length < maxSelections));
  const selectionCount =
  /* istanbul ignore next */
  (cov_1x8k4f7lf2().s[54]++, selectedPlants.length);
  /* istanbul ignore next */
  cov_1x8k4f7lf2().s[55]++;
  return {
    selectedPlants,
    selectPlant,
    deselectPlant,
    togglePlant,
    clearSelections,
    isSelected,
    canSelectMore,
    selectionCount
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/import/CSVPreview.tsx"],"sourcesContent":["'use client';\n\nimport { CheckCircle, AlertCircle, XCircle } from 'lucide-react';\n\ninterface CSVPreviewProps {\n  data: any[];\n  errors: string[];\n  isValid: boolean;\n  className?: string;\n}\n\nexport function CSVPreview({ data, errors, isValid, className = '' }: CSVPreviewProps) {\n  if (data.length === 0 && errors.length === 0) {\n    return null;\n  }\n\n  const headers = data.length > 0 ? Object.keys(data[0]) : [];\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      <div className=\"flex items-center space-x-2\">\n        {isValid ? (\n          <CheckCircle className=\"w-5 h-5 text-green-500\" />\n        ) : (\n          <XCircle className=\"w-5 h-5 text-red-500\" />\n        )}\n        <h3 className=\"text-lg font-semibold text-gray-900\">\n          CSV Preview\n        </h3>\n      </div>\n\n      {errors.length > 0 && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n          <div className=\"flex items-start space-x-2\">\n            <AlertCircle className=\"w-5 h-5 text-red-500 flex-shrink-0 mt-0.5\" />\n            <div>\n              <h4 className=\"font-medium text-red-900 mb-2\">\n                Validation Errors:\n              </h4>\n              <ul className=\"space-y-1\">\n                {errors.map((error, index) => (\n                  <li key={index} className=\"text-sm text-red-700\">\n                    â€¢ {error}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {data.length > 0 && (\n        <div className=\"border border-gray-200 rounded-lg overflow-hidden\">\n          <div className=\"bg-gray-50 px-4 py-2 border-b border-gray-200\">\n            <p className=\"text-sm font-medium text-gray-700\">\n              Preview ({data.length} row{data.length !== 1 ? 's' : ''} shown)\n            </p>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  {headers.map((header) => (\n                    <th\n                      key={header}\n                      className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                    >\n                      {header}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {data.slice(0, 5).map((row, index) => (\n                  <tr key={index} className=\"hover:bg-gray-50\">\n                    {headers.map((header) => (\n                      <td\n                        key={header}\n                        className=\"px-4 py-3 text-sm text-gray-900 max-w-xs truncate\"\n                        title={row[header]}\n                      >\n                        {row[header] || (\n                          <span className=\"text-gray-400 italic\">empty</span>\n                        )}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          \n          {data.length > 5 && (\n            <div className=\"bg-gray-50 px-4 py-2 border-t border-gray-200\">\n              <p className=\"text-xs text-gray-500\">\n                ... and {data.length - 5} more rows\n              </p>\n            </div>\n          )}\n        </div>\n      )}\n\n      {isValid && data.length > 0 && (\n        <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n          <div className=\"flex items-center space-x-2\">\n            <CheckCircle className=\"w-5 h-5 text-green-500\" />\n            <p className=\"text-sm font-medium text-green-900\">\n              CSV file is valid and ready for import!\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":["CSVPreview","data","errors","isValid","className","length","headers","Object","keys","div","CheckCircle","XCircle","h3","AlertCircle","h4","ul","map","error","index","li","p","table","thead","tr","header","th","tbody","slice","row","td","title","span"],"mappings":"AAAA;;;;;+BAWgBA;;;eAAAA;;;;6BATkC;AAS3C,SAASA,WAAW,EAAEC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,YAAY,EAAE,EAAmB;IACnF,IAAIH,KAAKI,MAAM,KAAK,KAAKH,OAAOG,MAAM,KAAK,GAAG;QAC5C,OAAO;IACT;IAEA,MAAMC,UAAUL,KAAKI,MAAM,GAAG,IAAIE,OAAOC,IAAI,CAACP,IAAI,CAAC,EAAE,IAAI,EAAE;IAE3D,qBACE,sBAACQ;QAAIL,WAAW,CAAC,UAAU,EAAEA,WAAW;;0BACtC,sBAACK;gBAAIL,WAAU;;oBACZD,wBACC,qBAACO,wBAAW;wBAACN,WAAU;uCAEvB,qBAACO,oBAAO;wBAACP,WAAU;;kCAErB,qBAACQ;wBAAGR,WAAU;kCAAsC;;;;YAKrDF,OAAOG,MAAM,GAAG,mBACf,qBAACI;gBAAIL,WAAU;0BACb,cAAA,sBAACK;oBAAIL,WAAU;;sCACb,qBAACS,wBAAW;4BAACT,WAAU;;sCACvB,sBAACK;;8CACC,qBAACK;oCAAGV,WAAU;8CAAgC;;8CAG9C,qBAACW;oCAAGX,WAAU;8CACXF,OAAOc,GAAG,CAAC,CAACC,OAAOC,sBAClB,sBAACC;4CAAef,WAAU;;gDAAuB;gDAC5Ca;;2CADIC;;;;;;;YAUpBjB,KAAKI,MAAM,GAAG,mBACb,sBAACI;gBAAIL,WAAU;;kCACb,qBAACK;wBAAIL,WAAU;kCACb,cAAA,sBAACgB;4BAAEhB,WAAU;;gCAAoC;gCACrCH,KAAKI,MAAM;gCAAC;gCAAKJ,KAAKI,MAAM,KAAK,IAAI,MAAM;gCAAG;;;;kCAI5D,qBAACI;wBAAIL,WAAU;kCACb,cAAA,sBAACiB;4BAAMjB,WAAU;;8CACf,qBAACkB;oCAAMlB,WAAU;8CACf,cAAA,qBAACmB;kDACEjB,QAAQU,GAAG,CAAC,CAACQ,uBACZ,qBAACC;gDAECrB,WAAU;0DAEToB;+CAHIA;;;8CAQb,qBAACE;oCAAMtB,WAAU;8CACdH,KAAK0B,KAAK,CAAC,GAAG,GAAGX,GAAG,CAAC,CAACY,KAAKV,sBAC1B,qBAACK;4CAAenB,WAAU;sDACvBE,QAAQU,GAAG,CAAC,CAACQ,uBACZ,qBAACK;oDAECzB,WAAU;oDACV0B,OAAOF,GAAG,CAACJ,OAAO;8DAEjBI,GAAG,CAACJ,OAAO,kBACV,qBAACO;wDAAK3B,WAAU;kEAAuB;;mDALpCoB;2CAHFN;;;;;oBAkBhBjB,KAAKI,MAAM,GAAG,mBACb,qBAACI;wBAAIL,WAAU;kCACb,cAAA,sBAACgB;4BAAEhB,WAAU;;gCAAwB;gCAC1BH,KAAKI,MAAM,GAAG;gCAAE;;;;;;YAOlCF,WAAWF,KAAKI,MAAM,GAAG,mBACxB,qBAACI;gBAAIL,WAAU;0BACb,cAAA,sBAACK;oBAAIL,WAAU;;sCACb,qBAACM,wBAAW;4BAACN,WAAU;;sCACvB,qBAACgB;4BAAEhB,WAAU;sCAAqC;;;;;;;AAQ9D"}
df0870514deaaca8d823f6cd4b32f396
'use client';
"use strict";

/* istanbul ignore next */
function cov_2grdj89bo9() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/components/plants/PlantInstanceForm.tsx";
  var hash = "d48cd80bb70e0348d1961877af3fd6fe06de4e6a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/components/plants/PlantInstanceForm.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 33
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "6": {
        start: {
          line: 15,
          column: 23
        },
        end: {
          line: 15,
          column: 49
        }
      },
      "7": {
        start: {
          line: 16,
          column: 13
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "8": {
        start: {
          line: 17,
          column: 14
        },
        end: {
          line: 17,
          column: 28
        }
      },
      "9": {
        start: {
          line: 18,
          column: 45
        },
        end: {
          line: 18,
          column: 105
        }
      },
      "10": {
        start: {
          line: 19,
          column: 35
        },
        end: {
          line: 19,
          column: 93
        }
      },
      "11": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "12": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 32,
          column: 2
        }
      },
      "13": {
        start: {
          line: 30,
          column: 113
        },
        end: {
          line: 30,
          column: 130
        }
      },
      "14": {
        start: {
          line: 33,
          column: 32
        },
        end: {
          line: 85,
          column: 2
        }
      },
      "15": {
        start: {
          line: 35,
          column: 137
        },
        end: {
          line: 35,
          column: 151
        }
      },
      "16": {
        start: {
          line: 36,
          column: 137
        },
        end: {
          line: 36,
          column: 151
        }
      },
      "17": {
        start: {
          line: 50,
          column: 62
        },
        end: {
          line: 50,
          column: 93
        }
      },
      "18": {
        start: {
          line: 51,
          column: 57
        },
        end: {
          line: 51,
          column: 88
        }
      },
      "19": {
        start: {
          line: 52,
          column: 109
        },
        end: {
          line: 52,
          column: 126
        }
      },
      "20": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "21": {
        start: {
          line: 60,
          column: 31
        },
        end: {
          line: 60,
          column: 60
        }
      },
      "22": {
        start: {
          line: 61,
          column: 22
        },
        end: {
          line: 61,
          column: 32
        }
      },
      "23": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 40
        }
      },
      "24": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 39
        }
      },
      "25": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 16
        }
      },
      "26": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "27": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 74,
          column: 50
        }
      },
      "28": {
        start: {
          line: 75,
          column: 22
        },
        end: {
          line: 75,
          column: 32
        }
      },
      "29": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 40
        }
      },
      "30": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 34
        }
      },
      "31": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 16
        }
      },
      "32": {
        start: {
          line: 87,
          column: 46
        },
        end: {
          line: 87,
          column: 72
        }
      },
      "33": {
        start: {
          line: 88,
          column: 40
        },
        end: {
          line: 88,
          column: 64
        }
      },
      "34": {
        start: {
          line: 89,
          column: 48
        },
        end: {
          line: 89,
          column: 72
        }
      },
      "35": {
        start: {
          line: 90,
          column: 66
        },
        end: {
          line: 90,
          column: 93
        }
      },
      "36": {
        start: {
          line: 91,
          column: 46
        },
        end: {
          line: 91,
          column: 70
        }
      },
      "37": {
        start: {
          line: 92,
          column: 50
        },
        end: {
          line: 92,
          column: 77
        }
      },
      "38": {
        start: {
          line: 93,
          column: 52
        },
        end: {
          line: 93,
          column: 79
        }
      },
      "39": {
        start: {
          line: 94,
          column: 44
        },
        end: {
          line: 100,
          column: 6
        }
      },
      "40": {
        start: {
          line: 101,
          column: 54
        },
        end: {
          line: 101,
          column: 81
        }
      },
      "41": {
        start: {
          line: 102,
          column: 44
        },
        end: {
          line: 102,
          column: 68
        }
      },
      "42": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 57
        }
      },
      "43": {
        start: {
          line: 104,
          column: 22
        },
        end: {
          line: 104,
          column: 37
        }
      },
      "44": {
        start: {
          line: 106,
          column: 112
        },
        end: {
          line: 121,
          column: 6
        }
      },
      "45": {
        start: {
          line: 123,
          column: 36
        },
        end: {
          line: 134,
          column: 6
        }
      },
      "46": {
        start: {
          line: 129,
          column: 29
        },
        end: {
          line: 129,
          column: 91
        }
      },
      "47": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 75
        }
      },
      "48": {
        start: {
          line: 130,
          column: 30
        },
        end: {
          line: 130,
          column: 75
        }
      },
      "49": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 35
        }
      },
      "50": {
        start: {
          line: 136,
          column: 35
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "51": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 34
        }
      },
      "52": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 144,
          column: 11
        }
      },
      "53": {
        start: {
          line: 147,
          column: 33
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "54": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 33
        }
      },
      "55": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 152,
          column: 11
        }
      },
      "56": {
        start: {
          line: 155,
          column: 37
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "57": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 35
        }
      },
      "58": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 163,
          column: 11
        }
      },
      "59": {
        start: {
          line: 166,
          column: 32
        },
        end: {
          line: 217,
          column: 6
        }
      },
      "60": {
        start: {
          line: 168,
          column: 29
        },
        end: {
          line: 174,
          column: 14
        }
      },
      "61": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 178,
          column: 13
        }
      },
      "62": {
        start: {
          line: 176,
          column: 30
        },
        end: {
          line: 176,
          column: 51
        }
      },
      "63": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 75
        }
      },
      "64": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 35
        }
      },
      "65": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 187,
          column: 15
        }
      },
      "66": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 192,
          column: 15
        }
      },
      "67": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 197,
          column: 15
        }
      },
      "68": {
        start: {
          line: 199,
          column: 29
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "69": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 40
        }
      },
      "70": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 38
        }
      },
      "71": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 39
        }
      },
      "72": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 60
        }
      },
      "73": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 38
        }
      },
      "74": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 39
        }
      },
      "75": {
        start: {
          line: 219,
          column: 21
        },
        end: {
          line: 304,
          column: 6
        }
      },
      "76": {
        start: {
          line: 221,
          column: 29
        },
        end: {
          line: 221,
          column: 43
        }
      },
      "77": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 234,
          column: 15
        }
      },
      "78": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 233,
          column: 17
        }
      },
      "79": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 232,
          column: 21
        }
      },
      "80": {
        start: {
          line: 227,
          column: 24
        },
        end: {
          line: 229,
          column: 27
        }
      },
      "81": {
        start: {
          line: 228,
          column: 28
        },
        end: {
          line: 228,
          column: 79
        }
      },
      "82": {
        start: {
          line: 231,
          column: 24
        },
        end: {
          line: 231,
          column: 60
        }
      },
      "83": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 238,
          column: 15
        }
      },
      "84": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 62
        }
      },
      "85": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 239,
          column: 103
        }
      },
      "86": {
        start: {
          line: 240,
          column: 27
        },
        end: {
          line: 240,
          column: 53
        }
      },
      "87": {
        start: {
          line: 241,
          column: 29
        },
        end: {
          line: 244,
          column: 14
        }
      },
      "88": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 249,
          column: 13
        }
      },
      "89": {
        start: {
          line: 246,
          column: 30
        },
        end: {
          line: 246,
          column: 51
        }
      },
      "90": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 60
        }
      },
      "91": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 82
        }
      },
      "92": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 35
        }
      },
      "93": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 72
        }
      },
      "94": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 261,
          column: 15
        }
      },
      "95": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 269,
          column: 15
        }
      },
      "96": {
        start: {
          line: 271,
          column: 40
        },
        end: {
          line: 282,
          column: 13
        }
      },
      "97": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 288,
          column: 13
        }
      },
      "98": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 287,
          column: 19
        }
      },
      "99": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 55
        }
      },
      "100": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 20
        }
      },
      "101": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 30
        }
      },
      "102": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 34
        }
      },
      "103": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 35
        }
      },
      "104": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 39
        }
      },
      "105": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 40
        }
      },
      "106": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 302,
          column: 13
        }
      },
      "107": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 298,
          column: 32
        }
      },
      "108": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 26
        }
      },
      "109": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 348,
          column: 7
        }
      },
      "110": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "111": {
        start: {
          line: 308,
          column: 38
        },
        end: {
          line: 308,
          column: 101
        }
      },
      "112": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 85
        }
      },
      "113": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 320,
          column: 15
        }
      },
      "114": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 328,
          column: 15
        }
      },
      "115": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 58
        }
      },
      "116": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 20
        }
      },
      "117": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 35
        }
      },
      "118": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 333,
          column: 30
        }
      },
      "119": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 334,
          column: 34
        }
      },
      "120": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 39
        }
      },
      "121": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 342,
          column: 15
        }
      },
      "122": {
        start: {
          line: 350,
          column: 30
        },
        end: {
          line: 362,
          column: 5
        }
      },
      "123": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 361,
          column: 9
        }
      },
      "124": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 36
        }
      },
      "125": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 355,
          column: 15
        }
      },
      "126": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 357,
          column: 35
        }
      },
      "127": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 360,
          column: 15
        }
      },
      "128": {
        start: {
          line: 364,
          column: 30
        },
        end: {
          line: 369,
          column: 5
        }
      },
      "129": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 29
        }
      },
      "130": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 18
        }
      },
      "131": {
        start: {
          line: 371,
          column: 38
        },
        end: {
          line: 376,
          column: 5
        }
      },
      "132": {
        start: {
          line: 372,
          column: 26
        },
        end: {
          line: 372,
          column: 68
        }
      },
      "133": {
        start: {
          line: 372,
          column: 56
        },
        end: {
          line: 372,
          column: 67
        }
      },
      "134": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 37
        }
      },
      "135": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 18
        }
      },
      "136": {
        start: {
          line: 378,
          column: 34
        },
        end: {
          line: 389,
          column: 5
        }
      },
      "137": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 379,
          column: 32
        }
      },
      "138": {
        start: {
          line: 379,
          column: 25
        },
        end: {
          line: 379,
          column: 32
        }
      },
      "139": {
        start: {
          line: 380,
          column: 26
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "140": {
        start: {
          line: 383,
          column: 30
        },
        end: {
          line: 383,
          column: 46
        }
      },
      "141": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 35
        }
      },
      "142": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 41
        }
      },
      "143": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 37
        }
      },
      "144": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 18
        }
      },
      "145": {
        start: {
          line: 391,
          column: 38
        },
        end: {
          line: 404,
          column: 5
        }
      },
      "146": {
        start: {
          line: 392,
          column: 28
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "147": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 49
        }
      },
      "148": {
        start: {
          line: 406,
          column: 42
        },
        end: {
          line: 435,
          column: 5
        }
      },
      "149": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 63
        }
      },
      "150": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 46
        }
      },
      "151": {
        start: {
          line: 408,
          column: 23
        },
        end: {
          line: 408,
          column: 46
        }
      },
      "152": {
        start: {
          line: 409,
          column: 27
        },
        end: {
          line: 431,
          column: 9
        }
      },
      "153": {
        start: {
          line: 432,
          column: 23
        },
        end: {
          line: 432,
          column: 62
        }
      },
      "154": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 433,
          column: 45
        }
      },
      "155": {
        start: {
          line: 434,
          column: 8
        },
        end: {
          line: 434,
          column: 22
        }
      },
      "156": {
        start: {
          line: 437,
          column: 21
        },
        end: {
          line: 448,
          column: 5
        }
      },
      "157": {
        start: {
          line: 438,
          column: 27
        },
        end: {
          line: 442,
          column: 9
        }
      },
      "158": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 443,
          column: 57
        }
      },
      "159": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 72
        }
      },
      "160": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 78
        }
      },
      "161": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 106
        }
      },
      "162": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 447,
          column: 36
        }
      },
      "163": {
        start: {
          line: 450,
          column: 4
        },
        end: {
          line: 456,
          column: 7
        }
      },
      "164": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 451,
          column: 83
        }
      },
      "165": {
        start: {
          line: 458,
          column: 4
        },
        end: {
          line: 475,
          column: 7
        }
      },
      "166": {
        start: {
          line: 459,
          column: 35
        },
        end: {
          line: 465,
          column: 9
        }
      },
      "167": {
        start: {
          line: 460,
          column: 12
        },
        end: {
          line: 464,
          column: 13
        }
      },
      "168": {
        start: {
          line: 461,
          column: 16
        },
        end: {
          line: 461,
          column: 35
        }
      },
      "169": {
        start: {
          line: 462,
          column: 16
        },
        end: {
          line: 462,
          column: 92
        }
      },
      "170": {
        start: {
          line: 463,
          column: 16
        },
        end: {
          line: 463,
          column: 83
        }
      },
      "171": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "172": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 467,
          column: 72
        }
      },
      "173": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 471,
          column: 10
        }
      },
      "174": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 75
        }
      },
      "175": {
        start: {
          line: 477,
          column: 24
        },
        end: {
          line: 483,
          column: 5
        }
      },
      "176": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 481,
          column: 9
        }
      },
      "177": {
        start: {
          line: 479,
          column: 30
        },
        end: {
          line: 479,
          column: 105
        }
      },
      "178": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 35
        }
      },
      "179": {
        start: {
          line: 480,
          column: 28
        },
        end: {
          line: 480,
          column: 35
        }
      },
      "180": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 482,
          column: 18
        }
      },
      "181": {
        start: {
          line: 485,
          column: 4
        },
        end: {
          line: 502,
          column: 7
        }
      },
      "182": {
        start: {
          line: 486,
          column: 29
        },
        end: {
          line: 490,
          column: 9
        }
      },
      "183": {
        start: {
          line: 487,
          column: 12
        },
        end: {
          line: 489,
          column: 13
        }
      },
      "184": {
        start: {
          line: 488,
          column: 16
        },
        end: {
          line: 488,
          column: 30
        }
      },
      "185": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 494,
          column: 9
        }
      },
      "186": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 492,
          column: 63
        }
      },
      "187": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 493,
          column: 52
        }
      },
      "188": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 498,
          column: 10
        }
      },
      "189": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 66
        }
      },
      "190": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 51
        }
      },
      "191": {
        start: {
          line: 503,
          column: 4
        },
        end: {
          line: 503,
          column: 29
        }
      },
      "192": {
        start: {
          line: 503,
          column: 17
        },
        end: {
          line: 503,
          column: 29
        }
      },
      "193": {
        start: {
          line: 504,
          column: 4
        },
        end: {
          line: 1414,
          column: 7
        }
      },
      "194": {
        start: {
          line: 639,
          column: 91
        },
        end: {
          line: 642,
          column: 87
        }
      },
      "195": {
        start: {
          line: 639,
          column: 116
        },
        end: {
          line: 642,
          column: 85
        }
      },
      "196": {
        start: {
          line: 660,
          column: 99
        },
        end: {
          line: 663,
          column: 95
        }
      },
      "197": {
        start: {
          line: 660,
          column: 124
        },
        end: {
          line: 663,
          column: 93
        }
      },
      "198": {
        start: {
          line: 678,
          column: 99
        },
        end: {
          line: 681,
          column: 95
        }
      },
      "199": {
        start: {
          line: 678,
          column: 124
        },
        end: {
          line: 681,
          column: 93
        }
      },
      "200": {
        start: {
          line: 701,
          column: 99
        },
        end: {
          line: 704,
          column: 95
        }
      },
      "201": {
        start: {
          line: 701,
          column: 124
        },
        end: {
          line: 704,
          column: 93
        }
      },
      "202": {
        start: {
          line: 719,
          column: 99
        },
        end: {
          line: 722,
          column: 95
        }
      },
      "203": {
        start: {
          line: 719,
          column: 124
        },
        end: {
          line: 722,
          column: 93
        }
      },
      "204": {
        start: {
          line: 742,
          column: 96
        },
        end: {
          line: 742,
          column: 188
        }
      },
      "205": {
        start: {
          line: 743,
          column: 80
        },
        end: {
          line: 745,
          column: 81
        }
      },
      "206": {
        start: {
          line: 744,
          column: 84
        },
        end: {
          line: 744,
          column: 119
        }
      },
      "207": {
        start: {
          line: 772,
          column: 95
        },
        end: {
          line: 778,
          column: 66
        }
      },
      "208": {
        start: {
          line: 796,
          column: 95
        },
        end: {
          line: 899,
          column: 66
        }
      },
      "209": {
        start: {
          line: 806,
          column: 80
        },
        end: {
          line: 806,
          column: 98
        }
      },
      "210": {
        start: {
          line: 807,
          column: 80
        },
        end: {
          line: 807,
          column: 113
        }
      },
      "211": {
        start: {
          line: 808,
          column: 80
        },
        end: {
          line: 808,
          column: 134
        }
      },
      "212": {
        start: {
          line: 810,
          column: 89
        },
        end: {
          line: 810,
          column: 139
        }
      },
      "213": {
        start: {
          line: 811,
          column: 88
        },
        end: {
          line: 811,
          column: 142
        }
      },
      "214": {
        start: {
          line: 811,
          column: 103
        },
        end: {
          line: 811,
          column: 136
        }
      },
      "215": {
        start: {
          line: 816,
          column: 113
        },
        end: {
          line: 816,
          column: 171
        }
      },
      "216": {
        start: {
          line: 816,
          column: 215
        },
        end: {
          line: 850,
          column: 96
        }
      },
      "217": {
        start: {
          line: 819,
          column: 92
        },
        end: {
          line: 819,
          column: 117
        }
      },
      "218": {
        start: {
          line: 820,
          column: 92
        },
        end: {
          line: 820,
          column: 119
        }
      },
      "219": {
        start: {
          line: 821,
          column: 92
        },
        end: {
          line: 821,
          column: 126
        }
      },
      "220": {
        start: {
          line: 851,
          column: 133
        },
        end: {
          line: 851,
          column: 186
        }
      },
      "221": {
        start: {
          line: 867,
          column: 111
        },
        end: {
          line: 867,
          column: 171
        }
      },
      "222": {
        start: {
          line: 867,
          column: 217
        },
        end: {
          line: 893,
          column: 106
        }
      },
      "223": {
        start: {
          line: 870,
          column: 100
        },
        end: {
          line: 870,
          column: 127
        }
      },
      "224": {
        start: {
          line: 871,
          column: 100
        },
        end: {
          line: 871,
          column: 129
        }
      },
      "225": {
        start: {
          line: 872,
          column: 100
        },
        end: {
          line: 872,
          column: 134
        }
      },
      "226": {
        start: {
          line: 923,
          column: 87
        },
        end: {
          line: 1012,
          column: 58
        }
      },
      "227": {
        start: {
          line: 989,
          column: 101
        },
        end: {
          line: 989,
          column: 140
        }
      },
      "228": {
        start: {
          line: 990,
          column: 108
        },
        end: {
          line: 990,
          column: 135
        }
      },
      "229": {
        start: {
          line: 991,
          column: 104
        },
        end: {
          line: 1001,
          column: 85
        }
      },
      "230": {
        start: {
          line: 1002,
          column: 97
        },
        end: {
          line: 1002,
          column: 125
        }
      },
      "231": {
        start: {
          line: 1003,
          column: 100
        },
        end: {
          line: 1003,
          column: 118
        }
      },
      "232": {
        start: {
          line: 1004,
          column: 84
        },
        end: {
          line: 1004,
          column: 126
        }
      },
      "233": {
        start: {
          line: 1005,
          column: 84
        },
        end: {
          line: 1005,
          column: 146
        }
      },
      "234": {
        start: {
          line: 1036,
          column: 95
        },
        end: {
          line: 1041,
          column: 66
        }
      },
      "235": {
        start: {
          line: 1054,
          column: 95
        },
        end: {
          line: 1059,
          column: 66
        }
      },
      "236": {
        start: {
          line: 1089,
          column: 75
        },
        end: {
          line: 1089,
          column: 106
        }
      },
      "237": {
        start: {
          line: 1094,
          column: 64
        },
        end: {
          line: 1104,
          column: 65
        }
      },
      "238": {
        start: {
          line: 1095,
          column: 68
        },
        end: {
          line: 1095,
          column: 87
        }
      },
      "239": {
        start: {
          line: 1096,
          column: 84
        },
        end: {
          line: 1096,
          column: 103
        }
      },
      "240": {
        start: {
          line: 1097,
          column: 68
        },
        end: {
          line: 1103,
          column: 69
        }
      },
      "241": {
        start: {
          line: 1098,
          column: 90
        },
        end: {
          line: 1098,
          column: 121
        }
      },
      "242": {
        start: {
          line: 1099,
          column: 94
        },
        end: {
          line: 1099,
          column: 114
        }
      },
      "243": {
        start: {
          line: 1100,
          column: 93
        },
        end: {
          line: 1100,
          column: 186
        }
      },
      "244": {
        start: {
          line: 1101,
          column: 72
        },
        end: {
          line: 1101,
          column: 104
        }
      },
      "245": {
        start: {
          line: 1102,
          column: 72
        },
        end: {
          line: 1102,
          column: 92
        }
      },
      "246": {
        start: {
          line: 1117,
          column: 88
        },
        end: {
          line: 1117,
          column: 107
        }
      },
      "247": {
        start: {
          line: 1118,
          column: 72
        },
        end: {
          line: 1124,
          column: 73
        }
      },
      "248": {
        start: {
          line: 1119,
          column: 94
        },
        end: {
          line: 1119,
          column: 125
        }
      },
      "249": {
        start: {
          line: 1120,
          column: 98
        },
        end: {
          line: 1120,
          column: 118
        }
      },
      "250": {
        start: {
          line: 1121,
          column: 97
        },
        end: {
          line: 1121,
          column: 190
        }
      },
      "251": {
        start: {
          line: 1122,
          column: 76
        },
        end: {
          line: 1122,
          column: 108
        }
      },
      "252": {
        start: {
          line: 1123,
          column: 76
        },
        end: {
          line: 1123,
          column: 96
        }
      },
      "253": {
        start: {
          line: 1137,
          column: 87
        },
        end: {
          line: 1140,
          column: 58
        }
      },
      "254": {
        start: {
          line: 1163,
          column: 119
        },
        end: {
          line: 1201,
          column: 73
        }
      },
      "255": {
        start: {
          line: 1173,
          column: 89
        },
        end: {
          line: 1173,
          column: 121
        }
      },
      "256": {
        start: {
          line: 1194,
          column: 89
        },
        end: {
          line: 1194,
          column: 117
        }
      },
      "257": {
        start: {
          line: 1227,
          column: 108
        },
        end: {
          line: 1285,
          column: 58
        }
      },
      "258": {
        start: {
          line: 1315,
          column: 125
        },
        end: {
          line: 1322,
          column: 69
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 106
          },
          end: {
            line: 30,
            column: 107
          }
        },
        loc: {
          start: {
            line: 30,
            column: 113
          },
          end: {
            line: 30,
            column: 130
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 130
          },
          end: {
            line: 35,
            column: 131
          }
        },
        loc: {
          start: {
            line: 35,
            column: 137
          },
          end: {
            line: 35,
            column: 151
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 130
          },
          end: {
            line: 36,
            column: 131
          }
        },
        loc: {
          start: {
            line: 36,
            column: 137
          },
          end: {
            line: 36,
            column: 151
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 55
          },
          end: {
            line: 50,
            column: 56
          }
        },
        loc: {
          start: {
            line: 50,
            column: 62
          },
          end: {
            line: 50,
            column: 93
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 51,
            column: 50
          },
          end: {
            line: 51,
            column: 51
          }
        },
        loc: {
          start: {
            line: 51,
            column: 57
          },
          end: {
            line: 51,
            column: 88
          }
        },
        line: 51
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 52,
            column: 102
          },
          end: {
            line: 52,
            column: 103
          }
        },
        loc: {
          start: {
            line: 52,
            column: 109
          },
          end: {
            line: 52,
            column: 126
          }
        },
        line: 52
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 57,
            column: 10
          },
          end: {
            line: 57,
            column: 11
          }
        },
        loc: {
          start: {
            line: 57,
            column: 18
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 57
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 71,
            column: 10
          },
          end: {
            line: 71,
            column: 11
          }
        },
        loc: {
          start: {
            line: 71,
            column: 18
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 71
      },
      "10": {
        name: "PlantInstanceForm",
        decl: {
          start: {
            line: 86,
            column: 9
          },
          end: {
            line: 86,
            column: 26
          }
        },
        loc: {
          start: {
            line: 86,
            column: 82
          },
          end: {
            line: 1415,
            column: 1
          }
        },
        line: 86
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 128,
            column: 17
          },
          end: {
            line: 128,
            column: 18
          }
        },
        loc: {
          start: {
            line: 128,
            column: 27
          },
          end: {
            line: 132,
            column: 9
          }
        },
        line: 128
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 136,
            column: 35
          },
          end: {
            line: 136,
            column: 36
          }
        },
        loc: {
          start: {
            line: 136,
            column: 44
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 136
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 147,
            column: 33
          },
          end: {
            line: 147,
            column: 34
          }
        },
        loc: {
          start: {
            line: 147,
            column: 41
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 147
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 155,
            column: 37
          },
          end: {
            line: 155,
            column: 38
          }
        },
        loc: {
          start: {
            line: 155,
            column: 41
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 155
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 167,
            column: 20
          },
          end: {
            line: 167,
            column: 21
          }
        },
        loc: {
          start: {
            line: 167,
            column: 39
          },
          end: {
            line: 180,
            column: 9
          }
        },
        line: 167
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 181,
            column: 19
          },
          end: {
            line: 181,
            column: 20
          }
        },
        loc: {
          start: {
            line: 181,
            column: 33
          },
          end: {
            line: 211,
            column: 9
          }
        },
        line: 181
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 212,
            column: 17
          },
          end: {
            line: 212,
            column: 18
          }
        },
        loc: {
          start: {
            line: 212,
            column: 26
          },
          end: {
            line: 216,
            column: 9
          }
        },
        line: 212
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 220,
            column: 20
          },
          end: {
            line: 220,
            column: 21
          }
        },
        loc: {
          start: {
            line: 220,
            column: 34
          },
          end: {
            line: 251,
            column: 9
          }
        },
        line: 220
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 223,
            column: 41
          },
          end: {
            line: 223,
            column: 42
          }
        },
        loc: {
          start: {
            line: 223,
            column: 57
          },
          end: {
            line: 234,
            column: 13
          }
        },
        line: 223
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 227,
            column: 38
          },
          end: {
            line: 227,
            column: 39
          }
        },
        loc: {
          start: {
            line: 227,
            column: 54
          },
          end: {
            line: 229,
            column: 25
          }
        },
        line: 227
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 236,
            column: 31
          },
          end: {
            line: 236,
            column: 32
          }
        },
        loc: {
          start: {
            line: 236,
            column: 46
          },
          end: {
            line: 238,
            column: 13
          }
        },
        line: 236
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 252,
            column: 19
          },
          end: {
            line: 252,
            column: 20
          }
        },
        loc: {
          start: {
            line: 252,
            column: 33
          },
          end: {
            line: 303,
            column: 9
          }
        },
        line: 252
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 306,
            column: 26
          },
          end: {
            line: 306,
            column: 27
          }
        },
        loc: {
          start: {
            line: 306,
            column: 30
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 306
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 350,
            column: 30
          },
          end: {
            line: 350,
            column: 31
          }
        },
        loc: {
          start: {
            line: 350,
            column: 39
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 350
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 364,
            column: 30
          },
          end: {
            line: 364,
            column: 31
          }
        },
        loc: {
          start: {
            line: 364,
            column: 39
          },
          end: {
            line: 369,
            column: 5
          }
        },
        line: 364
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 371,
            column: 38
          },
          end: {
            line: 371,
            column: 39
          }
        },
        loc: {
          start: {
            line: 371,
            column: 47
          },
          end: {
            line: 376,
            column: 5
          }
        },
        line: 371
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 372,
            column: 48
          },
          end: {
            line: 372,
            column: 49
          }
        },
        loc: {
          start: {
            line: 372,
            column: 56
          },
          end: {
            line: 372,
            column: 67
          }
        },
        line: 372
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 378,
            column: 34
          },
          end: {
            line: 378,
            column: 35
          }
        },
        loc: {
          start: {
            line: 378,
            column: 43
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 378
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 391,
            column: 38
          },
          end: {
            line: 391,
            column: 39
          }
        },
        loc: {
          start: {
            line: 391,
            column: 50
          },
          end: {
            line: 404,
            column: 5
          }
        },
        line: 391
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 406,
            column: 42
          },
          end: {
            line: 406,
            column: 43
          }
        },
        loc: {
          start: {
            line: 406,
            column: 54
          },
          end: {
            line: 435,
            column: 5
          }
        },
        line: 406
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 437,
            column: 21
          },
          end: {
            line: 437,
            column: 22
          }
        },
        loc: {
          start: {
            line: 437,
            column: 29
          },
          end: {
            line: 448,
            column: 5
          }
        },
        line: 437
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 450,
            column: 26
          },
          end: {
            line: 450,
            column: 27
          }
        },
        loc: {
          start: {
            line: 450,
            column: 30
          },
          end: {
            line: 452,
            column: 5
          }
        },
        line: 450
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 458,
            column: 26
          },
          end: {
            line: 458,
            column: 27
          }
        },
        loc: {
          start: {
            line: 458,
            column: 30
          },
          end: {
            line: 472,
            column: 5
          }
        },
        line: 458
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 459,
            column: 35
          },
          end: {
            line: 459,
            column: 36
          }
        },
        loc: {
          start: {
            line: 459,
            column: 40
          },
          end: {
            line: 465,
            column: 9
          }
        },
        line: 459
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 469,
            column: 15
          },
          end: {
            line: 469,
            column: 16
          }
        },
        loc: {
          start: {
            line: 469,
            column: 19
          },
          end: {
            line: 471,
            column: 9
          }
        },
        line: 469
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 477,
            column: 24
          },
          end: {
            line: 477,
            column: 25
          }
        },
        loc: {
          start: {
            line: 477,
            column: 28
          },
          end: {
            line: 483,
            column: 5
          }
        },
        line: 477
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 485,
            column: 26
          },
          end: {
            line: 485,
            column: 27
          }
        },
        loc: {
          start: {
            line: 485,
            column: 30
          },
          end: {
            line: 499,
            column: 5
          }
        },
        line: 485
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 486,
            column: 29
          },
          end: {
            line: 486,
            column: 30
          }
        },
        loc: {
          start: {
            line: 486,
            column: 34
          },
          end: {
            line: 490,
            column: 9
          }
        },
        line: 486
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 495,
            column: 15
          },
          end: {
            line: 495,
            column: 16
          }
        },
        loc: {
          start: {
            line: 495,
            column: 19
          },
          end: {
            line: 498,
            column: 9
          }
        },
        line: 495
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 639,
            column: 86
          },
          end: {
            line: 639,
            column: 87
          }
        },
        loc: {
          start: {
            line: 639,
            column: 91
          },
          end: {
            line: 642,
            column: 87
          }
        },
        line: 639
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 639,
            column: 107
          },
          end: {
            line: 639,
            column: 108
          }
        },
        loc: {
          start: {
            line: 639,
            column: 116
          },
          end: {
            line: 642,
            column: 85
          }
        },
        line: 639
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 660,
            column: 94
          },
          end: {
            line: 660,
            column: 95
          }
        },
        loc: {
          start: {
            line: 660,
            column: 99
          },
          end: {
            line: 663,
            column: 95
          }
        },
        line: 660
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 660,
            column: 115
          },
          end: {
            line: 660,
            column: 116
          }
        },
        loc: {
          start: {
            line: 660,
            column: 124
          },
          end: {
            line: 663,
            column: 93
          }
        },
        line: 660
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 678,
            column: 94
          },
          end: {
            line: 678,
            column: 95
          }
        },
        loc: {
          start: {
            line: 678,
            column: 99
          },
          end: {
            line: 681,
            column: 95
          }
        },
        line: 678
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 678,
            column: 115
          },
          end: {
            line: 678,
            column: 116
          }
        },
        loc: {
          start: {
            line: 678,
            column: 124
          },
          end: {
            line: 681,
            column: 93
          }
        },
        line: 678
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 701,
            column: 94
          },
          end: {
            line: 701,
            column: 95
          }
        },
        loc: {
          start: {
            line: 701,
            column: 99
          },
          end: {
            line: 704,
            column: 95
          }
        },
        line: 701
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 701,
            column: 115
          },
          end: {
            line: 701,
            column: 116
          }
        },
        loc: {
          start: {
            line: 701,
            column: 124
          },
          end: {
            line: 704,
            column: 93
          }
        },
        line: 701
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 719,
            column: 94
          },
          end: {
            line: 719,
            column: 95
          }
        },
        loc: {
          start: {
            line: 719,
            column: 99
          },
          end: {
            line: 722,
            column: 95
          }
        },
        line: 719
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 719,
            column: 115
          },
          end: {
            line: 719,
            column: 116
          }
        },
        loc: {
          start: {
            line: 719,
            column: 124
          },
          end: {
            line: 722,
            column: 93
          }
        },
        line: 719
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 741,
            column: 85
          },
          end: {
            line: 741,
            column: 86
          }
        },
        loc: {
          start: {
            line: 741,
            column: 89
          },
          end: {
            line: 746,
            column: 77
          }
        },
        line: 741
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 772,
            column: 68
          },
          end: {
            line: 772,
            column: 69
          }
        },
        loc: {
          start: {
            line: 772,
            column: 95
          },
          end: {
            line: 778,
            column: 66
          }
        },
        line: 772
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 796,
            column: 68
          },
          end: {
            line: 796,
            column: 69
          }
        },
        loc: {
          start: {
            line: 796,
            column: 95
          },
          end: {
            line: 899,
            column: 66
          }
        },
        line: 796
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 805,
            column: 86
          },
          end: {
            line: 805,
            column: 87
          }
        },
        loc: {
          start: {
            line: 805,
            column: 91
          },
          end: {
            line: 809,
            column: 77
          }
        },
        line: 805
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 810,
            column: 85
          },
          end: {
            line: 810,
            column: 86
          }
        },
        loc: {
          start: {
            line: 810,
            column: 89
          },
          end: {
            line: 810,
            column: 139
          }
        },
        line: 810
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 811,
            column: 84
          },
          end: {
            line: 811,
            column: 85
          }
        },
        loc: {
          start: {
            line: 811,
            column: 88
          },
          end: {
            line: 811,
            column: 142
          }
        },
        line: 811
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 811,
            column: 99
          },
          end: {
            line: 811,
            column: 100
          }
        },
        loc: {
          start: {
            line: 811,
            column: 103
          },
          end: {
            line: 811,
            column: 136
          }
        },
        line: 811
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 816,
            column: 101
          },
          end: {
            line: 816,
            column: 102
          }
        },
        loc: {
          start: {
            line: 816,
            column: 113
          },
          end: {
            line: 816,
            column: 171
          }
        },
        line: 816
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 816,
            column: 189
          },
          end: {
            line: 816,
            column: 190
          }
        },
        loc: {
          start: {
            line: 816,
            column: 215
          },
          end: {
            line: 850,
            column: 96
          }
        },
        line: 816
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 818,
            column: 97
          },
          end: {
            line: 818,
            column: 98
          }
        },
        loc: {
          start: {
            line: 818,
            column: 101
          },
          end: {
            line: 822,
            column: 89
          }
        },
        line: 818
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 851,
            column: 126
          },
          end: {
            line: 851,
            column: 127
          }
        },
        loc: {
          start: {
            line: 851,
            column: 133
          },
          end: {
            line: 851,
            column: 186
          }
        },
        line: 851
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 867,
            column: 97
          },
          end: {
            line: 867,
            column: 98
          }
        },
        loc: {
          start: {
            line: 867,
            column: 111
          },
          end: {
            line: 867,
            column: 171
          }
        },
        line: 867
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 867,
            column: 189
          },
          end: {
            line: 867,
            column: 190
          }
        },
        loc: {
          start: {
            line: 867,
            column: 217
          },
          end: {
            line: 893,
            column: 106
          }
        },
        line: 867
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 869,
            column: 105
          },
          end: {
            line: 869,
            column: 106
          }
        },
        loc: {
          start: {
            line: 869,
            column: 109
          },
          end: {
            line: 873,
            column: 97
          }
        },
        line: 869
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 923,
            column: 60
          },
          end: {
            line: 923,
            column: 61
          }
        },
        loc: {
          start: {
            line: 923,
            column: 87
          },
          end: {
            line: 1012,
            column: 58
          }
        },
        line: 923
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 988,
            column: 91
          },
          end: {
            line: 988,
            column: 92
          }
        },
        loc: {
          start: {
            line: 988,
            column: 95
          },
          end: {
            line: 1006,
            column: 81
          }
        },
        line: 988
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 1036,
            column: 68
          },
          end: {
            line: 1036,
            column: 69
          }
        },
        loc: {
          start: {
            line: 1036,
            column: 95
          },
          end: {
            line: 1041,
            column: 66
          }
        },
        line: 1036
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 1054,
            column: 68
          },
          end: {
            line: 1054,
            column: 69
          }
        },
        loc: {
          start: {
            line: 1054,
            column: 95
          },
          end: {
            line: 1059,
            column: 66
          }
        },
        line: 1054
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 1089,
            column: 70
          },
          end: {
            line: 1089,
            column: 71
          }
        },
        loc: {
          start: {
            line: 1089,
            column: 75
          },
          end: {
            line: 1089,
            column: 106
          }
        },
        line: 1089
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 1093,
            column: 71
          },
          end: {
            line: 1093,
            column: 72
          }
        },
        loc: {
          start: {
            line: 1093,
            column: 76
          },
          end: {
            line: 1105,
            column: 61
          }
        },
        line: 1093
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 1116,
            column: 77
          },
          end: {
            line: 1116,
            column: 78
          }
        },
        loc: {
          start: {
            line: 1116,
            column: 81
          },
          end: {
            line: 1125,
            column: 69
          }
        },
        line: 1116
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 1137,
            column: 60
          },
          end: {
            line: 1137,
            column: 61
          }
        },
        loc: {
          start: {
            line: 1137,
            column: 87
          },
          end: {
            line: 1140,
            column: 58
          }
        },
        line: 1137
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 1163,
            column: 89
          },
          end: {
            line: 1163,
            column: 90
          }
        },
        loc: {
          start: {
            line: 1163,
            column: 119
          },
          end: {
            line: 1201,
            column: 73
          }
        },
        line: 1163
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 1173,
            column: 85
          },
          end: {
            line: 1173,
            column: 86
          }
        },
        loc: {
          start: {
            line: 1173,
            column: 89
          },
          end: {
            line: 1173,
            column: 121
          }
        },
        line: 1173
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 1194,
            column: 85
          },
          end: {
            line: 1194,
            column: 86
          }
        },
        loc: {
          start: {
            line: 1194,
            column: 89
          },
          end: {
            line: 1194,
            column: 117
          }
        },
        line: 1194
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 1227,
            column: 60
          },
          end: {
            line: 1227,
            column: 61
          }
        },
        loc: {
          start: {
            line: 1227,
            column: 108
          },
          end: {
            line: 1285,
            column: 58
          }
        },
        line: 1227
      },
      "76": {
        name: "(anonymous_76)",
        decl: {
          start: {
            line: 1315,
            column: 93
          },
          end: {
            line: 1315,
            column: 94
          }
        },
        loc: {
          start: {
            line: 1315,
            column: 125
          },
          end: {
            line: 1322,
            column: 69
          }
        },
        line: 1315
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 35
          },
          end: {
            line: 21,
            column: 38
          }
        }, {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 23,
            column: 5
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 14
          }
        }, {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 32
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 113
          },
          end: {
            line: 30,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 113
          },
          end: {
            line: 30,
            column: 124
          }
        }, {
          start: {
            line: 30,
            column: 128
          },
          end: {
            line: 30,
            column: 130
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 62
          },
          end: {
            line: 50,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 62
          },
          end: {
            line: 50,
            column: 66
          }
        }, {
          start: {
            line: 50,
            column: 70
          },
          end: {
            line: 50,
            column: 93
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 57
          },
          end: {
            line: 51,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 57
          },
          end: {
            line: 51,
            column: 61
          }
        }, {
          start: {
            line: 51,
            column: 65
          },
          end: {
            line: 51,
            column: 88
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 109
          },
          end: {
            line: 52,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 109
          },
          end: {
            line: 52,
            column: 120
          }
        }, {
          start: {
            line: 52,
            column: 124
          },
          end: {
            line: 52,
            column: 126
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 130,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 130,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "9": {
        loc: {
          start: {
            line: 143,
            column: 24
          },
          end: {
            line: 143,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 24
          },
          end: {
            line: 143,
            column: 29
          }
        }, {
          start: {
            line: 143,
            column: 33
          },
          end: {
            line: 143,
            column: 35
          }
        }],
        line: 143
      },
      "10": {
        loc: {
          start: {
            line: 151,
            column: 22
          },
          end: {
            line: 151,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 22
          },
          end: {
            line: 151,
            column: 35
          }
        }, {
          start: {
            line: 151,
            column: 39
          },
          end: {
            line: 151,
            column: 43
          }
        }],
        line: 151
      },
      "11": {
        loc: {
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "12": {
        loc: {
          start: {
            line: 177,
            column: 32
          },
          end: {
            line: 177,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 32
          },
          end: {
            line: 177,
            column: 45
          }
        }, {
          start: {
            line: 177,
            column: 49
          },
          end: {
            line: 177,
            column: 73
          }
        }],
        line: 177
      },
      "13": {
        loc: {
          start: {
            line: 224,
            column: 16
          },
          end: {
            line: 233,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 16
          },
          end: {
            line: 233,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "14": {
        loc: {
          start: {
            line: 224,
            column: 20
          },
          end: {
            line: 224,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 20
          },
          end: {
            line: 224,
            column: 39
          }
        }, {
          start: {
            line: 224,
            column: 43
          },
          end: {
            line: 224,
            column: 55
          }
        }],
        line: 224
      },
      "15": {
        loc: {
          start: {
            line: 225,
            column: 20
          },
          end: {
            line: 232,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 20
          },
          end: {
            line: 232,
            column: 21
          }
        }, {
          start: {
            line: 230,
            column: 27
          },
          end: {
            line: 232,
            column: 21
          }
        }],
        line: 225
      },
      "16": {
        loc: {
          start: {
            line: 225,
            column: 24
          },
          end: {
            line: 225,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 24
          },
          end: {
            line: 225,
            column: 40
          }
        }, {
          start: {
            line: 225,
            column: 44
          },
          end: {
            line: 225,
            column: 64
          }
        }],
        line: 225
      },
      "17": {
        loc: {
          start: {
            line: 239,
            column: 24
          },
          end: {
            line: 239,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 239,
            column: 36
          },
          end: {
            line: 239,
            column: 78
          }
        }, {
          start: {
            line: 239,
            column: 81
          },
          end: {
            line: 239,
            column: 103
          }
        }],
        line: 239
      },
      "18": {
        loc: {
          start: {
            line: 240,
            column: 27
          },
          end: {
            line: 240,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 240,
            column: 39
          },
          end: {
            line: 240,
            column: 44
          }
        }, {
          start: {
            line: 240,
            column: 47
          },
          end: {
            line: 240,
            column: 53
          }
        }],
        line: 240
      },
      "19": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 249,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "20": {
        loc: {
          start: {
            line: 248,
            column: 32
          },
          end: {
            line: 248,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 32
          },
          end: {
            line: 248,
            column: 45
          }
        }, {
          start: {
            line: 248,
            column: 49
          },
          end: {
            line: 248,
            column: 80
          }
        }],
        line: 248
      },
      "21": {
        loc: {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 302,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 302,
            column: 13
          }
        }, {
          start: {
            line: 299,
            column: 19
          },
          end: {
            line: 302,
            column: 13
          }
        }],
        line: 297
      },
      "22": {
        loc: {
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        }, {
          start: {
            line: 330,
            column: 15
          },
          end: {
            line: 343,
            column: 9
          }
        }],
        line: 307
      },
      "23": {
        loc: {
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 307,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 12
          },
          end: {
            line: 307,
            column: 21
          }
        }, {
          start: {
            line: 307,
            column: 25
          },
          end: {
            line: 307,
            column: 38
          }
        }],
        line: 307
      },
      "24": {
        loc: {
          start: {
            line: 315,
            column: 32
          },
          end: {
            line: 315,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 315,
            column: 63
          },
          end: {
            line: 315,
            column: 129
          }
        }, {
          start: {
            line: 315,
            column: 132
          },
          end: {
            line: 315,
            column: 134
          }
        }],
        line: 315
      },
      "25": {
        loc: {
          start: {
            line: 316,
            column: 27
          },
          end: {
            line: 316,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 316,
            column: 53
          },
          end: {
            line: 316,
            column: 114
          }
        }, {
          start: {
            line: 316,
            column: 117
          },
          end: {
            line: 316,
            column: 119
          }
        }],
        line: 316
      },
      "26": {
        loc: {
          start: {
            line: 317,
            column: 23
          },
          end: {
            line: 317,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 317,
            column: 23
          },
          end: {
            line: 317,
            column: 42
          }
        }, {
          start: {
            line: 317,
            column: 46
          },
          end: {
            line: 317,
            column: 48
          }
        }],
        line: 317
      },
      "27": {
        loc: {
          start: {
            line: 318,
            column: 24
          },
          end: {
            line: 318,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 318,
            column: 24
          },
          end: {
            line: 318,
            column: 44
          }
        }, {
          start: {
            line: 318,
            column: 48
          },
          end: {
            line: 318,
            column: 50
          }
        }],
        line: 318
      },
      "28": {
        loc: {
          start: {
            line: 329,
            column: 30
          },
          end: {
            line: 329,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 30
          },
          end: {
            line: 329,
            column: 50
          }
        }, {
          start: {
            line: 329,
            column: 54
          },
          end: {
            line: 329,
            column: 56
          }
        }],
        line: 329
      },
      "29": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        }, {
          start: {
            line: 356,
            column: 15
          },
          end: {
            line: 361,
            column: 9
          }
        }],
        line: 351
      },
      "30": {
        loc: {
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 379,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 379,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      },
      "31": {
        loc: {
          start: {
            line: 403,
            column: 15
          },
          end: {
            line: 403,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 15
          },
          end: {
            line: 403,
            column: 36
          }
        }, {
          start: {
            line: 403,
            column: 40
          },
          end: {
            line: 403,
            column: 48
          }
        }],
        line: 403
      },
      "32": {
        loc: {
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 408,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 8
          },
          end: {
            line: 408,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      },
      "33": {
        loc: {
          start: {
            line: 432,
            column: 23
          },
          end: {
            line: 432,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 432,
            column: 23
          },
          end: {
            line: 432,
            column: 43
          }
        }, {
          start: {
            line: 432,
            column: 47
          },
          end: {
            line: 432,
            column: 62
          }
        }],
        line: 432
      },
      "34": {
        loc: {
          start: {
            line: 451,
            column: 29
          },
          end: {
            line: 451,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 451,
            column: 29
          },
          end: {
            line: 451,
            column: 36
          }
        }, {
          start: {
            line: 451,
            column: 40
          },
          end: {
            line: 451,
            column: 61
          }
        }, {
          start: {
            line: 451,
            column: 65
          },
          end: {
            line: 451,
            column: 81
          }
        }],
        line: 451
      },
      "35": {
        loc: {
          start: {
            line: 460,
            column: 12
          },
          end: {
            line: 464,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 460,
            column: 12
          },
          end: {
            line: 464,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 460
      },
      "36": {
        loc: {
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "37": {
        loc: {
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 466,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 466,
            column: 18
          }
        }, {
          start: {
            line: 466,
            column: 22
          },
          end: {
            line: 466,
            column: 39
          }
        }],
        line: 466
      },
      "38": {
        loc: {
          start: {
            line: 478,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 478,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 478
      },
      "39": {
        loc: {
          start: {
            line: 480,
            column: 12
          },
          end: {
            line: 480,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 480,
            column: 12
          },
          end: {
            line: 480,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 480
      },
      "40": {
        loc: {
          start: {
            line: 487,
            column: 12
          },
          end: {
            line: 489,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 487,
            column: 12
          },
          end: {
            line: 489,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 487
      },
      "41": {
        loc: {
          start: {
            line: 491,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 8
          },
          end: {
            line: 494,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "42": {
        loc: {
          start: {
            line: 503,
            column: 4
          },
          end: {
            line: 503,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 503,
            column: 4
          },
          end: {
            line: 503,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 503
      },
      "43": {
        loc: {
          start: {
            line: 521,
            column: 46
          },
          end: {
            line: 521,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 521,
            column: 58
          },
          end: {
            line: 521,
            column: 70
          }
        }, {
          start: {
            line: 521,
            column: 73
          },
          end: {
            line: 521,
            column: 88
          }
        }],
        line: 521
      },
      "44": {
        loc: {
          start: {
            line: 558,
            column: 62
          },
          end: {
            line: 558,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 558,
            column: 62
          },
          end: {
            line: 558,
            column: 77
          }
        }, {
          start: {
            line: 558,
            column: 81
          },
          end: {
            line: 558,
            column: 97
          }
        }],
        line: 558
      },
      "45": {
        loc: {
          start: {
            line: 561,
            column: 48
          },
          end: {
            line: 586,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 561,
            column: 48
          },
          end: {
            line: 561,
            column: 63
          }
        }, {
          start: {
            line: 561,
            column: 81
          },
          end: {
            line: 586,
            column: 50
          }
        }],
        line: 561
      },
      "46": {
        loc: {
          start: {
            line: 587,
            column: 48
          },
          end: {
            line: 593,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 587,
            column: 48
          },
          end: {
            line: 587,
            column: 75
          }
        }, {
          start: {
            line: 587,
            column: 93
          },
          end: {
            line: 593,
            column: 50
          }
        }],
        line: 587
      },
      "47": {
        loc: {
          start: {
            line: 591,
            column: 56
          },
          end: {
            line: 591,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 591,
            column: 101
          },
          end: {
            line: 591,
            column: 134
          }
        }, {
          start: {
            line: 591,
            column: 137
          },
          end: {
            line: 591,
            column: 152
          }
        }],
        line: 591
      },
      "48": {
        loc: {
          start: {
            line: 594,
            column: 48
          },
          end: {
            line: 597,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 594,
            column: 48
          },
          end: {
            line: 594,
            column: 62
          }
        }, {
          start: {
            line: 594,
            column: 80
          },
          end: {
            line: 597,
            column: 50
          }
        }],
        line: 594
      },
      "49": {
        loc: {
          start: {
            line: 598,
            column: 48
          },
          end: {
            line: 756,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 598,
            column: 48
          },
          end: {
            line: 598,
            column: 64
          }
        }, {
          start: {
            line: 598,
            column: 82
          },
          end: {
            line: 756,
            column: 50
          }
        }],
        line: 598
      },
      "50": {
        loc: {
          start: {
            line: 742,
            column: 96
          },
          end: {
            line: 742,
            column: 188
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 742,
            column: 96
          },
          end: {
            line: 742,
            column: 115
          }
        }, {
          start: {
            line: 742,
            column: 119
          },
          end: {
            line: 742,
            column: 137
          }
        }, {
          start: {
            line: 742,
            column: 141
          },
          end: {
            line: 742,
            column: 161
          }
        }, {
          start: {
            line: 742,
            column: 165
          },
          end: {
            line: 742,
            column: 188
          }
        }],
        line: 742
      },
      "51": {
        loc: {
          start: {
            line: 743,
            column: 80
          },
          end: {
            line: 745,
            column: 81
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 743,
            column: 80
          },
          end: {
            line: 745,
            column: 81
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 743
      },
      "52": {
        loc: {
          start: {
            line: 747,
            column: 86
          },
          end: {
            line: 747,
            column: 182
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 747,
            column: 86
          },
          end: {
            line: 747,
            column: 106
          }
        }, {
          start: {
            line: 747,
            column: 110
          },
          end: {
            line: 747,
            column: 129
          }
        }, {
          start: {
            line: 747,
            column: 133
          },
          end: {
            line: 747,
            column: 154
          }
        }, {
          start: {
            line: 747,
            column: 158
          },
          end: {
            line: 747,
            column: 182
          }
        }],
        line: 747
      },
      "53": {
        loc: {
          start: {
            line: 777,
            column: 222
          },
          end: {
            line: 777,
            column: 276
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 777,
            column: 240
          },
          end: {
            line: 777,
            column: 256
          }
        }, {
          start: {
            line: 777,
            column: 259
          },
          end: {
            line: 777,
            column: 276
          }
        }],
        line: 777
      },
      "54": {
        loc: {
          start: {
            line: 780,
            column: 56
          },
          end: {
            line: 783,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 780,
            column: 56
          },
          end: {
            line: 780,
            column: 71
          }
        }, {
          start: {
            line: 780,
            column: 89
          },
          end: {
            line: 783,
            column: 58
          }
        }],
        line: 780
      },
      "55": {
        loc: {
          start: {
            line: 804,
            column: 230
          },
          end: {
            line: 804,
            column: 284
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 804,
            column: 248
          },
          end: {
            line: 804,
            column: 264
          }
        }, {
          start: {
            line: 804,
            column: 267
          },
          end: {
            line: 804,
            column: 284
          }
        }],
        line: 804
      },
      "56": {
        loc: {
          start: {
            line: 813,
            column: 72
          },
          end: {
            line: 897,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 813,
            column: 72
          },
          end: {
            line: 813,
            column: 95
          }
        }, {
          start: {
            line: 813,
            column: 99
          },
          end: {
            line: 813,
            column: 112
          }
        }, {
          start: {
            line: 813,
            column: 116
          },
          end: {
            line: 813,
            column: 140
          }
        }, {
          start: {
            line: 813,
            column: 158
          },
          end: {
            line: 897,
            column: 74
          }
        }],
        line: 813
      },
      "57": {
        loc: {
          start: {
            line: 851,
            column: 80
          },
          end: {
            line: 895,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 851,
            column: 80
          },
          end: {
            line: 851,
            column: 102
          }
        }, {
          start: {
            line: 851,
            column: 106
          },
          end: {
            line: 851,
            column: 187
          }
        }, {
          start: {
            line: 851,
            column: 205
          },
          end: {
            line: 895,
            column: 82
          }
        }],
        line: 851
      },
      "58": {
        loc: {
          start: {
            line: 901,
            column: 56
          },
          end: {
            line: 904,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 901,
            column: 56
          },
          end: {
            line: 901,
            column: 71
          }
        }, {
          start: {
            line: 901,
            column: 89
          },
          end: {
            line: 904,
            column: 58
          }
        }],
        line: 901
      },
      "59": {
        loc: {
          start: {
            line: 929,
            column: 201
          },
          end: {
            line: 929,
            column: 265
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 929,
            column: 229
          },
          end: {
            line: 929,
            column: 245
          }
        }, {
          start: {
            line: 929,
            column: 248
          },
          end: {
            line: 929,
            column: 265
          }
        }],
        line: 929
      },
      "60": {
        loc: {
          start: {
            line: 969,
            column: 64
          },
          end: {
            line: 1010,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 969,
            column: 64
          },
          end: {
            line: 969,
            column: 75
          }
        }, {
          start: {
            line: 969,
            column: 79
          },
          end: {
            line: 969,
            column: 102
          }
        }, {
          start: {
            line: 969,
            column: 120
          },
          end: {
            line: 1010,
            column: 66
          }
        }],
        line: 969
      },
      "61": {
        loc: {
          start: {
            line: 989,
            column: 110
          },
          end: {
            line: 989,
            column: 139
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 989,
            column: 110
          },
          end: {
            line: 989,
            column: 133
          }
        }, {
          start: {
            line: 989,
            column: 137
          },
          end: {
            line: 989,
            column: 139
          }
        }],
        line: 989
      },
      "62": {
        loc: {
          start: {
            line: 1014,
            column: 48
          },
          end: {
            line: 1017,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1014,
            column: 48
          },
          end: {
            line: 1014,
            column: 73
          }
        }, {
          start: {
            line: 1014,
            column: 91
          },
          end: {
            line: 1017,
            column: 50
          }
        }],
        line: 1014
      },
      "63": {
        loc: {
          start: {
            line: 1071,
            column: 48
          },
          end: {
            line: 1083,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1071,
            column: 48
          },
          end: {
            line: 1071,
            column: 62
          }
        }, {
          start: {
            line: 1071,
            column: 66
          },
          end: {
            line: 1071,
            column: 88
          }
        }, {
          start: {
            line: 1071,
            column: 106
          },
          end: {
            line: 1083,
            column: 50
          }
        }],
        line: 1071
      },
      "64": {
        loc: {
          start: {
            line: 1094,
            column: 64
          },
          end: {
            line: 1104,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1094,
            column: 64
          },
          end: {
            line: 1104,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1094
      },
      "65": {
        loc: {
          start: {
            line: 1094,
            column: 68
          },
          end: {
            line: 1094,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1094,
            column: 68
          },
          end: {
            line: 1094,
            column: 85
          }
        }, {
          start: {
            line: 1094,
            column: 90
          },
          end: {
            line: 1094,
            column: 99
          }
        }, {
          start: {
            line: 1094,
            column: 103
          },
          end: {
            line: 1094,
            column: 112
          }
        }],
        line: 1094
      },
      "66": {
        loc: {
          start: {
            line: 1097,
            column: 68
          },
          end: {
            line: 1103,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1097,
            column: 68
          },
          end: {
            line: 1103,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1097
      },
      "67": {
        loc: {
          start: {
            line: 1099,
            column: 94
          },
          end: {
            line: 1099,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1099,
            column: 94
          },
          end: {
            line: 1099,
            column: 108
          }
        }, {
          start: {
            line: 1099,
            column: 112
          },
          end: {
            line: 1099,
            column: 114
          }
        }],
        line: 1099
      },
      "68": {
        loc: {
          start: {
            line: 1100,
            column: 93
          },
          end: {
            line: 1100,
            column: 186
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1100,
            column: 109
          },
          end: {
            line: 1100,
            column: 156
          }
        }, {
          start: {
            line: 1100,
            column: 159
          },
          end: {
            line: 1100,
            column: 186
          }
        }],
        line: 1100
      },
      "69": {
        loc: {
          start: {
            line: 1118,
            column: 72
          },
          end: {
            line: 1124,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1118,
            column: 72
          },
          end: {
            line: 1124,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1118
      },
      "70": {
        loc: {
          start: {
            line: 1120,
            column: 98
          },
          end: {
            line: 1120,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1120,
            column: 98
          },
          end: {
            line: 1120,
            column: 112
          }
        }, {
          start: {
            line: 1120,
            column: 116
          },
          end: {
            line: 1120,
            column: 118
          }
        }],
        line: 1120
      },
      "71": {
        loc: {
          start: {
            line: 1121,
            column: 97
          },
          end: {
            line: 1121,
            column: 190
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1121,
            column: 113
          },
          end: {
            line: 1121,
            column: 160
          }
        }, {
          start: {
            line: 1121,
            column: 163
          },
          end: {
            line: 1121,
            column: 190
          }
        }],
        line: 1121
      },
      "72": {
        loc: {
          start: {
            line: 1142,
            column: 48
          },
          end: {
            line: 1145,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1142,
            column: 48
          },
          end: {
            line: 1142,
            column: 60
          }
        }, {
          start: {
            line: 1142,
            column: 78
          },
          end: {
            line: 1145,
            column: 50
          }
        }],
        line: 1142
      },
      "73": {
        loc: {
          start: {
            line: 1154,
            column: 48
          },
          end: {
            line: 1204,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1154,
            column: 48
          },
          end: {
            line: 1154,
            column: 73
          }
        }, {
          start: {
            line: 1154,
            column: 91
          },
          end: {
            line: 1204,
            column: 50
          }
        }],
        line: 1154
      },
      "74": {
        loc: {
          start: {
            line: 1188,
            column: 72
          },
          end: {
            line: 1191,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1188,
            column: 72
          },
          end: {
            line: 1188,
            column: 83
          }
        }, {
          start: {
            line: 1188,
            column: 101
          },
          end: {
            line: 1191,
            column: 74
          }
        }],
        line: 1188
      },
      "75": {
        loc: {
          start: {
            line: 1192,
            column: 72
          },
          end: {
            line: 1199,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1192,
            column: 72
          },
          end: {
            line: 1192,
            column: 83
          }
        }, {
          start: {
            line: 1192,
            column: 101
          },
          end: {
            line: 1199,
            column: 74
          }
        }],
        line: 1192
      },
      "76": {
        loc: {
          start: {
            line: 1217,
            column: 40
          },
          end: {
            line: 1288,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1217,
            column: 40
          },
          end: {
            line: 1217,
            column: 49
          }
        }, {
          start: {
            line: 1217,
            column: 67
          },
          end: {
            line: 1288,
            column: 42
          }
        }],
        line: 1217
      },
      "77": {
        loc: {
          start: {
            line: 1248,
            column: 94
          },
          end: {
            line: 1248,
            column: 238
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1248,
            column: 102
          },
          end: {
            line: 1248,
            column: 169
          }
        }, {
          start: {
            line: 1248,
            column: 172
          },
          end: {
            line: 1248,
            column: 238
          }
        }],
        line: 1248
      },
      "78": {
        loc: {
          start: {
            line: 1254,
            column: 64
          },
          end: {
            line: 1283,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1254,
            column: 64
          },
          end: {
            line: 1254,
            column: 70
          }
        }, {
          start: {
            line: 1254,
            column: 88
          },
          end: {
            line: 1283,
            column: 66
          }
        }],
        line: 1254
      },
      "79": {
        loc: {
          start: {
            line: 1291,
            column: 32
          },
          end: {
            line: 1328,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1291,
            column: 32
          },
          end: {
            line: 1291,
            column: 62
          }
        }, {
          start: {
            line: 1291,
            column: 80
          },
          end: {
            line: 1328,
            column: 34
          }
        }],
        line: 1291
      },
      "80": {
        loc: {
          start: {
            line: 1318,
            column: 68
          },
          end: {
            line: 1318,
            column: 208
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1318,
            column: 90
          },
          end: {
            line: 1318,
            column: 102
          }
        }, {
          start: {
            line: 1318,
            column: 105
          },
          end: {
            line: 1318,
            column: 208
          }
        }],
        line: 1318
      },
      "81": {
        loc: {
          start: {
            line: 1318,
            column: 105
          },
          end: {
            line: 1318,
            column: 208
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1318,
            column: 138
          },
          end: {
            line: 1318,
            column: 159
          }
        }, {
          start: {
            line: 1318,
            column: 162
          },
          end: {
            line: 1318,
            column: 208
          }
        }],
        line: 1318
      },
      "82": {
        loc: {
          start: {
            line: 1335,
            column: 48
          },
          end: {
            line: 1337,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1335,
            column: 48
          },
          end: {
            line: 1335,
            column: 56
          }
        }, {
          start: {
            line: 1335,
            column: 60
          },
          end: {
            line: 1335,
            column: 92
          }
        }, {
          start: {
            line: 1335,
            column: 110
          },
          end: {
            line: 1337,
            column: 50
          }
        }],
        line: 1335
      },
      "83": {
        loc: {
          start: {
            line: 1338,
            column: 48
          },
          end: {
            line: 1353,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1338,
            column: 48
          },
          end: {
            line: 1338,
            column: 55
          }
        }, {
          start: {
            line: 1338,
            column: 73
          },
          end: {
            line: 1353,
            column: 50
          }
        }],
        line: 1338
      },
      "84": {
        loc: {
          start: {
            line: 1368,
            column: 62
          },
          end: {
            line: 1368,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1368,
            column: 62
          },
          end: {
            line: 1368,
            column: 80
          }
        }, {
          start: {
            line: 1368,
            column: 84
          },
          end: {
            line: 1368,
            column: 98
          }
        }, {
          start: {
            line: 1368,
            column: 102
          },
          end: {
            line: 1368,
            column: 112
          }
        }],
        line: 1368
      },
      "85": {
        loc: {
          start: {
            line: 1370,
            column: 62
          },
          end: {
            line: 1395,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1370,
            column: 97
          },
          end: {
            line: 1395,
            column: 54
          }
        }, {
          start: {
            line: 1395,
            column: 57
          },
          end: {
            line: 1395,
            column: 97
          }
        }],
        line: 1370
      },
      "86": {
        loc: {
          start: {
            line: 1393,
            column: 60
          },
          end: {
            line: 1393,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1393,
            column: 72
          },
          end: {
            line: 1393,
            column: 85
          }
        }, {
          start: {
            line: 1393,
            column: 88
          },
          end: {
            line: 1393,
            column: 99
          }
        }],
        line: 1393
      },
      "87": {
        loc: {
          start: {
            line: 1395,
            column: 57
          },
          end: {
            line: 1395,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1395,
            column: 69
          },
          end: {
            line: 1395,
            column: 83
          }
        }, {
          start: {
            line: 1395,
            column: 86
          },
          end: {
            line: 1395,
            column: 97
          }
        }],
        line: 1395
      },
      "88": {
        loc: {
          start: {
            line: 1403,
            column: 24
          },
          end: {
            line: 1409,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1403,
            column: 24
          },
          end: {
            line: 1403,
            column: 40
          }
        }, {
          start: {
            line: 1403,
            column: 58
          },
          end: {
            line: 1409,
            column: 26
          }
        }],
        line: 1403
      },
      "89": {
        loc: {
          start: {
            line: 1407,
            column: 42
          },
          end: {
            line: 1407,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1407,
            column: 76
          },
          end: {
            line: 1407,
            column: 98
          }
        }, {
          start: {
            line: 1407,
            column: 101
          },
          end: {
            line: 1407,
            column: 120
          }
        }],
        line: 1407
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0, 0, 0],
      "51": [0, 0],
      "52": [0, 0, 0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0, 0, 0],
      "57": [0, 0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0, 0],
      "64": [0, 0],
      "65": [0, 0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0, 0],
      "83": [0, 0],
      "84": [0, 0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/components/plants/PlantInstanceForm.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport PlantTaxonomySelector from './PlantTaxonomySelector';\nimport ImageUpload from '../shared/ImageUpload';\nimport type { EnhancedPlantInstance } from '@/lib/types/plant-instance-types';\nimport type { PlantSuggestion } from '@/lib/validation/plant-schemas';\n\n// Form validation schemas\nconst plantTaxonomySchema = z.object({\n  family: z.string().min(1, 'Family is required').max(100, 'Family must be less than 100 characters'),\n  genus: z.string().min(1, 'Genus is required').max(100, 'Genus must be less than 100 characters'),\n  species: z.string().min(1, 'Species is required').max(100, 'Species must be less than 100 characters'),\n  cultivar: z.string().max(100, 'Cultivar must be less than 100 characters').optional().transform(val => val?.trim() || ''),\n  commonName: z.string().min(1, 'Common name is required').max(100, 'Common name must be less than 100 characters'),\n});\n\nconst plantInstanceFormSchema = z.object({\n  plantId: z.number().min(1, 'Please select a plant type'),\n  nickname: z.string()\n    .min(1, 'Nickname is required')\n    .max(100, 'Nickname must be less than 100 characters')\n    .trim()\n    .refine(val => val.length > 0, 'Nickname cannot be empty'),\n  location: z.string()\n    .min(1, 'Location is required')\n    .max(100, 'Location must be less than 100 characters')\n    .trim()\n    .refine(val => val.length > 0, 'Location cannot be empty'),\n  fertilizerSchedule: z.enum([\n    'weekly', \n    'biweekly', \n    'every_2_4_weeks',\n    'every_3_4_weeks', \n    'every_4_weeks',\n    'every_4_6_weeks',\n    'every_6_8_weeks',\n    'bimonthly', \n    'quarterly'\n  ], {\n    message: 'Please select a fertilizer schedule'\n  }),\n  lastFertilized: z.string()\n    .optional()\n    .refine(val => !val || !isNaN(Date.parse(val)), 'Invalid date format'),\n  lastRepot: z.string()\n    .optional()\n    .refine(val => !val || !isNaN(Date.parse(val)), 'Invalid date format'),\n  notes: z.string()\n    .max(2000, 'Notes must be less than 2000 characters')\n    .optional()\n    .transform(val => val?.trim() || ''),\n  images: z.array(z.string()).max(10, 'Maximum 10 images allowed').optional(),\n  isActive: z.boolean().default(true).optional(),\n  // New taxonomy fields (only used when creating new plant)\n  newPlantTaxonomy: plantTaxonomySchema.optional(),\n}).refine(data => {\n  // Custom validation: lastFertilized cannot be in the future\n  if (data.lastFertilized) {\n    const fertilizerDate = new Date(data.lastFertilized);\n    const today = new Date();\n    today.setHours(23, 59, 59, 999); // End of today\n    return fertilizerDate <= today;\n  }\n  return true;\n}, {\n  message: 'Last fertilized date cannot be in the future',\n  path: ['lastFertilized']\n}).refine(data => {\n  // Custom validation: lastRepot cannot be in the future\n  if (data.lastRepot) {\n    const repotDate = new Date(data.lastRepot);\n    const today = new Date();\n    today.setHours(23, 59, 59, 999); // End of today\n    return repotDate <= today;\n  }\n  return true;\n}, {\n  message: 'Last repot date cannot be in the future',\n  path: ['lastRepot']\n});\n\ntype PlantInstanceFormData = z.infer<typeof plantInstanceFormSchema>;\ntype PlantTaxonomyFormData = z.infer<typeof plantTaxonomySchema>;\n\ninterface PlantInstanceFormProps {\n  plantInstance?: EnhancedPlantInstance;\n  isOpen: boolean;\n  onClose: () => void;\n  onSuccess?: (plantInstance: EnhancedPlantInstance) => void;\n  userId: number;\n}\n\nexport default function PlantInstanceForm({\n  plantInstance,\n  isOpen,\n  onClose,\n  onSuccess,\n  userId,\n}: PlantInstanceFormProps) {\n  const [selectedPlant, setSelectedPlant] = useState<PlantSuggestion | null>(null);\n  const [imageFiles, setImageFiles] = useState<File[]>([]);\n  const [existingImages, setExistingImages] = useState<string[]>([]);\n  const [showLocationSuggestions, setShowLocationSuggestions] = useState(false);\n  const [locationInput, setLocationInput] = useState('');\n  const [isCreatingPlant, setIsCreatingPlant] = useState(false);\n  const [showTaxonomyForm, setShowTaxonomyForm] = useState(false);\n  const [taxonomyData, setTaxonomyData] = useState<PlantTaxonomyFormData>({\n    family: '',\n    genus: '',\n    species: '',\n    cultivar: '',\n    commonName: '',\n  });\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [newNoteInput, setNewNoteInput] = useState('');\n  const queryClient = useQueryClient();\n  const isEditing = !!plantInstance;\n\n  // Form setup\n  const {\n    control,\n    handleSubmit,\n    formState: { errors, isValid, isDirty },\n    reset,\n    setValue,\n    watch,\n    trigger,\n  } = useForm({\n    resolver: zodResolver(plantInstanceFormSchema),\n    mode: 'onChange',\n    defaultValues: {\n      plantId: 1, // Default to 1 to pass validation, will be overridden during initialization\n      nickname: '',\n      location: '',\n      fertilizerSchedule: 'every_4_weeks' as const,\n      lastFertilized: '',\n      lastRepot: '',\n      notes: '',\n      images: [],\n      isActive: true,\n      newPlantTaxonomy: undefined,\n    },\n  });\n\n  // Fetch user locations for autocomplete\n  const { data: userLocations } = useQuery({\n    queryKey: ['user-locations', userId],\n    queryFn: async () => {\n      const response = await fetch(`/api/plant-instances/locations?userId=${userId}`);\n      if (!response.ok) throw new Error('Failed to fetch locations');\n      return response.json() as Promise<string[]>;\n    },\n    staleTime: 1000 * 60 * 10, // 10 minutes\n  });\n\n  // Handle showing taxonomy form for new plant creation\n  const handleShowTaxonomyForm = (query: string) => {\n    setShowTaxonomyForm(true);\n    setTaxonomyData({\n      family: '',\n      genus: '',\n      species: '',\n      cultivar: '',\n      commonName: query || '',\n    });\n  };\n\n  // Handle taxonomy form submission\n  const handleTaxonomySubmit = (data: PlantTaxonomyFormData) => {\n    setIsCreatingPlant(true);\n    createPlantMutation.mutate({\n      ...data,\n      cultivar: data.cultivar || null,\n    });\n  };\n\n  // Handle canceling taxonomy form\n  const handleCancelTaxonomyForm = () => {\n    setShowTaxonomyForm(false);\n    setTaxonomyData({\n      family: '',\n      genus: '',\n      species: '',\n      cultivar: '',\n      commonName: '',\n    });\n  };\n\n  // Create new plant mutation\n  const createPlantMutation = useMutation({\n    mutationFn: async (plantData: any) => {\n      const response = await fetch('/api/plants', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(plantData),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to create plant');\n      }\n\n      return response.json();\n    },\n    onSuccess: async (data) => {\n      await queryClient.invalidateQueries({ \n        queryKey: ['plants'],\n        refetchType: 'active'\n      });\n      queryClient.removeQueries({ queryKey: ['plants'] });\n      await queryClient.refetchQueries({ queryKey: ['plants'] });\n      \n      // Set the newly created plant as selected\n      const newPlant: PlantSuggestion = {\n        id: data.data.id,\n        family: data.data.family,\n        genus: data.data.genus,\n        species: data.data.species,\n        cultivar: data.data.cultivar,\n        commonName: data.data.commonName,\n        isVerified: data.data.isVerified,\n      };\n      \n      handlePlantSelect(newPlant);\n      setIsCreatingPlant(false);\n      setShowTaxonomyForm(false);\n    },\n    onError: (error) => {\n      console.error('Failed to create plant:', error);\n      setIsCreatingPlant(false);\n      setShowTaxonomyForm(false);\n    },\n  });\n\n  // Create/update mutation\n  const mutation = useMutation({\n    mutationFn: async (data: PlantInstanceFormData & { fertilizerSchedule: string }) => {\n      const formData = new FormData();\n      \n      // Add form fields\n      Object.entries(data).forEach(([key, value]) => {\n        if (value !== undefined && value !== '') {\n          if (key === 'images' && Array.isArray(value)) {\n            // Handle existing images\n            value.forEach((image, index) => {\n              formData.append(`existingImages[${index}]`, image);\n            });\n          } else {\n            formData.append(key, String(value));\n          }\n        }\n      });\n\n      // Add new image files\n      imageFiles.forEach((file, index) => {\n        formData.append(`imageFiles[${index}]`, file);\n      });\n\n      const url = isEditing \n        ? `/api/plant-instances/${plantInstance.id}`\n        : '/api/plant-instances';\n      \n      const method = isEditing ? 'PUT' : 'POST';\n\n      const response = await fetch(url, {\n        method,\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        console.error('API Error Response:', error);\n        throw new Error(error.message || 'Failed to save plant instance');\n      }\n\n      return response.json();\n    },\n    onSuccess: async (data) => {\n      // Comprehensive cache clearing for immediate grid updates\n      console.log('Plant instance saved, invalidating caches...');\n      \n      // Invalidate all plant-instances queries regardless of filters\n      await queryClient.invalidateQueries({ \n        queryKey: ['plant-instances'],\n        refetchType: 'all'\n      });\n      \n      // Force refetch specific user queries\n      await queryClient.refetchQueries({ \n        queryKey: ['plant-instances', userId],\n        type: 'all'\n      });\n      \n      // Additional cache clearing for related data\n      const additionalQueryKeys = [\n        ['plant-detail'],\n        ['care-dashboard', userId],\n        ['plants']\n      ];\n\n      for (const queryKey of additionalQueryKeys) {\n        await queryClient.invalidateQueries({ \n          queryKey,\n          refetchType: 'active'\n        });\n      }\n      \n      console.log('Cache invalidation complete');\n      \n      // Reset form state\n      reset();\n      setImageFiles([]);\n      setExistingImages([]);\n      setSelectedPlant(null);\n      setShowTaxonomyForm(false);\n      setHasUnsavedChanges(false);\n      \n      if (onSuccess) {\n        onSuccess(data);\n      } else {\n        // Only call onClose if no onSuccess callback provided\n        onClose();\n      }\n    },\n  });\n\n  // Initialize form when editing\n  useEffect(() => {\n    if (isEditing && plantInstance) {\n      const convertedSchedule = convertDatabaseScheduleToForm(plantInstance.fertilizerSchedule);\n      console.log('Setting form with fertilizer schedule:', convertedSchedule);\n      reset({\n        plantId: plantInstance.plantId,\n        nickname: plantInstance.nickname,\n        location: plantInstance.location,\n        fertilizerSchedule: convertedSchedule as any,\n        lastFertilized: plantInstance.lastFertilized \n          ? new Date(plantInstance.lastFertilized).toISOString().split('T')[0]\n          : '',\n        lastRepot: plantInstance.lastRepot \n          ? new Date(plantInstance.lastRepot).toISOString().split('T')[0]\n          : '',\n        notes: plantInstance.notes || '',\n        images: plantInstance.images || [],\n        isActive: plantInstance.isActive,\n      });\n\n      setSelectedPlant({\n        id: plantInstance.plant.id,\n        family: plantInstance.plant.family,\n        genus: plantInstance.plant.genus,\n        species: plantInstance.plant.species,\n        commonName: plantInstance.plant.commonName,\n        isVerified: plantInstance.plant.isVerified,\n      });\n\n      setExistingImages(plantInstance.images || []);\n    } else {\n      reset();\n      setSelectedPlant(null);\n      setImageFiles([]);\n      setExistingImages([]);\n      setShowTaxonomyForm(false);\n      setTaxonomyData({\n        family: '',\n        genus: '',\n        species: '',\n        cultivar: '',\n        commonName: '',\n      });\n    }\n  }, [isEditing, plantInstance, reset]);\n\n  // Handle plant selection\n  const handlePlantSelect = (plant: PlantSuggestion | null) => {\n    if (plant) {\n      setSelectedPlant(plant);\n      setValue('plantId', plant.id, { shouldValidate: true });\n    } else {\n      setSelectedPlant(null);\n      setValue('plantId', 0, { shouldValidate: true });\n    }\n  };\n\n  // Handle image changes\n  const handleImageChange = (files: File[]) => {\n    setImageFiles(files);\n    // Don't update form's images field - keep existingImages separate\n    // Just trigger validation to ensure form is valid\n    trigger();\n  };\n\n  // Handle existing image removal\n  const handleRemoveExistingImage = (index: number) => {\n    const newImages = existingImages.filter((_, i) => i !== index);\n    setExistingImages(newImages);\n    // Don't update form's images field - keep existingImages separate\n    trigger();\n  };\n\n  // Handle setting primary image (move image to index 0)\n  const handleSetPrimaryImage = (index: number) => {\n    if (index === 0) return; // Already primary\n    \n    const newImages = [...existingImages];\n    const selectedImage = newImages[index];\n    \n    // Remove the selected image and add it to the beginning\n    newImages.splice(index, 1);\n    newImages.unshift(selectedImage);\n    \n    setExistingImages(newImages);\n    trigger();\n  };\n\n  // Convert enum fertilizer schedule to expected format\n  const convertFertilizerSchedule = (schedule: string): string => {\n    const scheduleMap = {\n      'weekly': '7 days',\n      'biweekly': '2 weeks', \n      'every_2_4_weeks': '3 weeks', // Average of 2-4 weeks\n      'every_3_4_weeks': '4 weeks', // Average of 3-4 weeks\n      'every_4_weeks': '4 weeks',\n      'every_4_6_weeks': '5 weeks', // Average of 4-6 weeks\n      'every_6_8_weeks': '7 weeks', // Average of 6-8 weeks\n      'bimonthly': '2 months',\n      'quarterly': '3 months'\n    };\n    return scheduleMap[schedule as keyof typeof scheduleMap] || schedule;\n  };\n\n  // Convert database fertilizer schedule back to form enum\n  const convertDatabaseScheduleToForm = (schedule: string): string => {\n    console.log('Converting database schedule:', schedule);\n    if (!schedule) return 'every_4_weeks';\n    \n    const reverseMap = {\n      // New format matches (what we send to API)\n      '7 days': 'weekly',\n      '2 weeks': 'biweekly',\n      '3 weeks': 'every_2_4_weeks',\n      '4 weeks': 'every_4_weeks',\n      '5 weeks': 'every_4_6_weeks',\n      '7 weeks': 'every_6_8_weeks',\n      '2 months': 'bimonthly',\n      '3 months': 'quarterly',\n      // Legacy formats that might exist in database\n      '1 week': 'weekly',\n      'every 2 weeks': 'biweekly',\n      'every 2-4 weeks': 'every_2_4_weeks',\n      'every 3-4 weeks': 'every_3_4_weeks', \n      'every 4 weeks': 'every_4_weeks',\n      'every 4-6 weeks': 'every_4_6_weeks',\n      'every 6-8 weeks': 'every_6_8_weeks',\n      '1 month': 'every_4_weeks',\n      'monthly': 'every_4_weeks',\n      'bimonthly': 'bimonthly',\n      'quarterly': 'quarterly',\n    };\n    \n    const result = reverseMap[schedule as keyof typeof reverseMap] || 'every_4_weeks';\n    console.log('Converted to:', result);\n    return result;\n  };\n\n  // Handle form submission\n  const onSubmit = (data: PlantInstanceFormData) => {\n    const submitData = {\n      ...data,\n      fertilizerSchedule: convertFertilizerSchedule(data.fertilizerSchedule),\n      images: existingImages, // Always use current existingImages state\n    };\n    console.log('Form submission data:', submitData);\n    console.log('Existing images being submitted:', existingImages);\n    console.log('Original fertilizer schedule:', data.fertilizerSchedule);\n    console.log('Converted fertilizer schedule:', convertFertilizerSchedule(data.fertilizerSchedule));\n    mutation.mutate(submitData as any);\n  };\n\n  // Track unsaved changes\n  useEffect(() => {\n    setHasUnsavedChanges(isDirty || imageFiles.length > 0 || showTaxonomyForm);\n  }, [isDirty, imageFiles.length, showTaxonomyForm]);\n\n  // Warn about unsaved changes before page unload\n  useEffect(() => {\n    const handleBeforeUnload = (e: BeforeUnloadEvent) => {\n      if (hasUnsavedChanges) {\n        e.preventDefault();\n        e.returnValue = 'You have unsaved changes. Are you sure you want to leave?';\n        return 'You have unsaved changes. Are you sure you want to leave?';\n      }\n    };\n\n    if (isOpen && hasUnsavedChanges) {\n      window.addEventListener('beforeunload', handleBeforeUnload);\n    }\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [isOpen, hasUnsavedChanges]);\n\n  // Handle close with unsaved changes warning\n  const handleClose = () => {\n    if (hasUnsavedChanges) {\n      const confirmed = window.confirm('You have unsaved changes. Are you sure you want to close?');\n      if (!confirmed) return;\n    }\n    onClose();\n  };\n\n  // Close modal on escape\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        handleClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen, handleClose]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-hidden\">\n      {/* Backdrop */}\n      <div \n        className=\"absolute inset-0 bg-black bg-opacity-50 transition-opacity\"\n        onClick={handleClose}\n      />\n      \n      {/* Modal */}\n      <div className=\"relative h-full flex items-end sm:items-center justify-center p-4 pb-20 sm:pb-4\">\n        <div className=\"bg-white rounded-t-2xl sm:rounded-2xl w-full max-w-2xl max-h-full overflow-hidden shadow-2xl\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n            <h2 className=\"text-xl font-semibold text-gray-900\">\n              {isEditing ? 'Edit Plant' : 'Add New Plant'}\n            </h2>\n            <button\n              onClick={handleClose}\n              className=\"p-2 text-gray-400 hover:text-gray-600 rounded-full hover:bg-gray-100\"\n              aria-label=\"Close form\"\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n\n          {/* Form */}\n          <form onSubmit={handleSubmit(onSubmit)} className=\"flex-1 overflow-auto max-h-[60vh] sm:max-h-[70vh]\">\n            <div className=\"p-6 space-y-6\">\n              {/* Plant Type Selection */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Plant Type *\n                </label>\n                <PlantTaxonomySelector\n                  selectedPlant={selectedPlant}\n                  onSelect={handlePlantSelect}\n                  disabled={isCreatingPlant || showTaxonomyForm}\n                  onAddNew={handleShowTaxonomyForm}\n                />\n                {isCreatingPlant && (\n                  <div className=\"mt-2 flex items-center text-sm text-primary-600\">\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                    </svg>\n                    Creating new plant type...\n                  </div>\n                )}\n                {createPlantMutation.isError && (\n                  <div className=\"mt-2 text-sm text-red-600\">\n                    Failed to create plant: {createPlantMutation.error instanceof Error ? createPlantMutation.error.message : 'Unknown error'}\n                  </div>\n                )}\n                {errors.plantId && (\n                  <div className=\"mt-1 text-sm text-red-600\">{errors.plantId.message}</div>\n                )}\n\n                {/* New Plant Taxonomy Form */}\n                {showTaxonomyForm && (\n                  <div className=\"mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-sm font-semibold text-blue-900\">Create New Plant Type</h3>\n                      <button\n                        type=\"button\"\n                        onClick={handleCancelTaxonomyForm}\n                        className=\"text-blue-600 hover:text-blue-800\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                      </button>\n                    </div>\n                    \n                    <div className=\"space-y-4\">\n                      {/* Common Name */}\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                          Common Name *\n                        </label>\n                        <input\n                          type=\"text\"\n                          value={taxonomyData.commonName}\n                          onChange={(e) => setTaxonomyData(prev => ({ ...prev, commonName: e.target.value }))}\n                          placeholder=\"e.g., Monstera Deliciosa\"\n                          className=\"w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                        />\n                      </div>\n\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                        {/* Family */}\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                            Family *\n                          </label>\n                          <input\n                            type=\"text\"\n                            value={taxonomyData.family}\n                            onChange={(e) => setTaxonomyData(prev => ({ ...prev, family: e.target.value }))}\n                            placeholder=\"e.g., Araceae\"\n                            className=\"w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                          />\n                        </div>\n\n                        {/* Genus */}\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                            Genus *\n                          </label>\n                          <input\n                            type=\"text\"\n                            value={taxonomyData.genus}\n                            onChange={(e) => setTaxonomyData(prev => ({ ...prev, genus: e.target.value }))}\n                            placeholder=\"e.g., Monstera\"\n                            className=\"w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                        {/* Species */}\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                            Species *\n                          </label>\n                          <input\n                            type=\"text\"\n                            value={taxonomyData.species}\n                            onChange={(e) => setTaxonomyData(prev => ({ ...prev, species: e.target.value }))}\n                            placeholder=\"e.g., deliciosa\"\n                            className=\"w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                          />\n                        </div>\n\n                        {/* Cultivar */}\n                        <div>\n                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                            Cultivar (optional)\n                          </label>\n                          <input\n                            type=\"text\"\n                            value={taxonomyData.cultivar}\n                            onChange={(e) => setTaxonomyData(prev => ({ ...prev, cultivar: e.target.value }))}\n                            placeholder=\"e.g., 'Variegata'\"\n                            className=\"w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"flex justify-end space-x-3 pt-2\">\n                        <button\n                          type=\"button\"\n                          onClick={handleCancelTaxonomyForm}\n                          className=\"px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:ring-2 focus:ring-blue-500\"\n                        >\n                          Cancel\n                        </button>\n                        <button\n                          type=\"button\"\n                          onClick={() => {\n                            const isValid = taxonomyData.family && taxonomyData.genus && taxonomyData.species && taxonomyData.commonName;\n                            if (isValid) {\n                              handleTaxonomySubmit(taxonomyData);\n                            }\n                          }}\n                          disabled={!taxonomyData.family || !taxonomyData.genus || !taxonomyData.species || !taxonomyData.commonName}\n                          className=\"px-3 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                        >\n                          Create Plant Type\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Basic Information */}\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                <div>\n                  <label htmlFor=\"nickname\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Nickname *\n                  </label>\n                  <Controller\n                    name=\"nickname\"\n                    control={control}\n                    render={({ field }) => (\n                      <input\n                        {...field}\n                        id=\"nickname\"\n                        type=\"text\"\n                        placeholder=\"My favorite monstera\"\n                        className={`w-full px-3 py-2 bg-white text-gray-900 placeholder-gray-500 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\n                          errors.nickname ? 'border-red-300' : 'border-gray-300'\n                        }`}\n                      />\n                    )}\n                  />\n                  {errors.nickname && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.nickname.message}</p>\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"location\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Location *\n                  </label>\n                  <Controller\n                    name=\"location\"\n                    control={control}\n                    render={({ field }) => (\n                      <div className=\"relative\">\n                        <input\n                          {...field}\n                          id=\"location\"\n                          type=\"text\"\n                          placeholder=\"Living room window\"\n                          className={`w-full px-3 py-2 bg-white text-gray-900 placeholder-gray-500 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\n                            errors.location ? 'border-red-300' : 'border-gray-300'\n                          }`}\n                          onChange={(e) => {\n                            field.onChange(e);\n                            setLocationInput(e.target.value);\n                            setShowLocationSuggestions(e.target.value.length > 0);\n                          }}\n                          onFocus={() => setShowLocationSuggestions(field.value.length > 0)}\n                          onBlur={() => setTimeout(() => setShowLocationSuggestions(false), 200)}\n                        />\n                        \n                        {/* Location suggestions dropdown */}\n                        {showLocationSuggestions && userLocations && userLocations.length > 0 && (\n                          <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-40 overflow-y-auto\">\n                            {userLocations\n                              .filter(location => \n                                location.toLowerCase().includes(field.value.toLowerCase())\n                              )\n                              .slice(0, 5)\n                              .map((location) => (\n                                <button\n                                  key={location}\n                                  type=\"button\"\n                                  onClick={() => {\n                                    field.onChange(location);\n                                    setLocationInput(location);\n                                    setShowLocationSuggestions(false);\n                                  }}\n                                  className=\"w-full px-3 py-2 text-left hover:bg-gray-50 focus:bg-gray-50 focus:outline-none first:rounded-t-lg last:rounded-b-lg\"\n                                >\n                                  <div className=\"flex items-center\">\n                                    <svg className=\"w-4 h-4 text-gray-400 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                                    </svg>\n                                    {location}\n                                  </div>\n                                </button>\n                              ))}\n                            \n                            {/* Common location suggestions */}\n                            {field.value.length > 0 && !userLocations.some(loc => \n                              loc.toLowerCase().includes(field.value.toLowerCase())\n                            ) && (\n                              <div className=\"border-t border-gray-100\">\n                                <div className=\"px-3 py-2 text-xs text-gray-500 font-medium\">Suggestions:</div>\n                                {[\n                                  'Living room window',\n                                  'Kitchen counter',\n                                  'Bedroom windowsill',\n                                  'Bathroom shelf',\n                                  'Office desk',\n                                  'Balcony',\n                                  'Greenhouse',\n                                  'Outdoor garden',\n                                ].filter(suggestion => \n                                  suggestion.toLowerCase().includes(field.value.toLowerCase())\n                                ).slice(0, 3).map((suggestion) => (\n                                  <button\n                                    key={suggestion}\n                                    type=\"button\"\n                                    onClick={() => {\n                                      field.onChange(suggestion);\n                                      setLocationInput(suggestion);\n                                      setShowLocationSuggestions(false);\n                                    }}\n                                    className=\"w-full px-3 py-2 text-left text-gray-600 hover:bg-gray-50 focus:bg-gray-50 focus:outline-none\"\n                                  >\n                                    <div className=\"flex items-center\">\n                                      <svg className=\"w-4 h-4 text-gray-300 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                                      </svg>\n                                      {suggestion}\n                                    </div>\n                                  </button>\n                                ))}\n                              </div>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  />\n                  {errors.location && (\n                    <p className=\"mt-1 text-sm text-red-600\">{errors.location.message}</p>\n                  )}\n                  \n                  {/* Location tips */}\n                  <p className=\"mt-1 text-xs text-gray-500\">\n                    Be specific about lighting and conditions (e.g., \"South-facing kitchen window\")\n                  </p>\n                </div>\n              </div>\n\n              {/* Care Schedule */}\n              <div>\n                <label htmlFor=\"fertilizerSchedule\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Fertilizer Schedule *\n                </label>\n                <Controller\n                  name=\"fertilizerSchedule\"\n                  control={control}\n                  render={({ field }) => (\n                    <div className=\"space-y-3\">\n                      <select\n                        {...field}\n                        id=\"fertilizerSchedule\"\n                        className={`w-full px-3 py-2 bg-white text-gray-900 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${\n                          errors.fertilizerSchedule ? 'border-red-300' : 'border-gray-300'\n                        }`}\n                      >\n                        <option value=\"weekly\">Weekly (every 7 days) - High maintenance</option>\n                        <option value=\"biweekly\">Every 2 weeks - Regular care</option>\n                        <option value=\"every_2_4_weeks\">Every 2-4 weeks - Variable schedule</option>\n                        <option value=\"every_3_4_weeks\">Every 3-4 weeks - Moderate care</option>\n                        <option value=\"every_4_weeks\">Every 4 weeks - Standard monthly</option>\n                        <option value=\"every_4_6_weeks\">Every 4-6 weeks - Extended care</option>\n                        <option value=\"every_6_8_weeks\">Every 6-8 weeks - Low maintenance</option>\n                        <option value=\"bimonthly\">Bi-monthly (every 60 days) - Very low maintenance</option>\n                        <option value=\"quarterly\">Quarterly (every 90 days) - Minimal care</option>\n                      </select>\n                      \n                      {/* Schedule preview */}\n                      {field.value && watch('lastFertilized') && (\n                        <div className=\"bg-primary-50 border border-primary-200 rounded-lg p-3\">\n                          <div className=\"flex items-center text-sm\">\n                            <svg className=\"w-4 h-4 text-primary-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                            </svg>\n                            <span className=\"text-primary-800\">\n                              {(() => {\n                                const lastFert = new Date(watch('lastFertilized') || '');\n                                const currentSchedule = watch('fertilizerSchedule');\n                                const scheduleMap = {\n                                  weekly: 7,\n                                  biweekly: 14,\n                                  every_2_4_weeks: 21,    // Average of 2-4 weeks\n                                  every_3_4_weeks: 24,    // Average of 3-4 weeks  \n                                  every_4_weeks: 28,      // 4 weeks\n                                  every_4_6_weeks: 35,    // Average of 4-6 weeks\n                                  every_6_8_weeks: 49,    // Average of 6-8 weeks\n                                  bimonthly: 60,\n                                  quarterly: 90\n                                };\n                                const days = scheduleMap[currentSchedule as keyof typeof scheduleMap];\n                                const nextDue = new Date(lastFert);\n                                nextDue.setDate(nextDue.getDate() + days);\n                                return `Next fertilizer due: ${nextDue.toLocaleDateString()}`;\n                              })()}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                />\n                {errors.fertilizerSchedule && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.fertilizerSchedule.message}</p>\n                )}\n                \n                <p className=\"mt-1 text-xs text-gray-500\">\n                  Choose based on your plant's needs and your availability for care\n                </p>\n              </div>\n\n              {/* Care History */}\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Last Fertilized\n                  </label>\n                  <Controller\n                    name=\"lastFertilized\"\n                    control={control}\n                    render={({ field }) => (\n                      <input\n                        {...field}\n                        type=\"date\"\n                        max={new Date().toISOString().split('T')[0]}\n                        className=\"w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                      />\n                    )}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Last Repotted\n                  </label>\n                  <Controller\n                    name=\"lastRepot\"\n                    control={control}\n                    render={({ field }) => (\n                      <input\n                        {...field}\n                        type=\"date\"\n                        max={new Date().toISOString().split('T')[0]}\n                        className=\"w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                      />\n                    )}\n                  />\n                </div>\n              </div>\n\n              {/* Notes & Observations */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Notes & Observations\n                </label>\n                \n                {/* Existing Notes History */}\n                {watch('notes') && watch('notes')?.trim() && (\n                  <div className=\"mb-3 p-3 bg-gray-50 border border-gray-200 rounded-lg\">\n                    <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Previous Notes:</h4>\n                    <div className=\"text-sm text-gray-600 whitespace-pre-wrap max-h-32 overflow-y-auto\">\n                      {watch('notes')}\n                    </div>\n                  </div>\n                )}\n                \n                {/* New Note Input */}\n                <div className=\"space-y-2\">\n                  <textarea\n                    value={newNoteInput}\n                    onChange={(e) => setNewNoteInput(e.target.value)}\n                    rows={3}\n                    placeholder=\"Add a new observation or note...\"\n                    className=\"w-full px-3 py-2 bg-white text-gray-900 placeholder-gray-500 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 resize-none\"\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' && (e.metaKey || e.ctrlKey)) {\n                        e.preventDefault();\n                        const newNote = newNoteInput.trim();\n                        if (newNote) {\n                          const timestamp = new Date().toLocaleDateString();\n                          const existingNotes = watch('notes') || '';\n                          const updatedNotes = existingNotes \n                            ? `${existingNotes}\\n\\n[${timestamp}] ${newNote}`\n                            : `[${timestamp}] ${newNote}`;\n                          setValue('notes', updatedNotes);\n                          setNewNoteInput(''); // Clear the input\n                        }\n                      }\n                    }}\n                  />\n                  <div className=\"flex justify-between items-center\">\n                    <p className=\"text-xs text-gray-500\">\n                      Press Cmd/Ctrl + Enter to add note\n                    </p>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        const newNote = newNoteInput.trim();\n                        if (newNote) {\n                          const timestamp = new Date().toLocaleDateString();\n                          const existingNotes = watch('notes') || '';\n                          const updatedNotes = existingNotes \n                            ? `${existingNotes}\\n\\n[${timestamp}] ${newNote}`\n                            : `[${timestamp}] ${newNote}`;\n                          setValue('notes', updatedNotes);\n                          setNewNoteInput(''); // Clear the input\n                        }\n                      }}\n                      disabled={!newNoteInput.trim()}\n                      className=\"px-3 py-1 text-sm bg-primary-600 text-white rounded hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      Add Note\n                    </button>\n                  </div>\n                </div>\n                \n                {/* Hidden field for form submission */}\n                <Controller\n                  name=\"notes\"\n                  control={control}\n                  render={({ field }) => (\n                    <input type=\"hidden\" {...field} />\n                  )}\n                />\n                \n                {errors.notes && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.notes.message}</p>\n                )}\n              </div>\n\n              {/* Images */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Photos\n                </label>\n                \n                {/* Existing Images */}\n                {existingImages.length > 0 && (\n                  <div className=\"mb-4\">\n                    <h4 className=\"text-sm font-medium text-gray-600 mb-2\">Current Photos</h4>\n                    <div className=\"grid grid-cols-3 sm:grid-cols-4 gap-2\">\n                      {existingImages.map((image, index) => (\n                        <div key={index} className=\"relative group\">\n                          <img\n                            src={image}\n                            alt={`Plant photo ${index + 1}`}\n                            className=\"w-full aspect-square object-cover rounded-lg\"\n                          />\n                          \n                          {/* Delete Button */}\n                          <button\n                            type=\"button\"\n                            onClick={() => handleRemoveExistingImage(index)}\n                            className=\"absolute top-1 right-1 p-1 bg-red-500 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\n                            title=\"Remove image\"\n                            aria-label={`Remove image ${index + 1}`}\n                          >\n                            <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                              <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                            </svg>\n                          </button>\n                          \n                          {/* Primary Badge */}\n                          {index === 0 && (\n                            <div className=\"absolute bottom-1 left-1 bg-primary-500 text-white text-xs px-1 py-0.5 rounded\">\n                              Primary\n                            </div>\n                          )}\n                          \n                          {/* Set as Primary Button (for non-primary images) */}\n                          {index !== 0 && (\n                            <button\n                              type=\"button\"\n                              onClick={() => handleSetPrimaryImage(index)}\n                              className=\"absolute bottom-1 left-1 bg-black bg-opacity-50 text-white text-xs px-1 py-0.5 rounded opacity-0 group-hover:opacity-100 transition-opacity\"\n                              title=\"Set as primary image\"\n                              aria-label={`Set image ${index + 1} as primary`}\n                            >\n                              Set Primary\n                            </button>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* New Image Upload */}\n                <ImageUpload\n                  onImagesChange={handleImageChange}\n                  maxImages={6 - existingImages.length}\n                  acceptedTypes={['image/jpeg', 'image/png', 'image/webp']}\n                  maxSizePerImage={5 * 1024 * 1024} // 5MB\n                />\n              </div>\n\n              {/* Active Status (for editing) */}\n              {isEditing && (\n                <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-3\">Plant Status</h4>\n                  <Controller\n                    name=\"isActive\"\n                    control={control}\n                    render={({ field: { value, onChange } }) => (\n                      <div className=\"space-y-3\">\n                        <label className=\"flex items-start cursor-pointer\">\n                          <input\n                            type=\"checkbox\"\n                            checked={value}\n                            onChange={onChange}\n                            className=\"w-4 h-4 text-primary-600 border-gray-300 rounded focus:ring-primary-500 mt-0.5\"\n                          />\n                          <div className=\"ml-3\">\n                            <span className=\"text-sm font-medium text-gray-700\">\n                              Keep this plant active in my collection\n                            </span>\n                            <p className=\"text-xs text-gray-500 mt-1\">\n                              {value \n                                ? 'This plant will appear in your main collection and care reminders'\n                                : 'This plant will be archived and hidden from your main collection'\n                              }\n                            </p>\n                          </div>\n                        </label>\n                        \n                        {!value && (\n                          <div className=\"bg-amber-50 border border-amber-200 rounded p-3\">\n                            <div className=\"flex items-start\">\n                              <svg className=\"w-4 h-4 text-amber-600 mt-0.5 mr-2 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                              </svg>\n                              <div className=\"text-xs text-amber-800\">\n                                <p className=\"font-medium\">Archiving this plant</p>\n                                <p>Care history will be preserved, but the plant won't appear in your active collection or receive care reminders.</p>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  />\n                </div>\n              )}\n            </div>\n\n            {/* Validation Summary */}\n            {Object.keys(errors).length > 0 && (\n              <div className=\"mx-6 mb-4 bg-red-50 border border-red-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <svg className=\"w-5 h-5 text-red-400 mt-0.5 mr-3 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                  </svg>\n                  <div className=\"flex-1\">\n                    <h4 className=\"text-sm font-medium text-red-800 mb-2\">Please fix the following errors:</h4>\n                    <ul className=\"text-sm text-red-700 space-y-1\">\n                      {Object.entries(errors).map(([field, error]) => (\n                        <li key={field}>\n                          \u2022 {field === 'plantId' ? 'Plant type' : \n                             field === 'fertilizerSchedule' ? 'Fertilizer schedule' :\n                             field.charAt(0).toUpperCase() + field.slice(1)}: {error.message}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Footer */}\n            <div className=\"flex items-center justify-between p-6 border-t border-gray-200 bg-gray-50\">\n              <div className=\"flex items-center text-sm text-gray-500\">\n                {!isValid && Object.keys(errors).length === 0 && (\n                  <span>Fill in required fields to continue</span>\n                )}\n                {isValid && (\n                  <span className=\"text-green-600 flex items-center\">\n                    <svg className=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                    </svg>\n                    Ready to save\n                  </span>\n                )}\n              </div>\n              \n              <div className=\"flex space-x-3\">\n                <button\n                  type=\"button\"\n                  onClick={handleClose}\n                  disabled={mutation.isPending}\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={mutation.isPending || (!selectedPlant && !isEditing)}\n                  className=\"px-4 py-2 text-sm font-medium text-white bg-primary-600 border border-transparent rounded-lg hover:bg-primary-700 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                >\n                  {mutation.isPending ? (\n                    <span className=\"flex items-center\">\n                      <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                      </svg>\n                      {isEditing ? 'Updating...' : 'Adding...'}\n                    </span>\n                  ) : (\n                    isEditing ? 'Update Plant' : 'Add Plant'\n                  )}\n                </button>\n              </div>\n            </div>\n          </form>\n\n          {/* Error Display */}\n          {mutation.isError && (\n            <div className=\"p-4 bg-red-50 border-t border-red-200\">\n              <p className=\"text-sm text-red-600\">\n                {mutation.error instanceof Error ? mutation.error.message : 'An error occurred'}\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],
      names: ["PlantInstanceForm", "plantTaxonomySchema", "z", "object", "family", "string", "min", "max", "genus", "species", "cultivar", "optional", "transform", "val", "trim", "commonName", "plantInstanceFormSchema", "plantId", "number", "nickname", "refine", "length", "location", "fertilizerSchedule", "enum", "message", "lastFertilized", "isNaN", "Date", "parse", "lastRepot", "notes", "images", "array", "isActive", "boolean", "default", "newPlantTaxonomy", "data", "fertilizerDate", "today", "setHours", "path", "repotDate", "plantInstance", "isOpen", "onClose", "onSuccess", "userId", "selectedPlant", "setSelectedPlant", "useState", "imageFiles", "setImageFiles", "existingImages", "setExistingImages", "showLocationSuggestions", "setShowLocationSuggestions", "locationInput", "setLocationInput", "isCreatingPlant", "setIsCreatingPlant", "showTaxonomyForm", "setShowTaxonomyForm", "taxonomyData", "setTaxonomyData", "hasUnsavedChanges", "setHasUnsavedChanges", "newNoteInput", "setNewNoteInput", "queryClient", "useQueryClient", "isEditing", "control", "handleSubmit", "formState", "errors", "isValid", "isDirty", "reset", "setValue", "watch", "trigger", "useForm", "resolver", "zodResolver", "mode", "defaultValues", "undefined", "userLocations", "useQuery", "queryKey", "queryFn", "response", "fetch", "ok", "Error", "json", "staleTime", "handleShowTaxonomyForm", "query", "handleTaxonomySubmit", "createPlantMutation", "mutate", "handleCancelTaxonomyForm", "useMutation", "mutationFn", "plantData", "method", "headers", "body", "JSON", "stringify", "error", "invalidateQueries", "refetchType", "removeQueries", "refetchQueries", "newPlant", "id", "isVerified", "handlePlantSelect", "onError", "console", "mutation", "formData", "FormData", "Object", "entries", "forEach", "key", "value", "Array", "isArray", "image", "index", "append", "String", "file", "url", "log", "type", "additionalQueryKeys", "useEffect", "convertedSchedule", "convertDatabaseScheduleToForm", "toISOString", "split", "plant", "shouldValidate", "handleImageChange", "files", "handleRemoveExistingImage", "newImages", "filter", "_", "i", "handleSetPrimaryImage", "selectedImage", "splice", "unshift", "convertFertilizerSchedule", "schedule", "scheduleMap", "reverseMap", "result", "onSubmit", "submitData", "handleBeforeUnload", "e", "preventDefault", "returnValue", "window", "addEventListener", "removeEventListener", "handleClose", "confirmed", "confirm", "handleEscape", "document", "style", "overflow", "div", "className", "onClick", "h2", "button", "aria-label", "svg", "fill", "stroke", "viewBox", "strokeLinecap", "strokeLinejoin", "strokeWidth", "d", "form", "label", "PlantTaxonomySelector", "onSelect", "disabled", "onAddNew", "circle", "cx", "cy", "r", "isError", "h3", "input", "onChange", "prev", "target", "placeholder", "htmlFor", "Controller", "name", "render", "field", "p", "onFocus", "onBlur", "setTimeout", "toLowerCase", "includes", "slice", "map", "some", "loc", "suggestion", "select", "option", "span", "lastFert", "currentSchedule", "weekly", "biweekly", "every_2_4_weeks", "every_3_4_weeks", "every_4_weeks", "every_4_6_weeks", "every_6_8_weeks", "bimonthly", "quarterly", "days", "nextDue", "setDate", "getDate", "toLocaleDateString", "h4", "textarea", "rows", "onKeyDown", "metaKey", "ctrlKey", "newNote", "timestamp", "existingNotes", "updatedNotes", "img", "src", "alt", "title", "fillRule", "clipRule", "ImageUpload", "onImagesChange", "maxImages", "acceptedTypes", "maxSizePerImage", "checked", "keys", "ul", "li", "charAt", "toUpperCase", "isPending"],
      mappings: "AAAA;;;;;+BAiGA;;;eAAwBA;;;;uBA/FY;4BACkB;+BAClB;qBACR;sBACV;8EACgB;oEACV;;;;;;AAIxB,0BAA0B;AAC1B,MAAMC,sBAAsBC,OAAC,CAACC,MAAM,CAAC;IACnCC,QAAQF,OAAC,CAACG,MAAM,GAAGC,GAAG,CAAC,GAAG,sBAAsBC,GAAG,CAAC,KAAK;IACzDC,OAAON,OAAC,CAACG,MAAM,GAAGC,GAAG,CAAC,GAAG,qBAAqBC,GAAG,CAAC,KAAK;IACvDE,SAASP,OAAC,CAACG,MAAM,GAAGC,GAAG,CAAC,GAAG,uBAAuBC,GAAG,CAAC,KAAK;IAC3DG,UAAUR,OAAC,CAACG,MAAM,GAAGE,GAAG,CAAC,KAAK,6CAA6CI,QAAQ,GAAGC,SAAS,CAACC,CAAAA,MAAOA,KAAKC,UAAU;IACtHC,YAAYb,OAAC,CAACG,MAAM,GAAGC,GAAG,CAAC,GAAG,2BAA2BC,GAAG,CAAC,KAAK;AACpE;AAEA,MAAMS,0BAA0Bd,OAAC,CAACC,MAAM,CAAC;IACvCc,SAASf,OAAC,CAACgB,MAAM,GAAGZ,GAAG,CAAC,GAAG;IAC3Ba,UAAUjB,OAAC,CAACG,MAAM,GACfC,GAAG,CAAC,GAAG,wBACPC,GAAG,CAAC,KAAK,6CACTO,IAAI,GACJM,MAAM,CAACP,CAAAA,MAAOA,IAAIQ,MAAM,GAAG,GAAG;IACjCC,UAAUpB,OAAC,CAACG,MAAM,GACfC,GAAG,CAAC,GAAG,wBACPC,GAAG,CAAC,KAAK,6CACTO,IAAI,GACJM,MAAM,CAACP,CAAAA,MAAOA,IAAIQ,MAAM,GAAG,GAAG;IACjCE,oBAAoBrB,OAAC,CAACsB,IAAI,CAAC;QACzB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD,EAAE;QACDC,SAAS;IACX;IACAC,gBAAgBxB,OAAC,CAACG,MAAM,GACrBM,QAAQ,GACRS,MAAM,CAACP,CAAAA,MAAO,CAACA,OAAO,CAACc,MAAMC,KAAKC,KAAK,CAAChB,OAAO;IAClDiB,WAAW5B,OAAC,CAACG,MAAM,GAChBM,QAAQ,GACRS,MAAM,CAACP,CAAAA,MAAO,CAACA,OAAO,CAACc,MAAMC,KAAKC,KAAK,CAAChB,OAAO;IAClDkB,OAAO7B,OAAC,CAACG,MAAM,GACZE,GAAG,CAAC,MAAM,2CACVI,QAAQ,GACRC,SAAS,CAACC,CAAAA,MAAOA,KAAKC,UAAU;IACnCkB,QAAQ9B,OAAC,CAAC+B,KAAK,CAAC/B,OAAC,CAACG,MAAM,IAAIE,GAAG,CAAC,IAAI,6BAA6BI,QAAQ;IACzEuB,UAAUhC,OAAC,CAACiC,OAAO,GAAGC,OAAO,CAAC,MAAMzB,QAAQ;IAC5C,0DAA0D;IAC1D0B,kBAAkBpC,oBAAoBU,QAAQ;AAChD,GAAGS,MAAM,CAACkB,CAAAA;IACR,4DAA4D;IAC5D,IAAIA,KAAKZ,cAAc,EAAE;QACvB,MAAMa,iBAAiB,IAAIX,KAAKU,KAAKZ,cAAc;QACnD,MAAMc,QAAQ,IAAIZ;QAClBY,MAAMC,QAAQ,CAAC,IAAI,IAAI,IAAI,MAAM,eAAe;QAChD,OAAOF,kBAAkBC;IAC3B;IACA,OAAO;AACT,GAAG;IACDf,SAAS;IACTiB,MAAM;QAAC;KAAiB;AAC1B,GAAGtB,MAAM,CAACkB,CAAAA;IACR,uDAAuD;IACvD,IAAIA,KAAKR,SAAS,EAAE;QAClB,MAAMa,YAAY,IAAIf,KAAKU,KAAKR,SAAS;QACzC,MAAMU,QAAQ,IAAIZ;QAClBY,MAAMC,QAAQ,CAAC,IAAI,IAAI,IAAI,MAAM,eAAe;QAChD,OAAOE,aAAaH;IACtB;IACA,OAAO;AACT,GAAG;IACDf,SAAS;IACTiB,MAAM;QAAC;KAAY;AACrB;AAae,SAAS1C,kBAAkB,EACxC4C,aAAa,EACbC,MAAM,EACNC,OAAO,EACPC,SAAS,EACTC,MAAM,EACiB;IACvB,MAAM,CAACC,eAAeC,iBAAiB,GAAGC,IAAAA,eAAQ,EAAyB;IAC3E,MAAM,CAACC,YAAYC,cAAc,GAAGF,IAAAA,eAAQ,EAAS,EAAE;IACvD,MAAM,CAACG,gBAAgBC,kBAAkB,GAAGJ,IAAAA,eAAQ,EAAW,EAAE;IACjE,MAAM,CAACK,yBAAyBC,2BAA2B,GAAGN,IAAAA,eAAQ,EAAC;IACvE,MAAM,CAACO,eAAeC,iBAAiB,GAAGR,IAAAA,eAAQ,EAAC;IACnD,MAAM,CAACS,iBAAiBC,mBAAmB,GAAGV,IAAAA,eAAQ,EAAC;IACvD,MAAM,CAACW,kBAAkBC,oBAAoB,GAAGZ,IAAAA,eAAQ,EAAC;IACzD,MAAM,CAACa,cAAcC,gBAAgB,GAAGd,IAAAA,eAAQ,EAAwB;QACtE/C,QAAQ;QACRI,OAAO;QACPC,SAAS;QACTC,UAAU;QACVK,YAAY;IACd;IACA,MAAM,CAACmD,mBAAmBC,qBAAqB,GAAGhB,IAAAA,eAAQ,EAAC;IAC3D,MAAM,CAACiB,cAAcC,gBAAgB,GAAGlB,IAAAA,eAAQ,EAAC;IACjD,MAAMmB,cAAcC,IAAAA,0BAAc;IAClC,MAAMC,YAAY,CAAC,CAAC5B;IAEpB,aAAa;IACb,MAAM,EACJ6B,OAAO,EACPC,YAAY,EACZC,WAAW,EAAEC,MAAM,EAAEC,OAAO,EAAEC,OAAO,EAAE,EACvCC,KAAK,EACLC,QAAQ,EACRC,KAAK,EACLC,OAAO,EACR,GAAGC,IAAAA,sBAAO,EAAC;QACVC,UAAUC,IAAAA,gBAAW,EAACrE;QACtBsE,MAAM;QACNC,eAAe;YACbtE,SAAS;YACTE,UAAU;YACVG,UAAU;YACVC,oBAAoB;YACpBG,gBAAgB;YAChBI,WAAW;YACXC,OAAO;YACPC,QAAQ,EAAE;YACVE,UAAU;YACVG,kBAAkBmD;QACpB;IACF;IAEA,wCAAwC;IACxC,MAAM,EAAElD,MAAMmD,aAAa,EAAE,GAAGC,IAAAA,oBAAQ,EAAC;QACvCC,UAAU;YAAC;YAAkB3C;SAAO;QACpC4C,SAAS;YACP,MAAMC,WAAW,MAAMC,MAAM,CAAC,sCAAsC,EAAE9C,QAAQ;YAC9E,IAAI,CAAC6C,SAASE,EAAE,EAAE,MAAM,IAAIC,MAAM;YAClC,OAAOH,SAASI,IAAI;QACtB;QACAC,WAAW,OAAO,KAAK;IACzB;IAEA,sDAAsD;IACtD,MAAMC,yBAAyB,CAACC;QAC9BrC,oBAAoB;QACpBE,gBAAgB;YACd7D,QAAQ;YACRI,OAAO;YACPC,SAAS;YACTC,UAAU;YACVK,YAAYqF,SAAS;QACvB;IACF;IAEA,kCAAkC;IAClC,MAAMC,uBAAuB,CAAC/D;QAC5BuB,mBAAmB;QACnByC,oBAAoBC,MAAM,CAAC;YACzB,GAAGjE,IAAI;YACP5B,UAAU4B,KAAK5B,QAAQ,IAAI;QAC7B;IACF;IAEA,iCAAiC;IACjC,MAAM8F,2BAA2B;QAC/BzC,oBAAoB;QACpBE,gBAAgB;YACd7D,QAAQ;YACRI,OAAO;YACPC,SAAS;YACTC,UAAU;YACVK,YAAY;QACd;IACF;IAEA,4BAA4B;IAC5B,MAAMuF,sBAAsBG,IAAAA,uBAAW,EAAC;QACtCC,YAAY,OAAOC;YACjB,MAAMd,WAAW,MAAMC,MAAM,eAAe;gBAC1Cc,QAAQ;gBACRC,SAAS;oBACP,gBAAgB;gBAClB;gBACAC,MAAMC,KAAKC,SAAS,CAACL;YACvB;YAEA,IAAI,CAACd,SAASE,EAAE,EAAE;gBAChB,MAAMkB,QAAQ,MAAMpB,SAASI,IAAI;gBACjC,MAAM,IAAID,MAAMiB,MAAMxF,OAAO,IAAI;YACnC;YAEA,OAAOoE,SAASI,IAAI;QACtB;QACAlD,WAAW,OAAOT;YAChB,MAAMgC,YAAY4C,iBAAiB,CAAC;gBAClCvB,UAAU;oBAAC;iBAAS;gBACpBwB,aAAa;YACf;YACA7C,YAAY8C,aAAa,CAAC;gBAAEzB,UAAU;oBAAC;iBAAS;YAAC;YACjD,MAAMrB,YAAY+C,cAAc,CAAC;gBAAE1B,UAAU;oBAAC;iBAAS;YAAC;YAExD,0CAA0C;YAC1C,MAAM2B,WAA4B;gBAChCC,IAAIjF,KAAKA,IAAI,CAACiF,EAAE;gBAChBnH,QAAQkC,KAAKA,IAAI,CAAClC,MAAM;gBACxBI,OAAO8B,KAAKA,IAAI,CAAC9B,KAAK;gBACtBC,SAAS6B,KAAKA,IAAI,CAAC7B,OAAO;gBAC1BC,UAAU4B,KAAKA,IAAI,CAAC5B,QAAQ;gBAC5BK,YAAYuB,KAAKA,IAAI,CAACvB,UAAU;gBAChCyG,YAAYlF,KAAKA,IAAI,CAACkF,UAAU;YAClC;YAEAC,kBAAkBH;YAClBzD,mBAAmB;YACnBE,oBAAoB;QACtB;QACA2D,SAAS,CAACT;YACRU,QAAQV,KAAK,CAAC,2BAA2BA;YACzCpD,mBAAmB;YACnBE,oBAAoB;QACtB;IACF;IAEA,yBAAyB;IACzB,MAAM6D,WAAWnB,IAAAA,uBAAW,EAAC;QAC3BC,YAAY,OAAOpE;YACjB,MAAMuF,WAAW,IAAIC;YAErB,kBAAkB;YAClBC,OAAOC,OAAO,CAAC1F,MAAM2F,OAAO,CAAC,CAAC,CAACC,KAAKC,MAAM;gBACxC,IAAIA,UAAU3C,aAAa2C,UAAU,IAAI;oBACvC,IAAID,QAAQ,YAAYE,MAAMC,OAAO,CAACF,QAAQ;wBAC5C,yBAAyB;wBACzBA,MAAMF,OAAO,CAAC,CAACK,OAAOC;4BACpBV,SAASW,MAAM,CAAC,CAAC,eAAe,EAAED,MAAM,CAAC,CAAC,EAAED;wBAC9C;oBACF,OAAO;wBACLT,SAASW,MAAM,CAACN,KAAKO,OAAON;oBAC9B;gBACF;YACF;YAEA,sBAAsB;YACtB/E,WAAW6E,OAAO,CAAC,CAACS,MAAMH;gBACxBV,SAASW,MAAM,CAAC,CAAC,WAAW,EAAED,MAAM,CAAC,CAAC,EAAEG;YAC1C;YAEA,MAAMC,MAAMnE,YACR,CAAC,qBAAqB,EAAE5B,cAAc2E,EAAE,EAAE,GAC1C;YAEJ,MAAMX,SAASpC,YAAY,QAAQ;YAEnC,MAAMqB,WAAW,MAAMC,MAAM6C,KAAK;gBAChC/B;gBACAE,MAAMe;YACR;YAEA,IAAI,CAAChC,SAASE,EAAE,EAAE;gBAChB,MAAMkB,QAAQ,MAAMpB,SAASI,IAAI;gBACjC0B,QAAQV,KAAK,CAAC,uBAAuBA;gBACrC,MAAM,IAAIjB,MAAMiB,MAAMxF,OAAO,IAAI;YACnC;YAEA,OAAOoE,SAASI,IAAI;QACtB;QACAlD,WAAW,OAAOT;YAChB,0DAA0D;YAC1DqF,QAAQiB,GAAG,CAAC;YAEZ,+DAA+D;YAC/D,MAAMtE,YAAY4C,iBAAiB,CAAC;gBAClCvB,UAAU;oBAAC;iBAAkB;gBAC7BwB,aAAa;YACf;YAEA,sCAAsC;YACtC,MAAM7C,YAAY+C,cAAc,CAAC;gBAC/B1B,UAAU;oBAAC;oBAAmB3C;iBAAO;gBACrC6F,MAAM;YACR;YAEA,6CAA6C;YAC7C,MAAMC,sBAAsB;gBAC1B;oBAAC;iBAAe;gBAChB;oBAAC;oBAAkB9F;iBAAO;gBAC1B;oBAAC;iBAAS;aACX;YAED,KAAK,MAAM2C,YAAYmD,oBAAqB;gBAC1C,MAAMxE,YAAY4C,iBAAiB,CAAC;oBAClCvB;oBACAwB,aAAa;gBACf;YACF;YAEAQ,QAAQiB,GAAG,CAAC;YAEZ,mBAAmB;YACnB7D;YACA1B,cAAc,EAAE;YAChBE,kBAAkB,EAAE;YACpBL,iBAAiB;YACjBa,oBAAoB;YACpBI,qBAAqB;YAErB,IAAIpB,WAAW;gBACbA,UAAUT;YACZ,OAAO;gBACL,sDAAsD;gBACtDQ;YACF;QACF;IACF;IAEA,+BAA+B;IAC/BiG,IAAAA,gBAAS,EAAC;QACR,IAAIvE,aAAa5B,eAAe;YAC9B,MAAMoG,oBAAoBC,8BAA8BrG,cAAcrB,kBAAkB;YACxFoG,QAAQiB,GAAG,CAAC,0CAA0CI;YACtDjE,MAAM;gBACJ9D,SAAS2B,cAAc3B,OAAO;gBAC9BE,UAAUyB,cAAczB,QAAQ;gBAChCG,UAAUsB,cAActB,QAAQ;gBAChCC,oBAAoByH;gBACpBtH,gBAAgBkB,cAAclB,cAAc,GACxC,IAAIE,KAAKgB,cAAclB,cAAc,EAAEwH,WAAW,GAAGC,KAAK,CAAC,IAAI,CAAC,EAAE,GAClE;gBACJrH,WAAWc,cAAcd,SAAS,GAC9B,IAAIF,KAAKgB,cAAcd,SAAS,EAAEoH,WAAW,GAAGC,KAAK,CAAC,IAAI,CAAC,EAAE,GAC7D;gBACJpH,OAAOa,cAAcb,KAAK,IAAI;gBAC9BC,QAAQY,cAAcZ,MAAM,IAAI,EAAE;gBAClCE,UAAUU,cAAcV,QAAQ;YAClC;YAEAgB,iBAAiB;gBACfqE,IAAI3E,cAAcwG,KAAK,CAAC7B,EAAE;gBAC1BnH,QAAQwC,cAAcwG,KAAK,CAAChJ,MAAM;gBAClCI,OAAOoC,cAAcwG,KAAK,CAAC5I,KAAK;gBAChCC,SAASmC,cAAcwG,KAAK,CAAC3I,OAAO;gBACpCM,YAAY6B,cAAcwG,KAAK,CAACrI,UAAU;gBAC1CyG,YAAY5E,cAAcwG,KAAK,CAAC5B,UAAU;YAC5C;YAEAjE,kBAAkBX,cAAcZ,MAAM,IAAI,EAAE;QAC9C,OAAO;YACL+C;YACA7B,iBAAiB;YACjBG,cAAc,EAAE;YAChBE,kBAAkB,EAAE;YACpBQ,oBAAoB;YACpBE,gBAAgB;gBACd7D,QAAQ;gBACRI,OAAO;gBACPC,SAAS;gBACTC,UAAU;gBACVK,YAAY;YACd;QACF;IACF,GAAG;QAACyD;QAAW5B;QAAemC;KAAM;IAEpC,yBAAyB;IACzB,MAAM0C,oBAAoB,CAAC2B;QACzB,IAAIA,OAAO;YACTlG,iBAAiBkG;YACjBpE,SAAS,WAAWoE,MAAM7B,EAAE,EAAE;gBAAE8B,gBAAgB;YAAK;QACvD,OAAO;YACLnG,iBAAiB;YACjB8B,SAAS,WAAW,GAAG;gBAAEqE,gBAAgB;YAAK;QAChD;IACF;IAEA,uBAAuB;IACvB,MAAMC,oBAAoB,CAACC;QACzBlG,cAAckG;QACd,kEAAkE;QAClE,kDAAkD;QAClDrE;IACF;IAEA,gCAAgC;IAChC,MAAMsE,4BAA4B,CAACjB;QACjC,MAAMkB,YAAYnG,eAAeoG,MAAM,CAAC,CAACC,GAAGC,IAAMA,MAAMrB;QACxDhF,kBAAkBkG;QAClB,kEAAkE;QAClEvE;IACF;IAEA,uDAAuD;IACvD,MAAM2E,wBAAwB,CAACtB;QAC7B,IAAIA,UAAU,GAAG,QAAQ,kBAAkB;QAE3C,MAAMkB,YAAY;eAAInG;SAAe;QACrC,MAAMwG,gBAAgBL,SAAS,CAAClB,MAAM;QAEtC,wDAAwD;QACxDkB,UAAUM,MAAM,CAACxB,OAAO;QACxBkB,UAAUO,OAAO,CAACF;QAElBvG,kBAAkBkG;QAClBvE;IACF;IAEA,sDAAsD;IACtD,MAAM+E,4BAA4B,CAACC;QACjC,MAAMC,cAAc;YAClB,UAAU;YACV,YAAY;YACZ,mBAAmB;YACnB,mBAAmB;YACnB,iBAAiB;YACjB,mBAAmB;YACnB,mBAAmB;YACnB,aAAa;YACb,aAAa;QACf;QACA,OAAOA,WAAW,CAACD,SAAqC,IAAIA;IAC9D;IAEA,yDAAyD;IACzD,MAAMjB,gCAAgC,CAACiB;QACrCvC,QAAQiB,GAAG,CAAC,iCAAiCsB;QAC7C,IAAI,CAACA,UAAU,OAAO;QAEtB,MAAME,aAAa;YACjB,2CAA2C;YAC3C,UAAU;YACV,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,YAAY;YACZ,YAAY;YACZ,8CAA8C;YAC9C,UAAU;YACV,iBAAiB;YACjB,mBAAmB;YACnB,mBAAmB;YACnB,iBAAiB;YACjB,mBAAmB;YACnB,mBAAmB;YACnB,WAAW;YACX,WAAW;YACX,aAAa;YACb,aAAa;QACf;QAEA,MAAMC,SAASD,UAAU,CAACF,SAAoC,IAAI;QAClEvC,QAAQiB,GAAG,CAAC,iBAAiByB;QAC7B,OAAOA;IACT;IAEA,yBAAyB;IACzB,MAAMC,WAAW,CAAChI;QAChB,MAAMiI,aAAa;YACjB,GAAGjI,IAAI;YACPf,oBAAoB0I,0BAA0B3H,KAAKf,kBAAkB;YACrES,QAAQsB;QACV;QACAqE,QAAQiB,GAAG,CAAC,yBAAyB2B;QACrC5C,QAAQiB,GAAG,CAAC,oCAAoCtF;QAChDqE,QAAQiB,GAAG,CAAC,iCAAiCtG,KAAKf,kBAAkB;QACpEoG,QAAQiB,GAAG,CAAC,kCAAkCqB,0BAA0B3H,KAAKf,kBAAkB;QAC/FqG,SAASrB,MAAM,CAACgE;IAClB;IAEA,wBAAwB;IACxBxB,IAAAA,gBAAS,EAAC;QACR5E,qBAAqBW,WAAW1B,WAAW/B,MAAM,GAAG,KAAKyC;IAC3D,GAAG;QAACgB;QAAS1B,WAAW/B,MAAM;QAAEyC;KAAiB;IAEjD,gDAAgD;IAChDiF,IAAAA,gBAAS,EAAC;QACR,MAAMyB,qBAAqB,CAACC;YAC1B,IAAIvG,mBAAmB;gBACrBuG,EAAEC,cAAc;gBAChBD,EAAEE,WAAW,GAAG;gBAChB,OAAO;YACT;QACF;QAEA,IAAI9H,UAAUqB,mBAAmB;YAC/B0G,OAAOC,gBAAgB,CAAC,gBAAgBL;QAC1C;QAEA,OAAO;YACLI,OAAOE,mBAAmB,CAAC,gBAAgBN;QAC7C;IACF,GAAG;QAAC3H;QAAQqB;KAAkB;IAE9B,4CAA4C;IAC5C,MAAM6G,cAAc;QAClB,IAAI7G,mBAAmB;YACrB,MAAM8G,YAAYJ,OAAOK,OAAO,CAAC;YACjC,IAAI,CAACD,WAAW;QAClB;QACAlI;IACF;IAEA,wBAAwB;IACxBiG,IAAAA,gBAAS,EAAC;QACR,MAAMmC,eAAe,CAACT;YACpB,IAAIA,EAAEvC,GAAG,KAAK,UAAU;gBACtB6C;YACF;QACF;QAEA,IAAIlI,QAAQ;YACVsI,SAASN,gBAAgB,CAAC,WAAWK;YACrCC,SAASrE,IAAI,CAACsE,KAAK,CAACC,QAAQ,GAAG;QACjC;QAEA,OAAO;YACLF,SAASL,mBAAmB,CAAC,WAAWI;YACxCC,SAASrE,IAAI,CAACsE,KAAK,CAACC,QAAQ,GAAG;QACjC;IACF,GAAG;QAACxI;QAAQkI;KAAY;IAExB,IAAI,CAAClI,QAAQ,OAAO;IAEpB,qBACE,sBAACyI;QAAIC,WAAU;;0BAEb,qBAACD;gBACCC,WAAU;gBACVC,SAAST;;0BAIX,qBAACO;gBAAIC,WAAU;0BACb,cAAA,sBAACD;oBAAIC,WAAU;;sCAEb,sBAACD;4BAAIC,WAAU;;8CACb,qBAACE;oCAAGF,WAAU;8CACX/G,YAAY,eAAe;;8CAE9B,qBAACkH;oCACCF,SAAST;oCACTQ,WAAU;oCACVI,cAAW;8CAEX,cAAA,qBAACC;wCAAIL,WAAU;wCAAUM,MAAK;wCAAOC,QAAO;wCAAeC,SAAQ;kDACjE,cAAA,qBAACrJ;4CAAKsJ,eAAc;4CAAQC,gBAAe;4CAAQC,aAAa;4CAAGC,GAAE;;;;;;sCAM3E,sBAACC;4BAAK9B,UAAU5F,aAAa4F;4BAAWiB,WAAU;;8CAChD,sBAACD;oCAAIC,WAAU;;sDAEb,sBAACD;;8DACC,qBAACe;oDAAMd,WAAU;8DAA+C;;8DAGhE,qBAACe,8BAAqB;oDACpBrJ,eAAeA;oDACfsJ,UAAU9E;oDACV+E,UAAU5I,mBAAmBE;oDAC7B2I,UAAUtG;;gDAEXvC,iCACC,sBAAC0H;oDAAIC,WAAU;;sEACb,sBAACK;4DAAIL,WAAU;4DAAkCM,MAAK;4DAAOE,SAAQ;;8EACnE,qBAACW;oEAAOnB,WAAU;oEAAaoB,IAAG;oEAAKC,IAAG;oEAAKC,GAAE;oEAAKf,QAAO;oEAAeI,aAAY;;8EACxF,qBAACxJ;oEAAK6I,WAAU;oEAAaM,MAAK;oEAAeM,GAAE;;;;wDAC/C;;;gDAIT7F,oBAAoBwG,OAAO,kBAC1B,sBAACxB;oDAAIC,WAAU;;wDAA4B;wDAChBjF,oBAAoBW,KAAK,YAAYjB,QAAQM,oBAAoBW,KAAK,CAACxF,OAAO,GAAG;;;gDAG7GmD,OAAO3D,OAAO,kBACb,qBAACqK;oDAAIC,WAAU;8DAA6B3G,OAAO3D,OAAO,CAACQ,OAAO;;gDAInEqC,kCACC,sBAACwH;oDAAIC,WAAU;;sEACb,sBAACD;4DAAIC,WAAU;;8EACb,qBAACwB;oEAAGxB,WAAU;8EAAsC;;8EACpD,qBAACG;oEACC7C,MAAK;oEACL2C,SAAShF;oEACT+E,WAAU;8EAEV,cAAA,qBAACK;wEAAIL,WAAU;wEAAUM,MAAK;wEAAOC,QAAO;wEAAeC,SAAQ;kFACjE,cAAA,qBAACrJ;4EAAKsJ,eAAc;4EAAQC,gBAAe;4EAAQC,aAAa;4EAAGC,GAAE;;;;;;sEAK3E,sBAACb;4DAAIC,WAAU;;8EAEb,sBAACD;;sFACC,qBAACe;4EAAMd,WAAU;sFAA+C;;sFAGhE,qBAACyB;4EACCnE,MAAK;4EACLV,OAAOnE,aAAajD,UAAU;4EAC9BkM,UAAU,CAACxC,IAAMxG,gBAAgBiJ,CAAAA,OAAS,CAAA;wFAAE,GAAGA,IAAI;wFAAEnM,YAAY0J,EAAE0C,MAAM,CAAChF,KAAK;oFAAC,CAAA;4EAChFiF,aAAY;4EACZ7B,WAAU;;;;8EAId,sBAACD;oEAAIC,WAAU;;sFAEb,sBAACD;;8FACC,qBAACe;oFAAMd,WAAU;8FAA+C;;8FAGhE,qBAACyB;oFACCnE,MAAK;oFACLV,OAAOnE,aAAa5D,MAAM;oFAC1B6M,UAAU,CAACxC,IAAMxG,gBAAgBiJ,CAAAA,OAAS,CAAA;gGAAE,GAAGA,IAAI;gGAAE9M,QAAQqK,EAAE0C,MAAM,CAAChF,KAAK;4FAAC,CAAA;oFAC5EiF,aAAY;oFACZ7B,WAAU;;;;sFAKd,sBAACD;;8FACC,qBAACe;oFAAMd,WAAU;8FAA+C;;8FAGhE,qBAACyB;oFACCnE,MAAK;oFACLV,OAAOnE,aAAaxD,KAAK;oFACzByM,UAAU,CAACxC,IAAMxG,gBAAgBiJ,CAAAA,OAAS,CAAA;gGAAE,GAAGA,IAAI;gGAAE1M,OAAOiK,EAAE0C,MAAM,CAAChF,KAAK;4FAAC,CAAA;oFAC3EiF,aAAY;oFACZ7B,WAAU;;;;;;8EAKhB,sBAACD;oEAAIC,WAAU;;sFAEb,sBAACD;;8FACC,qBAACe;oFAAMd,WAAU;8FAA+C;;8FAGhE,qBAACyB;oFACCnE,MAAK;oFACLV,OAAOnE,aAAavD,OAAO;oFAC3BwM,UAAU,CAACxC,IAAMxG,gBAAgBiJ,CAAAA,OAAS,CAAA;gGAAE,GAAGA,IAAI;gGAAEzM,SAASgK,EAAE0C,MAAM,CAAChF,KAAK;4FAAC,CAAA;oFAC7EiF,aAAY;oFACZ7B,WAAU;;;;sFAKd,sBAACD;;8FACC,qBAACe;oFAAMd,WAAU;8FAA+C;;8FAGhE,qBAACyB;oFACCnE,MAAK;oFACLV,OAAOnE,aAAatD,QAAQ;oFAC5BuM,UAAU,CAACxC,IAAMxG,gBAAgBiJ,CAAAA,OAAS,CAAA;gGAAE,GAAGA,IAAI;gGAAExM,UAAU+J,EAAE0C,MAAM,CAAChF,KAAK;4FAAC,CAAA;oFAC9EiF,aAAY;oFACZ7B,WAAU;;;;;;8EAKhB,sBAACD;oEAAIC,WAAU;;sFACb,qBAACG;4EACC7C,MAAK;4EACL2C,SAAShF;4EACT+E,WAAU;sFACX;;sFAGD,qBAACG;4EACC7C,MAAK;4EACL2C,SAAS;gFACP,MAAM3G,UAAUb,aAAa5D,MAAM,IAAI4D,aAAaxD,KAAK,IAAIwD,aAAavD,OAAO,IAAIuD,aAAajD,UAAU;gFAC5G,IAAI8D,SAAS;oFACXwB,qBAAqBrC;gFACvB;4EACF;4EACAwI,UAAU,CAACxI,aAAa5D,MAAM,IAAI,CAAC4D,aAAaxD,KAAK,IAAI,CAACwD,aAAavD,OAAO,IAAI,CAACuD,aAAajD,UAAU;4EAC1GwK,WAAU;sFACX;;;;;;;;;;sDAUX,sBAACD;4CAAIC,WAAU;;8DACb,sBAACD;;sEACC,qBAACe;4DAAMgB,SAAQ;4DAAW9B,WAAU;sEAA+C;;sEAGnF,qBAAC+B,yBAAU;4DACTC,MAAK;4DACL9I,SAASA;4DACT+I,QAAQ,CAAC,EAAEC,KAAK,EAAE,iBAChB,qBAACT;oEACE,GAAGS,KAAK;oEACTlG,IAAG;oEACHsB,MAAK;oEACLuE,aAAY;oEACZ7B,WAAW,CAAC,4IAA4I,EACtJ3G,OAAOzD,QAAQ,GAAG,mBAAmB,mBACrC;;;wDAIPyD,OAAOzD,QAAQ,kBACd,qBAACuM;4DAAEnC,WAAU;sEAA6B3G,OAAOzD,QAAQ,CAACM,OAAO;;;;8DAIrE,sBAAC6J;;sEACC,qBAACe;4DAAMgB,SAAQ;4DAAW9B,WAAU;sEAA+C;;sEAGnF,qBAAC+B,yBAAU;4DACTC,MAAK;4DACL9I,SAASA;4DACT+I,QAAQ,CAAC,EAAEC,KAAK,EAAE,iBAChB,sBAACnC;oEAAIC,WAAU;;sFACb,qBAACyB;4EACE,GAAGS,KAAK;4EACTlG,IAAG;4EACHsB,MAAK;4EACLuE,aAAY;4EACZ7B,WAAW,CAAC,4IAA4I,EACtJ3G,OAAOtD,QAAQ,GAAG,mBAAmB,mBACrC;4EACF2L,UAAU,CAACxC;gFACTgD,MAAMR,QAAQ,CAACxC;gFACf9G,iBAAiB8G,EAAE0C,MAAM,CAAChF,KAAK;gFAC/B1E,2BAA2BgH,EAAE0C,MAAM,CAAChF,KAAK,CAAC9G,MAAM,GAAG;4EACrD;4EACAsM,SAAS,IAAMlK,2BAA2BgK,MAAMtF,KAAK,CAAC9G,MAAM,GAAG;4EAC/DuM,QAAQ,IAAMC,WAAW,IAAMpK,2BAA2B,QAAQ;;wEAInED,2BAA2BiC,iBAAiBA,cAAcpE,MAAM,GAAG,mBAClE,sBAACiK;4EAAIC,WAAU;;gFACZ9F,cACEiE,MAAM,CAACpI,CAAAA,WACNA,SAASwM,WAAW,GAAGC,QAAQ,CAACN,MAAMtF,KAAK,CAAC2F,WAAW,KAExDE,KAAK,CAAC,GAAG,GACTC,GAAG,CAAC,CAAC3M,yBACJ,qBAACoK;wFAEC7C,MAAK;wFACL2C,SAAS;4FACPiC,MAAMR,QAAQ,CAAC3L;4FACfqC,iBAAiBrC;4FACjBmC,2BAA2B;wFAC7B;wFACA8H,WAAU;kGAEV,cAAA,sBAACD;4FAAIC,WAAU;;8GACb,sBAACK;oGAAIL,WAAU;oGAA6BM,MAAK;oGAAOC,QAAO;oGAAeC,SAAQ;;sHACpF,qBAACrJ;4GAAKsJ,eAAc;4GAAQC,gBAAe;4GAAQC,aAAa;4GAAGC,GAAE;;sHACrE,qBAACzJ;4GAAKsJ,eAAc;4GAAQC,gBAAe;4GAAQC,aAAa;4GAAGC,GAAE;;;;gGAEtE7K;;;uFAdEA;gFAoBVmM,MAAMtF,KAAK,CAAC9G,MAAM,GAAG,KAAK,CAACoE,cAAcyI,IAAI,CAACC,CAAAA,MAC7CA,IAAIL,WAAW,GAAGC,QAAQ,CAACN,MAAMtF,KAAK,CAAC2F,WAAW,sBAElD,sBAACxC;oFAAIC,WAAU;;sGACb,qBAACD;4FAAIC,WAAU;sGAA8C;;wFAC5D;4FACC;4FACA;4FACA;4FACA;4FACA;4FACA;4FACA;4FACA;yFACD,CAAC7B,MAAM,CAAC0E,CAAAA,aACPA,WAAWN,WAAW,GAAGC,QAAQ,CAACN,MAAMtF,KAAK,CAAC2F,WAAW,KACzDE,KAAK,CAAC,GAAG,GAAGC,GAAG,CAAC,CAACG,2BACjB,qBAAC1C;gGAEC7C,MAAK;gGACL2C,SAAS;oGACPiC,MAAMR,QAAQ,CAACmB;oGACfzK,iBAAiByK;oGACjB3K,2BAA2B;gGAC7B;gGACA8H,WAAU;0GAEV,cAAA,sBAACD;oGAAIC,WAAU;;sHACb,qBAACK;4GAAIL,WAAU;4GAA6BM,MAAK;4GAAOC,QAAO;4GAAeC,SAAQ;sHACpF,cAAA,qBAACrJ;gHAAKsJ,eAAc;gHAAQC,gBAAe;gHAAQC,aAAa;gHAAGC,GAAE;;;wGAEtEiC;;;+FAbEA;;;;;;;;wDAwBtBxJ,OAAOtD,QAAQ,kBACd,qBAACoM;4DAAEnC,WAAU;sEAA6B3G,OAAOtD,QAAQ,CAACG,OAAO;;sEAInE,qBAACiM;4DAAEnC,WAAU;sEAA6B;;;;;;sDAO9C,sBAACD;;8DACC,qBAACe;oDAAMgB,SAAQ;oDAAqB9B,WAAU;8DAA+C;;8DAG7F,qBAAC+B,yBAAU;oDACTC,MAAK;oDACL9I,SAASA;oDACT+I,QAAQ,CAAC,EAAEC,KAAK,EAAE,iBAChB,sBAACnC;4DAAIC,WAAU;;8EACb,sBAAC8C;oEACE,GAAGZ,KAAK;oEACTlG,IAAG;oEACHgE,WAAW,CAAC,uHAAuH,EACjI3G,OAAOrD,kBAAkB,GAAG,mBAAmB,mBAC/C;;sFAEF,qBAAC+M;4EAAOnG,OAAM;sFAAS;;sFACvB,qBAACmG;4EAAOnG,OAAM;sFAAW;;sFACzB,qBAACmG;4EAAOnG,OAAM;sFAAkB;;sFAChC,qBAACmG;4EAAOnG,OAAM;sFAAkB;;sFAChC,qBAACmG;4EAAOnG,OAAM;sFAAgB;;sFAC9B,qBAACmG;4EAAOnG,OAAM;sFAAkB;;sFAChC,qBAACmG;4EAAOnG,OAAM;sFAAkB;;sFAChC,qBAACmG;4EAAOnG,OAAM;sFAAY;;sFAC1B,qBAACmG;4EAAOnG,OAAM;sFAAY;;;;gEAI3BsF,MAAMtF,KAAK,IAAIlD,MAAM,mCACpB,qBAACqG;oEAAIC,WAAU;8EACb,cAAA,sBAACD;wEAAIC,WAAU;;0FACb,qBAACK;gFAAIL,WAAU;gFAAgCM,MAAK;gFAAOC,QAAO;gFAAeC,SAAQ;0FACvF,cAAA,qBAACrJ;oFAAKsJ,eAAc;oFAAQC,gBAAe;oFAAQC,aAAa;oFAAGC,GAAE;;;0FAEvE,qBAACoC;gFAAKhD,WAAU;0FACb,AAAC,CAAA;oFACA,MAAMiD,WAAW,IAAI5M,KAAKqD,MAAM,qBAAqB;oFACrD,MAAMwJ,kBAAkBxJ,MAAM;oFAC9B,MAAMkF,cAAc;wFAClBuE,QAAQ;wFACRC,UAAU;wFACVC,iBAAiB;wFACjBC,iBAAiB;wFACjBC,eAAe;wFACfC,iBAAiB;wFACjBC,iBAAiB;wFACjBC,WAAW;wFACXC,WAAW;oFACb;oFACA,MAAMC,OAAOhF,WAAW,CAACsE,gBAA4C;oFACrE,MAAMW,UAAU,IAAIxN,KAAK4M;oFACzBY,QAAQC,OAAO,CAACD,QAAQE,OAAO,KAAKH;oFACpC,OAAO,CAAC,qBAAqB,EAAEC,QAAQG,kBAAkB,IAAI;gFAC/D,CAAA;;;;;;;;gDAQb3K,OAAOrD,kBAAkB,kBACxB,qBAACmM;oDAAEnC,WAAU;8DAA6B3G,OAAOrD,kBAAkB,CAACE,OAAO;;8DAG7E,qBAACiM;oDAAEnC,WAAU;8DAA6B;;;;sDAM5C,sBAACD;4CAAIC,WAAU;;8DACb,sBAACD;;sEACC,qBAACe;4DAAMd,WAAU;sEAA+C;;sEAGhE,qBAAC+B,yBAAU;4DACTC,MAAK;4DACL9I,SAASA;4DACT+I,QAAQ,CAAC,EAAEC,KAAK,EAAE,iBAChB,qBAACT;oEACE,GAAGS,KAAK;oEACT5E,MAAK;oEACLtI,KAAK,IAAIqB,OAAOsH,WAAW,GAAGC,KAAK,CAAC,IAAI,CAAC,EAAE;oEAC3CoC,WAAU;;;;;8DAMlB,sBAACD;;sEACC,qBAACe;4DAAMd,WAAU;sEAA+C;;sEAGhE,qBAAC+B,yBAAU;4DACTC,MAAK;4DACL9I,SAASA;4DACT+I,QAAQ,CAAC,EAAEC,KAAK,EAAE,iBAChB,qBAACT;oEACE,GAAGS,KAAK;oEACT5E,MAAK;oEACLtI,KAAK,IAAIqB,OAAOsH,WAAW,GAAGC,KAAK,CAAC,IAAI,CAAC,EAAE;oEAC3CoC,WAAU;;;;;;;sDAQpB,sBAACD;;8DACC,qBAACe;oDAAMd,WAAU;8DAA+C;;gDAK/DtG,MAAM,YAAYA,MAAM,UAAUnE,wBACjC,sBAACwK;oDAAIC,WAAU;;sEACb,qBAACiE;4DAAGjE,WAAU;sEAAyC;;sEACvD,qBAACD;4DAAIC,WAAU;sEACZtG,MAAM;;;;8DAMb,sBAACqG;oDAAIC,WAAU;;sEACb,qBAACkE;4DACCtH,OAAO/D;4DACP6I,UAAU,CAACxC,IAAMpG,gBAAgBoG,EAAE0C,MAAM,CAAChF,KAAK;4DAC/CuH,MAAM;4DACNtC,aAAY;4DACZ7B,WAAU;4DACVoE,WAAW,CAAClF;gEACV,IAAIA,EAAEvC,GAAG,KAAK,WAAYuC,CAAAA,EAAEmF,OAAO,IAAInF,EAAEoF,OAAO,AAAD,GAAI;oEACjDpF,EAAEC,cAAc;oEAChB,MAAMoF,UAAU1L,aAAatD,IAAI;oEACjC,IAAIgP,SAAS;wEACX,MAAMC,YAAY,IAAInO,OAAO2N,kBAAkB;wEAC/C,MAAMS,gBAAgB/K,MAAM,YAAY;wEACxC,MAAMgL,eAAeD,gBACjB,GAAGA,cAAc,KAAK,EAAED,UAAU,EAAE,EAAED,SAAS,GAC/C,CAAC,CAAC,EAAEC,UAAU,EAAE,EAAED,SAAS;wEAC/B9K,SAAS,SAASiL;wEAClB5L,gBAAgB,KAAK,kBAAkB;oEACzC;gEACF;4DACF;;sEAEF,sBAACiH;4DAAIC,WAAU;;8EACb,qBAACmC;oEAAEnC,WAAU;8EAAwB;;8EAGrC,qBAACG;oEACC7C,MAAK;oEACL2C,SAAS;wEACP,MAAMsE,UAAU1L,aAAatD,IAAI;wEACjC,IAAIgP,SAAS;4EACX,MAAMC,YAAY,IAAInO,OAAO2N,kBAAkB;4EAC/C,MAAMS,gBAAgB/K,MAAM,YAAY;4EACxC,MAAMgL,eAAeD,gBACjB,GAAGA,cAAc,KAAK,EAAED,UAAU,EAAE,EAAED,SAAS,GAC/C,CAAC,CAAC,EAAEC,UAAU,EAAE,EAAED,SAAS;4EAC/B9K,SAAS,SAASiL;4EAClB5L,gBAAgB,KAAK,kBAAkB;wEACzC;oEACF;oEACAmI,UAAU,CAACpI,aAAatD,IAAI;oEAC5ByK,WAAU;8EACX;;;;;;8DAOL,qBAAC+B,yBAAU;oDACTC,MAAK;oDACL9I,SAASA;oDACT+I,QAAQ,CAAC,EAAEC,KAAK,EAAE,iBAChB,qBAACT;4DAAMnE,MAAK;4DAAU,GAAG4E,KAAK;;;gDAIjC7I,OAAO7C,KAAK,kBACX,qBAAC2L;oDAAEnC,WAAU;8DAA6B3G,OAAO7C,KAAK,CAACN,OAAO;;;;sDAKlE,sBAAC6J;;8DACC,qBAACe;oDAAMd,WAAU;8DAA+C;;gDAK/DjI,eAAejC,MAAM,GAAG,mBACvB,sBAACiK;oDAAIC,WAAU;;sEACb,qBAACiE;4DAAGjE,WAAU;sEAAyC;;sEACvD,qBAACD;4DAAIC,WAAU;sEACZjI,eAAe2K,GAAG,CAAC,CAAC3F,OAAOC,sBAC1B,sBAAC+C;oEAAgBC,WAAU;;sFACzB,qBAAC2E;4EACCC,KAAK7H;4EACL8H,KAAK,CAAC,YAAY,EAAE7H,QAAQ,GAAG;4EAC/BgD,WAAU;;sFAIZ,qBAACG;4EACC7C,MAAK;4EACL2C,SAAS,IAAMhC,0BAA0BjB;4EACzCgD,WAAU;4EACV8E,OAAM;4EACN1E,cAAY,CAAC,aAAa,EAAEpD,QAAQ,GAAG;sFAEvC,cAAA,qBAACqD;gFAAIL,WAAU;gFAAUM,MAAK;gFAAeE,SAAQ;0FACnD,cAAA,qBAACrJ;oFAAK4N,UAAS;oFAAUnE,GAAE;oFAAqMoE,UAAS;;;;wEAK5OhI,UAAU,mBACT,qBAAC+C;4EAAIC,WAAU;sFAAiF;;wEAMjGhD,UAAU,mBACT,qBAACmD;4EACC7C,MAAK;4EACL2C,SAAS,IAAM3B,sBAAsBtB;4EACrCgD,WAAU;4EACV8E,OAAM;4EACN1E,cAAY,CAAC,UAAU,EAAEpD,QAAQ,EAAE,WAAW,CAAC;sFAChD;;;mEAnCKA;;;;8DA8ClB,qBAACiI,oBAAW;oDACVC,gBAAgBnH;oDAChBoH,WAAW,IAAIpN,eAAejC,MAAM;oDACpCsP,eAAe;wDAAC;wDAAc;wDAAa;qDAAa;oDACxDC,iBAAiB,IAAI,OAAO;;;;wCAK/BpM,2BACC,sBAAC8G;4CAAIC,WAAU;;8DACb,qBAACiE;oDAAGjE,WAAU;8DAAyC;;8DACvD,qBAAC+B,yBAAU;oDACTC,MAAK;oDACL9I,SAASA;oDACT+I,QAAQ,CAAC,EAAEC,OAAO,EAAEtF,KAAK,EAAE8E,QAAQ,EAAE,EAAE,iBACrC,sBAAC3B;4DAAIC,WAAU;;8EACb,sBAACc;oEAAMd,WAAU;;sFACf,qBAACyB;4EACCnE,MAAK;4EACLgI,SAAS1I;4EACT8E,UAAUA;4EACV1B,WAAU;;sFAEZ,sBAACD;4EAAIC,WAAU;;8FACb,qBAACgD;oFAAKhD,WAAU;8FAAoC;;8FAGpD,qBAACmC;oFAAEnC,WAAU;8FACVpD,QACG,sEACA;;;;;;gEAMT,CAACA,uBACA,qBAACmD;oEAAIC,WAAU;8EACb,cAAA,sBAACD;wEAAIC,WAAU;;0FACb,qBAACK;gFAAIL,WAAU;gFAAmDM,MAAK;gFAAeE,SAAQ;0FAC5F,cAAA,qBAACrJ;oFAAK4N,UAAS;oFAAUnE,GAAE;oFAAoNoE,UAAS;;;0FAE1P,sBAACjF;gFAAIC,WAAU;;kGACb,qBAACmC;wFAAEnC,WAAU;kGAAc;;kGAC3B,qBAACmC;kGAAE;;;;;;;;;;;;;;gCAatB3F,OAAO+I,IAAI,CAAClM,QAAQvD,MAAM,GAAG,mBAC5B,qBAACiK;oCAAIC,WAAU;8CACb,cAAA,sBAACD;wCAAIC,WAAU;;0DACb,qBAACK;gDAAIL,WAAU;gDAAiDM,MAAK;gDAAeE,SAAQ;0DAC1F,cAAA,qBAACrJ;oDAAK4N,UAAS;oDAAUnE,GAAE;oDAAoHoE,UAAS;;;0DAE1J,sBAACjF;gDAAIC,WAAU;;kEACb,qBAACiE;wDAAGjE,WAAU;kEAAwC;;kEACtD,qBAACwF;wDAAGxF,WAAU;kEACXxD,OAAOC,OAAO,CAACpD,QAAQqJ,GAAG,CAAC,CAAC,CAACR,OAAOxG,MAAM,iBACzC,sBAAC+J;;oEAAe;oEACXvD,UAAU,YAAY,eACtBA,UAAU,uBAAuB,wBACjCA,MAAMwD,MAAM,CAAC,GAAGC,WAAW,KAAKzD,MAAMO,KAAK,CAAC;oEAAG;oEAAG/G,MAAMxF,OAAO;;+DAH3DgM;;;;;;;8CAarB,sBAACnC;oCAAIC,WAAU;;sDACb,sBAACD;4CAAIC,WAAU;;gDACZ,CAAC1G,WAAWkD,OAAO+I,IAAI,CAAClM,QAAQvD,MAAM,KAAK,mBAC1C,qBAACkN;8DAAK;;gDAEP1J,yBACC,sBAAC0J;oDAAKhD,WAAU;;sEACd,qBAACK;4DAAIL,WAAU;4DAAeM,MAAK;4DAAeE,SAAQ;sEACxD,cAAA,qBAACrJ;gEAAK4N,UAAS;gEAAUnE,GAAE;gEAAqHoE,UAAS;;;wDACrJ;;;;;sDAMZ,sBAACjF;4CAAIC,WAAU;;8DACb,qBAACG;oDACC7C,MAAK;oDACL2C,SAAST;oDACTyB,UAAU5E,SAASuJ,SAAS;oDAC5B5F,WAAU;8DACX;;8DAGD,qBAACG;oDACC7C,MAAK;oDACL2D,UAAU5E,SAASuJ,SAAS,IAAK,CAAClO,iBAAiB,CAACuB;oDACpD+G,WAAU;8DAET3D,SAASuJ,SAAS,iBACjB,sBAAC5C;wDAAKhD,WAAU;;0EACd,sBAACK;gEAAIL,WAAU;gEAAkCM,MAAK;gEAAOE,SAAQ;;kFACnE,qBAACW;wEAAOnB,WAAU;wEAAaoB,IAAG;wEAAKC,IAAG;wEAAKC,GAAE;wEAAKf,QAAO;wEAAeI,aAAY;;kFACxF,qBAACxJ;wEAAK6I,WAAU;wEAAaM,MAAK;wEAAeM,GAAE;;;;4DAEpD3H,YAAY,gBAAgB;;yDAG/BA,YAAY,iBAAiB;;;;;;;;wBAQtCoD,SAASkF,OAAO,kBACf,qBAACxB;4BAAIC,WAAU;sCACb,cAAA,qBAACmC;gCAAEnC,WAAU;0CACV3D,SAASX,KAAK,YAAYjB,QAAQ4B,SAASX,KAAK,CAACxF,OAAO,GAAG;;;;;;;;AAQ5E"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d48cd80bb70e0348d1961877af3fd6fe06de4e6a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2grdj89bo9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2grdj89bo9();
cov_2grdj89bo9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2grdj89bo9().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[0]++;
    cov_2grdj89bo9().s[2]++;
    return PlantInstanceForm;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2grdj89bo9().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2grdj89bo9().s[4]++, require("react"));
const _reactquery =
/* istanbul ignore next */
(cov_2grdj89bo9().s[5]++, require("@tanstack/react-query"));
const _reacthookform =
/* istanbul ignore next */
(cov_2grdj89bo9().s[6]++, require("react-hook-form"));
const _zod =
/* istanbul ignore next */
(cov_2grdj89bo9().s[7]++, require("@hookform/resolvers/zod"));
const _zod1 =
/* istanbul ignore next */
(cov_2grdj89bo9().s[8]++, require("zod"));
const _PlantTaxonomySelector =
/* istanbul ignore next */
(/*#__PURE__*/cov_2grdj89bo9().s[9]++, _interop_require_default(require("./PlantTaxonomySelector")));
const _ImageUpload =
/* istanbul ignore next */
(/*#__PURE__*/cov_2grdj89bo9().s[10]++, _interop_require_default(require("../shared/ImageUpload")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2grdj89bo9().f[1]++;
  cov_2grdj89bo9().s[11]++;
  return /* istanbul ignore next */(cov_2grdj89bo9().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2grdj89bo9().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2grdj89bo9().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2grdj89bo9().b[0][1]++, {
    default: obj
  });
}
// Form validation schemas
const plantTaxonomySchema =
/* istanbul ignore next */
(cov_2grdj89bo9().s[12]++, _zod1.z.object({
  family: _zod1.z.string().min(1, 'Family is required').max(100, 'Family must be less than 100 characters'),
  genus: _zod1.z.string().min(1, 'Genus is required').max(100, 'Genus must be less than 100 characters'),
  species: _zod1.z.string().min(1, 'Species is required').max(100, 'Species must be less than 100 characters'),
  cultivar: _zod1.z.string().max(100, 'Cultivar must be less than 100 characters').optional().transform(val => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[2]++;
    cov_2grdj89bo9().s[13]++;
    return /* istanbul ignore next */(cov_2grdj89bo9().b[2][0]++, val?.trim()) ||
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[2][1]++, '');
  }),
  commonName: _zod1.z.string().min(1, 'Common name is required').max(100, 'Common name must be less than 100 characters')
}));
const plantInstanceFormSchema =
/* istanbul ignore next */
(cov_2grdj89bo9().s[14]++, _zod1.z.object({
  plantId: _zod1.z.number().min(1, 'Please select a plant type'),
  nickname: _zod1.z.string().min(1, 'Nickname is required').max(100, 'Nickname must be less than 100 characters').trim().refine(val => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[3]++;
    cov_2grdj89bo9().s[15]++;
    return val.length > 0;
  }, 'Nickname cannot be empty'),
  location: _zod1.z.string().min(1, 'Location is required').max(100, 'Location must be less than 100 characters').trim().refine(val => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[4]++;
    cov_2grdj89bo9().s[16]++;
    return val.length > 0;
  }, 'Location cannot be empty'),
  fertilizerSchedule: _zod1.z.enum(['weekly', 'biweekly', 'every_2_4_weeks', 'every_3_4_weeks', 'every_4_weeks', 'every_4_6_weeks', 'every_6_8_weeks', 'bimonthly', 'quarterly'], {
    message: 'Please select a fertilizer schedule'
  }),
  lastFertilized: _zod1.z.string().optional().refine(val => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[5]++;
    cov_2grdj89bo9().s[17]++;
    return /* istanbul ignore next */(cov_2grdj89bo9().b[3][0]++, !val) ||
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[3][1]++, !isNaN(Date.parse(val)));
  }, 'Invalid date format'),
  lastRepot: _zod1.z.string().optional().refine(val => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[6]++;
    cov_2grdj89bo9().s[18]++;
    return /* istanbul ignore next */(cov_2grdj89bo9().b[4][0]++, !val) ||
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[4][1]++, !isNaN(Date.parse(val)));
  }, 'Invalid date format'),
  notes: _zod1.z.string().max(2000, 'Notes must be less than 2000 characters').optional().transform(val => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[7]++;
    cov_2grdj89bo9().s[19]++;
    return /* istanbul ignore next */(cov_2grdj89bo9().b[5][0]++, val?.trim()) ||
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[5][1]++, '');
  }),
  images: _zod1.z.array(_zod1.z.string()).max(10, 'Maximum 10 images allowed').optional(),
  isActive: _zod1.z.boolean().default(true).optional(),
  // New taxonomy fields (only used when creating new plant)
  newPlantTaxonomy: plantTaxonomySchema.optional()
}).refine(data => {
  /* istanbul ignore next */
  cov_2grdj89bo9().f[8]++;
  cov_2grdj89bo9().s[20]++;
  // Custom validation: lastFertilized cannot be in the future
  if (data.lastFertilized) {
    /* istanbul ignore next */
    cov_2grdj89bo9().b[6][0]++;
    const fertilizerDate =
    /* istanbul ignore next */
    (cov_2grdj89bo9().s[21]++, new Date(data.lastFertilized));
    const today =
    /* istanbul ignore next */
    (cov_2grdj89bo9().s[22]++, new Date());
    /* istanbul ignore next */
    cov_2grdj89bo9().s[23]++;
    today.setHours(23, 59, 59, 999); // End of today
    /* istanbul ignore next */
    cov_2grdj89bo9().s[24]++;
    return fertilizerDate <= today;
  } else
  /* istanbul ignore next */
  {
    cov_2grdj89bo9().b[6][1]++;
  }
  cov_2grdj89bo9().s[25]++;
  return true;
}, {
  message: 'Last fertilized date cannot be in the future',
  path: ['lastFertilized']
}).refine(data => {
  /* istanbul ignore next */
  cov_2grdj89bo9().f[9]++;
  cov_2grdj89bo9().s[26]++;
  // Custom validation: lastRepot cannot be in the future
  if (data.lastRepot) {
    /* istanbul ignore next */
    cov_2grdj89bo9().b[7][0]++;
    const repotDate =
    /* istanbul ignore next */
    (cov_2grdj89bo9().s[27]++, new Date(data.lastRepot));
    const today =
    /* istanbul ignore next */
    (cov_2grdj89bo9().s[28]++, new Date());
    /* istanbul ignore next */
    cov_2grdj89bo9().s[29]++;
    today.setHours(23, 59, 59, 999); // End of today
    /* istanbul ignore next */
    cov_2grdj89bo9().s[30]++;
    return repotDate <= today;
  } else
  /* istanbul ignore next */
  {
    cov_2grdj89bo9().b[7][1]++;
  }
  cov_2grdj89bo9().s[31]++;
  return true;
}, {
  message: 'Last repot date cannot be in the future',
  path: ['lastRepot']
}));
function PlantInstanceForm({
  plantInstance,
  isOpen,
  onClose,
  onSuccess,
  userId
}) {
  /* istanbul ignore next */
  cov_2grdj89bo9().f[10]++;
  const [selectedPlant, setSelectedPlant] =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[32]++, (0, _react.useState)(null));
  const [imageFiles, setImageFiles] =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[33]++, (0, _react.useState)([]));
  const [existingImages, setExistingImages] =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[34]++, (0, _react.useState)([]));
  const [showLocationSuggestions, setShowLocationSuggestions] =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[35]++, (0, _react.useState)(false));
  const [locationInput, setLocationInput] =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[36]++, (0, _react.useState)(''));
  const [isCreatingPlant, setIsCreatingPlant] =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[37]++, (0, _react.useState)(false));
  const [showTaxonomyForm, setShowTaxonomyForm] =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[38]++, (0, _react.useState)(false));
  const [taxonomyData, setTaxonomyData] =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[39]++, (0, _react.useState)({
    family: '',
    genus: '',
    species: '',
    cultivar: '',
    commonName: ''
  }));
  const [hasUnsavedChanges, setHasUnsavedChanges] =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[40]++, (0, _react.useState)(false));
  const [newNoteInput, setNewNoteInput] =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[41]++, (0, _react.useState)(''));
  const queryClient =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[42]++, (0, _reactquery.useQueryClient)());
  const isEditing =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[43]++, !!plantInstance);
  // Form setup
  const {
    control,
    handleSubmit,
    formState: {
      errors,
      isValid,
      isDirty
    },
    reset,
    setValue,
    watch,
    trigger
  } =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[44]++, (0, _reacthookform.useForm)({
    resolver: (0, _zod.zodResolver)(plantInstanceFormSchema),
    mode: 'onChange',
    defaultValues: {
      plantId: 1,
      nickname: '',
      location: '',
      fertilizerSchedule: 'every_4_weeks',
      lastFertilized: '',
      lastRepot: '',
      notes: '',
      images: [],
      isActive: true,
      newPlantTaxonomy: undefined
    }
  }));
  // Fetch user locations for autocomplete
  const {
    data: userLocations
  } =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[45]++, (0, _reactquery.useQuery)({
    queryKey: ['user-locations', userId],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_2grdj89bo9().f[11]++;
      const response =
      /* istanbul ignore next */
      (cov_2grdj89bo9().s[46]++, await fetch(`/api/plant-instances/locations?userId=${userId}`));
      /* istanbul ignore next */
      cov_2grdj89bo9().s[47]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2grdj89bo9().b[8][0]++;
        cov_2grdj89bo9().s[48]++;
        throw new Error('Failed to fetch locations');
      } else
      /* istanbul ignore next */
      {
        cov_2grdj89bo9().b[8][1]++;
      }
      cov_2grdj89bo9().s[49]++;
      return response.json();
    },
    staleTime: 1000 * 60 * 10
  }));
  // Handle showing taxonomy form for new plant creation
  /* istanbul ignore next */
  cov_2grdj89bo9().s[50]++;
  const handleShowTaxonomyForm = query => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[12]++;
    cov_2grdj89bo9().s[51]++;
    setShowTaxonomyForm(true);
    /* istanbul ignore next */
    cov_2grdj89bo9().s[52]++;
    setTaxonomyData({
      family: '',
      genus: '',
      species: '',
      cultivar: '',
      commonName:
      /* istanbul ignore next */
      (cov_2grdj89bo9().b[9][0]++, query) ||
      /* istanbul ignore next */
      (cov_2grdj89bo9().b[9][1]++, '')
    });
  };
  // Handle taxonomy form submission
  /* istanbul ignore next */
  cov_2grdj89bo9().s[53]++;
  const handleTaxonomySubmit = data => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[13]++;
    cov_2grdj89bo9().s[54]++;
    setIsCreatingPlant(true);
    /* istanbul ignore next */
    cov_2grdj89bo9().s[55]++;
    createPlantMutation.mutate({
      ...data,
      cultivar:
      /* istanbul ignore next */
      (cov_2grdj89bo9().b[10][0]++, data.cultivar) ||
      /* istanbul ignore next */
      (cov_2grdj89bo9().b[10][1]++, null)
    });
  };
  // Handle canceling taxonomy form
  /* istanbul ignore next */
  cov_2grdj89bo9().s[56]++;
  const handleCancelTaxonomyForm = () => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[14]++;
    cov_2grdj89bo9().s[57]++;
    setShowTaxonomyForm(false);
    /* istanbul ignore next */
    cov_2grdj89bo9().s[58]++;
    setTaxonomyData({
      family: '',
      genus: '',
      species: '',
      cultivar: '',
      commonName: ''
    });
  };
  // Create new plant mutation
  const createPlantMutation =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[59]++, (0, _reactquery.useMutation)({
    mutationFn: async plantData => {
      /* istanbul ignore next */
      cov_2grdj89bo9().f[15]++;
      const response =
      /* istanbul ignore next */
      (cov_2grdj89bo9().s[60]++, await fetch('/api/plants', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(plantData)
      }));
      /* istanbul ignore next */
      cov_2grdj89bo9().s[61]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2grdj89bo9().b[11][0]++;
        const error =
        /* istanbul ignore next */
        (cov_2grdj89bo9().s[62]++, await response.json());
        /* istanbul ignore next */
        cov_2grdj89bo9().s[63]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[12][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[12][1]++, 'Failed to create plant'));
      } else
      /* istanbul ignore next */
      {
        cov_2grdj89bo9().b[11][1]++;
      }
      cov_2grdj89bo9().s[64]++;
      return response.json();
    },
    onSuccess: async data => {
      /* istanbul ignore next */
      cov_2grdj89bo9().f[16]++;
      cov_2grdj89bo9().s[65]++;
      await queryClient.invalidateQueries({
        queryKey: ['plants'],
        refetchType: 'active'
      });
      /* istanbul ignore next */
      cov_2grdj89bo9().s[66]++;
      queryClient.removeQueries({
        queryKey: ['plants']
      });
      /* istanbul ignore next */
      cov_2grdj89bo9().s[67]++;
      await queryClient.refetchQueries({
        queryKey: ['plants']
      });
      // Set the newly created plant as selected
      const newPlant =
      /* istanbul ignore next */
      (cov_2grdj89bo9().s[68]++, {
        id: data.data.id,
        family: data.data.family,
        genus: data.data.genus,
        species: data.data.species,
        cultivar: data.data.cultivar,
        commonName: data.data.commonName,
        isVerified: data.data.isVerified
      });
      /* istanbul ignore next */
      cov_2grdj89bo9().s[69]++;
      handlePlantSelect(newPlant);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[70]++;
      setIsCreatingPlant(false);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[71]++;
      setShowTaxonomyForm(false);
    },
    onError: error => {
      /* istanbul ignore next */
      cov_2grdj89bo9().f[17]++;
      cov_2grdj89bo9().s[72]++;
      console.error('Failed to create plant:', error);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[73]++;
      setIsCreatingPlant(false);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[74]++;
      setShowTaxonomyForm(false);
    }
  }));
  // Create/update mutation
  const mutation =
  /* istanbul ignore next */
  (cov_2grdj89bo9().s[75]++, (0, _reactquery.useMutation)({
    mutationFn: async data => {
      /* istanbul ignore next */
      cov_2grdj89bo9().f[18]++;
      const formData =
      /* istanbul ignore next */
      (cov_2grdj89bo9().s[76]++, new FormData());
      // Add form fields
      /* istanbul ignore next */
      cov_2grdj89bo9().s[77]++;
      Object.entries(data).forEach(([key, value]) => {
        /* istanbul ignore next */
        cov_2grdj89bo9().f[19]++;
        cov_2grdj89bo9().s[78]++;
        if (
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[14][0]++, value !== undefined) &&
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[14][1]++, value !== '')) {
          /* istanbul ignore next */
          cov_2grdj89bo9().b[13][0]++;
          cov_2grdj89bo9().s[79]++;
          if (
          /* istanbul ignore next */
          (cov_2grdj89bo9().b[16][0]++, key === 'images') &&
          /* istanbul ignore next */
          (cov_2grdj89bo9().b[16][1]++, Array.isArray(value))) {
            /* istanbul ignore next */
            cov_2grdj89bo9().b[15][0]++;
            cov_2grdj89bo9().s[80]++;
            // Handle existing images
            value.forEach((image, index) => {
              /* istanbul ignore next */
              cov_2grdj89bo9().f[20]++;
              cov_2grdj89bo9().s[81]++;
              formData.append(`existingImages[${index}]`, image);
            });
          } else {
            /* istanbul ignore next */
            cov_2grdj89bo9().b[15][1]++;
            cov_2grdj89bo9().s[82]++;
            formData.append(key, String(value));
          }
        } else
        /* istanbul ignore next */
        {
          cov_2grdj89bo9().b[13][1]++;
        }
      });
      // Add new image files
      /* istanbul ignore next */
      cov_2grdj89bo9().s[83]++;
      imageFiles.forEach((file, index) => {
        /* istanbul ignore next */
        cov_2grdj89bo9().f[21]++;
        cov_2grdj89bo9().s[84]++;
        formData.append(`imageFiles[${index}]`, file);
      });
      const url =
      /* istanbul ignore next */
      (cov_2grdj89bo9().s[85]++, isEditing ?
      /* istanbul ignore next */
      (cov_2grdj89bo9().b[17][0]++, `/api/plant-instances/${plantInstance.id}`) :
      /* istanbul ignore next */
      (cov_2grdj89bo9().b[17][1]++, '/api/plant-instances'));
      const method =
      /* istanbul ignore next */
      (cov_2grdj89bo9().s[86]++, isEditing ?
      /* istanbul ignore next */
      (cov_2grdj89bo9().b[18][0]++, 'PUT') :
      /* istanbul ignore next */
      (cov_2grdj89bo9().b[18][1]++, 'POST'));
      const response =
      /* istanbul ignore next */
      (cov_2grdj89bo9().s[87]++, await fetch(url, {
        method,
        body: formData
      }));
      /* istanbul ignore next */
      cov_2grdj89bo9().s[88]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2grdj89bo9().b[19][0]++;
        const error =
        /* istanbul ignore next */
        (cov_2grdj89bo9().s[89]++, await response.json());
        /* istanbul ignore next */
        cov_2grdj89bo9().s[90]++;
        console.error('API Error Response:', error);
        /* istanbul ignore next */
        cov_2grdj89bo9().s[91]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[20][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[20][1]++, 'Failed to save plant instance'));
      } else
      /* istanbul ignore next */
      {
        cov_2grdj89bo9().b[19][1]++;
      }
      cov_2grdj89bo9().s[92]++;
      return response.json();
    },
    onSuccess: async data => {
      /* istanbul ignore next */
      cov_2grdj89bo9().f[22]++;
      cov_2grdj89bo9().s[93]++;
      // Comprehensive cache clearing for immediate grid updates
      console.log('Plant instance saved, invalidating caches...');
      // Invalidate all plant-instances queries regardless of filters
      /* istanbul ignore next */
      cov_2grdj89bo9().s[94]++;
      await queryClient.invalidateQueries({
        queryKey: ['plant-instances'],
        refetchType: 'all'
      });
      // Force refetch specific user queries
      /* istanbul ignore next */
      cov_2grdj89bo9().s[95]++;
      await queryClient.refetchQueries({
        queryKey: ['plant-instances', userId],
        type: 'all'
      });
      // Additional cache clearing for related data
      const additionalQueryKeys =
      /* istanbul ignore next */
      (cov_2grdj89bo9().s[96]++, [['plant-detail'], ['care-dashboard', userId], ['plants']]);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[97]++;
      for (const queryKey of additionalQueryKeys) {
        /* istanbul ignore next */
        cov_2grdj89bo9().s[98]++;
        await queryClient.invalidateQueries({
          queryKey,
          refetchType: 'active'
        });
      }
      /* istanbul ignore next */
      cov_2grdj89bo9().s[99]++;
      console.log('Cache invalidation complete');
      // Reset form state
      /* istanbul ignore next */
      cov_2grdj89bo9().s[100]++;
      reset();
      /* istanbul ignore next */
      cov_2grdj89bo9().s[101]++;
      setImageFiles([]);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[102]++;
      setExistingImages([]);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[103]++;
      setSelectedPlant(null);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[104]++;
      setShowTaxonomyForm(false);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[105]++;
      setHasUnsavedChanges(false);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[106]++;
      if (onSuccess) {
        /* istanbul ignore next */
        cov_2grdj89bo9().b[21][0]++;
        cov_2grdj89bo9().s[107]++;
        onSuccess(data);
      } else {
        /* istanbul ignore next */
        cov_2grdj89bo9().b[21][1]++;
        cov_2grdj89bo9().s[108]++;
        // Only call onClose if no onSuccess callback provided
        onClose();
      }
    }
  }));
  // Initialize form when editing
  /* istanbul ignore next */
  cov_2grdj89bo9().s[109]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[23]++;
    cov_2grdj89bo9().s[110]++;
    if (
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[23][0]++, isEditing) &&
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[23][1]++, plantInstance)) {
      /* istanbul ignore next */
      cov_2grdj89bo9().b[22][0]++;
      const convertedSchedule =
      /* istanbul ignore next */
      (cov_2grdj89bo9().s[111]++, convertDatabaseScheduleToForm(plantInstance.fertilizerSchedule));
      /* istanbul ignore next */
      cov_2grdj89bo9().s[112]++;
      console.log('Setting form with fertilizer schedule:', convertedSchedule);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[113]++;
      reset({
        plantId: plantInstance.plantId,
        nickname: plantInstance.nickname,
        location: plantInstance.location,
        fertilizerSchedule: convertedSchedule,
        lastFertilized: plantInstance.lastFertilized ?
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[24][0]++, new Date(plantInstance.lastFertilized).toISOString().split('T')[0]) :
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[24][1]++, ''),
        lastRepot: plantInstance.lastRepot ?
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[25][0]++, new Date(plantInstance.lastRepot).toISOString().split('T')[0]) :
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[25][1]++, ''),
        notes:
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[26][0]++, plantInstance.notes) ||
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[26][1]++, ''),
        images:
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[27][0]++, plantInstance.images) ||
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[27][1]++, []),
        isActive: plantInstance.isActive
      });
      /* istanbul ignore next */
      cov_2grdj89bo9().s[114]++;
      setSelectedPlant({
        id: plantInstance.plant.id,
        family: plantInstance.plant.family,
        genus: plantInstance.plant.genus,
        species: plantInstance.plant.species,
        commonName: plantInstance.plant.commonName,
        isVerified: plantInstance.plant.isVerified
      });
      /* istanbul ignore next */
      cov_2grdj89bo9().s[115]++;
      setExistingImages(
      /* istanbul ignore next */
      (cov_2grdj89bo9().b[28][0]++, plantInstance.images) ||
      /* istanbul ignore next */
      (cov_2grdj89bo9().b[28][1]++, []));
    } else {
      /* istanbul ignore next */
      cov_2grdj89bo9().b[22][1]++;
      cov_2grdj89bo9().s[116]++;
      reset();
      /* istanbul ignore next */
      cov_2grdj89bo9().s[117]++;
      setSelectedPlant(null);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[118]++;
      setImageFiles([]);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[119]++;
      setExistingImages([]);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[120]++;
      setShowTaxonomyForm(false);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[121]++;
      setTaxonomyData({
        family: '',
        genus: '',
        species: '',
        cultivar: '',
        commonName: ''
      });
    }
  }, [isEditing, plantInstance, reset]);
  // Handle plant selection
  /* istanbul ignore next */
  cov_2grdj89bo9().s[122]++;
  const handlePlantSelect = plant => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[24]++;
    cov_2grdj89bo9().s[123]++;
    if (plant) {
      /* istanbul ignore next */
      cov_2grdj89bo9().b[29][0]++;
      cov_2grdj89bo9().s[124]++;
      setSelectedPlant(plant);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[125]++;
      setValue('plantId', plant.id, {
        shouldValidate: true
      });
    } else {
      /* istanbul ignore next */
      cov_2grdj89bo9().b[29][1]++;
      cov_2grdj89bo9().s[126]++;
      setSelectedPlant(null);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[127]++;
      setValue('plantId', 0, {
        shouldValidate: true
      });
    }
  };
  // Handle image changes
  /* istanbul ignore next */
  cov_2grdj89bo9().s[128]++;
  const handleImageChange = files => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[25]++;
    cov_2grdj89bo9().s[129]++;
    setImageFiles(files);
    // Don't update form's images field - keep existingImages separate
    // Just trigger validation to ensure form is valid
    /* istanbul ignore next */
    cov_2grdj89bo9().s[130]++;
    trigger();
  };
  // Handle existing image removal
  /* istanbul ignore next */
  cov_2grdj89bo9().s[131]++;
  const handleRemoveExistingImage = index => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[26]++;
    const newImages =
    /* istanbul ignore next */
    (cov_2grdj89bo9().s[132]++, existingImages.filter((_, i) => {
      /* istanbul ignore next */
      cov_2grdj89bo9().f[27]++;
      cov_2grdj89bo9().s[133]++;
      return i !== index;
    }));
    /* istanbul ignore next */
    cov_2grdj89bo9().s[134]++;
    setExistingImages(newImages);
    // Don't update form's images field - keep existingImages separate
    /* istanbul ignore next */
    cov_2grdj89bo9().s[135]++;
    trigger();
  };
  // Handle setting primary image (move image to index 0)
  /* istanbul ignore next */
  cov_2grdj89bo9().s[136]++;
  const handleSetPrimaryImage = index => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[28]++;
    cov_2grdj89bo9().s[137]++;
    if (index === 0) {
      /* istanbul ignore next */
      cov_2grdj89bo9().b[30][0]++;
      cov_2grdj89bo9().s[138]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2grdj89bo9().b[30][1]++;
    } // Already primary
    const newImages =
    /* istanbul ignore next */
    (cov_2grdj89bo9().s[139]++, [...existingImages]);
    const selectedImage =
    /* istanbul ignore next */
    (cov_2grdj89bo9().s[140]++, newImages[index]);
    // Remove the selected image and add it to the beginning
    /* istanbul ignore next */
    cov_2grdj89bo9().s[141]++;
    newImages.splice(index, 1);
    /* istanbul ignore next */
    cov_2grdj89bo9().s[142]++;
    newImages.unshift(selectedImage);
    /* istanbul ignore next */
    cov_2grdj89bo9().s[143]++;
    setExistingImages(newImages);
    /* istanbul ignore next */
    cov_2grdj89bo9().s[144]++;
    trigger();
  };
  // Convert enum fertilizer schedule to expected format
  /* istanbul ignore next */
  cov_2grdj89bo9().s[145]++;
  const convertFertilizerSchedule = schedule => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[29]++;
    const scheduleMap =
    /* istanbul ignore next */
    (cov_2grdj89bo9().s[146]++, {
      'weekly': '7 days',
      'biweekly': '2 weeks',
      'every_2_4_weeks': '3 weeks',
      'every_3_4_weeks': '4 weeks',
      'every_4_weeks': '4 weeks',
      'every_4_6_weeks': '5 weeks',
      'every_6_8_weeks': '7 weeks',
      'bimonthly': '2 months',
      'quarterly': '3 months'
    });
    /* istanbul ignore next */
    cov_2grdj89bo9().s[147]++;
    return /* istanbul ignore next */(cov_2grdj89bo9().b[31][0]++, scheduleMap[schedule]) ||
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[31][1]++, schedule);
  };
  // Convert database fertilizer schedule back to form enum
  /* istanbul ignore next */
  cov_2grdj89bo9().s[148]++;
  const convertDatabaseScheduleToForm = schedule => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[30]++;
    cov_2grdj89bo9().s[149]++;
    console.log('Converting database schedule:', schedule);
    /* istanbul ignore next */
    cov_2grdj89bo9().s[150]++;
    if (!schedule) {
      /* istanbul ignore next */
      cov_2grdj89bo9().b[32][0]++;
      cov_2grdj89bo9().s[151]++;
      return 'every_4_weeks';
    } else
    /* istanbul ignore next */
    {
      cov_2grdj89bo9().b[32][1]++;
    }
    const reverseMap =
    /* istanbul ignore next */
    (cov_2grdj89bo9().s[152]++, {
      // New format matches (what we send to API)
      '7 days': 'weekly',
      '2 weeks': 'biweekly',
      '3 weeks': 'every_2_4_weeks',
      '4 weeks': 'every_4_weeks',
      '5 weeks': 'every_4_6_weeks',
      '7 weeks': 'every_6_8_weeks',
      '2 months': 'bimonthly',
      '3 months': 'quarterly',
      // Legacy formats that might exist in database
      '1 week': 'weekly',
      'every 2 weeks': 'biweekly',
      'every 2-4 weeks': 'every_2_4_weeks',
      'every 3-4 weeks': 'every_3_4_weeks',
      'every 4 weeks': 'every_4_weeks',
      'every 4-6 weeks': 'every_4_6_weeks',
      'every 6-8 weeks': 'every_6_8_weeks',
      '1 month': 'every_4_weeks',
      'monthly': 'every_4_weeks',
      'bimonthly': 'bimonthly',
      'quarterly': 'quarterly'
    });
    const result =
    /* istanbul ignore next */
    (cov_2grdj89bo9().s[153]++,
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[33][0]++, reverseMap[schedule]) ||
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[33][1]++, 'every_4_weeks'));
    /* istanbul ignore next */
    cov_2grdj89bo9().s[154]++;
    console.log('Converted to:', result);
    /* istanbul ignore next */
    cov_2grdj89bo9().s[155]++;
    return result;
  };
  // Handle form submission
  /* istanbul ignore next */
  cov_2grdj89bo9().s[156]++;
  const onSubmit = data => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[31]++;
    const submitData =
    /* istanbul ignore next */
    (cov_2grdj89bo9().s[157]++, {
      ...data,
      fertilizerSchedule: convertFertilizerSchedule(data.fertilizerSchedule),
      images: existingImages
    });
    /* istanbul ignore next */
    cov_2grdj89bo9().s[158]++;
    console.log('Form submission data:', submitData);
    /* istanbul ignore next */
    cov_2grdj89bo9().s[159]++;
    console.log('Existing images being submitted:', existingImages);
    /* istanbul ignore next */
    cov_2grdj89bo9().s[160]++;
    console.log('Original fertilizer schedule:', data.fertilizerSchedule);
    /* istanbul ignore next */
    cov_2grdj89bo9().s[161]++;
    console.log('Converted fertilizer schedule:', convertFertilizerSchedule(data.fertilizerSchedule));
    /* istanbul ignore next */
    cov_2grdj89bo9().s[162]++;
    mutation.mutate(submitData);
  };
  // Track unsaved changes
  /* istanbul ignore next */
  cov_2grdj89bo9().s[163]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[32]++;
    cov_2grdj89bo9().s[164]++;
    setHasUnsavedChanges(
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[34][0]++, isDirty) ||
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[34][1]++, imageFiles.length > 0) ||
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[34][2]++, showTaxonomyForm));
  }, [isDirty, imageFiles.length, showTaxonomyForm]);
  // Warn about unsaved changes before page unload
  /* istanbul ignore next */
  cov_2grdj89bo9().s[165]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[33]++;
    cov_2grdj89bo9().s[166]++;
    const handleBeforeUnload = e => {
      /* istanbul ignore next */
      cov_2grdj89bo9().f[34]++;
      cov_2grdj89bo9().s[167]++;
      if (hasUnsavedChanges) {
        /* istanbul ignore next */
        cov_2grdj89bo9().b[35][0]++;
        cov_2grdj89bo9().s[168]++;
        e.preventDefault();
        /* istanbul ignore next */
        cov_2grdj89bo9().s[169]++;
        e.returnValue = 'You have unsaved changes. Are you sure you want to leave?';
        /* istanbul ignore next */
        cov_2grdj89bo9().s[170]++;
        return 'You have unsaved changes. Are you sure you want to leave?';
      } else
      /* istanbul ignore next */
      {
        cov_2grdj89bo9().b[35][1]++;
      }
    };
    /* istanbul ignore next */
    cov_2grdj89bo9().s[171]++;
    if (
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[37][0]++, isOpen) &&
    /* istanbul ignore next */
    (cov_2grdj89bo9().b[37][1]++, hasUnsavedChanges)) {
      /* istanbul ignore next */
      cov_2grdj89bo9().b[36][0]++;
      cov_2grdj89bo9().s[172]++;
      window.addEventListener('beforeunload', handleBeforeUnload);
    } else
    /* istanbul ignore next */
    {
      cov_2grdj89bo9().b[36][1]++;
    }
    cov_2grdj89bo9().s[173]++;
    return () => {
      /* istanbul ignore next */
      cov_2grdj89bo9().f[35]++;
      cov_2grdj89bo9().s[174]++;
      window.removeEventListener('beforeunload', handleBeforeUnload);
    };
  }, [isOpen, hasUnsavedChanges]);
  // Handle close with unsaved changes warning
  /* istanbul ignore next */
  cov_2grdj89bo9().s[175]++;
  const handleClose = () => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[36]++;
    cov_2grdj89bo9().s[176]++;
    if (hasUnsavedChanges) {
      /* istanbul ignore next */
      cov_2grdj89bo9().b[38][0]++;
      const confirmed =
      /* istanbul ignore next */
      (cov_2grdj89bo9().s[177]++, window.confirm('You have unsaved changes. Are you sure you want to close?'));
      /* istanbul ignore next */
      cov_2grdj89bo9().s[178]++;
      if (!confirmed) {
        /* istanbul ignore next */
        cov_2grdj89bo9().b[39][0]++;
        cov_2grdj89bo9().s[179]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2grdj89bo9().b[39][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2grdj89bo9().b[38][1]++;
    }
    cov_2grdj89bo9().s[180]++;
    onClose();
  };
  // Close modal on escape
  /* istanbul ignore next */
  cov_2grdj89bo9().s[181]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2grdj89bo9().f[37]++;
    cov_2grdj89bo9().s[182]++;
    const handleEscape = e => {
      /* istanbul ignore next */
      cov_2grdj89bo9().f[38]++;
      cov_2grdj89bo9().s[183]++;
      if (e.key === 'Escape') {
        /* istanbul ignore next */
        cov_2grdj89bo9().b[40][0]++;
        cov_2grdj89bo9().s[184]++;
        handleClose();
      } else
      /* istanbul ignore next */
      {
        cov_2grdj89bo9().b[40][1]++;
      }
    };
    /* istanbul ignore next */
    cov_2grdj89bo9().s[185]++;
    if (isOpen) {
      /* istanbul ignore next */
      cov_2grdj89bo9().b[41][0]++;
      cov_2grdj89bo9().s[186]++;
      document.addEventListener('keydown', handleEscape);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[187]++;
      document.body.style.overflow = 'hidden';
    } else
    /* istanbul ignore next */
    {
      cov_2grdj89bo9().b[41][1]++;
    }
    cov_2grdj89bo9().s[188]++;
    return () => {
      /* istanbul ignore next */
      cov_2grdj89bo9().f[39]++;
      cov_2grdj89bo9().s[189]++;
      document.removeEventListener('keydown', handleEscape);
      /* istanbul ignore next */
      cov_2grdj89bo9().s[190]++;
      document.body.style.overflow = 'unset';
    };
  }, [isOpen, handleClose]);
  /* istanbul ignore next */
  cov_2grdj89bo9().s[191]++;
  if (!isOpen) {
    /* istanbul ignore next */
    cov_2grdj89bo9().b[42][0]++;
    cov_2grdj89bo9().s[192]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2grdj89bo9().b[42][1]++;
  }
  cov_2grdj89bo9().s[193]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "fixed inset-0 z-50 overflow-hidden",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "absolute inset-0 bg-black bg-opacity-50 transition-opacity",
      onClick: handleClose
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "relative h-full flex items-end sm:items-center justify-center p-4 pb-20 sm:pb-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white rounded-t-2xl sm:rounded-2xl w-full max-w-2xl max-h-full overflow-hidden shadow-2xl",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-between p-6 border-b border-gray-200",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
            className: "text-xl font-semibold text-gray-900",
            children: isEditing ?
            /* istanbul ignore next */
            (cov_2grdj89bo9().b[43][0]++, 'Edit Plant') :
            /* istanbul ignore next */
            (cov_2grdj89bo9().b[43][1]++, 'Add New Plant')
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: handleClose,
            className: "p-2 text-gray-400 hover:text-gray-600 rounded-full hover:bg-gray-100",
            "aria-label": "Close form",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
              className: "w-6 h-6",
              fill: "none",
              stroke: "currentColor",
              viewBox: "0 0 24 24",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                strokeLinecap: "round",
                strokeLinejoin: "round",
                strokeWidth: 2,
                d: "M6 18L18 6M6 6l12 12"
              })
            })
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("form", {
          onSubmit: handleSubmit(onSubmit),
          className: "flex-1 overflow-auto max-h-[60vh] sm:max-h-[70vh]",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "p-6 space-y-6",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "block text-sm font-medium text-gray-700 mb-2",
                children: "Plant Type *"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_PlantTaxonomySelector.default, {
                selectedPlant: selectedPlant,
                onSelect: handlePlantSelect,
                disabled:
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[44][0]++, isCreatingPlant) ||
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[44][1]++, showTaxonomyForm),
                onAddNew: handleShowTaxonomyForm
              }),
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[45][0]++, isCreatingPlant) &&
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[45][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "mt-2 flex items-center text-sm text-primary-600",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("svg", {
                  className: "animate-spin -ml-1 mr-2 h-4 w-4",
                  fill: "none",
                  viewBox: "0 0 24 24",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("circle", {
                    className: "opacity-25",
                    cx: "12",
                    cy: "12",
                    r: "10",
                    stroke: "currentColor",
                    strokeWidth: "4"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                    className: "opacity-75",
                    fill: "currentColor",
                    d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                  })]
                }), "Creating new plant type..."]
              })),
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[46][0]++, createPlantMutation.isError) &&
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[46][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "mt-2 text-sm text-red-600",
                children: ["Failed to create plant: ", createPlantMutation.error instanceof Error ?
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[47][0]++, createPlantMutation.error.message) :
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[47][1]++, 'Unknown error')]
              })),
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[48][0]++, errors.plantId) &&
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[48][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "mt-1 text-sm text-red-600",
                children: errors.plantId.message
              })),
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[49][0]++, showTaxonomyForm) &&
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[49][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-between mb-4",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                    className: "text-sm font-semibold text-blue-900",
                    children: "Create New Plant Type"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                    type: "button",
                    onClick: handleCancelTaxonomyForm,
                    className: "text-blue-600 hover:text-blue-800",
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
                      className: "w-4 h-4",
                      fill: "none",
                      stroke: "currentColor",
                      viewBox: "0 0 24 24",
                      children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        strokeWidth: 2,
                        d: "M6 18L18 6M6 6l12 12"
                      })
                    })
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "space-y-4",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                      className: "block text-sm font-medium text-gray-700 mb-1",
                      children: "Common Name *"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      type: "text",
                      value: taxonomyData.commonName,
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_2grdj89bo9().f[40]++;
                        cov_2grdj89bo9().s[194]++;
                        return setTaxonomyData(prev => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[41]++;
                          cov_2grdj89bo9().s[195]++;
                          return {
                            ...prev,
                            commonName: e.target.value
                          };
                        });
                      },
                      placeholder: "e.g., Monstera Deliciosa",
                      className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "grid grid-cols-1 sm:grid-cols-2 gap-4",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                        className: "block text-sm font-medium text-gray-700 mb-1",
                        children: "Family *"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                        type: "text",
                        value: taxonomyData.family,
                        onChange: e => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[42]++;
                          cov_2grdj89bo9().s[196]++;
                          return setTaxonomyData(prev => {
                            /* istanbul ignore next */
                            cov_2grdj89bo9().f[43]++;
                            cov_2grdj89bo9().s[197]++;
                            return {
                              ...prev,
                              family: e.target.value
                            };
                          });
                        },
                        placeholder: "e.g., Araceae",
                        className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                        className: "block text-sm font-medium text-gray-700 mb-1",
                        children: "Genus *"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                        type: "text",
                        value: taxonomyData.genus,
                        onChange: e => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[44]++;
                          cov_2grdj89bo9().s[198]++;
                          return setTaxonomyData(prev => {
                            /* istanbul ignore next */
                            cov_2grdj89bo9().f[45]++;
                            cov_2grdj89bo9().s[199]++;
                            return {
                              ...prev,
                              genus: e.target.value
                            };
                          });
                        },
                        placeholder: "e.g., Monstera",
                        className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                      })]
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "grid grid-cols-1 sm:grid-cols-2 gap-4",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                        className: "block text-sm font-medium text-gray-700 mb-1",
                        children: "Species *"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                        type: "text",
                        value: taxonomyData.species,
                        onChange: e => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[46]++;
                          cov_2grdj89bo9().s[200]++;
                          return setTaxonomyData(prev => {
                            /* istanbul ignore next */
                            cov_2grdj89bo9().f[47]++;
                            cov_2grdj89bo9().s[201]++;
                            return {
                              ...prev,
                              species: e.target.value
                            };
                          });
                        },
                        placeholder: "e.g., deliciosa",
                        className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                        className: "block text-sm font-medium text-gray-700 mb-1",
                        children: "Cultivar (optional)"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                        type: "text",
                        value: taxonomyData.cultivar,
                        onChange: e => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[48]++;
                          cov_2grdj89bo9().s[202]++;
                          return setTaxonomyData(prev => {
                            /* istanbul ignore next */
                            cov_2grdj89bo9().f[49]++;
                            cov_2grdj89bo9().s[203]++;
                            return {
                              ...prev,
                              cultivar: e.target.value
                            };
                          });
                        },
                        placeholder: "e.g., 'Variegata'",
                        className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                      })]
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-end space-x-3 pt-2",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                      type: "button",
                      onClick: handleCancelTaxonomyForm,
                      className: "px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:ring-2 focus:ring-blue-500",
                      children: "Cancel"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                      type: "button",
                      onClick: () => {
                        /* istanbul ignore next */
                        cov_2grdj89bo9().f[50]++;
                        const isValid =
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().s[204]++,
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[50][0]++, taxonomyData.family) &&
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[50][1]++, taxonomyData.genus) &&
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[50][2]++, taxonomyData.species) &&
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[50][3]++, taxonomyData.commonName));
                        /* istanbul ignore next */
                        cov_2grdj89bo9().s[205]++;
                        if (isValid) {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().b[51][0]++;
                          cov_2grdj89bo9().s[206]++;
                          handleTaxonomySubmit(taxonomyData);
                        } else
                        /* istanbul ignore next */
                        {
                          cov_2grdj89bo9().b[51][1]++;
                        }
                      },
                      disabled:
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[52][0]++, !taxonomyData.family) ||
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[52][1]++, !taxonomyData.genus) ||
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[52][2]++, !taxonomyData.species) ||
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[52][3]++, !taxonomyData.commonName),
                      className: "px-3 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-lg hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed",
                      children: "Create Plant Type"
                    })]
                  })]
                })]
              }))]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "grid grid-cols-1 sm:grid-cols-2 gap-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                  htmlFor: "nickname",
                  className: "block text-sm font-medium text-gray-700 mb-2",
                  children: "Nickname *"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_reacthookform.Controller, {
                  name: "nickname",
                  control: control,
                  render: ({
                    field
                  }) => {
                    /* istanbul ignore next */
                    cov_2grdj89bo9().f[51]++;
                    cov_2grdj89bo9().s[207]++;
                    return /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      ...field,
                      id: "nickname",
                      type: "text",
                      placeholder: "My favorite monstera",
                      className: `w-full px-3 py-2 bg-white text-gray-900 placeholder-gray-500 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${errors.nickname ?
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[53][0]++, 'border-red-300') :
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[53][1]++, 'border-gray-300')}`
                    });
                  }
                }),
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[54][0]++, errors.nickname) &&
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[54][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "mt-1 text-sm text-red-600",
                  children: errors.nickname.message
                }))]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                  htmlFor: "location",
                  className: "block text-sm font-medium text-gray-700 mb-2",
                  children: "Location *"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_reacthookform.Controller, {
                  name: "location",
                  control: control,
                  render: ({
                    field
                  }) => {
                    /* istanbul ignore next */
                    cov_2grdj89bo9().f[52]++;
                    cov_2grdj89bo9().s[208]++;
                    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "relative",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                        ...field,
                        id: "location",
                        type: "text",
                        placeholder: "Living room window",
                        className: `w-full px-3 py-2 bg-white text-gray-900 placeholder-gray-500 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${errors.location ?
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[55][0]++, 'border-red-300') :
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[55][1]++, 'border-gray-300')}`,
                        onChange: e => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[53]++;
                          cov_2grdj89bo9().s[209]++;
                          field.onChange(e);
                          /* istanbul ignore next */
                          cov_2grdj89bo9().s[210]++;
                          setLocationInput(e.target.value);
                          /* istanbul ignore next */
                          cov_2grdj89bo9().s[211]++;
                          setShowLocationSuggestions(e.target.value.length > 0);
                        },
                        onFocus: () => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[54]++;
                          cov_2grdj89bo9().s[212]++;
                          return setShowLocationSuggestions(field.value.length > 0);
                        },
                        onBlur: () => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[55]++;
                          cov_2grdj89bo9().s[213]++;
                          return setTimeout(() => {
                            /* istanbul ignore next */
                            cov_2grdj89bo9().f[56]++;
                            cov_2grdj89bo9().s[214]++;
                            return setShowLocationSuggestions(false);
                          }, 200);
                        }
                      }),
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[56][0]++, showLocationSuggestions) &&
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[56][1]++, userLocations) &&
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[56][2]++, userLocations.length > 0) &&
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[56][3]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-40 overflow-y-auto",
                        children: [userLocations.filter(location => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[57]++;
                          cov_2grdj89bo9().s[215]++;
                          return location.toLowerCase().includes(field.value.toLowerCase());
                        }).slice(0, 5).map(location => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[58]++;
                          cov_2grdj89bo9().s[216]++;
                          return /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                            type: "button",
                            onClick: () => {
                              /* istanbul ignore next */
                              cov_2grdj89bo9().f[59]++;
                              cov_2grdj89bo9().s[217]++;
                              field.onChange(location);
                              /* istanbul ignore next */
                              cov_2grdj89bo9().s[218]++;
                              setLocationInput(location);
                              /* istanbul ignore next */
                              cov_2grdj89bo9().s[219]++;
                              setShowLocationSuggestions(false);
                            },
                            className: "w-full px-3 py-2 text-left hover:bg-gray-50 focus:bg-gray-50 focus:outline-none first:rounded-t-lg last:rounded-b-lg",
                            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                              className: "flex items-center",
                              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("svg", {
                                className: "w-4 h-4 text-gray-400 mr-2",
                                fill: "none",
                                stroke: "currentColor",
                                viewBox: "0 0 24 24",
                                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                                  strokeLinecap: "round",
                                  strokeLinejoin: "round",
                                  strokeWidth: 2,
                                  d: "M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
                                }), /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                                  strokeLinecap: "round",
                                  strokeLinejoin: "round",
                                  strokeWidth: 2,
                                  d: "M15 11a3 3 0 11-6 0 3 3 0 016 0z"
                                })]
                              }), location]
                            })
                          }, location);
                        }),
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[57][0]++, field.value.length > 0) &&
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[57][1]++, !userLocations.some(loc => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[60]++;
                          cov_2grdj89bo9().s[220]++;
                          return loc.toLowerCase().includes(field.value.toLowerCase());
                        })) &&
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[57][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "border-t border-gray-100",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                            className: "px-3 py-2 text-xs text-gray-500 font-medium",
                            children: "Suggestions:"
                          }), ['Living room window', 'Kitchen counter', 'Bedroom windowsill', 'Bathroom shelf', 'Office desk', 'Balcony', 'Greenhouse', 'Outdoor garden'].filter(suggestion => {
                            /* istanbul ignore next */
                            cov_2grdj89bo9().f[61]++;
                            cov_2grdj89bo9().s[221]++;
                            return suggestion.toLowerCase().includes(field.value.toLowerCase());
                          }).slice(0, 3).map(suggestion => {
                            /* istanbul ignore next */
                            cov_2grdj89bo9().f[62]++;
                            cov_2grdj89bo9().s[222]++;
                            return /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                              type: "button",
                              onClick: () => {
                                /* istanbul ignore next */
                                cov_2grdj89bo9().f[63]++;
                                cov_2grdj89bo9().s[223]++;
                                field.onChange(suggestion);
                                /* istanbul ignore next */
                                cov_2grdj89bo9().s[224]++;
                                setLocationInput(suggestion);
                                /* istanbul ignore next */
                                cov_2grdj89bo9().s[225]++;
                                setShowLocationSuggestions(false);
                              },
                              className: "w-full px-3 py-2 text-left text-gray-600 hover:bg-gray-50 focus:bg-gray-50 focus:outline-none",
                              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                                className: "flex items-center",
                                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
                                  className: "w-4 h-4 text-gray-300 mr-2",
                                  fill: "none",
                                  stroke: "currentColor",
                                  viewBox: "0 0 24 24",
                                  children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                                    strokeLinecap: "round",
                                    strokeLinejoin: "round",
                                    strokeWidth: 2,
                                    d: "M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"
                                  })
                                }), suggestion]
                              })
                            }, suggestion);
                          })]
                        }))]
                      }))]
                    });
                  }
                }),
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[58][0]++, errors.location) &&
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[58][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "mt-1 text-sm text-red-600",
                  children: errors.location.message
                })), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "mt-1 text-xs text-gray-500",
                  children: 'Be specific about lighting and conditions (e.g., "South-facing kitchen window")'
                })]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                htmlFor: "fertilizerSchedule",
                className: "block text-sm font-medium text-gray-700 mb-2",
                children: "Fertilizer Schedule *"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_reacthookform.Controller, {
                name: "fertilizerSchedule",
                control: control,
                render: ({
                  field
                }) => {
                  /* istanbul ignore next */
                  cov_2grdj89bo9().f[64]++;
                  cov_2grdj89bo9().s[226]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "space-y-3",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
                      ...field,
                      id: "fertilizerSchedule",
                      className: `w-full px-3 py-2 bg-white text-gray-900 border rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${errors.fertilizerSchedule ?
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[59][0]++, 'border-red-300') :
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[59][1]++, 'border-gray-300')}`,
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                        value: "weekly",
                        children: "Weekly (every 7 days) - High maintenance"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                        value: "biweekly",
                        children: "Every 2 weeks - Regular care"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                        value: "every_2_4_weeks",
                        children: "Every 2-4 weeks - Variable schedule"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                        value: "every_3_4_weeks",
                        children: "Every 3-4 weeks - Moderate care"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                        value: "every_4_weeks",
                        children: "Every 4 weeks - Standard monthly"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                        value: "every_4_6_weeks",
                        children: "Every 4-6 weeks - Extended care"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                        value: "every_6_8_weeks",
                        children: "Every 6-8 weeks - Low maintenance"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                        value: "bimonthly",
                        children: "Bi-monthly (every 60 days) - Very low maintenance"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                        value: "quarterly",
                        children: "Quarterly (every 90 days) - Minimal care"
                      })]
                    }),
                    /* istanbul ignore next */
                    (cov_2grdj89bo9().b[60][0]++, field.value) &&
                    /* istanbul ignore next */
                    (cov_2grdj89bo9().b[60][1]++, watch('lastFertilized')) &&
                    /* istanbul ignore next */
                    (cov_2grdj89bo9().b[60][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "bg-primary-50 border border-primary-200 rounded-lg p-3",
                      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center text-sm",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
                          className: "w-4 h-4 text-primary-600 mr-2",
                          fill: "none",
                          stroke: "currentColor",
                          viewBox: "0 0 24 24",
                          children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                            strokeLinecap: "round",
                            strokeLinejoin: "round",
                            strokeWidth: 2,
                            d: "M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                          })
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                          className: "text-primary-800",
                          children: (() => {
                            /* istanbul ignore next */
                            cov_2grdj89bo9().f[65]++;
                            const lastFert =
                            /* istanbul ignore next */
                            (cov_2grdj89bo9().s[227]++, new Date(
                            /* istanbul ignore next */
                            (cov_2grdj89bo9().b[61][0]++, watch('lastFertilized')) ||
                            /* istanbul ignore next */
                            (cov_2grdj89bo9().b[61][1]++, '')));
                            const currentSchedule =
                            /* istanbul ignore next */
                            (cov_2grdj89bo9().s[228]++, watch('fertilizerSchedule'));
                            const scheduleMap =
                            /* istanbul ignore next */
                            (cov_2grdj89bo9().s[229]++, {
                              weekly: 7,
                              biweekly: 14,
                              every_2_4_weeks: 21,
                              every_3_4_weeks: 24,
                              every_4_weeks: 28,
                              every_4_6_weeks: 35,
                              every_6_8_weeks: 49,
                              bimonthly: 60,
                              quarterly: 90
                            });
                            const days =
                            /* istanbul ignore next */
                            (cov_2grdj89bo9().s[230]++, scheduleMap[currentSchedule]);
                            const nextDue =
                            /* istanbul ignore next */
                            (cov_2grdj89bo9().s[231]++, new Date(lastFert));
                            /* istanbul ignore next */
                            cov_2grdj89bo9().s[232]++;
                            nextDue.setDate(nextDue.getDate() + days);
                            /* istanbul ignore next */
                            cov_2grdj89bo9().s[233]++;
                            return `Next fertilizer due: ${nextDue.toLocaleDateString()}`;
                          })()
                        })]
                      })
                    }))]
                  });
                }
              }),
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[62][0]++, errors.fertilizerSchedule) &&
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[62][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "mt-1 text-sm text-red-600",
                children: errors.fertilizerSchedule.message
              })), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "mt-1 text-xs text-gray-500",
                children: "Choose based on your plant's needs and your availability for care"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "grid grid-cols-1 sm:grid-cols-2 gap-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                  className: "block text-sm font-medium text-gray-700 mb-2",
                  children: "Last Fertilized"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_reacthookform.Controller, {
                  name: "lastFertilized",
                  control: control,
                  render: ({
                    field
                  }) => {
                    /* istanbul ignore next */
                    cov_2grdj89bo9().f[66]++;
                    cov_2grdj89bo9().s[234]++;
                    return /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      ...field,
                      type: "date",
                      max: new Date().toISOString().split('T')[0],
                      className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
                    });
                  }
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                  className: "block text-sm font-medium text-gray-700 mb-2",
                  children: "Last Repotted"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_reacthookform.Controller, {
                  name: "lastRepot",
                  control: control,
                  render: ({
                    field
                  }) => {
                    /* istanbul ignore next */
                    cov_2grdj89bo9().f[67]++;
                    cov_2grdj89bo9().s[235]++;
                    return /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                      ...field,
                      type: "date",
                      max: new Date().toISOString().split('T')[0],
                      className: "w-full px-3 py-2 bg-white text-gray-900 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
                    });
                  }
                })]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "block text-sm font-medium text-gray-700 mb-2",
                children: "Notes & Observations"
              }),
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[63][0]++, watch('notes')) &&
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[63][1]++, watch('notes')?.trim()) &&
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[63][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "mb-3 p-3 bg-gray-50 border border-gray-200 rounded-lg",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                  className: "text-sm font-medium text-gray-700 mb-2",
                  children: "Previous Notes:"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-sm text-gray-600 whitespace-pre-wrap max-h-32 overflow-y-auto",
                  children: watch('notes')
                })]
              })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("textarea", {
                  value: newNoteInput,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_2grdj89bo9().f[68]++;
                    cov_2grdj89bo9().s[236]++;
                    return setNewNoteInput(e.target.value);
                  },
                  rows: 3,
                  placeholder: "Add a new observation or note...",
                  className: "w-full px-3 py-2 bg-white text-gray-900 placeholder-gray-500 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 resize-none",
                  onKeyDown: e => {
                    /* istanbul ignore next */
                    cov_2grdj89bo9().f[69]++;
                    cov_2grdj89bo9().s[237]++;
                    if (
                    /* istanbul ignore next */
                    (cov_2grdj89bo9().b[65][0]++, e.key === 'Enter') && (
                    /* istanbul ignore next */
                    (cov_2grdj89bo9().b[65][1]++, e.metaKey) ||
                    /* istanbul ignore next */
                    (cov_2grdj89bo9().b[65][2]++, e.ctrlKey))) {
                      /* istanbul ignore next */
                      cov_2grdj89bo9().b[64][0]++;
                      cov_2grdj89bo9().s[238]++;
                      e.preventDefault();
                      const newNote =
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().s[239]++, newNoteInput.trim());
                      /* istanbul ignore next */
                      cov_2grdj89bo9().s[240]++;
                      if (newNote) {
                        /* istanbul ignore next */
                        cov_2grdj89bo9().b[66][0]++;
                        const timestamp =
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().s[241]++, new Date().toLocaleDateString());
                        const existingNotes =
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().s[242]++,
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[67][0]++, watch('notes')) ||
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[67][1]++, ''));
                        const updatedNotes =
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().s[243]++, existingNotes ?
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[68][0]++, `${existingNotes}\n\n[${timestamp}] ${newNote}`) :
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[68][1]++, `[${timestamp}] ${newNote}`));
                        /* istanbul ignore next */
                        cov_2grdj89bo9().s[244]++;
                        setValue('notes', updatedNotes);
                        /* istanbul ignore next */
                        cov_2grdj89bo9().s[245]++;
                        setNewNoteInput(''); // Clear the input
                      } else
                      /* istanbul ignore next */
                      {
                        cov_2grdj89bo9().b[66][1]++;
                      }
                    } else
                    /* istanbul ignore next */
                    {
                      cov_2grdj89bo9().b[64][1]++;
                    }
                  }
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex justify-between items-center",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                    className: "text-xs text-gray-500",
                    children: "Press Cmd/Ctrl + Enter to add note"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                    type: "button",
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_2grdj89bo9().f[70]++;
                      const newNote =
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().s[246]++, newNoteInput.trim());
                      /* istanbul ignore next */
                      cov_2grdj89bo9().s[247]++;
                      if (newNote) {
                        /* istanbul ignore next */
                        cov_2grdj89bo9().b[69][0]++;
                        const timestamp =
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().s[248]++, new Date().toLocaleDateString());
                        const existingNotes =
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().s[249]++,
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[70][0]++, watch('notes')) ||
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[70][1]++, ''));
                        const updatedNotes =
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().s[250]++, existingNotes ?
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[71][0]++, `${existingNotes}\n\n[${timestamp}] ${newNote}`) :
                        /* istanbul ignore next */
                        (cov_2grdj89bo9().b[71][1]++, `[${timestamp}] ${newNote}`));
                        /* istanbul ignore next */
                        cov_2grdj89bo9().s[251]++;
                        setValue('notes', updatedNotes);
                        /* istanbul ignore next */
                        cov_2grdj89bo9().s[252]++;
                        setNewNoteInput(''); // Clear the input
                      } else
                      /* istanbul ignore next */
                      {
                        cov_2grdj89bo9().b[69][1]++;
                      }
                    },
                    disabled: !newNoteInput.trim(),
                    className: "px-3 py-1 text-sm bg-primary-600 text-white rounded hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed",
                    children: "Add Note"
                  })]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_reacthookform.Controller, {
                name: "notes",
                control: control,
                render: ({
                  field
                }) => {
                  /* istanbul ignore next */
                  cov_2grdj89bo9().f[71]++;
                  cov_2grdj89bo9().s[253]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                    type: "hidden",
                    ...field
                  });
                }
              }),
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[72][0]++, errors.notes) &&
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[72][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "mt-1 text-sm text-red-600",
                children: errors.notes.message
              }))]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
                className: "block text-sm font-medium text-gray-700 mb-2",
                children: "Photos"
              }),
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[73][0]++, existingImages.length > 0) &&
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[73][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "mb-4",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                  className: "text-sm font-medium text-gray-600 mb-2",
                  children: "Current Photos"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "grid grid-cols-3 sm:grid-cols-4 gap-2",
                  children: existingImages.map((image, index) => {
                    /* istanbul ignore next */
                    cov_2grdj89bo9().f[72]++;
                    cov_2grdj89bo9().s[254]++;
                    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "relative group",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("img", {
                        src: image,
                        alt: `Plant photo ${index + 1}`,
                        className: "w-full aspect-square object-cover rounded-lg"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                        type: "button",
                        onClick: () => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[73]++;
                          cov_2grdj89bo9().s[255]++;
                          return handleRemoveExistingImage(index);
                        },
                        className: "absolute top-1 right-1 p-1 bg-red-500 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity",
                        title: "Remove image",
                        "aria-label": `Remove image ${index + 1}`,
                        children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
                          className: "w-3 h-3",
                          fill: "currentColor",
                          viewBox: "0 0 20 20",
                          children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                            fillRule: "evenodd",
                            d: "M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",
                            clipRule: "evenodd"
                          })
                        })
                      }),
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[74][0]++, index === 0) &&
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[74][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "absolute bottom-1 left-1 bg-primary-500 text-white text-xs px-1 py-0.5 rounded",
                        children: "Primary"
                      })),
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[75][0]++, index !== 0) &&
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[75][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                        type: "button",
                        onClick: () => {
                          /* istanbul ignore next */
                          cov_2grdj89bo9().f[74]++;
                          cov_2grdj89bo9().s[256]++;
                          return handleSetPrimaryImage(index);
                        },
                        className: "absolute bottom-1 left-1 bg-black bg-opacity-50 text-white text-xs px-1 py-0.5 rounded opacity-0 group-hover:opacity-100 transition-opacity",
                        title: "Set as primary image",
                        "aria-label": `Set image ${index + 1} as primary`,
                        children: "Set Primary"
                      }))]
                    }, index);
                  })
                })]
              })), /*#__PURE__*/(0, _jsxruntime.jsx)(_ImageUpload.default, {
                onImagesChange: handleImageChange,
                maxImages: 6 - existingImages.length,
                acceptedTypes: ['image/jpeg', 'image/png', 'image/webp'],
                maxSizePerImage: 5 * 1024 * 1024
              })]
            }),
            /* istanbul ignore next */
            (cov_2grdj89bo9().b[76][0]++, isEditing) &&
            /* istanbul ignore next */
            (cov_2grdj89bo9().b[76][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "bg-gray-50 border border-gray-200 rounded-lg p-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                className: "text-sm font-medium text-gray-900 mb-3",
                children: "Plant Status"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_reacthookform.Controller, {
                name: "isActive",
                control: control,
                render: ({
                  field: {
                    value,
                    onChange
                  }
                }) => {
                  /* istanbul ignore next */
                  cov_2grdj89bo9().f[75]++;
                  cov_2grdj89bo9().s[257]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "space-y-3",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                      className: "flex items-start cursor-pointer",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                        type: "checkbox",
                        checked: value,
                        onChange: onChange,
                        className: "w-4 h-4 text-primary-600 border-gray-300 rounded focus:ring-primary-500 mt-0.5"
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "ml-3",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                          className: "text-sm font-medium text-gray-700",
                          children: "Keep this plant active in my collection"
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                          className: "text-xs text-gray-500 mt-1",
                          children: value ?
                          /* istanbul ignore next */
                          (cov_2grdj89bo9().b[77][0]++, 'This plant will appear in your main collection and care reminders') :
                          /* istanbul ignore next */
                          (cov_2grdj89bo9().b[77][1]++, 'This plant will be archived and hidden from your main collection')
                        })]
                      })]
                    }),
                    /* istanbul ignore next */
                    (cov_2grdj89bo9().b[78][0]++, !value) &&
                    /* istanbul ignore next */
                    (cov_2grdj89bo9().b[78][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "bg-amber-50 border border-amber-200 rounded p-3",
                      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex items-start",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
                          className: "w-4 h-4 text-amber-600 mt-0.5 mr-2 flex-shrink-0",
                          fill: "currentColor",
                          viewBox: "0 0 20 20",
                          children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                            fillRule: "evenodd",
                            d: "M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z",
                            clipRule: "evenodd"
                          })
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "text-xs text-amber-800",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                            className: "font-medium",
                            children: "Archiving this plant"
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                            children: "Care history will be preserved, but the plant won't appear in your active collection or receive care reminders."
                          })]
                        })]
                      })
                    }))]
                  });
                }
              })]
            }))]
          }),
          /* istanbul ignore next */
          (cov_2grdj89bo9().b[79][0]++, Object.keys(errors).length > 0) &&
          /* istanbul ignore next */
          (cov_2grdj89bo9().b[79][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "mx-6 mb-4 bg-red-50 border border-red-200 rounded-lg p-4",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-start",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
                className: "w-5 h-5 text-red-400 mt-0.5 mr-3 flex-shrink-0",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                  fillRule: "evenodd",
                  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z",
                  clipRule: "evenodd"
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                  className: "text-sm font-medium text-red-800 mb-2",
                  children: "Please fix the following errors:"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("ul", {
                  className: "text-sm text-red-700 space-y-1",
                  children: Object.entries(errors).map(([field, error]) => {
                    /* istanbul ignore next */
                    cov_2grdj89bo9().f[76]++;
                    cov_2grdj89bo9().s[258]++;
                    return /*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
                      children: ["• ", field === 'plantId' ?
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[80][0]++, 'Plant type') :
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[80][1]++, field === 'fertilizerSchedule' ?
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[81][0]++, 'Fertilizer schedule') :
                      /* istanbul ignore next */
                      (cov_2grdj89bo9().b[81][1]++, field.charAt(0).toUpperCase() + field.slice(1))), ": ", error.message]
                    }, field);
                  })
                })]
              })]
            })
          })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between p-6 border-t border-gray-200 bg-gray-50",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center text-sm text-gray-500",
              children: [
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[82][0]++, !isValid) &&
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[82][1]++, Object.keys(errors).length === 0) &&
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[82][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Fill in required fields to continue"
              })),
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[83][0]++, isValid) &&
              /* istanbul ignore next */
              (cov_2grdj89bo9().b[83][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                className: "text-green-600 flex items-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
                  className: "w-4 h-4 mr-1",
                  fill: "currentColor",
                  viewBox: "0 0 20 20",
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                    fillRule: "evenodd",
                    d: "M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z",
                    clipRule: "evenodd"
                  })
                }), "Ready to save"]
              }))]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex space-x-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                type: "button",
                onClick: handleClose,
                disabled: mutation.isPending,
                className: "px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 transition-colors",
                children: "Cancel"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                type: "submit",
                disabled:
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[84][0]++, mutation.isPending) ||
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[84][1]++, !selectedPlant) &&
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[84][2]++, !isEditing),
                className: "px-4 py-2 text-sm font-medium text-white bg-primary-600 border border-transparent rounded-lg hover:bg-primary-700 focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors",
                children: mutation.isPending ?
                /* istanbul ignore next */
                (/*#__PURE__*/cov_2grdj89bo9().b[85][0]++, (0, _jsxruntime.jsxs)("span", {
                  className: "flex items-center",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("svg", {
                    className: "animate-spin -ml-1 mr-2 h-4 w-4",
                    fill: "none",
                    viewBox: "0 0 24 24",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("circle", {
                      className: "opacity-25",
                      cx: "12",
                      cy: "12",
                      r: "10",
                      stroke: "currentColor",
                      strokeWidth: "4"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                      className: "opacity-75",
                      fill: "currentColor",
                      d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                    })]
                  }), isEditing ?
                  /* istanbul ignore next */
                  (cov_2grdj89bo9().b[86][0]++, 'Updating...') :
                  /* istanbul ignore next */
                  (cov_2grdj89bo9().b[86][1]++, 'Adding...')]
                })) :
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[85][1]++, isEditing ?
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[87][0]++, 'Update Plant') :
                /* istanbul ignore next */
                (cov_2grdj89bo9().b[87][1]++, 'Add Plant'))
              })]
            })]
          })]
        }),
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[88][0]++, mutation.isError) &&
        /* istanbul ignore next */
        (cov_2grdj89bo9().b[88][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "p-4 bg-red-50 border-t border-red-200",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-sm text-red-600",
            children: mutation.error instanceof Error ?
            /* istanbul ignore next */
            (cov_2grdj89bo9().b[89][0]++, mutation.error.message) :
            /* istanbul ignore next */
            (cov_2grdj89bo9().b[89][1]++, 'An error occurred')
          })
        }))]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
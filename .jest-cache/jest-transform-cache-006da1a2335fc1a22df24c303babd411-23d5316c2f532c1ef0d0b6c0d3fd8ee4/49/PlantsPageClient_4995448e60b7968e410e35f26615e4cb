f62f1eedc69be9484797e889e145ee0f
'use client';
"use strict";

/* istanbul ignore next */
function cov_1n0pbhbv0j() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/app/dashboard/plants/PlantsPageClient.tsx";
  var hash = "33f1b6b7662f130e9cc747dfb5609b7d4fc835bb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/app/dashboard/plants/PlantsPageClient.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 53
        }
      },
      "7": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 57
        }
      },
      "8": {
        start: {
          line: 18,
          column: 46
        },
        end: {
          line: 18,
          column: 72
        }
      },
      "9": {
        start: {
          line: 19,
          column: 54
        },
        end: {
          line: 19,
          column: 81
        }
      },
      "10": {
        start: {
          line: 20,
          column: 50
        },
        end: {
          line: 20,
          column: 77
        }
      },
      "11": {
        start: {
          line: 21,
          column: 44
        },
        end: {
          line: 21,
          column: 70
        }
      },
      "12": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "13": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 32
        }
      },
      "14": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 35
        }
      },
      "15": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "17": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 33
        }
      },
      "18": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 36
        }
      },
      "19": {
        start: {
          line: 34,
          column: 29
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "20": {
        start: {
          line: 38,
          column: 29
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "21": {
        start: {
          line: 42,
          column: 27
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "22": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "23": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 33
        }
      },
      "24": {
        start: {
          line: 47,
          column: 30
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "25": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 34
        }
      },
      "26": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 30
        }
      },
      "27": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 58,
          column: 11
        }
      },
      "28": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 158,
          column: 7
        }
      },
      "29": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 139,
          column: 48
        }
      },
      "30": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 140,
          column: 43
        }
      },
      "31": {
        start: {
          line: 151,
          column: 20
        },
        end: {
          line: 151,
          column: 46
        }
      },
      "32": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 152,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "PlantsPageClient",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 25
          }
        },
        loc: {
          start: {
            line: 16,
            column: 38
          },
          end: {
            line: 159,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 30
          },
          end: {
            line: 23,
            column: 31
          }
        },
        loc: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 28,
            column: 29
          }
        },
        loc: {
          start: {
            line: 28,
            column: 37
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 30
          }
        },
        loc: {
          start: {
            line: 34,
            column: 46
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 38,
            column: 29
          },
          end: {
            line: 38,
            column: 30
          }
        },
        loc: {
          start: {
            line: 38,
            column: 47
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 42,
            column: 28
          }
        },
        loc: {
          start: {
            line: 42,
            column: 31
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 42
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 47,
            column: 31
          }
        },
        loc: {
          start: {
            line: 47,
            column: 40
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 47
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 138,
            column: 25
          },
          end: {
            line: 138,
            column: 26
          }
        },
        loc: {
          start: {
            line: 138,
            column: 29
          },
          end: {
            line: 141,
            column: 17
          }
        },
        line: 138
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 143,
            column: 28
          }
        },
        loc: {
          start: {
            line: 143,
            column: 48
          },
          end: {
            line: 145,
            column: 17
          }
        },
        line: 143
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 150,
            column: 25
          },
          end: {
            line: 150,
            column: 26
          }
        },
        loc: {
          start: {
            line: 150,
            column: 29
          },
          end: {
            line: 153,
            column: 17
          }
        },
        line: 150
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 146,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 25
          }
        }, {
          start: {
            line: 135,
            column: 43
          },
          end: {
            line: 146,
            column: 14
          }
        }],
        line: 135
      },
      "1": {
        loc: {
          start: {
            line: 148,
            column: 31
          },
          end: {
            line: 148,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 31
          },
          end: {
            line: 148,
            column: 43
          }
        }, {
          start: {
            line: 148,
            column: 47
          },
          end: {
            line: 148,
            column: 56
          }
        }],
        line: 148
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/app/dashboard/plants/PlantsPageClient.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { PlantsGrid, PlantDetailModal, PlantInstanceForm } from '@/components/plants';\nimport type { EnhancedPlantInstance } from '@/lib/types/plant-instance-types';\n\ninterface PlantsPageClientProps {\n  userId: number;\n}\n\nexport default function PlantsPageClient({ userId }: PlantsPageClientProps) {\n  const queryClient = useQueryClient();\n  const [selectedPlant, setSelectedPlant] = useState<EnhancedPlantInstance | null>(null);\n  const [isDetailModalOpen, setIsDetailModalOpen] = useState(false);\n  const [isFormModalOpen, setIsFormModalOpen] = useState(false);\n  const [editingPlant, setEditingPlant] = useState<EnhancedPlantInstance | null>(null);\n\n  // Handle plant selection (open detail modal)\n  const handlePlantSelect = (plant: EnhancedPlantInstance) => {\n    setSelectedPlant(plant);\n    setIsDetailModalOpen(true);\n  };\n\n  // Handle plant editing\n  const handlePlantEdit = (plant: EnhancedPlantInstance) => {\n    setEditingPlant(plant);\n    setIsFormModalOpen(true);\n    setIsDetailModalOpen(false);\n  };\n\n  // Handle care actions\n  const handleCareAction = (plant: EnhancedPlantInstance, action: 'fertilize' | 'repot') => {\n    // This will be handled by the quick care system\n  };\n\n  // Handle bulk actions\n  const handleBulkAction = (plants: EnhancedPlantInstance[], action: string) => {\n    // Bulk action logic will be implemented here\n  };\n\n  // Handle add new plant\n  const handleAddPlant = () => {\n    setEditingPlant(null);\n    setIsFormModalOpen(true);\n  };\n\n  // Handle form success\n  const handleFormSuccess = async () => {\n    setIsFormModalOpen(false);\n    setEditingPlant(null);\n    \n    // Force a grid refresh to ensure immediate updates\n    // Form success, forcing grid refresh\n    await queryClient.invalidateQueries({ \n      queryKey: ['plant-instances', userId],\n      refetchType: 'all'\n    });\n    \n    // Don't automatically open detail modal - let user decide\n    // This prevents the white line issue from modal conflicts\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div className=\"page-content\">\n          {/* Main Plants Card */}\n          <div className=\"card card--dreamy\">\n            {/* Header */}\n            <div className=\"card-header\">\n              <div className=\"flex-between\">\n                <div>\n                  <h1 className=\"text-3xl font-bold text-neutral-900\">My Plants</h1>\n                  <p className=\"text-neutral-600 mt-2\">Manage your plant collection</p>\n                </div>\n\n                <button\n                  onClick={handleAddPlant}\n                  className=\"btn btn--primary\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                  Add Plant\n                </button>\n              </div>\n            </div>\n\n            {/* Plants Grid */}\n            <div className=\"card-body\">\n              <div className=\"card card--flat\">\n                <PlantsGrid\n                  userId={userId}\n                  onPlantSelect={handlePlantSelect}\n                  onCareAction={handleCareAction}\n                  onEdit={handlePlantEdit}\n                  onBulkAction={handleBulkAction}\n                  showSearch={true}\n                  showFilters={true}\n                  showAdvancedSearch={true}\n                  showSearchResults={true}\n                  showPresets={true}\n                  showHistory={true}\n                  cardSize=\"medium\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Plant Detail Modal */}\n      {selectedPlant && (\n        <PlantDetailModal\n          plantId={selectedPlant.id}\n          isOpen={isDetailModalOpen}\n          onClose={() => {\n            setIsDetailModalOpen(false);\n            setSelectedPlant(null);\n          }}\n          onEdit={handlePlantEdit}\n          onCareLog={(plantId, careType) => {\n            // Care logged successfully\n          }}\n        />\n      )}\n\n      {/* Plant Form Modal */}\n      <PlantInstanceForm\n        plantInstance={editingPlant || undefined}\n        isOpen={isFormModalOpen}\n        onClose={() => {\n          setIsFormModalOpen(false);\n          setEditingPlant(null);\n        }}\n        onSuccess={handleFormSuccess}\n        userId={userId}\n      />\n    </div>\n  );\n}"],
      names: ["PlantsPageClient", "userId", "queryClient", "useQueryClient", "selectedPlant", "setSelectedPlant", "useState", "isDetailModalOpen", "setIsDetailModalOpen", "isFormModalOpen", "setIsFormModalOpen", "editingPlant", "setEditingPlant", "handlePlantSelect", "plant", "handlePlantEdit", "handleCareAction", "action", "handleBulkAction", "plants", "handleAddPlant", "handleFormSuccess", "invalidateQueries", "queryKey", "refetchType", "div", "className", "h1", "p", "button", "onClick", "svg", "fill", "stroke", "viewBox", "path", "strokeLinecap", "strokeLinejoin", "strokeWidth", "d", "PlantsGrid", "onPlantSelect", "onCareAction", "onEdit", "onBulkAction", "showSearch", "showFilters", "showAdvancedSearch", "showSearchResults", "showPresets", "showHistory", "cardSize", "PlantDetailModal", "plantId", "id", "isOpen", "onClose", "onCareLog", "careType", "PlantInstanceForm", "plantInstance", "undefined", "onSuccess"],
      mappings: "AAAA;;;;;+BAWA;;;eAAwBA;;;;uBATC;4BACM;wBACiC;AAOjD,SAASA,iBAAiB,EAAEC,MAAM,EAAyB;IACxE,MAAMC,cAAcC,IAAAA,0BAAc;IAClC,MAAM,CAACC,eAAeC,iBAAiB,GAAGC,IAAAA,eAAQ,EAA+B;IACjF,MAAM,CAACC,mBAAmBC,qBAAqB,GAAGF,IAAAA,eAAQ,EAAC;IAC3D,MAAM,CAACG,iBAAiBC,mBAAmB,GAAGJ,IAAAA,eAAQ,EAAC;IACvD,MAAM,CAACK,cAAcC,gBAAgB,GAAGN,IAAAA,eAAQ,EAA+B;IAE/E,6CAA6C;IAC7C,MAAMO,oBAAoB,CAACC;QACzBT,iBAAiBS;QACjBN,qBAAqB;IACvB;IAEA,uBAAuB;IACvB,MAAMO,kBAAkB,CAACD;QACvBF,gBAAgBE;QAChBJ,mBAAmB;QACnBF,qBAAqB;IACvB;IAEA,sBAAsB;IACtB,MAAMQ,mBAAmB,CAACF,OAA8BG;IACtD,gDAAgD;IAClD;IAEA,sBAAsB;IACtB,MAAMC,mBAAmB,CAACC,QAAiCF;IACzD,6CAA6C;IAC/C;IAEA,uBAAuB;IACvB,MAAMG,iBAAiB;QACrBR,gBAAgB;QAChBF,mBAAmB;IACrB;IAEA,sBAAsB;IACtB,MAAMW,oBAAoB;QACxBX,mBAAmB;QACnBE,gBAAgB;QAEhB,mDAAmD;QACnD,qCAAqC;QACrC,MAAMV,YAAYoB,iBAAiB,CAAC;YAClCC,UAAU;gBAAC;gBAAmBtB;aAAO;YACrCuB,aAAa;QACf;IAEA,0DAA0D;IAC1D,0DAA0D;IAC5D;IAEA,qBACE,sBAACC;QAAIC,WAAU;;0BACb,qBAACD;gBAAIC,WAAU;0BACb,cAAA,qBAACD;oBAAIC,WAAU;8BAEb,cAAA,sBAACD;wBAAIC,WAAU;;0CAEb,qBAACD;gCAAIC,WAAU;0CACb,cAAA,sBAACD;oCAAIC,WAAU;;sDACb,sBAACD;;8DACC,qBAACE;oDAAGD,WAAU;8DAAsC;;8DACpD,qBAACE;oDAAEF,WAAU;8DAAwB;;;;sDAGvC,sBAACG;4CACCC,SAASV;4CACTM,WAAU;;8DAEV,qBAACK;oDAAIL,WAAU;oDAAUM,MAAK;oDAAOC,QAAO;oDAAeC,SAAQ;8DACjE,cAAA,qBAACC;wDAAKC,eAAc;wDAAQC,gBAAe;wDAAQC,aAAa;wDAAGC,GAAE;;;gDACjE;;;;;;0CAOZ,qBAACd;gCAAIC,WAAU;0CACb,cAAA,qBAACD;oCAAIC,WAAU;8CACb,cAAA,qBAACc,kBAAU;wCACTvC,QAAQA;wCACRwC,eAAe5B;wCACf6B,cAAc1B;wCACd2B,QAAQ5B;wCACR6B,cAAc1B;wCACd2B,YAAY;wCACZC,aAAa;wCACbC,oBAAoB;wCACpBC,mBAAmB;wCACnBC,aAAa;wCACbC,aAAa;wCACbC,UAAS;;;;;;;;YASpB/C,+BACC,qBAACgD,wBAAgB;gBACfC,SAASjD,cAAckD,EAAE;gBACzBC,QAAQhD;gBACRiD,SAAS;oBACPhD,qBAAqB;oBACrBH,iBAAiB;gBACnB;gBACAsC,QAAQ5B;gBACR0C,WAAW,CAACJ,SAASK;gBACnB,2BAA2B;gBAC7B;;0BAKJ,qBAACC,yBAAiB;gBAChBC,eAAejD,gBAAgBkD;gBAC/BN,QAAQ9C;gBACR+C,SAAS;oBACP9C,mBAAmB;oBACnBE,gBAAgB;gBAClB;gBACAkD,WAAWzC;gBACXpB,QAAQA;;;;AAIhB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "33f1b6b7662f130e9cc747dfb5609b7d4fc835bb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1n0pbhbv0j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1n0pbhbv0j();
cov_1n0pbhbv0j().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1n0pbhbv0j().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1n0pbhbv0j().f[0]++;
    cov_1n0pbhbv0j().s[2]++;
    return PlantsPageClient;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1n0pbhbv0j().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1n0pbhbv0j().s[4]++, require("react"));
const _reactquery =
/* istanbul ignore next */
(cov_1n0pbhbv0j().s[5]++, require("@tanstack/react-query"));
const _plants =
/* istanbul ignore next */
(cov_1n0pbhbv0j().s[6]++, require("../../../components/plants"));
function PlantsPageClient({
  userId
}) {
  /* istanbul ignore next */
  cov_1n0pbhbv0j().f[1]++;
  const queryClient =
  /* istanbul ignore next */
  (cov_1n0pbhbv0j().s[7]++, (0, _reactquery.useQueryClient)());
  const [selectedPlant, setSelectedPlant] =
  /* istanbul ignore next */
  (cov_1n0pbhbv0j().s[8]++, (0, _react.useState)(null));
  const [isDetailModalOpen, setIsDetailModalOpen] =
  /* istanbul ignore next */
  (cov_1n0pbhbv0j().s[9]++, (0, _react.useState)(false));
  const [isFormModalOpen, setIsFormModalOpen] =
  /* istanbul ignore next */
  (cov_1n0pbhbv0j().s[10]++, (0, _react.useState)(false));
  const [editingPlant, setEditingPlant] =
  /* istanbul ignore next */
  (cov_1n0pbhbv0j().s[11]++, (0, _react.useState)(null));
  // Handle plant selection (open detail modal)
  /* istanbul ignore next */
  cov_1n0pbhbv0j().s[12]++;
  const handlePlantSelect = plant => {
    /* istanbul ignore next */
    cov_1n0pbhbv0j().f[2]++;
    cov_1n0pbhbv0j().s[13]++;
    setSelectedPlant(plant);
    /* istanbul ignore next */
    cov_1n0pbhbv0j().s[14]++;
    setIsDetailModalOpen(true);
  };
  // Handle plant editing
  /* istanbul ignore next */
  cov_1n0pbhbv0j().s[15]++;
  const handlePlantEdit = plant => {
    /* istanbul ignore next */
    cov_1n0pbhbv0j().f[3]++;
    cov_1n0pbhbv0j().s[16]++;
    setEditingPlant(plant);
    /* istanbul ignore next */
    cov_1n0pbhbv0j().s[17]++;
    setIsFormModalOpen(true);
    /* istanbul ignore next */
    cov_1n0pbhbv0j().s[18]++;
    setIsDetailModalOpen(false);
  };
  // Handle care actions
  /* istanbul ignore next */
  cov_1n0pbhbv0j().s[19]++;
  const handleCareAction = (plant, action) => {
    /* istanbul ignore next */
    cov_1n0pbhbv0j().f[4]++;
  } // This will be handled by the quick care system
  ;
  // Handle bulk actions
  /* istanbul ignore next */
  cov_1n0pbhbv0j().s[20]++;
  const handleBulkAction = (plants, action) => {
    /* istanbul ignore next */
    cov_1n0pbhbv0j().f[5]++;
  } // Bulk action logic will be implemented here
  ;
  // Handle add new plant
  /* istanbul ignore next */
  cov_1n0pbhbv0j().s[21]++;
  const handleAddPlant = () => {
    /* istanbul ignore next */
    cov_1n0pbhbv0j().f[6]++;
    cov_1n0pbhbv0j().s[22]++;
    setEditingPlant(null);
    /* istanbul ignore next */
    cov_1n0pbhbv0j().s[23]++;
    setIsFormModalOpen(true);
  };
  // Handle form success
  /* istanbul ignore next */
  cov_1n0pbhbv0j().s[24]++;
  const handleFormSuccess = async () => {
    /* istanbul ignore next */
    cov_1n0pbhbv0j().f[7]++;
    cov_1n0pbhbv0j().s[25]++;
    setIsFormModalOpen(false);
    /* istanbul ignore next */
    cov_1n0pbhbv0j().s[26]++;
    setEditingPlant(null);
    // Force a grid refresh to ensure immediate updates
    // Form success, forcing grid refresh
    /* istanbul ignore next */
    cov_1n0pbhbv0j().s[27]++;
    await queryClient.invalidateQueries({
      queryKey: ['plant-instances', userId],
      refetchType: 'all'
    });
    // Don't automatically open detail modal - let user decide
    // This prevents the white line issue from modal conflicts
  };
  /* istanbul ignore next */
  cov_1n0pbhbv0j().s[28]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "page",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "container",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "page-content",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "card card--dreamy",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "card-header",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex-between",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
                  className: "text-3xl font-bold text-neutral-900",
                  children: "My Plants"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "text-neutral-600 mt-2",
                  children: "Manage your plant collection"
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
                onClick: handleAddPlant,
                className: "btn btn--primary",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
                  className: "w-5 h-5",
                  fill: "none",
                  stroke: "currentColor",
                  viewBox: "0 0 24 24",
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                    strokeWidth: 2,
                    d: "M12 6v6m0 0v6m0-6h6m-6 0H6"
                  })
                }), "Add Plant"]
              })]
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "card-body",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "card card--flat",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_plants.PlantsGrid, {
                userId: userId,
                onPlantSelect: handlePlantSelect,
                onCareAction: handleCareAction,
                onEdit: handlePlantEdit,
                onBulkAction: handleBulkAction,
                showSearch: true,
                showFilters: true,
                showAdvancedSearch: true,
                showSearchResults: true,
                showPresets: true,
                showHistory: true,
                cardSize: "medium"
              })
            })
          })]
        })
      })
    }),
    /* istanbul ignore next */
    (cov_1n0pbhbv0j().b[0][0]++, selectedPlant) &&
    /* istanbul ignore next */
    (cov_1n0pbhbv0j().b[0][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_plants.PlantDetailModal, {
      plantId: selectedPlant.id,
      isOpen: isDetailModalOpen,
      onClose: () => {
        /* istanbul ignore next */
        cov_1n0pbhbv0j().f[8]++;
        cov_1n0pbhbv0j().s[29]++;
        setIsDetailModalOpen(false);
        /* istanbul ignore next */
        cov_1n0pbhbv0j().s[30]++;
        setSelectedPlant(null);
      },
      onEdit: handlePlantEdit,
      onCareLog: (plantId, careType) => {
        /* istanbul ignore next */
        cov_1n0pbhbv0j().f[9]++;
      } // Care logged successfully
    })), /*#__PURE__*/(0, _jsxruntime.jsx)(_plants.PlantInstanceForm, {
      plantInstance:
      /* istanbul ignore next */
      (cov_1n0pbhbv0j().b[1][0]++, editingPlant) ||
      /* istanbul ignore next */
      (cov_1n0pbhbv0j().b[1][1]++, undefined),
      isOpen: isFormModalOpen,
      onClose: () => {
        /* istanbul ignore next */
        cov_1n0pbhbv0j().f[10]++;
        cov_1n0pbhbv0j().s[31]++;
        setIsFormModalOpen(false);
        /* istanbul ignore next */
        cov_1n0pbhbv0j().s[32]++;
        setEditingPlant(null);
      },
      onSuccess: handleFormSuccess,
      userId: userId
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
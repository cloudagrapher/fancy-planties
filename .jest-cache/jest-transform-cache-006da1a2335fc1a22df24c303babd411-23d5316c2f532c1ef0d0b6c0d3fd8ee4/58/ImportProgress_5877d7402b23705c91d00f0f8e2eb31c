92e40f2616888cc0096d626ed4a84151
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ImportProgress", {
    enumerable: true,
    get: function() {
        return ImportProgress;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _lucidereact = require("lucide-react");
function ImportProgress({ importId, onComplete, onError, className = '' }) {
    const [progress, setProgress] = (0, _react.useState)(null);
    const [loading, setLoading] = (0, _react.useState)(true);
    (0, _react.useEffect)(()=>{
        let intervalId;
        const fetchProgress = async ()=>{
            try {
                const response = await fetch(`/api/import/csv/${importId}`);
                if (response.status === 404) {
                    // Import might have completed and been cleaned up
                    const errorData = await response.json().catch(()=>({}));
                    if (errorData.message?.includes('completed successfully')) {
                        // Treat as successful completion
                        const completedProgress = {
                            id: importId,
                            userId: 0,
                            fileName: 'Import completed',
                            importType: 'plant_instances',
                            status: 'completed',
                            progress: 100,
                            totalRows: 0,
                            processedRows: 0,
                            errors: [],
                            conflicts: [],
                            startTime: new Date(),
                            endTime: new Date()
                        };
                        setProgress(completedProgress);
                        onComplete?.(completedProgress);
                        clearInterval(intervalId);
                        return;
                    } else {
                        throw new Error('Import not found - it may have expired');
                    }
                }
                if (!response.ok) {
                    throw new Error('Failed to fetch progress');
                }
                const data = await response.json();
                setProgress(data.progress);
                if (data.progress.status === 'completed') {
                    onComplete?.(data.progress);
                    clearInterval(intervalId);
                } else if (data.progress.status === 'failed') {
                    onError?.(data.progress.errors[0]?.message || 'Import failed');
                    clearInterval(intervalId);
                }
            } catch (error) {
                console.error('Error fetching progress:', error);
                onError?.(error instanceof Error ? error.message : 'Unknown error');
                clearInterval(intervalId);
            } finally{
                setLoading(false);
            }
        };
        // Initial fetch
        fetchProgress();
        // Poll for updates every 2 seconds
        intervalId = setInterval(fetchProgress, 2000);
        return ()=>clearInterval(intervalId);
    }, [
        importId,
        onComplete,
        onError
    ]);
    if (loading || !progress) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: `flex-center p-8 ${className}`,
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "spinner spinner--primary"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                    className: "loading-text",
                    children: "Loading import status..."
                })
            ]
        });
    }
    const getStatusIcon = ()=>{
        switch(progress.status){
            case 'pending':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.Clock, {
                    className: "w-6 h-6 text-warning"
                });
            case 'processing':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "spinner spinner--primary"
                });
            case 'completed':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
                    className: "w-6 h-6 text-success"
                });
            case 'failed':
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.XCircle, {
                    className: "w-6 h-6 text-error"
                });
            default:
                return /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.FileText, {
                    className: "w-6 h-6 text-neutral-500"
                });
        }
    };
    const getStatusText = ()=>{
        switch(progress.status){
            case 'pending':
                return 'Waiting to start...';
            case 'processing':
                return 'Processing CSV data...';
            case 'completed':
                return 'Import completed successfully!';
            case 'failed':
                return 'Import failed';
            default:
                return 'Unknown status';
        }
    };
    const getStatusColor = ()=>{
        switch(progress.status){
            case 'pending':
                return 'text-warning';
            case 'processing':
                return 'text-info';
            case 'completed':
                return 'text-success';
            case 'failed':
                return 'text-error';
            default:
                return 'text-neutral-700';
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: `space-y-6 ${className}`,
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex-start space-x-3",
                children: [
                    getStatusIcon(),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                                className: "text-lg font-semibold text-neutral-900",
                                children: "Import Progress"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                className: `text-sm ${getStatusColor()}`,
                                children: getStatusText()
                            })
                        ]
                    })
                ]
            }),
            progress.status === 'processing' && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "flex-between text-sm text-neutral-600",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                children: "Processing rows..."
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                children: [
                                    progress.processedRows,
                                    " / ",
                                    progress.totalRows
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "w-full bg-neutral-200 rounded-full h-2",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "bg-primary-500 h-2 rounded-full transition-all duration-300",
                            style: {
                                width: `${progress.progress}%`
                            }
                        })
                    })
                ]
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "card card-body",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "grid-responsive text-sm",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: "font-medium text-neutral-700",
                                    children: "File:"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-neutral-600 truncate",
                                    children: progress.fileName
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: "font-medium text-neutral-700",
                                    children: "Type:"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-neutral-600 capitalize",
                                    children: progress.importType.replace('_', ' ')
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: "font-medium text-neutral-700",
                                    children: "Started:"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-neutral-600",
                                    children: new Date(progress.startTime).toLocaleString()
                                })
                            ]
                        }),
                        progress.endTime && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                    className: "font-medium text-neutral-700",
                                    children: "Completed:"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-neutral-600",
                                    children: new Date(progress.endTime).toLocaleString()
                                })
                            ]
                        })
                    ]
                })
            }),
            progress.status === 'completed' && progress.summary && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "card card--mint card-body",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                        className: "font-medium text-success mb-3",
                        children: "Import Summary"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "grid-responsive text-sm",
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        className: "font-medium text-success",
                                        children: "Total Rows:"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-success",
                                        children: progress.summary.totalRows
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        className: "font-medium text-success",
                                        children: "Successful:"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-success",
                                        children: progress.summary.successfulImports
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        className: "font-medium text-success",
                                        children: "Errors:"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-success",
                                        children: progress.summary.errors.length
                                    })
                                ]
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                                        className: "font-medium text-success",
                                        children: "Conflicts:"
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                        className: "text-success",
                                        children: progress.summary.conflicts.length
                                    })
                                ]
                            })
                        ]
                    })
                ]
            }),
            progress.errors.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "bg-red-50 border border-red-200 rounded-lg p-4",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-start space-x-2",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.XCircle, {
                            className: "w-5 h-5 text-red-500 flex-shrink-0 mt-0.5"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                    className: "font-medium text-red-900 mb-2",
                                    children: "Errors:"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "space-y-1 max-h-32 overflow-y-auto",
                                    children: progress.errors.map((error, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "text-sm text-red-700",
                                            children: [
                                                error.field && /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                    className: "font-medium",
                                                    children: [
                                                        "Row ",
                                                        error.rowIndex + 1,
                                                        ", ",
                                                        error.field,
                                                        ": "
                                                    ]
                                                }),
                                                error.message
                                            ]
                                        }, index))
                                })
                            ]
                        })
                    ]
                })
            }),
            progress.conflicts.length > 0 && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "bg-yellow-50 border border-yellow-200 rounded-lg p-4",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-start space-x-2",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
                            className: "w-5 h-5 text-yellow-500 flex-shrink-0 mt-0.5"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex-1",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h4", {
                                    className: "font-medium text-yellow-900 mb-2",
                                    children: "Conflicts Require Resolution:"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "space-y-1 max-h-32 overflow-y-auto",
                                    children: progress.conflicts.map((conflict, index)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "text-sm text-yellow-700",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("span", {
                                                    className: "font-medium",
                                                    children: [
                                                        "Row ",
                                                        conflict.rowIndex + 1,
                                                        ": "
                                                    ]
                                                }),
                                                conflict.message
                                            ]
                                        }, index))
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,
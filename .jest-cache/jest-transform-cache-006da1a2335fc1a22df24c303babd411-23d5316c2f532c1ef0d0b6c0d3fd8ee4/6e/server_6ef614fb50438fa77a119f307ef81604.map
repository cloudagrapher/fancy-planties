{"version":3,"names":["cleanupExpiredSessions","cov_3hfctc4ye","f","s","clearSessionCookie","getAuthSession","isAuthenticated","isEmailVerified","redirectIfAuthenticated","requireAuthSession","requireVerifiedSession","setSessionCookie","validateRequest","validateVerifiedRequest","sessionId","sessionCookie","_lucia","lucia","createSessionCookie","_headers","cookies","set","name","value","attributes","createBlankSessionCookie","_react","cache","b","get","sessionCookieName","user","session","result","validateSession","fresh","id","fullUser","_index","getUserById","parseInt","userId","expiresAt","redirectTo","_navigation","redirect","error","console","log"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/lib/auth/server.ts"],"sourcesContent":["import 'server-only';\n\nimport { cookies } from 'next/headers';\nimport { redirect } from 'next/navigation';\nimport { lucia } from './lucia';\nimport { cache } from 'react';\nimport { getUserById } from './index';\nimport type { User, Session } from '../db/schema';\n\n// Session cookie management\nexport async function setSessionCookie(sessionId: string): Promise<void> {\n  const sessionCookie = lucia.createSessionCookie(sessionId);\n  (await cookies()).set(sessionCookie.name, sessionCookie.value, sessionCookie.attributes);\n}\n\nexport async function clearSessionCookie(): Promise<void> {\n  const sessionCookie = lucia.createBlankSessionCookie();\n  (await cookies()).set(sessionCookie.name, sessionCookie.value, sessionCookie.attributes);\n}\n\n// Cached session validation for performance\nexport const validateRequest = cache(async (): Promise<{ user: User; session: Session } | { user: null; session: null }> => {\n  const sessionId = (await cookies()).get(lucia.sessionCookieName)?.value ?? null;\n  \n  if (!sessionId) {\n    return {\n      user: null,\n      session: null,\n    };\n  }\n\n  const result = await lucia.validateSession(sessionId);\n  \n  // Next.js throws when you attempt to set cookie when rendering page\n  try {\n    if (result.session && result.session.fresh) {\n      const sessionCookie = lucia.createSessionCookie(result.session.id);\n      (await cookies()).set(sessionCookie.name, sessionCookie.value, sessionCookie.attributes);\n    }\n    if (!result.session) {\n      const sessionCookie = lucia.createBlankSessionCookie();\n      (await cookies()).set(sessionCookie.name, sessionCookie.value, sessionCookie.attributes);\n    }\n  } catch {\n    // Ignore cookie setting errors in server components\n  }\n  \n  // Convert Lucia result to our expected format\n  if (result.user && result.session) {\n    // Get full user data from database\n    const fullUser = await getUserById(parseInt(result.user.id));\n    if (!fullUser) {\n      return { user: null, session: null };\n    }\n    \n    return {\n      user: fullUser,\n      session: {\n        id: result.session.id,\n        userId: parseInt(result.user.id),\n        expiresAt: result.session.expiresAt,\n      },\n    };\n  }\n  \n  return {\n    user: null,\n    session: null,\n  };\n});\n\n// Server-side session validation\nexport async function getAuthSession() {\n  return await validateRequest();\n}\n\n// Require authenticated user or redirect\nexport async function requireAuthSession(redirectTo: string = '/auth/signin') {\n  const { user, session } = await validateRequest();\n  \n  if (!user || !session) {\n    redirect(redirectTo);\n  }\n  \n  return { user, session };\n}\n\n// Require authenticated and email verified user or redirect\nexport async function requireVerifiedSession(redirectTo: string = '/auth/signin') {\n  const { user, session } = await validateRequest();\n  \n  if (!user || !session) {\n    redirect(redirectTo);\n  }\n  \n  if (!user.isEmailVerified) {\n    redirect('/auth/verify-email');\n  }\n  \n  return { user, session };\n}\n\n// Check if user has verified email (without redirect)\nexport async function isEmailVerified(): Promise<boolean> {\n  const { user } = await validateRequest();\n  return !!(user && user.isEmailVerified);\n}\n\n// Check if user is authenticated (without redirect)\nexport async function isAuthenticated(): Promise<boolean> {\n  const { user, session } = await validateRequest();\n  return !!(user && session);\n}\n\n// Validate request and require email verification for API routes\nexport async function validateVerifiedRequest(): Promise<{ user: User; session: Session } | { user: null; session: null; error: string }> {\n  const { user, session } = await validateRequest();\n  \n  if (!user || !session) {\n    return { user: null, session: null, error: 'Unauthorized' };\n  }\n  \n  if (!user.isEmailVerified) {\n    return { user: null, session: null, error: 'Email verification required' };\n  }\n  \n  return { user, session };\n}\n\n// Redirect authenticated users away from auth pages\nexport async function redirectIfAuthenticated(redirectTo: string = '/dashboard') {\n  const { user, session } = await validateRequest();\n  \n  if (user && session) {\n    redirect(redirectTo);\n  }\n}\n\n// Session cleanup utility\nexport async function cleanupExpiredSessions(): Promise<void> {\n  try {\n    // This would typically be run as a background job\n    // For now, we'll rely on Lucia's built-in cleanup\n    console.log('Session cleanup would run here');\n  } catch (error) {\n    console.error('Session cleanup error:', error);\n  }\n}"],"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","ignoreList":[]}
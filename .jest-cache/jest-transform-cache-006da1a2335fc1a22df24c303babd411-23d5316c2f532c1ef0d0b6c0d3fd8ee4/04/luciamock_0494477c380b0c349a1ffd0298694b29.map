{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/test-utils/mocks/lucia-mock.js"],"sourcesContent":["// Mock for Lucia auth package to handle ES module issues in Jest\n\nexport class Lucia {\n  constructor(adapter, options = {}) {\n    this.adapter = adapter;\n    this.options = options;\n  }\n\n  async createSession(userId, attributes = {}) {\n    return {\n      id: 'mock-session-' + userId,\n      userId,\n      expiresAt: new Date(Date.now() + 86400000), // 24 hours\n      ...attributes\n    };\n  }\n\n  async validateSession(sessionId) {\n    if (sessionId && sessionId.startsWith('mock-session-')) {\n      const userId = sessionId.replace('mock-session-', '');\n      return {\n        session: {\n          id: sessionId,\n          userId,\n          expiresAt: new Date(Date.now() + 86400000),\n          fresh: true\n        },\n        user: {\n          id: userId,\n          email: 'test@example.com',\n          name: 'Test User'\n        }\n      };\n    }\n    return {\n      session: null,\n      user: null\n    };\n  }\n\n  async invalidateSession(sessionId) {\n    return true;\n  }\n\n  async invalidateUserSessions(userId) {\n    return true;\n  }\n\n  createSessionCookie(session) {\n    return {\n      name: 'session',\n      value: session.id,\n      attributes: {\n        httpOnly: true,\n        secure: false,\n        path: '/',\n        maxAge: 86400\n      }\n    };\n  }\n\n  createBlankSessionCookie() {\n    return {\n      name: 'session',\n      value: '',\n      attributes: {\n        httpOnly: true,\n        secure: false,\n        path: '/',\n        maxAge: 0\n      }\n    };\n  }\n}\n\nexport class PostgresJsAdapter {\n  constructor(client, config) {\n    this.client = client;\n    this.config = config;\n  }\n}\n\n// Default export\nexport default {\n  Lucia,\n  PostgresJsAdapter\n};"],"names":["Lucia","PostgresJsAdapter","adapter","options","createSession","userId","attributes","id","expiresAt","Date","now","validateSession","sessionId","startsWith","replace","session","fresh","user","email","name","invalidateSession","invalidateUserSessions","createSessionCookie","value","httpOnly","secure","path","maxAge","createBlankSessionCookie","client","config"],"mappings":"AAAA,iEAAiE;;;;;;;;;;;;QAEpDA;eAAAA;;QAyEAC;eAAAA;;QAOb,iBAAiB;IACjB;eAAA;;;AAjFO,MAAMD;IACX,YAAYE,OAAO,EAAEC,UAAU,CAAC,CAAC,CAAE;QACjC,IAAI,CAACD,OAAO,GAAGA;QACf,IAAI,CAACC,OAAO,GAAGA;IACjB;IAEA,MAAMC,cAAcC,MAAM,EAAEC,aAAa,CAAC,CAAC,EAAE;QAC3C,OAAO;YACLC,IAAI,kBAAkBF;YACtBA;YACAG,WAAW,IAAIC,KAAKA,KAAKC,GAAG,KAAK;YACjC,GAAGJ,UAAU;QACf;IACF;IAEA,MAAMK,gBAAgBC,SAAS,EAAE;QAC/B,IAAIA,aAAaA,UAAUC,UAAU,CAAC,kBAAkB;YACtD,MAAMR,SAASO,UAAUE,OAAO,CAAC,iBAAiB;YAClD,OAAO;gBACLC,SAAS;oBACPR,IAAIK;oBACJP;oBACAG,WAAW,IAAIC,KAAKA,KAAKC,GAAG,KAAK;oBACjCM,OAAO;gBACT;gBACAC,MAAM;oBACJV,IAAIF;oBACJa,OAAO;oBACPC,MAAM;gBACR;YACF;QACF;QACA,OAAO;YACLJ,SAAS;YACTE,MAAM;QACR;IACF;IAEA,MAAMG,kBAAkBR,SAAS,EAAE;QACjC,OAAO;IACT;IAEA,MAAMS,uBAAuBhB,MAAM,EAAE;QACnC,OAAO;IACT;IAEAiB,oBAAoBP,OAAO,EAAE;QAC3B,OAAO;YACLI,MAAM;YACNI,OAAOR,QAAQR,EAAE;YACjBD,YAAY;gBACVkB,UAAU;gBACVC,QAAQ;gBACRC,MAAM;gBACNC,QAAQ;YACV;QACF;IACF;IAEAC,2BAA2B;QACzB,OAAO;YACLT,MAAM;YACNI,OAAO;YACPjB,YAAY;gBACVkB,UAAU;gBACVC,QAAQ;gBACRC,MAAM;gBACNC,QAAQ;YACV;QACF;IACF;AACF;AAEO,MAAM1B;IACX,YAAY4B,MAAM,EAAEC,MAAM,CAAE;QAC1B,IAAI,CAACD,MAAM,GAAGA;QACd,IAAI,CAACC,MAAM,GAAGA;IAChB;AACF;MAGA,WAAe;IACb9B;IACAC;AACF"}
{"version":3,"names":["DELETE","cov_1sjejux5xd","f","s","GET","PUT","updatePropagationSchema","_zod","z","object","plantId","number","int","positive","optional","parentInstanceId","nullable","nickname","string","min","max","location","dateStarted","datetime","transform","str","Date","status","enum","notes","images","array","request","params","user","_server1","validateRequest","b","_server","NextResponse","json","error","id","propagationId","parseInt","isNaN","propagation","_propagations","PropagationQueries","getById","userId","console","existingPropagation","body","validatedData","parse","updatedPropagation","update","ZodError","details","issues","success","delete"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/app/api/propagations/[id]/route.ts"],"sourcesContent":["import 'server-only';\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { validateRequest } from '@/lib/auth/server';\nimport { PropagationQueries } from '@/lib/db/queries/propagations';\nimport { z } from 'zod';\n\n// Validation schema for updating propagations\nconst updatePropagationSchema = z.object({\n  plantId: z.number().int().positive().optional(),\n  parentInstanceId: z.number().int().positive().optional().nullable(),\n  nickname: z.string().min(1).max(100).optional(),\n  location: z.string().min(1).max(100).optional(),\n  dateStarted: z.string().datetime().transform(str => new Date(str)).optional(),\n  status: z.enum(['started', 'rooting', 'planted', 'established']).optional(),\n  notes: z.string().max(2000).optional().nullable(),\n  images: z.array(z.string()).max(10).optional(),\n});\n\n// GET /api/propagations/[id] - Get a specific propagation\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const { user } = await validateRequest();\n    if (!user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { id } = await params;\n    const propagationId = parseInt(id, 10);\n    if (isNaN(propagationId)) {\n      return NextResponse.json({ error: 'Invalid propagation ID' }, { status: 400 });\n    }\n\n    const propagation = await PropagationQueries.getById(propagationId);\n    \n    if (!propagation) {\n      return NextResponse.json({ error: 'Propagation not found' }, { status: 404 });\n    }\n\n    // Check if the propagation belongs to the authenticated user\n    if (propagation.userId !== user.id) {\n      return NextResponse.json({ error: 'Forbidden' }, { status: 403 });\n    }\n\n    return NextResponse.json(propagation);\n  } catch (error) {\n    console.error('Error fetching propagation:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch propagation' },\n      { status: 500 }\n    );\n  }\n}\n\n// PUT /api/propagations/[id] - Update a propagation\nexport async function PUT(\n  request: NextRequest,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const { user } = await validateRequest();\n    if (!user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { id } = await params;\n    const propagationId = parseInt(id, 10);\n    if (isNaN(propagationId)) {\n      return NextResponse.json({ error: 'Invalid propagation ID' }, { status: 400 });\n    }\n\n    // Check if propagation exists and belongs to user\n    const existingPropagation = await PropagationQueries.getById(propagationId);\n    if (!existingPropagation) {\n      return NextResponse.json({ error: 'Propagation not found' }, { status: 404 });\n    }\n\n    if (existingPropagation.userId !== user.id) {\n      return NextResponse.json({ error: 'Forbidden' }, { status: 403 });\n    }\n\n    const body = await request.json();\n    const validatedData = updatePropagationSchema.parse(body);\n\n    const updatedPropagation = await PropagationQueries.update(propagationId, validatedData);\n\n    return NextResponse.json(updatedPropagation);\n  } catch (error) {\n    console.error('Error updating propagation:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid data', details: error.issues },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Failed to update propagation' },\n      { status: 500 }\n    );\n  }\n}\n\n// DELETE /api/propagations/[id] - Delete a propagation\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const { user } = await validateRequest();\n    if (!user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { id } = await params;\n    const propagationId = parseInt(id, 10);\n    if (isNaN(propagationId)) {\n      return NextResponse.json({ error: 'Invalid propagation ID' }, { status: 400 });\n    }\n\n    // Check if propagation exists and belongs to user\n    const existingPropagation = await PropagationQueries.getById(propagationId);\n    if (!existingPropagation) {\n      return NextResponse.json({ error: 'Propagation not found' }, { status: 404 });\n    }\n\n    if (existingPropagation.userId !== user.id) {\n      return NextResponse.json({ error: 'Forbidden' }, { status: 403 });\n    }\n\n    const success = await PropagationQueries.delete(propagationId);\n    \n    if (!success) {\n      return NextResponse.json({ error: 'Failed to delete propagation' }, { status: 500 });\n    }\n\n    return NextResponse.json({ success: true });\n  } catch (error) {\n    console.error('Error deleting propagation:', error);\n    return NextResponse.json(\n      { error: 'Failed to delete propagation' },\n      { status: 500 }\n    );\n  }\n}"],"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","ignoreList":[]}
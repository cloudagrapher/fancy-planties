{"version":3,"names":["cov_1vb0yd8bp2","actualCoverage","s","PerformanceBudget","f","PerformanceMonitor","usePerformanceTracking","withPerformanceTracking","enabled","b","process","env","NODE_ENV","showOverlay","onMetricsUpdate","metrics","setMetrics","_react","useState","useEffect","_performance","performanceMonitoring","trackWebVitals","memoryInterval","setInterval","memory","monitorMemoryUsage","prev","updated","clearInterval","_jsxruntime","jsxs","className","jsx","lcp","toFixed","fid","cls","usedJSHeapSize","totalJSHeapSize","jsHeapSizeLimit","renderTime","WrappedComponent","componentName","PerformanceTrackedComponent","props","setRenderTime","time","measureRenderTime","renderCount","averageRenderTime","lastRenderTime","startTime","performance","now","endTime","newRenderCount","newAverageRenderTime","console","log","budgets","onBudgetExceeded","violations","setViolations","window","navigation","getEntriesByType","bundleSize","transferSize","PerformanceObserver","list","entries","getEntries","lastEntry","length","observe","entryTypes","forEach","entry","fidEntry","processingStart","clsValue","hadRecentInput","value","map","violation","index"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/shared/PerformanceMonitor.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { performanceMonitoring } from '@/lib/utils/performance';\n\ninterface PerformanceMetrics {\n  lcp?: number;\n  fid?: number;\n  cls?: number;\n  memory?: {\n    usedJSHeapSize: number;\n    totalJSHeapSize: number;\n    jsHeapSizeLimit: number;\n  };\n  renderTime?: number;\n}\n\ninterface PerformanceMonitorProps {\n  enabled?: boolean;\n  showOverlay?: boolean;\n  onMetricsUpdate?: (metrics: PerformanceMetrics) => void;\n}\n\nexport function PerformanceMonitor({\n  enabled = process.env.NODE_ENV === 'development',\n  showOverlay = false,\n  onMetricsUpdate,\n}: PerformanceMonitorProps) {\n  const [metrics, setMetrics] = useState<PerformanceMetrics>({});\n\n  useEffect(() => {\n    if (!enabled) return;\n\n    // Track Core Web Vitals\n    performanceMonitoring.trackWebVitals();\n\n    // Monitor memory usage periodically\n    const memoryInterval = setInterval(() => {\n      const memory = performanceMonitoring.monitorMemoryUsage();\n      if (memory) {\n        setMetrics(prev => {\n          const updated = { ...prev, memory };\n          onMetricsUpdate?.(updated);\n          return updated;\n        });\n      }\n    }, 5000);\n\n    return () => {\n      clearInterval(memoryInterval);\n    };\n  }, [enabled, onMetricsUpdate]);\n\n  if (!enabled || !showOverlay) return null;\n\n  return (\n    <div className=\"fixed top-4 right-4 bg-black bg-opacity-80 text-white p-3 rounded-lg text-xs font-mono z-50 max-w-xs\">\n      <div className=\"font-bold mb-2\">Performance Metrics</div>\n      \n      {metrics.lcp && (\n        <div>LCP: {metrics.lcp.toFixed(2)}ms</div>\n      )}\n      \n      {metrics.fid && (\n        <div>FID: {metrics.fid.toFixed(2)}ms</div>\n      )}\n      \n      {metrics.cls && (\n        <div>CLS: {metrics.cls.toFixed(4)}</div>\n      )}\n      \n      {metrics.memory && (\n        <div className=\"mt-2\">\n          <div>Memory Usage:</div>\n          <div>Used: {(metrics.memory.usedJSHeapSize / 1024 / 1024).toFixed(1)}MB</div>\n          <div>Total: {(metrics.memory.totalJSHeapSize / 1024 / 1024).toFixed(1)}MB</div>\n          <div>Limit: {(metrics.memory.jsHeapSizeLimit / 1024 / 1024).toFixed(1)}MB</div>\n        </div>\n      )}\n      \n      {metrics.renderTime && (\n        <div className=\"mt-2\">\n          Last Render: {metrics.renderTime.toFixed(2)}ms\n        </div>\n      )}\n    </div>\n  );\n}\n\n// HOC for measuring component render time\nexport function withPerformanceTracking<P extends object>(\n  WrappedComponent: React.ComponentType<P>,\n  componentName: string\n) {\n  return function PerformanceTrackedComponent(props: P) {\n    const [renderTime, setRenderTime] = useState<number>();\n\n    useEffect(() => {\n      const time = performanceMonitoring.measureRenderTime(componentName, () => {\n        // Component has rendered\n      });\n      setRenderTime(time);\n    });\n\n    return <WrappedComponent {...props} />;\n  };\n}\n\n// Hook for tracking component performance\nexport function usePerformanceTracking(componentName: string) {\n  const [metrics, setMetrics] = useState<{\n    renderCount: number;\n    averageRenderTime: number;\n    lastRenderTime: number;\n  }>({\n    renderCount: 0,\n    averageRenderTime: 0,\n    lastRenderTime: 0,\n  });\n\n  useEffect(() => {\n    const startTime = performance.now();\n    \n    return () => {\n      const endTime = performance.now();\n      const renderTime = endTime - startTime;\n      \n      setMetrics(prev => {\n        const newRenderCount = prev.renderCount + 1;\n        const newAverageRenderTime = \n          (prev.averageRenderTime * prev.renderCount + renderTime) / newRenderCount;\n        \n        if (process.env.NODE_ENV === 'development') {\n          console.log(`${componentName} render #${newRenderCount}: ${renderTime.toFixed(2)}ms (avg: ${newAverageRenderTime.toFixed(2)}ms)`);\n        }\n        \n        return {\n          renderCount: newRenderCount,\n          averageRenderTime: newAverageRenderTime,\n          lastRenderTime: renderTime,\n        };\n      });\n    };\n  });\n\n  return metrics;\n}\n\n// Performance budget component\ninterface PerformanceBudgetProps {\n  budgets: {\n    lcp: number; // ms\n    fid: number; // ms\n    cls: number; // score\n    bundleSize: number; // KB\n  };\n  onBudgetExceeded?: (metric: string, value: number, budget: number) => void;\n}\n\nexport function PerformanceBudget({\n  budgets,\n  onBudgetExceeded,\n}: PerformanceBudgetProps) {\n  const [violations, setViolations] = useState<string[]>([]);\n\n  useEffect(() => {\n    // Check bundle size\n    if (typeof window !== 'undefined' && 'performance' in window) {\n      const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming;\n      if (navigation) {\n        const bundleSize = navigation.transferSize / 1024; // Convert to KB\n        if (bundleSize > budgets.bundleSize) {\n          setViolations(prev => [...prev, `Bundle size: ${bundleSize.toFixed(1)}KB > ${budgets.bundleSize}KB`]);\n          onBudgetExceeded?.('bundleSize', bundleSize, budgets.bundleSize);\n        }\n      }\n    }\n\n    // Monitor Core Web Vitals against budgets\n    if (typeof window !== 'undefined' && 'PerformanceObserver' in window) {\n      // LCP monitoring\n      new PerformanceObserver((list) => {\n        const entries = list.getEntries();\n        const lastEntry = entries[entries.length - 1];\n        if (lastEntry.startTime > budgets.lcp) {\n          setViolations(prev => [...prev, `LCP: ${lastEntry.startTime.toFixed(1)}ms > ${budgets.lcp}ms`]);\n          onBudgetExceeded?.('lcp', lastEntry.startTime, budgets.lcp);\n        }\n      }).observe({ entryTypes: ['largest-contentful-paint'] });\n\n      // FID monitoring\n      new PerformanceObserver((list) => {\n        const entries = list.getEntries();\n        entries.forEach((entry) => {\n          // Type assertion for first-input entries\n          const fidEntry = entry as PerformanceEventTiming;\n          if (fidEntry.processingStart) {\n            const fid = fidEntry.processingStart - fidEntry.startTime;\n            if (fid > budgets.fid) {\n              setViolations(prev => [...prev, `FID: ${fid.toFixed(1)}ms > ${budgets.fid}ms`]);\n              onBudgetExceeded?.('fid', fid, budgets.fid);\n            }\n          }\n        });\n      }).observe({ entryTypes: ['first-input'] });\n\n      // CLS monitoring\n      new PerformanceObserver((list) => {\n        let clsValue = 0;\n        const entries = list.getEntries();\n        entries.forEach((entry: any) => {\n          if (!entry.hadRecentInput) {\n            clsValue += entry.value;\n          }\n        });\n        if (clsValue > budgets.cls) {\n          setViolations(prev => [...prev, `CLS: ${clsValue.toFixed(4)} > ${budgets.cls}`]);\n          onBudgetExceeded?.('cls', clsValue, budgets.cls);\n        }\n      }).observe({ entryTypes: ['layout-shift'] });\n    }\n  }, [budgets, onBudgetExceeded]);\n\n  if (process.env.NODE_ENV !== 'development' || violations.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 bg-red-600 text-white p-3 rounded-lg text-xs font-mono z-50 max-w-sm\">\n      <div className=\"font-bold mb-2\">⚠️ Performance Budget Violations</div>\n      {violations.map((violation, index) => (\n        <div key={index} className=\"mb-1\">{violation}</div>\n      ))}\n    </div>\n  );\n}"],"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","ignoreList":[]}
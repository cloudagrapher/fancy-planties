{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/lib/db/index.ts"],"sourcesContent":["import 'server-only';\n\nimport { drizzle } from 'drizzle-orm/postgres-js';\nimport postgres from 'postgres';\nimport { eq, and, desc, asc, sql } from 'drizzle-orm';\nimport * as schema from './schema';\n\nconst connectionString = process.env.DATABASE_URL || 'postgresql://postgres:postgres@localhost:5433/fancy_planties';\n\n// Connection configuration with pooling\nconst client = postgres(connectionString, {\n  prepare: false,\n  max: 10, // Maximum number of connections in the pool\n  idle_timeout: 20, // Close idle connections after 20 seconds\n  connect_timeout: 10, // Connection timeout in seconds\n  onnotice: process.env.NODE_ENV === 'development' ? console.log : undefined,\n});\n\nexport const db = drizzle(client, { \n  schema,\n  logger: process.env.NODE_ENV === 'development'\n});\n\n// Database connection health check\nexport async function checkDatabaseConnection(): Promise<boolean> {\n  try {\n    await db.execute(sql`SELECT 1`);\n    return true;\n  } catch (error) {\n    console.error('Database connection failed:', error);\n    return false;\n  }\n}\n\n// Set user context for RLS (Row Level Security)\nexport async function setUserContext(userId: number) {\n  try {\n    await db.execute(sql`SELECT set_current_user_id(${userId})`);\n  } catch (error) {\n    console.error('Failed to set user context:', error);\n    throw new Error('Failed to set user context');\n  }\n}\n\n// Clear user context\nexport async function clearUserContext() {\n  try {\n    await db.execute(sql`SELECT set_config('app.current_user_id', '', true)`);\n  } catch (error) {\n    console.error('Failed to clear user context:', error);\n  }\n}\n\n// Database transaction wrapper with error handling\nexport async function withTransaction<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (tx: any) => Promise<T>\n): Promise<T> {\n  try {\n    return await db.transaction(callback);\n  } catch (error) {\n    console.error('Transaction failed:', error);\n    throw error;\n  }\n}\n\n// Graceful database shutdown\nexport async function closeDatabaseConnection() {\n  try {\n    await client.end();\n    console.log('Database connection closed gracefully');\n  } catch (error) {\n    console.error('Error closing database connection:', error);\n  }\n}\n\n// Export all schema and utilities\nexport * from './schema';\nexport { eq, and, desc, asc, sql };\nexport { MigrationUtils } from './migrations';"],"names":["MigrationUtils","and","asc","checkDatabaseConnection","clearUserContext","closeDatabaseConnection","db","desc","eq","setUserContext","sql","withTransaction","connectionString","process","env","DATABASE_URL","client","postgres","prepare","max","idle_timeout","connect_timeout","onnotice","NODE_ENV","console","log","undefined","drizzle","schema","logger","execute","error","userId","Error","callback","transaction","end"],"mappings":";;;;;;;;;;;QA+ESA;eAAAA,0BAAc;;QADVC;eAAAA,eAAG;;QAAQC;eAAAA,eAAG;;QAtDLC;eAAAA;;QAqBAC;eAAAA;;QAsBAC;eAAAA;;QAjDTC;eAAAA;;QA4DKC;eAAAA,gBAAI;;QAAbC;eAAAA,cAAE;;QA3CWC;eAAAA;;QA2COC;eAAAA,eAAG;;QAxBVC;eAAAA;;;QAtDf;4BAEiB;iEACH;4BACmB;6EAChB;4BA0EO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAxE/B,MAAMC,mBAAmBC,QAAQC,GAAG,CAACC,YAAY,IAAI;AAErD,wCAAwC;AACxC,MAAMC,SAASC,IAAAA,iBAAQ,EAACL,kBAAkB;IACxCM,SAAS;IACTC,KAAK;IACLC,cAAc;IACdC,iBAAiB;IACjBC,UAAUT,QAAQC,GAAG,CAACS,QAAQ,KAAK,gBAAgBC,QAAQC,GAAG,GAAGC;AACnE;AAEO,MAAMpB,KAAKqB,IAAAA,mBAAO,EAACX,QAAQ;IAChCY,QAAAA;IACAC,QAAQhB,QAAQC,GAAG,CAACS,QAAQ,KAAK;AACnC;AAGO,eAAepB;IACpB,IAAI;QACF,MAAMG,GAAGwB,OAAO,CAACpB,IAAAA,eAAG,CAAA,CAAC,QAAQ,CAAC;QAC9B,OAAO;IACT,EAAE,OAAOqB,OAAO;QACdP,QAAQO,KAAK,CAAC,+BAA+BA;QAC7C,OAAO;IACT;AACF;AAGO,eAAetB,eAAeuB,MAAc;IACjD,IAAI;QACF,MAAM1B,GAAGwB,OAAO,CAACpB,IAAAA,eAAG,CAAA,CAAC,2BAA2B,EAAEsB,OAAO,CAAC,CAAC;IAC7D,EAAE,OAAOD,OAAO;QACdP,QAAQO,KAAK,CAAC,+BAA+BA;QAC7C,MAAM,IAAIE,MAAM;IAClB;AACF;AAGO,eAAe7B;IACpB,IAAI;QACF,MAAME,GAAGwB,OAAO,CAACpB,IAAAA,eAAG,CAAA,CAAC,kDAAkD,CAAC;IAC1E,EAAE,OAAOqB,OAAO;QACdP,QAAQO,KAAK,CAAC,iCAAiCA;IACjD;AACF;AAGO,eAAepB,gBACpB,8DAA8D;AAC9DuB,QAAiC;IAEjC,IAAI;QACF,OAAO,MAAM5B,GAAG6B,WAAW,CAACD;IAC9B,EAAE,OAAOH,OAAO;QACdP,QAAQO,KAAK,CAAC,uBAAuBA;QACrC,MAAMA;IACR;AACF;AAGO,eAAe1B;IACpB,IAAI;QACF,MAAMW,OAAOoB,GAAG;QAChBZ,QAAQC,GAAG,CAAC;IACd,EAAE,OAAOM,OAAO;QACdP,QAAQO,KAAK,CAAC,sCAAsCA;IACtD;AACF"}
533298039d0a70b1ed0a60f0946bfa38
"use strict";

/* istanbul ignore next */
function cov_2899uy7qq6() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/lib/db/schema.ts";
  var hash = "ee5393a26158e5249334509eac55111b0dc53c13";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/lib/db/schema.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 60,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 26
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 47
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 30
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 39
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 22
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 31
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 28
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 37
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 24
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 33
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 21
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 30
        }
      },
      "20": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 46
        }
      },
      "21": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 42
        }
      },
      "22": {
        start: {
          line: 63,
          column: 14
        },
        end: {
          line: 75,
          column: 7
        }
      },
      "23": {
        start: {
          line: 72,
          column: 13
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "24": {
        start: {
          line: 76,
          column: 31
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "25": {
        start: {
          line: 78,
          column: 69
        },
        end: {
          line: 78,
          column: 77
        }
      },
      "26": {
        start: {
          line: 85,
          column: 13
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "27": {
        start: {
          line: 92,
          column: 17
        },
        end: {
          line: 103,
          column: 7
        }
      },
      "28": {
        start: {
          line: 94,
          column: 69
        },
        end: {
          line: 94,
          column: 77
        }
      },
      "29": {
        start: {
          line: 99,
          column: 13
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "30": {
        start: {
          line: 104,
          column: 15
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "31": {
        start: {
          line: 113,
          column: 65
        },
        end: {
          line: 113,
          column: 73
        }
      },
      "32": {
        start: {
          line: 117,
          column: 13
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "33": {
        start: {
          line: 129,
          column: 23
        },
        end: {
          line: 152,
          column: 7
        }
      },
      "34": {
        start: {
          line: 131,
          column: 69
        },
        end: {
          line: 131,
          column: 77
        }
      },
      "35": {
        start: {
          line: 132,
          column: 71
        },
        end: {
          line: 132,
          column: 80
        }
      },
      "36": {
        start: {
          line: 144,
          column: 13
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "37": {
        start: {
          line: 153,
          column: 21
        },
        end: {
          line: 199,
          column: 7
        }
      },
      "38": {
        start: {
          line: 155,
          column: 69
        },
        end: {
          line: 155,
          column: 77
        }
      },
      "39": {
        start: {
          line: 156,
          column: 71
        },
        end: {
          line: 156,
          column: 80
        }
      },
      "40": {
        start: {
          line: 157,
          column: 80
        },
        end: {
          line: 157,
          column: 97
        }
      },
      "41": {
        start: {
          line: 188,
          column: 13
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "42": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 231,
          column: 7
        }
      },
      "43": {
        start: {
          line: 202,
          column: 69
        },
        end: {
          line: 202,
          column: 77
        }
      },
      "44": {
        start: {
          line: 203,
          column: 88
        },
        end: {
          line: 203,
          column: 105
        }
      },
      "45": {
        start: {
          line: 222,
          column: 13
        },
        end: {
          line: 231,
          column: 5
        }
      },
      "46": {
        start: {
          line: 232,
          column: 19
        },
        end: {
          line: 290,
          column: 7
        }
      },
      "47": {
        start: {
          line: 234,
          column: 69
        },
        end: {
          line: 234,
          column: 77
        }
      },
      "48": {
        start: {
          line: 273,
          column: 13
        },
        end: {
          line: 290,
          column: 5
        }
      },
      "49": {
        start: {
          line: 291,
          column: 23
        },
        end: {
          line: 299,
          column: 7
        }
      },
      "50": {
        start: {
          line: 291,
          column: 70
        },
        end: {
          line: 299,
          column: 5
        }
      },
      "51": {
        start: {
          line: 300,
          column: 24
        },
        end: {
          line: 311,
          column: 7
        }
      },
      "52": {
        start: {
          line: 300,
          column: 77
        },
        end: {
          line: 311,
          column: 5
        }
      },
      "53": {
        start: {
          line: 312,
          column: 32
        },
        end: {
          line: 331,
          column: 7
        }
      },
      "54": {
        start: {
          line: 312,
          column: 93
        },
        end: {
          line: 331,
          column: 5
        }
      },
      "55": {
        start: {
          line: 332,
          column: 30
        },
        end: {
          line: 357,
          column: 7
        }
      },
      "56": {
        start: {
          line: 332,
          column: 83
        },
        end: {
          line: 357,
          column: 5
        }
      },
      "57": {
        start: {
          line: 358,
          column: 29
        },
        end: {
          line: 375,
          column: 7
        }
      },
      "58": {
        start: {
          line: 358,
          column: 81
        },
        end: {
          line: 375,
          column: 5
        }
      },
      "59": {
        start: {
          line: 376,
          column: 26
        },
        end: {
          line: 385,
          column: 7
        }
      },
      "60": {
        start: {
          line: 376,
          column: 75
        },
        end: {
          line: 385,
          column: 5
        }
      },
      "61": {
        start: {
          line: 386,
          column: 40
        },
        end: {
          line: 395,
          column: 7
        }
      },
      "62": {
        start: {
          line: 386,
          column: 103
        },
        end: {
          line: 395,
          column: 5
        }
      },
      "63": {
        start: {
          line: 396,
          column: 28
        },
        end: {
          line: 405,
          column: 7
        }
      },
      "64": {
        start: {
          line: 396,
          column: 79
        },
        end: {
          line: 405,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 22
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 34
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 43
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 26
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 18
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 27
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 17
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 54
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 26
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 72,
            column: 3
          },
          end: {
            line: 72,
            column: 4
          }
        },
        loc: {
          start: {
            line: 72,
            column: 13
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 72
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 78,
            column: 65
          },
          end: {
            line: 78,
            column: 66
          }
        },
        loc: {
          start: {
            line: 78,
            column: 69
          },
          end: {
            line: 78,
            column: 77
          }
        },
        line: 78
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 85,
            column: 3
          },
          end: {
            line: 85,
            column: 4
          }
        },
        loc: {
          start: {
            line: 85,
            column: 13
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 85
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 94,
            column: 65
          },
          end: {
            line: 94,
            column: 66
          }
        },
        loc: {
          start: {
            line: 94,
            column: 69
          },
          end: {
            line: 94,
            column: 77
          }
        },
        line: 94
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 99,
            column: 3
          },
          end: {
            line: 99,
            column: 4
          }
        },
        loc: {
          start: {
            line: 99,
            column: 13
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 99
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 113,
            column: 61
          },
          end: {
            line: 113,
            column: 62
          }
        },
        loc: {
          start: {
            line: 113,
            column: 65
          },
          end: {
            line: 113,
            column: 73
          }
        },
        line: 113
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 117,
            column: 3
          },
          end: {
            line: 117,
            column: 4
          }
        },
        loc: {
          start: {
            line: 117,
            column: 13
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 117
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 131,
            column: 65
          },
          end: {
            line: 131,
            column: 66
          }
        },
        loc: {
          start: {
            line: 131,
            column: 69
          },
          end: {
            line: 131,
            column: 77
          }
        },
        line: 131
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 132,
            column: 67
          },
          end: {
            line: 132,
            column: 68
          }
        },
        loc: {
          start: {
            line: 132,
            column: 71
          },
          end: {
            line: 132,
            column: 80
          }
        },
        line: 132
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 144,
            column: 3
          },
          end: {
            line: 144,
            column: 4
          }
        },
        loc: {
          start: {
            line: 144,
            column: 13
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 144
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 155,
            column: 65
          },
          end: {
            line: 155,
            column: 66
          }
        },
        loc: {
          start: {
            line: 155,
            column: 69
          },
          end: {
            line: 155,
            column: 77
          }
        },
        line: 155
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 156,
            column: 67
          },
          end: {
            line: 156,
            column: 68
          }
        },
        loc: {
          start: {
            line: 156,
            column: 71
          },
          end: {
            line: 156,
            column: 80
          }
        },
        line: 156
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 157,
            column: 76
          },
          end: {
            line: 157,
            column: 77
          }
        },
        loc: {
          start: {
            line: 157,
            column: 80
          },
          end: {
            line: 157,
            column: 97
          }
        },
        line: 157
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 188,
            column: 3
          },
          end: {
            line: 188,
            column: 4
          }
        },
        loc: {
          start: {
            line: 188,
            column: 13
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 188
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 202,
            column: 65
          },
          end: {
            line: 202,
            column: 66
          }
        },
        loc: {
          start: {
            line: 202,
            column: 69
          },
          end: {
            line: 202,
            column: 77
          }
        },
        line: 202
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 203,
            column: 84
          },
          end: {
            line: 203,
            column: 85
          }
        },
        loc: {
          start: {
            line: 203,
            column: 88
          },
          end: {
            line: 203,
            column: 105
          }
        },
        line: 203
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 222,
            column: 3
          },
          end: {
            line: 222,
            column: 4
          }
        },
        loc: {
          start: {
            line: 222,
            column: 13
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 222
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 234,
            column: 65
          },
          end: {
            line: 234,
            column: 66
          }
        },
        loc: {
          start: {
            line: 234,
            column: 69
          },
          end: {
            line: 234,
            column: 77
          }
        },
        line: 234
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 273,
            column: 3
          },
          end: {
            line: 273,
            column: 4
          }
        },
        loc: {
          start: {
            line: 273,
            column: 13
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 273
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 291,
            column: 57
          },
          end: {
            line: 291,
            column: 58
          }
        },
        loc: {
          start: {
            line: 291,
            column: 70
          },
          end: {
            line: 299,
            column: 5
          }
        },
        line: 291
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 300,
            column: 59
          },
          end: {
            line: 300,
            column: 60
          }
        },
        loc: {
          start: {
            line: 300,
            column: 77
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 300
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 312,
            column: 75
          },
          end: {
            line: 312,
            column: 76
          }
        },
        loc: {
          start: {
            line: 312,
            column: 93
          },
          end: {
            line: 331,
            column: 5
          }
        },
        line: 312
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 332,
            column: 71
          },
          end: {
            line: 332,
            column: 72
          }
        },
        loc: {
          start: {
            line: 332,
            column: 83
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 332
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 358,
            column: 69
          },
          end: {
            line: 358,
            column: 70
          }
        },
        loc: {
          start: {
            line: 358,
            column: 81
          },
          end: {
            line: 375,
            column: 5
          }
        },
        line: 358
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 376,
            column: 63
          },
          end: {
            line: 376,
            column: 64
          }
        },
        loc: {
          start: {
            line: 376,
            column: 75
          },
          end: {
            line: 385,
            column: 5
          }
        },
        line: 376
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 386,
            column: 91
          },
          end: {
            line: 386,
            column: 92
          }
        },
        loc: {
          start: {
            line: 386,
            column: 103
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 386
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 396,
            column: 67
          },
          end: {
            line: 396,
            column: 68
          }
        },
        loc: {
          start: {
            line: 396,
            column: 79
          },
          end: {
            line: 405,
            column: 5
          }
        },
        line: 396
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/lib/db/schema.ts"],
      sourcesContent: ["import { pgTable, serial, text, timestamp, integer, boolean, jsonb, index, uniqueIndex } from 'drizzle-orm/pg-core';\nimport { relations } from 'drizzle-orm';\n\n// Users table\nexport const users = pgTable('users', {\n  id: serial('id').primaryKey(),\n  email: text('email').notNull().unique(),\n  hashedPassword: text('hashed_password').notNull(),\n  name: text('name').notNull(),\n  isCurator: boolean('is_curator').default(false).notNull(),\n  isEmailVerified: boolean('is_email_verified').default(false).notNull(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  updatedAt: timestamp('updated_at').defaultNow().notNull(),\n}, (table) => ({\n  // Index for email verification status\n  emailVerifiedIdx: index('users_email_verified_idx').on(table.isEmailVerified),\n}));\n\n// Email verification codes table\nexport const emailVerificationCodes = pgTable('email_verification_codes', {\n  id: serial('id').primaryKey(),\n  userId: integer('user_id').notNull().references(() => users.id, { onDelete: 'cascade' }),\n  code: text('code').notNull(),\n  expiresAt: timestamp('expires_at').notNull(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  attemptsUsed: integer('attempts_used').default(0).notNull(),\n}, (table) => ({\n  // Indexes for email verification code queries\n  userIdIdx: index('email_verification_codes_user_id_idx').on(table.userId),\n  expiresAtIdx: index('email_verification_codes_expires_at_idx').on(table.expiresAt),\n  // Unique constraint to ensure one active code per user\n  userActiveCodeUnique: uniqueIndex('email_verification_codes_user_active_unique').on(table.userId, table.expiresAt),\n}));\n\n// Sessions table for Lucia auth\nexport const sessions = pgTable('sessions', {\n  id: text('id').primaryKey(),\n  userId: integer('user_id').notNull().references(() => users.id),\n  expiresAt: timestamp('expires_at', { withTimezone: true, mode: 'date' }).notNull(),\n}, (table) => ({\n  // Indexes for session management\n  userIdIdx: index('sessions_user_id_idx').on(table.userId),\n  expiresAtIdx: index('sessions_expires_at_idx').on(table.expiresAt),\n}));\n\n// Plants table (taxonomy)\nexport const plants = pgTable('plants', {\n  id: serial('id').primaryKey(),\n  family: text('family').notNull(),\n  genus: text('genus').notNull(),\n  species: text('species').notNull(),\n  cultivar: text('cultivar'), // New separate cultivar field\n  commonName: text('common_name').notNull(),\n  careInstructions: text('care_instructions'),\n  defaultImage: text('default_image'),\n  createdBy: integer('created_by').references(() => users.id),\n  isVerified: boolean('is_verified').default(false).notNull(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  updatedAt: timestamp('updated_at').defaultNow().notNull(),\n}, (table) => ({\n  // Indexes for plant taxonomy search\n  familyIdx: index('plants_family_idx').on(table.family),\n  genusIdx: index('plants_genus_idx').on(table.genus),\n  speciesIdx: index('plants_species_idx').on(table.species),\n  cultivarIdx: index('plants_cultivar_idx').on(table.cultivar), // New index for cultivar search\n  commonNameIdx: index('plants_common_name_idx').on(table.commonName),\n  // Unique constraint for taxonomy combination (including cultivar)\n  taxonomyUnique: uniqueIndex('plants_taxonomy_unique').on(table.family, table.genus, table.species, table.cultivar),\n  // Index for verified plants\n  verifiedIdx: index('plants_verified_idx').on(table.isVerified),\n}));\n\n// Plant instances table\nexport const plantInstances = pgTable('plant_instances', {\n  id: serial('id').primaryKey(),\n  userId: integer('user_id').notNull().references(() => users.id),\n  plantId: integer('plant_id').notNull().references(() => plants.id),\n  nickname: text('nickname').notNull(),\n  location: text('location').notNull(),\n  lastFertilized: timestamp('last_fertilized'),\n  fertilizerSchedule: text('fertilizer_schedule').notNull(),\n  fertilizerDue: timestamp('fertilizer_due'),\n  lastRepot: timestamp('last_repot'),\n  notes: text('notes'),\n  images: jsonb('images').$type<string[]>().default([]).notNull(),\n  isActive: boolean('is_active').default(true).notNull(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  updatedAt: timestamp('updated_at').defaultNow().notNull(),\n}, (table) => ({\n  // Indexes for performance optimization\n  userIdIdx: index('plant_instances_user_id_idx').on(table.userId),\n  plantIdIdx: index('plant_instances_plant_id_idx').on(table.plantId),\n  fertilizerDueIdx: index('plant_instances_fertilizer_due_idx').on(table.fertilizerDue),\n  isActiveIdx: index('plant_instances_is_active_idx').on(table.isActive),\n  userActiveIdx: index('plant_instances_user_active_idx').on(table.userId, table.isActive),\n  locationIdx: index('plant_instances_location_idx').on(table.location),\n}));\n\n// Propagations table\nexport const propagations = pgTable('propagations', {\n  id: serial('id').primaryKey(),\n  userId: integer('user_id').notNull().references(() => users.id),\n  plantId: integer('plant_id').notNull().references(() => plants.id),\n  parentInstanceId: integer('parent_instance_id').references(() => plantInstances.id), // Now nullable for external sources\n  nickname: text('nickname').notNull(),\n  location: text('location').notNull(),\n  dateStarted: timestamp('date_started').defaultNow().notNull(),\n  status: text('status', { enum: ['started', 'rooting', 'planted', 'established'] }).default('started').notNull(),\n  sourceType: text('source_type', { enum: ['internal', 'external'] }).default('internal').notNull(), // New field\n  externalSource: text('external_source', { enum: ['gift', 'trade', 'purchase', 'other'] }), // New field, nullable\n  externalSourceDetails: text('external_source_details'), // New field for additional details\n  notes: text('notes'),\n  images: jsonb('images').$type<string[]>().default([]).notNull(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  updatedAt: timestamp('updated_at').defaultNow().notNull(),\n}, (table) => ({\n  // Indexes for propagation queries\n  userIdIdx: index('propagations_user_id_idx').on(table.userId),\n  plantIdIdx: index('propagations_plant_id_idx').on(table.plantId),\n  parentInstanceIdIdx: index('propagations_parent_instance_id_idx').on(table.parentInstanceId),\n  statusIdx: index('propagations_status_idx').on(table.status),\n  sourceTypeIdx: index('propagations_source_type_idx').on(table.sourceType), // New index\n  externalSourceIdx: index('propagations_external_source_idx').on(table.externalSource), // New index\n  dateStartedIdx: index('propagations_date_started_idx').on(table.dateStarted),\n  userStatusIdx: index('propagations_user_status_idx').on(table.userId, table.status),\n  userSourceTypeIdx: index('propagations_user_source_type_idx').on(table.userId, table.sourceType), // New index\n}));\n\n// Care history table for tracking all care activities\nexport const careHistory = pgTable('care_history', {\n  id: serial('id').primaryKey(),\n  userId: integer('user_id').notNull().references(() => users.id),\n  plantInstanceId: integer('plant_instance_id').notNull().references(() => plantInstances.id),\n  careType: text('care_type', { \n    enum: ['fertilizer', 'water', 'repot', 'prune', 'inspect', 'other'] \n  }).notNull(),\n  careDate: timestamp('care_date').notNull(),\n  notes: text('notes'),\n  fertilizerType: text('fertilizer_type'), // For fertilizer care type\n  potSize: text('pot_size'), // For repot care type\n  soilType: text('soil_type'), // For repot care type\n  images: jsonb('images').$type<string[]>().default([]).notNull(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  updatedAt: timestamp('updated_at').defaultNow().notNull(),\n}, (table) => ({\n  // Indexes for care history queries\n  userIdIdx: index('care_history_user_id_idx').on(table.userId),\n  plantInstanceIdIdx: index('care_history_plant_instance_id_idx').on(table.plantInstanceId),\n  careTypeIdx: index('care_history_care_type_idx').on(table.careType),\n  careDateIdx: index('care_history_care_date_idx').on(table.careDate),\n  userPlantIdx: index('care_history_user_plant_idx').on(table.userId, table.plantInstanceId),\n  userCareTypeIdx: index('care_history_user_care_type_idx').on(table.userId, table.careType),\n  plantCareDateIdx: index('care_history_plant_care_date_idx').on(table.plantInstanceId, table.careDate),\n}));\n\n// Care guides table for plant care instructions\nexport const careGuides = pgTable('care_guides', {\n  id: serial('id').primaryKey(),\n  userId: integer('user_id').notNull().references(() => users.id),\n  \n  // Taxonomy level - determines which level this guide applies to\n  taxonomyLevel: text('taxonomy_level', { \n    enum: ['family', 'genus', 'species', 'cultivar'] \n  }).notNull(),\n  \n  // Taxonomy identifiers\n  family: text('family'),\n  genus: text('genus'),\n  species: text('species'),\n  cultivar: text('cultivar'),\n  commonName: text('common_name'),\n  \n  // Care guide content\n  title: text('title').notNull(),\n  description: text('description'),\n  \n  // Care categories\n  watering: jsonb('watering').$type<{\n    frequency?: string;\n    method?: string;\n    tips?: string;\n  }>(),\n  \n  fertilizing: jsonb('fertilizing').$type<{\n    frequency?: string;\n    type?: string;\n    schedule?: string;\n    tips?: string;\n  }>(),\n  \n  lighting: jsonb('lighting').$type<{\n    requirements?: string;\n    intensity?: string;\n    duration?: string;\n    tips?: string;\n  }>(),\n  \n  humidity: jsonb('humidity').$type<{\n    requirements?: string;\n    range?: string;\n    tips?: string;\n  }>(),\n  \n  temperature: jsonb('temperature').$type<{\n    range?: string;\n    seasonal?: string;\n    tips?: string;\n  }>(),\n  \n  soil: jsonb('soil').$type<{\n    type?: string;\n    recipe?: string;\n    drainage?: string;\n    ph?: string;\n    tips?: string;\n  }>(),\n  \n  repotting: jsonb('repotting').$type<{\n    frequency?: string;\n    season?: string;\n    potSize?: string;\n    tips?: string;\n  }>(),\n  \n  pruning: jsonb('pruning').$type<{\n    frequency?: string;\n    method?: string;\n    season?: string;\n    tips?: string;\n  }>(),\n  \n  propagation: jsonb('propagation').$type<{\n    methods?: string;\n    season?: string;\n    difficulty?: string;\n    tips?: string;\n  }>(),\n  \n  commonIssues: jsonb('common_issues').$type<{\n    pests?: string[];\n    diseases?: string[];\n    problems?: string[];\n    solutions?: Record<string, string>;\n  }>(),\n  \n  generalTips: text('general_tips'),\n  additionalNotes: text('additional_notes'),\n  tags: jsonb('tags').$type<string[]>().default([]).notNull(),\n  images: jsonb('images').$type<string[]>().default([]).notNull(),\n  \n  // Metadata\n  isPublic: boolean('is_public').default(false).notNull(),\n  isVerified: boolean('is_verified').default(false).notNull(),\n  createdAt: timestamp('created_at').defaultNow().notNull(),\n  updatedAt: timestamp('updated_at').defaultNow().notNull(),\n}, (table) => ({\n  // Indexes for care guide queries\n  userIdIdx: index('care_guides_user_id_idx').on(table.userId),\n  taxonomyLevelIdx: index('care_guides_taxonomy_level_idx').on(table.taxonomyLevel),\n  familyIdx: index('care_guides_family_idx').on(table.family),\n  genusIdx: index('care_guides_genus_idx').on(table.genus),\n  speciesIdx: index('care_guides_species_idx').on(table.species),\n  cultivarIdx: index('care_guides_cultivar_idx').on(table.cultivar),\n  commonNameIdx: index('care_guides_common_name_idx').on(table.commonName),\n  isPublicIdx: index('care_guides_is_public_idx').on(table.isPublic),\n  isVerifiedIdx: index('care_guides_is_verified_idx').on(table.isVerified),\n  // Composite indexes for taxonomy matching\n  familyGenusIdx: index('care_guides_family_genus_idx').on(table.family, table.genus),\n  genusSpeciesIdx: index('care_guides_genus_species_idx').on(table.genus, table.species),\n  speciesCultivarIdx: index('care_guides_species_cultivar_idx').on(table.species, table.cultivar),\n  // Unique constraint for user + taxonomy combination\n  userTaxonomyUnique: uniqueIndex('care_guides_user_taxonomy_unique').on(\n    table.userId, table.taxonomyLevel, table.family, table.genus, table.species, table.cultivar\n  ),\n}));\n\n// Relations\nexport const usersRelations = relations(users, ({ many }) => ({\n  plantInstances: many(plantInstances),\n  propagations: many(propagations),\n  sessions: many(sessions),\n  createdPlants: many(plants),\n  careHistory: many(careHistory),\n  careGuides: many(careGuides),\n  emailVerificationCodes: many(emailVerificationCodes),\n}));\n\nexport const plantsRelations = relations(plants, ({ many, one }) => ({\n  instances: many(plantInstances),\n  propagations: many(propagations),\n  createdBy: one(users, {\n    fields: [plants.createdBy],\n    references: [users.id],\n  }),\n}));\n\nexport const plantInstancesRelations = relations(plantInstances, ({ one, many }) => ({\n  user: one(users, {\n    fields: [plantInstances.userId],\n    references: [users.id],\n  }),\n  plant: one(plants, {\n    fields: [plantInstances.plantId],\n    references: [plants.id],\n  }),\n  propagations: many(propagations),\n  careHistory: many(careHistory),\n}));\n\nexport const propagationsRelations = relations(propagations, ({ one }) => ({\n  user: one(users, {\n    fields: [propagations.userId],\n    references: [users.id],\n  }),\n  plant: one(plants, {\n    fields: [propagations.plantId],\n    references: [plants.id],\n  }),\n  parentInstance: one(plantInstances, {\n    fields: [propagations.parentInstanceId],\n    references: [plantInstances.id],\n  }),\n}));\n\nexport const careHistoryRelations = relations(careHistory, ({ one }) => ({\n  user: one(users, {\n    fields: [careHistory.userId],\n    references: [users.id],\n  }),\n  plantInstance: one(plantInstances, {\n    fields: [careHistory.plantInstanceId],\n    references: [plantInstances.id],\n  }),\n}));\n\nexport const sessionsRelations = relations(sessions, ({ one }) => ({\n  user: one(users, {\n    fields: [sessions.userId],\n    references: [users.id],\n  }),\n}));\n\nexport const emailVerificationCodesRelations = relations(emailVerificationCodes, ({ one }) => ({\n  user: one(users, {\n    fields: [emailVerificationCodes.userId],\n    references: [users.id],\n  }),\n}));\n\nexport const careGuidesRelations = relations(careGuides, ({ one }) => ({\n  user: one(users, {\n    fields: [careGuides.userId],\n    references: [users.id],\n  }),\n}));\n\n// Export types\nexport type User = typeof users.$inferSelect;\nexport type NewUser = typeof users.$inferInsert;\nexport type Session = typeof sessions.$inferSelect;\nexport type NewSession = typeof sessions.$inferInsert;\nexport type EmailVerificationCode = typeof emailVerificationCodes.$inferSelect;\nexport type NewEmailVerificationCode = typeof emailVerificationCodes.$inferInsert;\nexport type Plant = typeof plants.$inferSelect;\nexport type NewPlant = typeof plants.$inferInsert;\nexport type PlantInstance = typeof plantInstances.$inferSelect;\nexport type NewPlantInstance = typeof plantInstances.$inferInsert;\nexport type Propagation = typeof propagations.$inferSelect;\nexport type NewPropagation = typeof propagations.$inferInsert;\nexport type CareHistory = typeof careHistory.$inferSelect;\nexport type NewCareHistory = typeof careHistory.$inferInsert;\nexport type CareGuide = typeof careGuides.$inferSelect;\nexport type NewCareGuide = typeof careGuides.$inferInsert;"],
      names: ["careGuides", "careGuidesRelations", "careHistory", "careHistoryRelations", "emailVerificationCodes", "emailVerificationCodesRelations", "plantInstances", "plantInstancesRelations", "plants", "plantsRelations", "propagations", "propagationsRelations", "sessions", "sessionsRelations", "users", "usersRelations", "pgTable", "id", "serial", "primaryKey", "email", "text", "notNull", "unique", "hashedPassword", "name", "isCurator", "boolean", "default", "isEmailVerified", "createdAt", "timestamp", "defaultNow", "updatedAt", "table", "emailVerifiedIdx", "index", "on", "userId", "integer", "references", "onDelete", "code", "expiresAt", "attemptsUsed", "userIdIdx", "expiresAtIdx", "userActiveCodeUnique", "uniqueIndex", "withTimezone", "mode", "family", "genus", "species", "cultivar", "commonName", "careInstructions", "defaultImage", "createdBy", "isVerified", "familyIdx", "genusIdx", "speciesIdx", "cultivarIdx", "commonNameIdx", "taxonomyUnique", "verifiedIdx", "plantId", "nickname", "location", "lastFertilized", "fertilizerSchedule", "fertilizerDue", "lastRepot", "notes", "images", "jsonb", "$type", "isActive", "plantIdIdx", "fertilizerDueIdx", "isActiveIdx", "userActiveIdx", "locationIdx", "parentInstanceId", "dateStarted", "status", "enum", "sourceType", "externalSource", "externalSourceDetails", "parentInstanceIdIdx", "statusIdx", "sourceTypeIdx", "externalSourceIdx", "dateStartedIdx", "userStatusIdx", "userSourceTypeIdx", "plantInstanceId", "careType", "careDate", "fertilizerType", "potSize", "soilType", "plantInstanceIdIdx", "careTypeIdx", "careDateIdx", "userPlantIdx", "userCareTypeIdx", "plantCareDateIdx", "taxonomyLevel", "title", "description", "watering", "fertilizing", "lighting", "humidity", "temperature", "soil", "repotting", "pruning", "propagation", "commonIssues", "generalTips", "additionalNotes", "tags", "isPublic", "taxonomyLevelIdx", "isPublicIdx", "isVerifiedIdx", "familyGenusIdx", "genusSpeciesIdx", "speciesCultivarIdx", "userTaxonomyUnique", "relations", "many", "createdPlants", "one", "instances", "fields", "user", "plant", "parentInstance", "plantInstance"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ee5393a26158e5249334509eac55111b0dc53c13"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2899uy7qq6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2899uy7qq6();
cov_2899uy7qq6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[0]++;
  cov_2899uy7qq6().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2899uy7qq6().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2899uy7qq6().s[3]++;
_export(exports, {
  get careGuides() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[1]++;
    cov_2899uy7qq6().s[4]++;
    return careGuides;
  },
  get careGuidesRelations() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[2]++;
    cov_2899uy7qq6().s[5]++;
    return careGuidesRelations;
  },
  get careHistory() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[3]++;
    cov_2899uy7qq6().s[6]++;
    return careHistory;
  },
  get careHistoryRelations() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[4]++;
    cov_2899uy7qq6().s[7]++;
    return careHistoryRelations;
  },
  get emailVerificationCodes() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[5]++;
    cov_2899uy7qq6().s[8]++;
    return emailVerificationCodes;
  },
  get emailVerificationCodesRelations() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[6]++;
    cov_2899uy7qq6().s[9]++;
    return emailVerificationCodesRelations;
  },
  get plantInstances() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[7]++;
    cov_2899uy7qq6().s[10]++;
    return plantInstances;
  },
  get plantInstancesRelations() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[8]++;
    cov_2899uy7qq6().s[11]++;
    return plantInstancesRelations;
  },
  get plants() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[9]++;
    cov_2899uy7qq6().s[12]++;
    return plants;
  },
  get plantsRelations() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[10]++;
    cov_2899uy7qq6().s[13]++;
    return plantsRelations;
  },
  get propagations() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[11]++;
    cov_2899uy7qq6().s[14]++;
    return propagations;
  },
  get propagationsRelations() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[12]++;
    cov_2899uy7qq6().s[15]++;
    return propagationsRelations;
  },
  get sessions() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[13]++;
    cov_2899uy7qq6().s[16]++;
    return sessions;
  },
  get sessionsRelations() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[14]++;
    cov_2899uy7qq6().s[17]++;
    return sessionsRelations;
  },
  get users() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[15]++;
    cov_2899uy7qq6().s[18]++;
    return users;
  },
  get usersRelations() {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[16]++;
    cov_2899uy7qq6().s[19]++;
    return usersRelations;
  }
});
const _pgcore =
/* istanbul ignore next */
(cov_2899uy7qq6().s[20]++, require("drizzle-orm/pg-core"));
const _drizzleorm =
/* istanbul ignore next */
(cov_2899uy7qq6().s[21]++, require("drizzle-orm"));
const users =
/* istanbul ignore next */
(cov_2899uy7qq6().s[22]++, (0, _pgcore.pgTable)('users', {
  id: (0, _pgcore.serial)('id').primaryKey(),
  email: (0, _pgcore.text)('email').notNull().unique(),
  hashedPassword: (0, _pgcore.text)('hashed_password').notNull(),
  name: (0, _pgcore.text)('name').notNull(),
  isCurator: (0, _pgcore.boolean)('is_curator').default(false).notNull(),
  isEmailVerified: (0, _pgcore.boolean)('is_email_verified').default(false).notNull(),
  createdAt: (0, _pgcore.timestamp)('created_at').defaultNow().notNull(),
  updatedAt: (0, _pgcore.timestamp)('updated_at').defaultNow().notNull()
}, table => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[17]++;
  cov_2899uy7qq6().s[23]++;
  return {
    // Index for email verification status
    emailVerifiedIdx: (0, _pgcore.index)('users_email_verified_idx').on(table.isEmailVerified)
  };
}));
const emailVerificationCodes =
/* istanbul ignore next */
(cov_2899uy7qq6().s[24]++, (0, _pgcore.pgTable)('email_verification_codes', {
  id: (0, _pgcore.serial)('id').primaryKey(),
  userId: (0, _pgcore.integer)('user_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[18]++;
    cov_2899uy7qq6().s[25]++;
    return users.id;
  }, {
    onDelete: 'cascade'
  }),
  code: (0, _pgcore.text)('code').notNull(),
  expiresAt: (0, _pgcore.timestamp)('expires_at').notNull(),
  createdAt: (0, _pgcore.timestamp)('created_at').defaultNow().notNull(),
  attemptsUsed: (0, _pgcore.integer)('attempts_used').default(0).notNull()
}, table => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[19]++;
  cov_2899uy7qq6().s[26]++;
  return {
    // Indexes for email verification code queries
    userIdIdx: (0, _pgcore.index)('email_verification_codes_user_id_idx').on(table.userId),
    expiresAtIdx: (0, _pgcore.index)('email_verification_codes_expires_at_idx').on(table.expiresAt),
    // Unique constraint to ensure one active code per user
    userActiveCodeUnique: (0, _pgcore.uniqueIndex)('email_verification_codes_user_active_unique').on(table.userId, table.expiresAt)
  };
}));
const sessions =
/* istanbul ignore next */
(cov_2899uy7qq6().s[27]++, (0, _pgcore.pgTable)('sessions', {
  id: (0, _pgcore.text)('id').primaryKey(),
  userId: (0, _pgcore.integer)('user_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[20]++;
    cov_2899uy7qq6().s[28]++;
    return users.id;
  }),
  expiresAt: (0, _pgcore.timestamp)('expires_at', {
    withTimezone: true,
    mode: 'date'
  }).notNull()
}, table => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[21]++;
  cov_2899uy7qq6().s[29]++;
  return {
    // Indexes for session management
    userIdIdx: (0, _pgcore.index)('sessions_user_id_idx').on(table.userId),
    expiresAtIdx: (0, _pgcore.index)('sessions_expires_at_idx').on(table.expiresAt)
  };
}));
const plants =
/* istanbul ignore next */
(cov_2899uy7qq6().s[30]++, (0, _pgcore.pgTable)('plants', {
  id: (0, _pgcore.serial)('id').primaryKey(),
  family: (0, _pgcore.text)('family').notNull(),
  genus: (0, _pgcore.text)('genus').notNull(),
  species: (0, _pgcore.text)('species').notNull(),
  cultivar: (0, _pgcore.text)('cultivar'),
  commonName: (0, _pgcore.text)('common_name').notNull(),
  careInstructions: (0, _pgcore.text)('care_instructions'),
  defaultImage: (0, _pgcore.text)('default_image'),
  createdBy: (0, _pgcore.integer)('created_by').references(() => {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[22]++;
    cov_2899uy7qq6().s[31]++;
    return users.id;
  }),
  isVerified: (0, _pgcore.boolean)('is_verified').default(false).notNull(),
  createdAt: (0, _pgcore.timestamp)('created_at').defaultNow().notNull(),
  updatedAt: (0, _pgcore.timestamp)('updated_at').defaultNow().notNull()
}, table => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[23]++;
  cov_2899uy7qq6().s[32]++;
  return {
    // Indexes for plant taxonomy search
    familyIdx: (0, _pgcore.index)('plants_family_idx').on(table.family),
    genusIdx: (0, _pgcore.index)('plants_genus_idx').on(table.genus),
    speciesIdx: (0, _pgcore.index)('plants_species_idx').on(table.species),
    cultivarIdx: (0, _pgcore.index)('plants_cultivar_idx').on(table.cultivar),
    commonNameIdx: (0, _pgcore.index)('plants_common_name_idx').on(table.commonName),
    // Unique constraint for taxonomy combination (including cultivar)
    taxonomyUnique: (0, _pgcore.uniqueIndex)('plants_taxonomy_unique').on(table.family, table.genus, table.species, table.cultivar),
    // Index for verified plants
    verifiedIdx: (0, _pgcore.index)('plants_verified_idx').on(table.isVerified)
  };
}));
const plantInstances =
/* istanbul ignore next */
(cov_2899uy7qq6().s[33]++, (0, _pgcore.pgTable)('plant_instances', {
  id: (0, _pgcore.serial)('id').primaryKey(),
  userId: (0, _pgcore.integer)('user_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[24]++;
    cov_2899uy7qq6().s[34]++;
    return users.id;
  }),
  plantId: (0, _pgcore.integer)('plant_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[25]++;
    cov_2899uy7qq6().s[35]++;
    return plants.id;
  }),
  nickname: (0, _pgcore.text)('nickname').notNull(),
  location: (0, _pgcore.text)('location').notNull(),
  lastFertilized: (0, _pgcore.timestamp)('last_fertilized'),
  fertilizerSchedule: (0, _pgcore.text)('fertilizer_schedule').notNull(),
  fertilizerDue: (0, _pgcore.timestamp)('fertilizer_due'),
  lastRepot: (0, _pgcore.timestamp)('last_repot'),
  notes: (0, _pgcore.text)('notes'),
  images: (0, _pgcore.jsonb)('images').$type().default([]).notNull(),
  isActive: (0, _pgcore.boolean)('is_active').default(true).notNull(),
  createdAt: (0, _pgcore.timestamp)('created_at').defaultNow().notNull(),
  updatedAt: (0, _pgcore.timestamp)('updated_at').defaultNow().notNull()
}, table => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[26]++;
  cov_2899uy7qq6().s[36]++;
  return {
    // Indexes for performance optimization
    userIdIdx: (0, _pgcore.index)('plant_instances_user_id_idx').on(table.userId),
    plantIdIdx: (0, _pgcore.index)('plant_instances_plant_id_idx').on(table.plantId),
    fertilizerDueIdx: (0, _pgcore.index)('plant_instances_fertilizer_due_idx').on(table.fertilizerDue),
    isActiveIdx: (0, _pgcore.index)('plant_instances_is_active_idx').on(table.isActive),
    userActiveIdx: (0, _pgcore.index)('plant_instances_user_active_idx').on(table.userId, table.isActive),
    locationIdx: (0, _pgcore.index)('plant_instances_location_idx').on(table.location)
  };
}));
const propagations =
/* istanbul ignore next */
(cov_2899uy7qq6().s[37]++, (0, _pgcore.pgTable)('propagations', {
  id: (0, _pgcore.serial)('id').primaryKey(),
  userId: (0, _pgcore.integer)('user_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[27]++;
    cov_2899uy7qq6().s[38]++;
    return users.id;
  }),
  plantId: (0, _pgcore.integer)('plant_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[28]++;
    cov_2899uy7qq6().s[39]++;
    return plants.id;
  }),
  parentInstanceId: (0, _pgcore.integer)('parent_instance_id').references(() => {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[29]++;
    cov_2899uy7qq6().s[40]++;
    return plantInstances.id;
  }),
  nickname: (0, _pgcore.text)('nickname').notNull(),
  location: (0, _pgcore.text)('location').notNull(),
  dateStarted: (0, _pgcore.timestamp)('date_started').defaultNow().notNull(),
  status: (0, _pgcore.text)('status', {
    enum: ['started', 'rooting', 'planted', 'established']
  }).default('started').notNull(),
  sourceType: (0, _pgcore.text)('source_type', {
    enum: ['internal', 'external']
  }).default('internal').notNull(),
  externalSource: (0, _pgcore.text)('external_source', {
    enum: ['gift', 'trade', 'purchase', 'other']
  }),
  externalSourceDetails: (0, _pgcore.text)('external_source_details'),
  notes: (0, _pgcore.text)('notes'),
  images: (0, _pgcore.jsonb)('images').$type().default([]).notNull(),
  createdAt: (0, _pgcore.timestamp)('created_at').defaultNow().notNull(),
  updatedAt: (0, _pgcore.timestamp)('updated_at').defaultNow().notNull()
}, table => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[30]++;
  cov_2899uy7qq6().s[41]++;
  return {
    // Indexes for propagation queries
    userIdIdx: (0, _pgcore.index)('propagations_user_id_idx').on(table.userId),
    plantIdIdx: (0, _pgcore.index)('propagations_plant_id_idx').on(table.plantId),
    parentInstanceIdIdx: (0, _pgcore.index)('propagations_parent_instance_id_idx').on(table.parentInstanceId),
    statusIdx: (0, _pgcore.index)('propagations_status_idx').on(table.status),
    sourceTypeIdx: (0, _pgcore.index)('propagations_source_type_idx').on(table.sourceType),
    externalSourceIdx: (0, _pgcore.index)('propagations_external_source_idx').on(table.externalSource),
    dateStartedIdx: (0, _pgcore.index)('propagations_date_started_idx').on(table.dateStarted),
    userStatusIdx: (0, _pgcore.index)('propagations_user_status_idx').on(table.userId, table.status),
    userSourceTypeIdx: (0, _pgcore.index)('propagations_user_source_type_idx').on(table.userId, table.sourceType)
  };
}));
const careHistory =
/* istanbul ignore next */
(cov_2899uy7qq6().s[42]++, (0, _pgcore.pgTable)('care_history', {
  id: (0, _pgcore.serial)('id').primaryKey(),
  userId: (0, _pgcore.integer)('user_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[31]++;
    cov_2899uy7qq6().s[43]++;
    return users.id;
  }),
  plantInstanceId: (0, _pgcore.integer)('plant_instance_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[32]++;
    cov_2899uy7qq6().s[44]++;
    return plantInstances.id;
  }),
  careType: (0, _pgcore.text)('care_type', {
    enum: ['fertilizer', 'water', 'repot', 'prune', 'inspect', 'other']
  }).notNull(),
  careDate: (0, _pgcore.timestamp)('care_date').notNull(),
  notes: (0, _pgcore.text)('notes'),
  fertilizerType: (0, _pgcore.text)('fertilizer_type'),
  potSize: (0, _pgcore.text)('pot_size'),
  soilType: (0, _pgcore.text)('soil_type'),
  images: (0, _pgcore.jsonb)('images').$type().default([]).notNull(),
  createdAt: (0, _pgcore.timestamp)('created_at').defaultNow().notNull(),
  updatedAt: (0, _pgcore.timestamp)('updated_at').defaultNow().notNull()
}, table => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[33]++;
  cov_2899uy7qq6().s[45]++;
  return {
    // Indexes for care history queries
    userIdIdx: (0, _pgcore.index)('care_history_user_id_idx').on(table.userId),
    plantInstanceIdIdx: (0, _pgcore.index)('care_history_plant_instance_id_idx').on(table.plantInstanceId),
    careTypeIdx: (0, _pgcore.index)('care_history_care_type_idx').on(table.careType),
    careDateIdx: (0, _pgcore.index)('care_history_care_date_idx').on(table.careDate),
    userPlantIdx: (0, _pgcore.index)('care_history_user_plant_idx').on(table.userId, table.plantInstanceId),
    userCareTypeIdx: (0, _pgcore.index)('care_history_user_care_type_idx').on(table.userId, table.careType),
    plantCareDateIdx: (0, _pgcore.index)('care_history_plant_care_date_idx').on(table.plantInstanceId, table.careDate)
  };
}));
const careGuides =
/* istanbul ignore next */
(cov_2899uy7qq6().s[46]++, (0, _pgcore.pgTable)('care_guides', {
  id: (0, _pgcore.serial)('id').primaryKey(),
  userId: (0, _pgcore.integer)('user_id').notNull().references(() => {
    /* istanbul ignore next */
    cov_2899uy7qq6().f[34]++;
    cov_2899uy7qq6().s[47]++;
    return users.id;
  }),
  // Taxonomy level - determines which level this guide applies to
  taxonomyLevel: (0, _pgcore.text)('taxonomy_level', {
    enum: ['family', 'genus', 'species', 'cultivar']
  }).notNull(),
  // Taxonomy identifiers
  family: (0, _pgcore.text)('family'),
  genus: (0, _pgcore.text)('genus'),
  species: (0, _pgcore.text)('species'),
  cultivar: (0, _pgcore.text)('cultivar'),
  commonName: (0, _pgcore.text)('common_name'),
  // Care guide content
  title: (0, _pgcore.text)('title').notNull(),
  description: (0, _pgcore.text)('description'),
  // Care categories
  watering: (0, _pgcore.jsonb)('watering').$type(),
  fertilizing: (0, _pgcore.jsonb)('fertilizing').$type(),
  lighting: (0, _pgcore.jsonb)('lighting').$type(),
  humidity: (0, _pgcore.jsonb)('humidity').$type(),
  temperature: (0, _pgcore.jsonb)('temperature').$type(),
  soil: (0, _pgcore.jsonb)('soil').$type(),
  repotting: (0, _pgcore.jsonb)('repotting').$type(),
  pruning: (0, _pgcore.jsonb)('pruning').$type(),
  propagation: (0, _pgcore.jsonb)('propagation').$type(),
  commonIssues: (0, _pgcore.jsonb)('common_issues').$type(),
  generalTips: (0, _pgcore.text)('general_tips'),
  additionalNotes: (0, _pgcore.text)('additional_notes'),
  tags: (0, _pgcore.jsonb)('tags').$type().default([]).notNull(),
  images: (0, _pgcore.jsonb)('images').$type().default([]).notNull(),
  // Metadata
  isPublic: (0, _pgcore.boolean)('is_public').default(false).notNull(),
  isVerified: (0, _pgcore.boolean)('is_verified').default(false).notNull(),
  createdAt: (0, _pgcore.timestamp)('created_at').defaultNow().notNull(),
  updatedAt: (0, _pgcore.timestamp)('updated_at').defaultNow().notNull()
}, table => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[35]++;
  cov_2899uy7qq6().s[48]++;
  return {
    // Indexes for care guide queries
    userIdIdx: (0, _pgcore.index)('care_guides_user_id_idx').on(table.userId),
    taxonomyLevelIdx: (0, _pgcore.index)('care_guides_taxonomy_level_idx').on(table.taxonomyLevel),
    familyIdx: (0, _pgcore.index)('care_guides_family_idx').on(table.family),
    genusIdx: (0, _pgcore.index)('care_guides_genus_idx').on(table.genus),
    speciesIdx: (0, _pgcore.index)('care_guides_species_idx').on(table.species),
    cultivarIdx: (0, _pgcore.index)('care_guides_cultivar_idx').on(table.cultivar),
    commonNameIdx: (0, _pgcore.index)('care_guides_common_name_idx').on(table.commonName),
    isPublicIdx: (0, _pgcore.index)('care_guides_is_public_idx').on(table.isPublic),
    isVerifiedIdx: (0, _pgcore.index)('care_guides_is_verified_idx').on(table.isVerified),
    // Composite indexes for taxonomy matching
    familyGenusIdx: (0, _pgcore.index)('care_guides_family_genus_idx').on(table.family, table.genus),
    genusSpeciesIdx: (0, _pgcore.index)('care_guides_genus_species_idx').on(table.genus, table.species),
    speciesCultivarIdx: (0, _pgcore.index)('care_guides_species_cultivar_idx').on(table.species, table.cultivar),
    // Unique constraint for user + taxonomy combination
    userTaxonomyUnique: (0, _pgcore.uniqueIndex)('care_guides_user_taxonomy_unique').on(table.userId, table.taxonomyLevel, table.family, table.genus, table.species, table.cultivar)
  };
}));
const usersRelations =
/* istanbul ignore next */
(cov_2899uy7qq6().s[49]++, (0, _drizzleorm.relations)(users, ({
  many
}) => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[36]++;
  cov_2899uy7qq6().s[50]++;
  return {
    plantInstances: many(plantInstances),
    propagations: many(propagations),
    sessions: many(sessions),
    createdPlants: many(plants),
    careHistory: many(careHistory),
    careGuides: many(careGuides),
    emailVerificationCodes: many(emailVerificationCodes)
  };
}));
const plantsRelations =
/* istanbul ignore next */
(cov_2899uy7qq6().s[51]++, (0, _drizzleorm.relations)(plants, ({
  many,
  one
}) => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[37]++;
  cov_2899uy7qq6().s[52]++;
  return {
    instances: many(plantInstances),
    propagations: many(propagations),
    createdBy: one(users, {
      fields: [plants.createdBy],
      references: [users.id]
    })
  };
}));
const plantInstancesRelations =
/* istanbul ignore next */
(cov_2899uy7qq6().s[53]++, (0, _drizzleorm.relations)(plantInstances, ({
  one,
  many
}) => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[38]++;
  cov_2899uy7qq6().s[54]++;
  return {
    user: one(users, {
      fields: [plantInstances.userId],
      references: [users.id]
    }),
    plant: one(plants, {
      fields: [plantInstances.plantId],
      references: [plants.id]
    }),
    propagations: many(propagations),
    careHistory: many(careHistory)
  };
}));
const propagationsRelations =
/* istanbul ignore next */
(cov_2899uy7qq6().s[55]++, (0, _drizzleorm.relations)(propagations, ({
  one
}) => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[39]++;
  cov_2899uy7qq6().s[56]++;
  return {
    user: one(users, {
      fields: [propagations.userId],
      references: [users.id]
    }),
    plant: one(plants, {
      fields: [propagations.plantId],
      references: [plants.id]
    }),
    parentInstance: one(plantInstances, {
      fields: [propagations.parentInstanceId],
      references: [plantInstances.id]
    })
  };
}));
const careHistoryRelations =
/* istanbul ignore next */
(cov_2899uy7qq6().s[57]++, (0, _drizzleorm.relations)(careHistory, ({
  one
}) => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[40]++;
  cov_2899uy7qq6().s[58]++;
  return {
    user: one(users, {
      fields: [careHistory.userId],
      references: [users.id]
    }),
    plantInstance: one(plantInstances, {
      fields: [careHistory.plantInstanceId],
      references: [plantInstances.id]
    })
  };
}));
const sessionsRelations =
/* istanbul ignore next */
(cov_2899uy7qq6().s[59]++, (0, _drizzleorm.relations)(sessions, ({
  one
}) => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[41]++;
  cov_2899uy7qq6().s[60]++;
  return {
    user: one(users, {
      fields: [sessions.userId],
      references: [users.id]
    })
  };
}));
const emailVerificationCodesRelations =
/* istanbul ignore next */
(cov_2899uy7qq6().s[61]++, (0, _drizzleorm.relations)(emailVerificationCodes, ({
  one
}) => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[42]++;
  cov_2899uy7qq6().s[62]++;
  return {
    user: one(users, {
      fields: [emailVerificationCodes.userId],
      references: [users.id]
    })
  };
}));
const careGuidesRelations =
/* istanbul ignore next */
(cov_2899uy7qq6().s[63]++, (0, _drizzleorm.relations)(careGuides, ({
  one
}) => {
  /* istanbul ignore next */
  cov_2899uy7qq6().f[43]++;
  cov_2899uy7qq6().s[64]++;
  return {
    user: one(users, {
      fields: [careGuides.userId],
      references: [users.id]
    })
  };
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
34ce33003e9c1d47d9ca2a498613495c
"use strict";

/* istanbul ignore next */
function cov_1tusfd5r08() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/app/api/user/me/route.ts";
  var hash = "20090a4e6bc380453b3461a349f9fd11dd1bc384";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/app/api/user/me/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 55
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "6": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 15,
          column: 71
        }
      },
      "7": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 22,
          column: 9
        }
      },
      "8": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 21,
          column: 15
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 29,
          column: 11
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 48
        }
      },
      "11": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 36,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 22,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 17
          }
        }, {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 29
          }
        }],
        line: 16
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/app/api/user/me/route.ts"],
      sourcesContent: ["import { NextResponse } from 'next/server';\nimport { validateRequest } from '@/lib/auth/server';\n\nexport async function GET() {\n  try {\n    const { user, session } = await validateRequest();\n    \n    if (!user || !session) {\n      return NextResponse.json(\n        { error: 'Unauthorized' },\n        { status: 401 }\n      );\n    }\n    \n    return NextResponse.json({\n      user: {\n        id: user.id,\n        email: user.email,\n        name: user.name,\n      },\n    });\n    \n  } catch (error) {\n    console.error('Get user error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["GET", "user", "session", "validateRequest", "NextResponse", "json", "error", "status", "id", "email", "name", "console"],
      mappings: ";;;;+BAGsBA;;;eAAAA;;;wBAHO;yBACG;AAEzB,eAAeA;IACpB,IAAI;QACF,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAE,GAAG,MAAMC,IAAAA,wBAAe;QAE/C,IAAI,CAACF,QAAQ,CAACC,SAAS;YACrB,OAAOE,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAe,GACxB;gBAAEC,QAAQ;YAAI;QAElB;QAEA,OAAOH,oBAAY,CAACC,IAAI,CAAC;YACvBJ,MAAM;gBACJO,IAAIP,KAAKO,EAAE;gBACXC,OAAOR,KAAKQ,KAAK;gBACjBC,MAAMT,KAAKS,IAAI;YACjB;QACF;IAEF,EAAE,OAAOJ,OAAO;QACdK,QAAQL,KAAK,CAAC,mBAAmBA;QACjC,OAAOF,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAAwB,GACjC;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "20090a4e6bc380453b3461a349f9fd11dd1bc384"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tusfd5r08 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tusfd5r08();
cov_1tusfd5r08().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1tusfd5r08().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1tusfd5r08().f[0]++;
    cov_1tusfd5r08().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_1tusfd5r08().s[3]++, require("next/server"));
const _server1 =
/* istanbul ignore next */
(cov_1tusfd5r08().s[4]++, require("../../../../lib/auth/server"));
async function GET() {
  /* istanbul ignore next */
  cov_1tusfd5r08().f[1]++;
  cov_1tusfd5r08().s[5]++;
  try {
    const {
      user,
      session
    } =
    /* istanbul ignore next */
    (cov_1tusfd5r08().s[6]++, await (0, _server1.validateRequest)());
    /* istanbul ignore next */
    cov_1tusfd5r08().s[7]++;
    if (
    /* istanbul ignore next */
    (cov_1tusfd5r08().b[1][0]++, !user) ||
    /* istanbul ignore next */
    (cov_1tusfd5r08().b[1][1]++, !session)) {
      /* istanbul ignore next */
      cov_1tusfd5r08().b[0][0]++;
      cov_1tusfd5r08().s[8]++;
      return _server.NextResponse.json({
        error: 'Unauthorized'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tusfd5r08().b[0][1]++;
    }
    cov_1tusfd5r08().s[9]++;
    return _server.NextResponse.json({
      user: {
        id: user.id,
        email: user.email,
        name: user.name
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tusfd5r08().s[10]++;
    console.error('Get user error:', error);
    /* istanbul ignore next */
    cov_1tusfd5r08().s[11]++;
    return _server.NextResponse.json({
      error: 'Internal server error'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXR1c2ZkNXIwOCIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdFVCIsImYiLCJ1c2VyIiwic2Vzc2lvbiIsIl9zZXJ2ZXIxIiwidmFsaWRhdGVSZXF1ZXN0IiwiYiIsIl9zZXJ2ZXIiLCJOZXh0UmVzcG9uc2UiLCJqc29uIiwiZXJyb3IiLCJzdGF0dXMiLCJpZCIsImVtYWlsIiwibmFtZSIsImNvbnNvbGUiXSwic291cmNlcyI6WyIvVXNlcnMvc3RlZmFuYmVra2VyL3Byb2plY3RzL2ZhbmN5LXBsYW50aWVzL3NyYy9hcHAvYXBpL3VzZXIvbWUvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgdmFsaWRhdGVSZXF1ZXN0IH0gZnJvbSAnQC9saWIvYXV0aC9zZXJ2ZXInO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgdXNlciwgc2Vzc2lvbiB9ID0gYXdhaXQgdmFsaWRhdGVSZXF1ZXN0KCk7XG4gICAgXG4gICAgaWYgKCF1c2VyIHx8ICFzZXNzaW9uKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdVbmF1dGhvcml6ZWQnIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxuICAgICAgKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHVzZXI6IHtcbiAgICAgICAgaWQ6IHVzZXIuaWQsXG4gICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICBuYW1lOiB1c2VyLm5hbWUsXG4gICAgICB9LFxuICAgIH0pO1xuICAgIFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0dldCB1c2VyIGVycm9yOicsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKTtcbiAgfVxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBT1E7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7OzsrQkFKYzs7Ozs7O1dBQUFDLEdBQUE7Ozs7O2tDQUhPOzs7a0NBQ0c7QUFFekIsZUFBZUEsSUFBQTtFQUFBO0VBQUFILGNBQUEsR0FBQUksQ0FBQTtFQUFBSixjQUFBLEdBQUFFLENBQUE7RUFDcEIsSUFBSTtJQUNGLE1BQU07TUFBRUcsSUFBSTtNQUFFQztJQUFPLENBQUU7SUFBQTtJQUFBLENBQUFOLGNBQUEsR0FBQUUsQ0FBQSxPQUFHLE1BQU0sSUFBQUssUUFBQSxDQUFBQyxlQUFlO0lBQUE7SUFBQVIsY0FBQSxHQUFBRSxDQUFBO0lBRS9DO0lBQUk7SUFBQSxDQUFBRixjQUFBLEdBQUFTLENBQUEsV0FBQ0osSUFBQTtJQUFBO0lBQUEsQ0FBQUwsY0FBQSxHQUFBUyxDQUFBLFVBQVEsQ0FBQ0gsT0FBQSxHQUFTO01BQUE7TUFBQU4sY0FBQSxHQUFBUyxDQUFBO01BQUFULGNBQUEsR0FBQUUsQ0FBQTtNQUNyQixPQUFPUSxPQUFBLENBQUFDLFlBQVksQ0FBQ0MsSUFBSSxDQUN0QjtRQUFFQyxLQUFBLEVBQU87TUFBZSxHQUN4QjtRQUFFQyxNQUFBLEVBQVE7TUFBSTtJQUVsQjtJQUFBO0lBQUE7TUFBQWQsY0FBQSxHQUFBUyxDQUFBO0lBQUE7SUFBQVQsY0FBQSxHQUFBRSxDQUFBO0lBRUEsT0FBT1EsT0FBQSxDQUFBQyxZQUFZLENBQUNDLElBQUksQ0FBQztNQUN2QlAsSUFBQSxFQUFNO1FBQ0pVLEVBQUEsRUFBSVYsSUFBQSxDQUFLVSxFQUFFO1FBQ1hDLEtBQUEsRUFBT1gsSUFBQSxDQUFLVyxLQUFLO1FBQ2pCQyxJQUFBLEVBQU1aLElBQUEsQ0FBS1k7TUFDYjtJQUNGO0VBRUYsRUFBRSxPQUFPSixLQUFBLEVBQU87SUFBQTtJQUFBYixjQUFBLEdBQUFFLENBQUE7SUFDZGdCLE9BQUEsQ0FBUUwsS0FBSyxDQUFDLG1CQUFtQkEsS0FBQTtJQUFBO0lBQUFiLGNBQUEsR0FBQUUsQ0FBQTtJQUNqQyxPQUFPUSxPQUFBLENBQUFDLFlBQVksQ0FBQ0MsSUFBSSxDQUN0QjtNQUFFQyxLQUFBLEVBQU87SUFBd0IsR0FDakM7TUFBRUMsTUFBQSxFQUFRO0lBQUk7RUFFbEI7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==
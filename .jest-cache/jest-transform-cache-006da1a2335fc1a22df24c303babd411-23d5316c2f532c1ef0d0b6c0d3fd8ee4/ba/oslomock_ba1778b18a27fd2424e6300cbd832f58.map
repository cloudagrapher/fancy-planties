{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/test-utils/mocks/oslo-mock.js"],"sourcesContent":["// Mock for oslo package to handle ES module issues in Jest\n// This provides mock implementations for crypto functions used in tests\n\nexport const generateRandomString = (length, alphabet) => {\n  return 'mock-random-string-' + length;\n};\n\nexport const generateId = (length) => {\n  return 'mock-id-' + (length || 15);\n};\n\nexport const encodeBase32 = (data) => {\n  return 'MOCK' + Buffer.from(data).toString('base64').replace(/=/g, '');\n};\n\nexport const decodeBase32 = (encoded) => {\n  const base64 = encoded.replace('MOCK', '') + '==';\n  return Buffer.from(base64, 'base64');\n};\n\nexport const encodeHex = (data) => {\n  return Buffer.from(data).toString('hex');\n};\n\nexport const decodeHex = (encoded) => {\n  return Buffer.from(encoded, 'hex');\n};\n\n// Export all functions as default for different import patterns\nexport default {\n  generateRandomString,\n  generateId,\n  encodeBase32,\n  decodeBase32,\n  encodeHex,\n  decodeHex\n};\n\n// Handle crypto module exports\nexport const crypto = {\n  generateRandomString,\n  generateId\n};\n\n// Handle password module exports \nexport const password = {\n  hash: async (password) => 'mock-hash-' + password,\n  verify: async (hash, password) => hash === 'mock-hash-' + password\n};\n\n// Mock ECDSA if needed\nexport const ECDSA = {\n  sign: () => 'mock-signature',\n  verify: () => true\n};"],"names":["ECDSA","crypto","decodeBase32","decodeHex","encodeBase32","encodeHex","generateId","generateRandomString","password","length","alphabet","data","Buffer","from","toString","replace","encoded","base64","hash","verify","sign"],"mappings":"AAAA,2DAA2D;AAC3D,wEAAwE;;;;;;;;;;;;QAkD3DA;eAAAA;;QAZAC;eAAAA;;QAxBAC;eAAAA;;QASAC;eAAAA;;QAIb,gEAAgE;IAChE;eAAA;;QAlBaC;eAAAA;;QASAC;eAAAA;;QAbAC;eAAAA;;QAJAC;eAAAA;;QA0CAC;eAAAA;;;AA1CN,MAAMD,uBAAuB,CAACE,QAAQC;IAC3C,OAAO,wBAAwBD;AACjC;AAEO,MAAMH,aAAa,CAACG;IACzB,OAAO,aAAcA,CAAAA,UAAU,EAAC;AAClC;AAEO,MAAML,eAAe,CAACO;IAC3B,OAAO,SAASC,OAAOC,IAAI,CAACF,MAAMG,QAAQ,CAAC,UAAUC,OAAO,CAAC,MAAM;AACrE;AAEO,MAAMb,eAAe,CAACc;IAC3B,MAAMC,SAASD,QAAQD,OAAO,CAAC,QAAQ,MAAM;IAC7C,OAAOH,OAAOC,IAAI,CAACI,QAAQ;AAC7B;AAEO,MAAMZ,YAAY,CAACM;IACxB,OAAOC,OAAOC,IAAI,CAACF,MAAMG,QAAQ,CAAC;AACpC;AAEO,MAAMX,YAAY,CAACa;IACxB,OAAOJ,OAAOC,IAAI,CAACG,SAAS;AAC9B;MAGA,WAAe;IACbT;IACAD;IACAF;IACAF;IACAG;IACAF;AACF;AAGO,MAAMF,SAAS;IACpBM;IACAD;AACF;AAGO,MAAME,WAAW;IACtBU,MAAM,OAAOV,WAAa,eAAeA;IACzCW,QAAQ,OAAOD,MAAMV,WAAaU,SAAS,eAAeV;AAC5D;AAGO,MAAMR,QAAQ;IACnBoB,MAAM,IAAM;IACZD,QAAQ,IAAM;AAChB"}
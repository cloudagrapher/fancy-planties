{"version":3,"names":["EmailServiceError","cov_f0rqahzv8","f","s","sendEmailWithRetry","Error","constructor","message","code","name","emailService","email","maxRetries","b","lastError","attempt","success","sendVerificationEmail","error","delay","Math","pow","Promise","resolve","setTimeout"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/lib/services/email-service.ts"],"sourcesContent":["import 'server-only';\n\nexport interface EmailService {\n  sendVerificationEmail(email: string, code: string, name: string): Promise<boolean>;\n}\n\nexport interface EmailConfig {\n  apiKey: string;\n  fromEmail: string;\n  fromName: string;\n}\n\nexport class EmailServiceError extends Error {\n  constructor(\n    message: string,\n    public code: 'QUOTA_EXCEEDED' | 'API_ERROR' | 'NETWORK_ERROR' | 'INVALID_EMAIL'\n  ) {\n    super(message);\n    this.name = 'EmailServiceError';\n  }\n}\n\n/**\n * Send email with retry logic and exponential backoff\n */\nexport async function sendEmailWithRetry(\n  emailService: EmailService,\n  email: string,\n  code: string,\n  name: string,\n  maxRetries = 3\n): Promise<boolean> {\n  let lastError: Error | null = null;\n  \n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\n    try {\n      const success = await emailService.sendVerificationEmail(email, code, name);\n      if (success) {\n        return true;\n      }\n      throw new Error('Email service returned false');\n    } catch (error) {\n      lastError = error as Error;\n      \n      // Don't retry on certain errors\n      if (error instanceof EmailServiceError && \n          (error.code === 'INVALID_EMAIL' || error.code === 'QUOTA_EXCEEDED')) {\n        throw error;\n      }\n      \n      // Exponential backoff: 1s, 2s, 4s\n      if (attempt < maxRetries) {\n        const delay = Math.pow(2, attempt - 1) * 1000;\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n    }\n  }\n  \n  throw lastError || new Error('All retry attempts failed');\n}"],"mappingsaA,kBAAA;IAAA;IAAAC,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAAAH,iBAAA;;MAaSI,mBAAA;IAAA;IAAAH,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;WAAAC,kBAAA;;;;;QAzBf;AAYA,MAAMJ,iBAAA,SAA0BK,KAAA;EACrCC,YACEC,OAAe,EACfC,IAA+E,EAC/E;IAAA;IAAAP,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAE,CAAA;IACA,KAAK,CAACI,OAAA,QAFCC,IAAA,GAAAA,IAAA;IAAA;IAAAP,aAAA,GAAAE,CAAA;IAGP,IAAI,CAACM,IAAI,GAAG;EACd;AACF;AAKO,eAAeL,mBACpBM,YAA0B,EAC1BC,KAAa,EACbH,IAAY,EACZC,IAAY,EACZG,UAAA;AAAA;AAAA,CAAAX,aAAA,GAAAY,CAAA,UAAa,CAAC;EAAA;EAAAZ,aAAA,GAAAC,CAAA;EAEd,IAAIY,SAAA;EAAA;EAAA,CAAAb,aAAA,GAAAE,CAAA,OAA0B;EAAA;EAAAF,aAAA,GAAAE,CAAA;EAE9B,KAAK,IAAIY,OAAA;EAAA;EAAA,CAAAd,aAAA,GAAAE,CAAA,QAAU,IAAGY,OAAA,IAAWH,UAAA,EAAYG,OAAA,IAAW;IAAA;IAAAd,aAAA,GAAAE,CAAA;IACtD,IAAI;MACF,MAAMa,OAAA;MAAA;MAAA,CAAAf,aAAA,GAAAE,CAAA,QAAU,MAAMO,YAAA,CAAaO,qBAAqB,CAACN,KAAA,EAAOH,IAAA,EAAMC,IAAA;MAAA;MAAAR,aAAA,GAAAE,CAAA;MACtE,IAAIa,OAAA,EAAS;QAAA;QAAAf,aAAA,GAAAY,CAAA;QAAAZ,aAAA,GAAAE,CAAA;QACX,OAAO;MACT;MAAA;MAAA;QAAAF,aAAA,GAAAY,CAAA;MAAA;MAAAZ,aAAA,GAAAE,CAAA;MACA,MAAM,IAAIE,KAAA,CAAM;IAClB,EAAE,OAAOa,KAAA,EAAO;MAAA;MAAAjB,aAAA,GAAAE,CAAA;MACdW,SAAA,GAAYI,KAAA;MAEZ;MAAA;MAAAjB,aAAA,GAAAE,CAAA;MACA;MAAI;MAAA,CAAAF,aAAA,GAAAY,CAAA,UAAAK,KAAA,YAAiBlB,iBAAA;MAChB;MAAA,CAAAC,aAAA,GAAAY,CAAA,UAAAK,KAAA,CAAMV,IAAI,KAAK;MAAA;MAAA,CAAAP,aAAA,GAAAY,CAAA,UAAmBK,KAAA,CAAMV,IAAI,KAAK,gBAAe,IAAI;QAAA;QAAAP,aAAA,GAAAY,CAAA;QAAAZ,aAAA,GAAAE,CAAA;QACvE,MAAMe,KAAA;MACR;MAAA;MAAA;QAAAjB,aAAA,GAAAY,CAAA;MAAA;MAEA;MAAAZ,aAAA,GAAAE,CAAA;MACA,IAAIY,OAAA,GAAUH,UAAA,EAAY;QAAA;QAAAX,aAAA,GAAAY,CAAA;QACxB,MAAMM,KAAA;QAAA;QAAA,CAAAlB,aAAA,GAAAE,CAAA,QAAQiB,IAAA,CAAKC,GAAG,CAAC,GAAGN,OAAA,GAAU,KAAK;QAAA;QAAAd,aAAA,GAAAE,CAAA;QACzC,MAAM,IAAImB,OAAA,CAAQC,OAAA,IAAW;UAAA;UAAAtB,aAAA,GAAAC,CAAA;UAAAD,aAAA,GAAAE,CAAA;UAAA,OAAAqB,UAAA,CAAWD,OAAA,EAASJ,KAAA;QAAA;MACnD;MAAA;MAAA;QAAAlB,aAAA,GAAAY,CAAA;MAAA;IACF;EACF;EAAA;EAAAZ,aAAA,GAAAE,CAAA;EAEA,MAAM,2BAAAF,aAAA,GAAAY,CAAA,UAAAC,SAAA;EAAA;EAAA,CAAAb,aAAA,GAAAY,CAAA,UAAa,IAAIR,KAAA,CAAM;AAC/B","ignoreList":[]}
{"version":3,"names":["cov_xxmk6ljk8","actualCoverage","s","SignUpForm","f","router","_navigation","useRouter","formData","setFormData","_react","useState","email","password","name","errors","setErrors","isLoading","setIsLoading","generalError","setGeneralError","handleSubmit","e","preventDefault","validation","_validation","signUpSchema","safeParse","success","b","fieldErrors","error","issues","forEach","issue","field","path","join","message","response","fetch","method","headers","body","JSON","stringify","data","result","json","ok","requiresVerification","push","refresh","console","handleChange","value","target","prev","_jsxruntime","jsx","className","jsxs","onSubmit","autoComplete","noValidate","htmlFor","id","type","required","onChange","placeholder","undefined","role","disabled"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/auth/SignUpForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { signUpSchema, type SignUpInput } from '@/lib/auth/validation';\n\nexport default function SignUpForm() {\n  const router = useRouter();\n  \n  const [formData, setFormData] = useState<SignUpInput>({\n    email: '',\n    password: '',\n    name: '',\n  });\n  \n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [generalError, setGeneralError] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrors({});\n    setGeneralError('');\n\n    try {\n      // Validate form data\n      const validation = signUpSchema.safeParse(formData);\n      if (!validation.success) {\n        const fieldErrors: Record<string, string> = {};\n        validation.error.issues.forEach((issue) => {\n          const field = issue.path.join('.');\n          fieldErrors[field] = issue.message;\n        });\n        setErrors(fieldErrors);\n        return;\n      }\n\n      // Submit to API\n      const response = await fetch('/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(validation.data),\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        if (result.errors) {\n          setErrors(result.errors);\n        } else {\n          setGeneralError(result.error || 'Sign up failed');\n        }\n        return;\n      }\n\n      // Success - check if email verification is required\n      if (result.requiresVerification) {\n        // Redirect to email verification page\n        router.push('/auth/verify-email');\n        router.refresh();\n      } else {\n        // Redirect to dashboard (fallback for already verified users)\n        router.push('/dashboard');\n        router.refresh();\n      }\n      \n    } catch (error) {\n      console.error('Sign up error:', error);\n      setGeneralError('An unexpected error occurred. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n  };\n\n  return (\n    <div className={`${isLoading ? 'form--loading' : ''}`}>\n      <form onSubmit={handleSubmit} className=\"space-y-6\" autoComplete=\"on\" noValidate>\n        {generalError && (\n          <div className=\"form-validation-summary\">\n            <div className=\"form-validation-summary-title\">\n              Account Creation Failed\n            </div>\n            <ul className=\"form-validation-summary-list\">\n              <li className=\"form-validation-summary-item\">{generalError}</li>\n            </ul>\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"signup-name\" className=\"form-label form-label--required\">\n            Full Name\n          </label>\n          <input\n            id=\"signup-name\"\n            name=\"name\"\n            type=\"text\"\n            autoComplete=\"name\"\n            required\n            value={formData.name}\n            onChange={handleChange}\n            className={`form-input ${errors.name ? 'form-input--error' : ''}`}\n            placeholder=\"Enter your full name\"\n            aria-describedby={errors.name ? 'signup-name-error' : undefined}\n          />\n          {errors.name && (\n            <div id=\"signup-name-error\" className=\"form-error\" role=\"alert\">\n              {errors.name}\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"signup-email\" className=\"form-label form-label--required\">\n            Email Address\n          </label>\n          <input\n            id=\"signup-email\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            required\n            value={formData.email}\n            onChange={handleChange}\n            className={`form-input ${errors.email ? 'form-input--error' : ''}`}\n            placeholder=\"Enter your email address\"\n            aria-describedby={errors.email ? 'signup-email-error' : undefined}\n          />\n          {errors.email && (\n            <div id=\"signup-email-error\" className=\"form-error\" role=\"alert\">\n              {errors.email}\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"signup-password\" className=\"form-label form-label--required\">\n            Password\n          </label>\n          <input\n            id=\"signup-password\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"new-password\"\n            data-new-password=\"true\"\n            required\n            value={formData.password}\n            onChange={handleChange}\n            className={`form-input ${errors.password ? 'form-input--error' : ''}`}\n            placeholder=\"Create a strong password\"\n            aria-describedby={`${errors.password ? 'signup-password-error ' : ''}signup-password-help`}\n          />\n          {errors.password && (\n            <div id=\"signup-password-error\" className=\"form-error\" role=\"alert\">\n              {errors.password}\n            </div>\n          )}\n          <div id=\"signup-password-help\" className=\"form-help\">\n            Password must be at least 8 characters with uppercase, lowercase, and number\n          </div>\n        </div>\n\n        <div className=\"form-actions form-actions--full\">\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className={`btn btn--primary btn--full ${isLoading ? 'btn--loading' : ''}`}\n            aria-describedby={isLoading ? 'signup-loading' : undefined}\n          >\n            {isLoading ? 'Creating account...' : 'Create Account'}\n          </button>\n          {isLoading && (\n            <span id=\"signup-loading\" className=\"sr-only\">\n              Please wait while we create your account\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}"],"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","ignoreList":[]}
c326ed1d872a0741c6c128de9236b3f8
// Client-safe auth utilities
"use strict";

/* istanbul ignore next */
function cov_2qm3qgy7hl() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/lib/auth/client.ts";
  var hash = "df41628cab2bfaf46d3679309da33b696ee6c36d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/lib/auth/client.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 38
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 28
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "9": {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 30,
          column: 68
        }
      },
      "10": {
        start: {
          line: 31,
          column: 15
        },
        end: {
          line: 31,
          column: 102
        }
      },
      "11": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 36,
          column: 6
        }
      },
      "12": {
        start: {
          line: 39,
          column: 21
        },
        end: {
          line: 48,
          column: 6
        }
      },
      "13": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "14": {
        start: {
          line: 50,
          column: 22
        },
        end: {
          line: 50,
          column: 43
        }
      },
      "15": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 51
        }
      },
      "16": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 27
        }
      },
      "17": {
        start: {
          line: 56,
          column: 21
        },
        end: {
          line: 66,
          column: 6
        }
      },
      "18": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "19": {
        start: {
          line: 68,
          column: 22
        },
        end: {
          line: 68,
          column: 43
        }
      },
      "20": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 51
        }
      },
      "21": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 27
        }
      },
      "22": {
        start: {
          line: 74,
          column: 21
        },
        end: {
          line: 76,
          column: 6
        }
      },
      "23": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "24": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 43
        }
      },
      "25": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "26": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 83,
          column: 52
        }
      },
      "27": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "28": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 24
        }
      },
      "29": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 31
        }
      },
      "30": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 60
        }
      },
      "31": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 34
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "getSessionSecurityInfo",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 31
          }
        },
        loc: {
          start: {
            line: 29,
            column: 41
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 29
      },
      "7": {
        name: "signInClient",
        decl: {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 38,
            column: 27
          }
        },
        loc: {
          start: {
            line: 38,
            column: 45
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 38
      },
      "8": {
        name: "signUpClient",
        decl: {
          start: {
            line: 55,
            column: 15
          },
          end: {
            line: 55,
            column: 27
          }
        },
        loc: {
          start: {
            line: 55,
            column: 51
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 55
      },
      "9": {
        name: "signOutClient",
        decl: {
          start: {
            line: 73,
            column: 15
          },
          end: {
            line: 73,
            column: 28
          }
        },
        loc: {
          start: {
            line: 73,
            column: 31
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 73
      },
      "10": {
        name: "getCurrentUser",
        decl: {
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 29
          }
        },
        loc: {
          start: {
            line: 81,
            column: 32
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 81
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 30,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 30,
            column: 55
          }
        }, {
          start: {
            line: 30,
            column: 59
          },
          end: {
            line: 30,
            column: 68
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 53
          }
        }, {
          start: {
            line: 31,
            column: 57
          },
          end: {
            line: 31,
            column: 89
          }
        }, {
          start: {
            line: 31,
            column: 93
          },
          end: {
            line: 31,
            column: 102
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 51,
            column: 24
          },
          end: {
            line: 51,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 24
          },
          end: {
            line: 51,
            column: 29
          }
        }, {
          start: {
            line: 51,
            column: 33
          },
          end: {
            line: 51,
            column: 49
          }
        }],
        line: 51
      },
      "4": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 24
          },
          end: {
            line: 69,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 24
          },
          end: {
            line: 69,
            column: 29
          }
        }, {
          start: {
            line: 69,
            column: 33
          },
          end: {
            line: 69,
            column: 49
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "7": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/lib/auth/client.ts"],
      sourcesContent: ["// Client-safe auth utilities\nexport interface User {\n  id: number;\n  email: string;\n  name: string;\n}\n\nexport interface Session {\n  id: string;\n  userId: number;\n  expiresAt: Date;\n}\n\n// Session security helpers (client-safe)\nexport function getSessionSecurityInfo(request: Request) {\n  const userAgent = request.headers.get('user-agent') || 'Unknown';\n  const ip = request.headers.get('x-forwarded-for') || \n            request.headers.get('x-real-ip') || \n            'Unknown';\n  \n  return {\n    userAgent,\n    ip,\n    timestamp: new Date().toISOString(),\n  };\n}\n\n// Session activity tracking (for future security features)\nexport interface SessionActivity {\n  sessionId: string;\n  userId: number;\n  action: string;\n  ip: string;\n  userAgent: string;\n  timestamp: Date;\n}\n\n// Auth state types for client components\nexport interface AuthState {\n  user: User | null;\n  session: Session | null;\n  loading: boolean;\n}\n\n// Client-side auth API calls\nexport async function signInClient(email: string, password: string): Promise<{ user: User; session: Session }> {\n  const response = await fetch('/api/auth/signin', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n\n  if (!response.ok) {\n    const error = await response.text();\n    throw new Error(error || 'Sign in failed');\n  }\n\n  return response.json();\n}\n\nexport async function signUpClient(email: string, password: string, name: string): Promise<{ user: User; session: Session }> {\n  const response = await fetch('/api/auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password, name }),\n  });\n\n  if (!response.ok) {\n    const error = await response.text();\n    throw new Error(error || 'Sign up failed');\n  }\n\n  return response.json();\n}\n\nexport async function signOutClient(): Promise<void> {\n  const response = await fetch('/api/auth/signout', {\n    method: 'POST',\n  });\n\n  if (!response.ok) {\n    throw new Error('Sign out failed');\n  }\n}\n\nexport async function getCurrentUser(): Promise<{ user: User; session: Session } | null> {\n  try {\n    const response = await fetch('/api/user/me');\n    \n    if (!response.ok) {\n      return null;\n    }\n\n    return response.json();\n  } catch (error) {\n    console.error('Failed to get current user:', error);\n    return null;\n  }\n}"],
      names: ["getCurrentUser", "getSessionSecurityInfo", "signInClient", "signOutClient", "signUpClient", "request", "userAgent", "headers", "get", "ip", "timestamp", "Date", "toISOString", "email", "password", "response", "fetch", "method", "body", "JSON", "stringify", "ok", "error", "text", "Error", "json", "name", "console"],
      mappings: "AAAA,6BAA6B;;;;;;;;;;;;QAyFPA;eAAAA;;QA3ENC;eAAAA;;QA+BMC;eAAAA;;QAkCAC;eAAAA;;QAjBAC;eAAAA;;;AAhDf,SAASH,uBAAuBI,OAAgB;IACrD,MAAMC,YAAYD,QAAQE,OAAO,CAACC,GAAG,CAAC,iBAAiB;IACvD,MAAMC,KAAKJ,QAAQE,OAAO,CAACC,GAAG,CAAC,sBACrBH,QAAQE,OAAO,CAACC,GAAG,CAAC,gBACpB;IAEV,OAAO;QACLF;QACAG;QACAC,WAAW,IAAIC,OAAOC,WAAW;IACnC;AACF;AAoBO,eAAeV,aAAaW,KAAa,EAAEC,QAAgB;IAChE,MAAMC,WAAW,MAAMC,MAAM,oBAAoB;QAC/CC,QAAQ;QACRV,SAAS;YACP,gBAAgB;QAClB;QACAW,MAAMC,KAAKC,SAAS,CAAC;YAAEP;YAAOC;QAAS;IACzC;IAEA,IAAI,CAACC,SAASM,EAAE,EAAE;QAChB,MAAMC,QAAQ,MAAMP,SAASQ,IAAI;QACjC,MAAM,IAAIC,MAAMF,SAAS;IAC3B;IAEA,OAAOP,SAASU,IAAI;AACtB;AAEO,eAAerB,aAAaS,KAAa,EAAEC,QAAgB,EAAEY,IAAY;IAC9E,MAAMX,WAAW,MAAMC,MAAM,oBAAoB;QAC/CC,QAAQ;QACRV,SAAS;YACP,gBAAgB;QAClB;QACAW,MAAMC,KAAKC,SAAS,CAAC;YAAEP;YAAOC;YAAUY;QAAK;IAC/C;IAEA,IAAI,CAACX,SAASM,EAAE,EAAE;QAChB,MAAMC,QAAQ,MAAMP,SAASQ,IAAI;QACjC,MAAM,IAAIC,MAAMF,SAAS;IAC3B;IAEA,OAAOP,SAASU,IAAI;AACtB;AAEO,eAAetB;IACpB,MAAMY,WAAW,MAAMC,MAAM,qBAAqB;QAChDC,QAAQ;IACV;IAEA,IAAI,CAACF,SAASM,EAAE,EAAE;QAChB,MAAM,IAAIG,MAAM;IAClB;AACF;AAEO,eAAexB;IACpB,IAAI;QACF,MAAMe,WAAW,MAAMC,MAAM;QAE7B,IAAI,CAACD,SAASM,EAAE,EAAE;YAChB,OAAO;QACT;QAEA,OAAON,SAASU,IAAI;IACtB,EAAE,OAAOH,OAAO;QACdK,QAAQL,KAAK,CAAC,+BAA+BA;QAC7C,OAAO;IACT;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "df41628cab2bfaf46d3679309da33b696ee6c36d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2qm3qgy7hl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2qm3qgy7hl();
cov_2qm3qgy7hl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2qm3qgy7hl().f[0]++;
  cov_2qm3qgy7hl().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2qm3qgy7hl().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2qm3qgy7hl().s[3]++;
_export(exports, {
  get getCurrentUser() {
    /* istanbul ignore next */
    cov_2qm3qgy7hl().f[1]++;
    cov_2qm3qgy7hl().s[4]++;
    return getCurrentUser;
  },
  get getSessionSecurityInfo() {
    /* istanbul ignore next */
    cov_2qm3qgy7hl().f[2]++;
    cov_2qm3qgy7hl().s[5]++;
    return getSessionSecurityInfo;
  },
  get signInClient() {
    /* istanbul ignore next */
    cov_2qm3qgy7hl().f[3]++;
    cov_2qm3qgy7hl().s[6]++;
    return signInClient;
  },
  get signOutClient() {
    /* istanbul ignore next */
    cov_2qm3qgy7hl().f[4]++;
    cov_2qm3qgy7hl().s[7]++;
    return signOutClient;
  },
  get signUpClient() {
    /* istanbul ignore next */
    cov_2qm3qgy7hl().f[5]++;
    cov_2qm3qgy7hl().s[8]++;
    return signUpClient;
  }
});
function getSessionSecurityInfo(request) {
  /* istanbul ignore next */
  cov_2qm3qgy7hl().f[6]++;
  const userAgent =
  /* istanbul ignore next */
  (cov_2qm3qgy7hl().s[9]++,
  /* istanbul ignore next */
  (cov_2qm3qgy7hl().b[0][0]++, request.headers.get('user-agent')) ||
  /* istanbul ignore next */
  (cov_2qm3qgy7hl().b[0][1]++, 'Unknown'));
  const ip =
  /* istanbul ignore next */
  (cov_2qm3qgy7hl().s[10]++,
  /* istanbul ignore next */
  (cov_2qm3qgy7hl().b[1][0]++, request.headers.get('x-forwarded-for')) ||
  /* istanbul ignore next */
  (cov_2qm3qgy7hl().b[1][1]++, request.headers.get('x-real-ip')) ||
  /* istanbul ignore next */
  (cov_2qm3qgy7hl().b[1][2]++, 'Unknown'));
  /* istanbul ignore next */
  cov_2qm3qgy7hl().s[11]++;
  return {
    userAgent,
    ip,
    timestamp: new Date().toISOString()
  };
}
async function signInClient(email, password) {
  /* istanbul ignore next */
  cov_2qm3qgy7hl().f[7]++;
  const response =
  /* istanbul ignore next */
  (cov_2qm3qgy7hl().s[12]++, await fetch('/api/auth/signin', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      email,
      password
    })
  }));
  /* istanbul ignore next */
  cov_2qm3qgy7hl().s[13]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_2qm3qgy7hl().b[2][0]++;
    const error =
    /* istanbul ignore next */
    (cov_2qm3qgy7hl().s[14]++, await response.text());
    /* istanbul ignore next */
    cov_2qm3qgy7hl().s[15]++;
    throw new Error(
    /* istanbul ignore next */
    (cov_2qm3qgy7hl().b[3][0]++, error) ||
    /* istanbul ignore next */
    (cov_2qm3qgy7hl().b[3][1]++, 'Sign in failed'));
  } else
  /* istanbul ignore next */
  {
    cov_2qm3qgy7hl().b[2][1]++;
  }
  cov_2qm3qgy7hl().s[16]++;
  return response.json();
}
async function signUpClient(email, password, name) {
  /* istanbul ignore next */
  cov_2qm3qgy7hl().f[8]++;
  const response =
  /* istanbul ignore next */
  (cov_2qm3qgy7hl().s[17]++, await fetch('/api/auth/signup', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      email,
      password,
      name
    })
  }));
  /* istanbul ignore next */
  cov_2qm3qgy7hl().s[18]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_2qm3qgy7hl().b[4][0]++;
    const error =
    /* istanbul ignore next */
    (cov_2qm3qgy7hl().s[19]++, await response.text());
    /* istanbul ignore next */
    cov_2qm3qgy7hl().s[20]++;
    throw new Error(
    /* istanbul ignore next */
    (cov_2qm3qgy7hl().b[5][0]++, error) ||
    /* istanbul ignore next */
    (cov_2qm3qgy7hl().b[5][1]++, 'Sign up failed'));
  } else
  /* istanbul ignore next */
  {
    cov_2qm3qgy7hl().b[4][1]++;
  }
  cov_2qm3qgy7hl().s[21]++;
  return response.json();
}
async function signOutClient() {
  /* istanbul ignore next */
  cov_2qm3qgy7hl().f[9]++;
  const response =
  /* istanbul ignore next */
  (cov_2qm3qgy7hl().s[22]++, await fetch('/api/auth/signout', {
    method: 'POST'
  }));
  /* istanbul ignore next */
  cov_2qm3qgy7hl().s[23]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_2qm3qgy7hl().b[6][0]++;
    cov_2qm3qgy7hl().s[24]++;
    throw new Error('Sign out failed');
  } else
  /* istanbul ignore next */
  {
    cov_2qm3qgy7hl().b[6][1]++;
  }
}
async function getCurrentUser() {
  /* istanbul ignore next */
  cov_2qm3qgy7hl().f[10]++;
  cov_2qm3qgy7hl().s[25]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_2qm3qgy7hl().s[26]++, await fetch('/api/user/me'));
    /* istanbul ignore next */
    cov_2qm3qgy7hl().s[27]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2qm3qgy7hl().b[7][0]++;
      cov_2qm3qgy7hl().s[28]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2qm3qgy7hl().b[7][1]++;
    }
    cov_2qm3qgy7hl().s[29]++;
    return response.json();
  } catch (error) {
    /* istanbul ignore next */
    cov_2qm3qgy7hl().s[30]++;
    console.error('Failed to get current user:', error);
    /* istanbul ignore next */
    cov_2qm3qgy7hl().s[31]++;
    return null;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
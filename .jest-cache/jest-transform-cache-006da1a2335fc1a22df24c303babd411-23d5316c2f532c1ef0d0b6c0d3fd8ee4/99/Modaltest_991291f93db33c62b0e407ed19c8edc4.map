{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/__tests__/components/shared/Modal.test.js"],"sourcesContent":["/**\n * @jest-environment jsdom\n */\n\nimport React from 'react';\nimport { screen, waitFor } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { renderWithProviders } from '@/test-utils/helpers/render-helpers';\nimport Modal, { ModalWithTabs, ConfirmationModal } from '@/components/shared/Modal';\n\n// Mock createPortal to render in the same container for testing\njest.mock('react-dom', () => ({\n  ...jest.requireActual('react-dom'),\n  createPortal: (node) => node,\n}));\n\ndescribe('Modal', () => {\n  const defaultProps = {\n    isOpen: true,\n    onClose: jest.fn(),\n    children: <div data-testid=\"modal-content\">Modal Content</div>,\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    // Reset body overflow style\n    document.body.style.overflow = 'unset';\n  });\n\n  describe('Basic Modal Rendering', () => {\n    it('renders modal when isOpen is true', () => {\n      renderWithProviders(<Modal {...defaultProps} />);\n\n      expect(screen.getByTestId('modal-content')).toBeInTheDocument();\n      expect(screen.getByRole('dialog', { hidden: true })).toBeInTheDocument();\n    });\n\n    it('does not render modal when isOpen is false', () => {\n      renderWithProviders(<Modal {...defaultProps} isOpen={false} />);\n\n      expect(screen.queryByTestId('modal-content')).not.toBeInTheDocument();\n    });\n\n    it('renders modal with title', () => {\n      renderWithProviders(<Modal {...defaultProps} title=\"Test Modal\" />);\n\n      expect(screen.getByText('Test Modal')).toBeInTheDocument();\n      expect(screen.getByRole('heading', { level: 2 })).toHaveTextContent('Test Modal');\n    });\n\n    it('renders modal without title', () => {\n      renderWithProviders(<Modal {...defaultProps} />);\n\n      expect(screen.queryByRole('heading')).not.toBeInTheDocument();\n    });\n\n    it('renders modal with footer', () => {\n      const footer = <div data-testid=\"modal-footer\">Footer Content</div>;\n      renderWithProviders(<Modal {...defaultProps} footer={footer} />);\n\n      expect(screen.getByTestId('modal-footer')).toBeInTheDocument();\n    });\n  });\n\n  describe('Modal Sizes', () => {\n    it('renders default size modal', () => {\n      renderWithProviders(<Modal {...defaultProps} />);\n\n      const modalContent = document.querySelector('.modal-content');\n      expect(modalContent).not.toHaveClass('modal-content--large');\n    });\n\n    it('renders large size modal', () => {\n      renderWithProviders(<Modal {...defaultProps} size=\"large\" />);\n\n      const modalContent = document.querySelector('.modal-content');\n      expect(modalContent).toHaveClass('modal-content--large');\n    });\n  });\n\n  describe('Close Button', () => {\n    it('shows close button by default', () => {\n      renderWithProviders(<Modal {...defaultProps} title=\"Test Modal\" />);\n\n      expect(screen.getByLabelText(/close modal/i)).toBeInTheDocument();\n    });\n\n    it('hides close button when showCloseButton is false', () => {\n      renderWithProviders(<Modal {...defaultProps} title=\"Test Modal\" showCloseButton={false} />);\n\n      expect(screen.queryByLabelText(/close modal/i)).not.toBeInTheDocument();\n    });\n\n    it('calls onClose when close button is clicked', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<Modal {...defaultProps} title=\"Test Modal\" />);\n\n      await user.click(screen.getByLabelText(/close modal/i));\n\n      expect(defaultProps.onClose).toHaveBeenCalled();\n    });\n  });\n\n  describe('Backdrop Interaction', () => {\n    it('closes modal when backdrop is clicked by default', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<Modal {...defaultProps} />);\n\n      const overlay = document.querySelector('.modal-overlay');\n      await user.click(overlay);\n\n      expect(defaultProps.onClose).toHaveBeenCalled();\n    });\n\n    it('does not close modal when backdrop is clicked and closeOnBackdropClick is false', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<Modal {...defaultProps} closeOnBackdropClick={false} />);\n\n      const overlay = document.querySelector('.modal-overlay');\n      await user.click(overlay);\n\n      expect(defaultProps.onClose).not.toHaveBeenCalled();\n    });\n\n    it('does not close modal when clicking on modal content', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<Modal {...defaultProps} />);\n\n      await user.click(screen.getByTestId('modal-content'));\n\n      expect(defaultProps.onClose).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('Keyboard Interaction', () => {\n    it('closes modal on Escape key by default', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<Modal {...defaultProps} />);\n\n      await user.keyboard('{Escape}');\n\n      expect(defaultProps.onClose).toHaveBeenCalled();\n    });\n\n    it('does not close modal on Escape key when closeOnEscape is false', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<Modal {...defaultProps} closeOnEscape={false} />);\n\n      await user.keyboard('{Escape}');\n\n      expect(defaultProps.onClose).not.toHaveBeenCalled();\n    });\n\n    it('ignores other keys', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<Modal {...defaultProps} />);\n\n      await user.keyboard('{Enter}');\n      await user.keyboard('{Space}');\n      await user.keyboard('a');\n\n      expect(defaultProps.onClose).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('Body Scroll Management', () => {\n    it('prevents body scroll when modal is open', () => {\n      renderWithProviders(<Modal {...defaultProps} />);\n\n      expect(document.body.style.overflow).toBe('hidden');\n    });\n\n    it('restores body scroll when modal is closed', () => {\n      const { rerender } = renderWithProviders(<Modal {...defaultProps} />);\n\n      expect(document.body.style.overflow).toBe('hidden');\n\n      rerender(<Modal {...defaultProps} isOpen={false} />);\n\n      expect(document.body.style.overflow).toBe('unset');\n    });\n\n    it('restores body scroll on unmount', () => {\n      const { unmount } = renderWithProviders(<Modal {...defaultProps} />);\n\n      expect(document.body.style.overflow).toBe('hidden');\n\n      unmount();\n\n      expect(document.body.style.overflow).toBe('unset');\n    });\n  });\n\n  describe('Accessibility', () => {\n    it('has proper modal structure', () => {\n      renderWithProviders(<Modal {...defaultProps} title=\"Test Modal\" />);\n\n      const modal = screen.getByRole('dialog', { hidden: true });\n      expect(modal).toBeInTheDocument();\n    });\n\n    it('has accessible close button', () => {\n      renderWithProviders(<Modal {...defaultProps} title=\"Test Modal\" />);\n\n      const closeButton = screen.getByLabelText(/close modal/i);\n      expect(closeButton).toBeInTheDocument();\n      expect(closeButton).toHaveAttribute('aria-label', 'Close modal');\n    });\n\n    it('focuses management works correctly', async () => {\n      renderWithProviders(<Modal {...defaultProps} title=\"Test Modal\" />);\n\n      // Modal should be focusable\n      const modal = screen.getByRole('dialog', { hidden: true });\n      expect(modal).toBeInTheDocument();\n    });\n  });\n});\n\ndescribe('ModalWithTabs', () => {\n  const tabs = [\n    { id: 'tab1', label: 'Tab 1', icon: 'üìù', content: <div data-testid=\"tab1-content\">Tab 1 Content</div> },\n    { id: 'tab2', label: 'Tab 2', icon: 'üìä', content: <div data-testid=\"tab2-content\">Tab 2 Content</div> },\n    { id: 'tab3', label: 'Tab 3', content: <div data-testid=\"tab3-content\">Tab 3 Content</div> },\n  ];\n\n  const defaultProps = {\n    isOpen: true,\n    onClose: jest.fn(),\n    title: 'Tabbed Modal',\n    tabs,\n    activeTab: 'tab1',\n    onTabChange: jest.fn(),\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Tab Rendering', () => {\n    it('renders all tabs', () => {\n      renderWithProviders(<ModalWithTabs {...defaultProps} />);\n\n      expect(screen.getByText('Tab 1')).toBeInTheDocument();\n      expect(screen.getByText('Tab 2')).toBeInTheDocument();\n      expect(screen.getByText('Tab 3')).toBeInTheDocument();\n    });\n\n    it('renders tab icons when provided', () => {\n      renderWithProviders(<ModalWithTabs {...defaultProps} />);\n\n      expect(screen.getByText('üìù')).toBeInTheDocument();\n      expect(screen.getByText('üìä')).toBeInTheDocument();\n    });\n\n    it('shows active tab content', () => {\n      renderWithProviders(<ModalWithTabs {...defaultProps} />);\n\n      expect(screen.getByTestId('tab1-content')).toBeInTheDocument();\n      expect(screen.queryByTestId('tab2-content')).not.toBeInTheDocument();\n      expect(screen.queryByTestId('tab3-content')).not.toBeInTheDocument();\n    });\n\n    it('marks active tab with active class', () => {\n      renderWithProviders(<ModalWithTabs {...defaultProps} />);\n\n      const tab1Button = screen.getByText('Tab 1').closest('button');\n      const tab2Button = screen.getByText('Tab 2').closest('button');\n\n      expect(tab1Button).toHaveClass('tab--active');\n      expect(tab2Button).not.toHaveClass('tab--active');\n    });\n  });\n\n  describe('Tab Interaction', () => {\n    it('calls onTabChange when tab is clicked', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<ModalWithTabs {...defaultProps} />);\n\n      await user.click(screen.getByText('Tab 2'));\n\n      expect(defaultProps.onTabChange).toHaveBeenCalledWith('tab2');\n    });\n\n    it('switches tab content when activeTab changes', () => {\n      const { rerender } = renderWithProviders(<ModalWithTabs {...defaultProps} />);\n\n      expect(screen.getByTestId('tab1-content')).toBeInTheDocument();\n\n      rerender(<ModalWithTabs {...defaultProps} activeTab=\"tab2\" />);\n\n      expect(screen.queryByTestId('tab1-content')).not.toBeInTheDocument();\n      expect(screen.getByTestId('tab2-content')).toBeInTheDocument();\n    });\n\n    it('handles keyboard navigation between tabs', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<ModalWithTabs {...defaultProps} />);\n\n      const tab1 = screen.getByText('Tab 1');\n      const tab2 = screen.getByText('Tab 2');\n\n      tab1.focus();\n      await user.tab();\n      expect(tab2).toHaveFocus();\n    });\n  });\n\n  describe('Modal Integration', () => {\n    it('includes modal title', () => {\n      renderWithProviders(<ModalWithTabs {...defaultProps} />);\n\n      expect(screen.getByText('Tabbed Modal')).toBeInTheDocument();\n    });\n\n    it('has close button', () => {\n      renderWithProviders(<ModalWithTabs {...defaultProps} />);\n\n      expect(screen.getByLabelText(/close modal/i)).toBeInTheDocument();\n    });\n\n    it('calls onClose when close button is clicked', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<ModalWithTabs {...defaultProps} />);\n\n      await user.click(screen.getByLabelText(/close modal/i));\n\n      expect(defaultProps.onClose).toHaveBeenCalled();\n    });\n  });\n});\n\ndescribe('ConfirmationModal', () => {\n  const defaultProps = {\n    isOpen: true,\n    onClose: jest.fn(),\n    onConfirm: jest.fn(),\n    title: 'Confirm Action',\n    message: 'Are you sure you want to proceed?',\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Confirmation Modal Rendering', () => {\n    it('renders confirmation modal with title and message', () => {\n      renderWithProviders(<ConfirmationModal {...defaultProps} />);\n\n      expect(screen.getByText('Confirm Action')).toBeInTheDocument();\n      expect(screen.getByText('Are you sure you want to proceed?')).toBeInTheDocument();\n    });\n\n    it('renders default button text', () => {\n      renderWithProviders(<ConfirmationModal {...defaultProps} />);\n\n      expect(screen.getByRole('button', { name: /confirm/i })).toBeInTheDocument();\n      expect(screen.getByRole('button', { name: /cancel/i })).toBeInTheDocument();\n    });\n\n    it('renders custom button text', () => {\n      renderWithProviders(\n        <ConfirmationModal \n          {...defaultProps} \n          confirmText=\"Delete\" \n          cancelText=\"Keep\" \n        />\n      );\n\n      expect(screen.getByRole('button', { name: /delete/i })).toBeInTheDocument();\n      expect(screen.getByRole('button', { name: /keep/i })).toBeInTheDocument();\n    });\n\n    it('renders danger variant styling', () => {\n      renderWithProviders(<ConfirmationModal {...defaultProps} variant=\"danger\" />);\n\n      const confirmButton = screen.getByRole('button', { name: /confirm/i });\n      expect(confirmButton).toHaveClass('btn--danger');\n    });\n\n    it('renders default variant styling', () => {\n      renderWithProviders(<ConfirmationModal {...defaultProps} variant=\"default\" />);\n\n      const confirmButton = screen.getByRole('button', { name: /confirm/i });\n      expect(confirmButton).toHaveClass('btn--primary');\n    });\n  });\n\n  describe('Confirmation Modal Interaction', () => {\n    it('calls onConfirm when confirm button is clicked', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<ConfirmationModal {...defaultProps} />);\n\n      await user.click(screen.getByRole('button', { name: /confirm/i }));\n\n      expect(defaultProps.onConfirm).toHaveBeenCalled();\n    });\n\n    it('calls onClose when cancel button is clicked', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<ConfirmationModal {...defaultProps} />);\n\n      await user.click(screen.getByRole('button', { name: /cancel/i }));\n\n      expect(defaultProps.onClose).toHaveBeenCalled();\n    });\n\n    it('calls onClose when modal is closed via backdrop', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<ConfirmationModal {...defaultProps} />);\n\n      const overlay = document.querySelector('.modal-overlay');\n      await user.click(overlay);\n\n      expect(defaultProps.onClose).toHaveBeenCalled();\n    });\n\n    it('calls onClose when Escape key is pressed', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<ConfirmationModal {...defaultProps} />);\n\n      await user.keyboard('{Escape}');\n\n      expect(defaultProps.onClose).toHaveBeenCalled();\n    });\n  });\n\n  describe('Loading State', () => {\n    it('disables buttons when loading', () => {\n      renderWithProviders(<ConfirmationModal {...defaultProps} isLoading={true} />);\n\n      expect(screen.getByRole('button', { name: /confirm/i })).toBeDisabled();\n      expect(screen.getByRole('button', { name: /cancel/i })).toBeDisabled();\n    });\n\n    it('shows loading class on confirm button', () => {\n      renderWithProviders(<ConfirmationModal {...defaultProps} isLoading={true} />);\n\n      const confirmButton = screen.getByRole('button', { name: /confirm/i });\n      expect(confirmButton).toHaveClass('btn--loading');\n    });\n\n    it('prevents modal close when loading', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<ConfirmationModal {...defaultProps} isLoading={true} />);\n\n      // Try to close via backdrop\n      const overlay = document.querySelector('.modal-overlay');\n      await user.click(overlay);\n\n      expect(defaultProps.onClose).not.toHaveBeenCalled();\n\n      // Try to close via Escape\n      await user.keyboard('{Escape}');\n\n      expect(defaultProps.onClose).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('Accessibility', () => {\n    it('has proper button roles and labels', () => {\n      renderWithProviders(<ConfirmationModal {...defaultProps} />);\n\n      const confirmButton = screen.getByRole('button', { name: /confirm/i });\n      const cancelButton = screen.getByRole('button', { name: /cancel/i });\n\n      expect(confirmButton).toBeInTheDocument();\n      expect(cancelButton).toBeInTheDocument();\n    });\n\n    it('focuses confirm button by default', async () => {\n      renderWithProviders(<ConfirmationModal {...defaultProps} />);\n\n      await waitFor(() => {\n        const confirmButton = screen.getByRole('button', { name: /confirm/i });\n        expect(confirmButton).toHaveFocus();\n      });\n    });\n\n    it('allows keyboard navigation between buttons', async () => {\n      const user = userEvent.setup();\n      renderWithProviders(<ConfirmationModal {...defaultProps} />);\n\n      const confirmButton = screen.getByRole('button', { name: /confirm/i });\n      const cancelButton = screen.getByRole('button', { name: /cancel/i });\n\n      confirmButton.focus();\n      await user.tab();\n      expect(cancelButton).toHaveFocus();\n\n      await user.tab({ shift: true });\n      expect(confirmButton).toHaveFocus();\n    });\n  });\n});"],"names":["jest","mock","requireActual","createPortal","node","describe","defaultProps","isOpen","onClose","fn","children","div","data-testid","beforeEach","clearAllMocks","document","body","style","overflow","it","renderWithProviders","Modal","expect","screen","getByTestId","toBeInTheDocument","getByRole","hidden","queryByTestId","not","title","getByText","level","toHaveTextContent","queryByRole","footer","modalContent","querySelector","toHaveClass","size","getByLabelText","showCloseButton","queryByLabelText","user","userEvent","setup","click","toHaveBeenCalled","overlay","closeOnBackdropClick","keyboard","closeOnEscape","toBe","rerender","unmount","modal","closeButton","toHaveAttribute","tabs","id","label","icon","content","activeTab","onTabChange","ModalWithTabs","tab1Button","closest","tab2Button","toHaveBeenCalledWith","tab1","tab2","focus","tab","toHaveFocus","onConfirm","message","ConfirmationModal","name","confirmText","cancelText","variant","confirmButton","isLoading","toBeDisabled","cancelButton","waitFor","shift"],"mappings":"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"}
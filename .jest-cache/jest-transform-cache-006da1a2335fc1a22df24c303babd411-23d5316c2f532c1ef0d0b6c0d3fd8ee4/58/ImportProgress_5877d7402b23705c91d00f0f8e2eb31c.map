{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/import/ImportProgress.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { CheckCircle, XCircle, AlertTriangle, Loader2, Clock, FileText } from 'lucide-react';\nimport type { ImportProgress as ImportProgressType } from '@/lib/validation/csv-schemas';\n\ninterface ImportProgressProps {\n  importId: string;\n  onComplete?: (progress: ImportProgressType) => void;\n  onError?: (error: string) => void;\n  className?: string;\n}\n\nexport function ImportProgress({\n  importId,\n  onComplete,\n  onError,\n  className = '',\n}: ImportProgressProps) {\n  const [progress, setProgress] = useState<ImportProgressType | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    const fetchProgress = async () => {\n      try {\n        const response = await fetch(`/api/import/csv/${importId}`);\n        \n        if (response.status === 404) {\n          // Import might have completed and been cleaned up\n          const errorData = await response.json().catch(() => ({}));\n          \n          if (errorData.message?.includes('completed successfully')) {\n            // Treat as successful completion\n            const completedProgress: ImportProgressType = {\n              id: importId,\n              userId: 0, // Will be filled by onComplete handler\n              fileName: 'Import completed',\n              importType: 'plant_instances',\n              status: 'completed',\n              progress: 100,\n              totalRows: 0,\n              processedRows: 0,\n              errors: [],\n              conflicts: [],\n              startTime: new Date(),\n              endTime: new Date(),\n            };\n            setProgress(completedProgress);\n            onComplete?.(completedProgress);\n            clearInterval(intervalId);\n            return;\n          } else {\n            throw new Error('Import not found - it may have expired');\n          }\n        }\n        \n        if (!response.ok) {\n          throw new Error('Failed to fetch progress');\n        }\n\n        const data = await response.json();\n        setProgress(data.progress);\n\n        if (data.progress.status === 'completed') {\n          onComplete?.(data.progress);\n          clearInterval(intervalId);\n        } else if (data.progress.status === 'failed') {\n          onError?.(data.progress.errors[0]?.message || 'Import failed');\n          clearInterval(intervalId);\n        }\n      } catch (error) {\n        console.error('Error fetching progress:', error);\n        onError?.(error instanceof Error ? error.message : 'Unknown error');\n        clearInterval(intervalId);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Initial fetch\n    fetchProgress();\n\n    // Poll for updates every 2 seconds\n    intervalId = setInterval(fetchProgress, 2000);\n\n    return () => clearInterval(intervalId);\n  }, [importId, onComplete, onError]);\n\n  if (loading || !progress) {\n    return (\n      <div className={`flex-center p-8 ${className}`}>\n        <div className=\"spinner spinner--primary\" />\n        <span className=\"loading-text\">Loading import status...</span>\n      </div>\n    );\n  }\n\n  const getStatusIcon = () => {\n    switch (progress.status) {\n      case 'pending':\n        return <Clock className=\"w-6 h-6 text-warning\" />;\n      case 'processing':\n        return <div className=\"spinner spinner--primary\" />;\n      case 'completed':\n        return <CheckCircle className=\"w-6 h-6 text-success\" />;\n      case 'failed':\n        return <XCircle className=\"w-6 h-6 text-error\" />;\n      default:\n        return <FileText className=\"w-6 h-6 text-neutral-500\" />;\n    }\n  };\n\n  const getStatusText = () => {\n    switch (progress.status) {\n      case 'pending':\n        return 'Waiting to start...';\n      case 'processing':\n        return 'Processing CSV data...';\n      case 'completed':\n        return 'Import completed successfully!';\n      case 'failed':\n        return 'Import failed';\n      default:\n        return 'Unknown status';\n    }\n  };\n\n  const getStatusColor = () => {\n    switch (progress.status) {\n      case 'pending':\n        return 'text-warning';\n      case 'processing':\n        return 'text-info';\n      case 'completed':\n        return 'text-success';\n      case 'failed':\n        return 'text-error';\n      default:\n        return 'text-neutral-700';\n    }\n  };\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Status Header */}\n      <div className=\"flex-start space-x-3\">\n        {getStatusIcon()}\n        <div>\n          <h3 className=\"text-lg font-semibold text-neutral-900\">\n            Import Progress\n          </h3>\n          <p className={`text-sm ${getStatusColor()}`}>\n            {getStatusText()}\n          </p>\n        </div>\n      </div>\n\n      {/* Progress Bar */}\n      {progress.status === 'processing' && (\n        <div className=\"space-y-2\">\n          <div className=\"flex-between text-sm text-neutral-600\">\n            <span>Processing rows...</span>\n            <span>{progress.processedRows} / {progress.totalRows}</span>\n          </div>\n          <div className=\"w-full bg-neutral-200 rounded-full h-2\">\n            <div\n              className=\"bg-primary-500 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${progress.progress}%` }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* File Info */}\n      <div className=\"card card-body\">\n        <div className=\"grid-responsive text-sm\">\n          <div>\n            <span className=\"font-medium text-neutral-700\">File:</span>\n            <p className=\"text-neutral-600 truncate\">{progress.fileName}</p>\n          </div>\n          <div>\n            <span className=\"font-medium text-neutral-700\">Type:</span>\n            <p className=\"text-neutral-600 capitalize\">\n              {progress.importType.replace('_', ' ')}\n            </p>\n          </div>\n          <div>\n            <span className=\"font-medium text-neutral-700\">Started:</span>\n            <p className=\"text-neutral-600\">\n              {new Date(progress.startTime).toLocaleString()}\n            </p>\n          </div>\n          {progress.endTime && (\n            <div>\n              <span className=\"font-medium text-neutral-700\">Completed:</span>\n              <p className=\"text-neutral-600\">\n                {new Date(progress.endTime).toLocaleString()}\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Results Summary */}\n      {progress.status === 'completed' && progress.summary && (\n        <div className=\"card card--mint card-body\">\n          <h4 className=\"font-medium text-success mb-3\">Import Summary</h4>\n          <div className=\"grid-responsive text-sm\">\n            <div>\n              <span className=\"font-medium text-success\">Total Rows:</span>\n              <p className=\"text-success\">{progress.summary.totalRows}</p>\n            </div>\n            <div>\n              <span className=\"font-medium text-success\">Successful:</span>\n              <p className=\"text-success\">{progress.summary.successfulImports}</p>\n            </div>\n            <div>\n              <span className=\"font-medium text-success\">Errors:</span>\n              <p className=\"text-success\">{progress.summary.errors.length}</p>\n            </div>\n            <div>\n              <span className=\"font-medium text-success\">Conflicts:</span>\n              <p className=\"text-success\">{progress.summary.conflicts.length}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Errors */}\n      {progress.errors.length > 0 && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n          <div className=\"flex items-start space-x-2\">\n            <XCircle className=\"w-5 h-5 text-red-500 flex-shrink-0 mt-0.5\" />\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium text-red-900 mb-2\">Errors:</h4>\n              <div className=\"space-y-1 max-h-32 overflow-y-auto\">\n                {progress.errors.map((error, index) => (\n                  <div key={index} className=\"text-sm text-red-700\">\n                    {error.field && (\n                      <span className=\"font-medium\">Row {error.rowIndex + 1}, {error.field}: </span>\n                    )}\n                    {error.message}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Conflicts */}\n      {progress.conflicts.length > 0 && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n          <div className=\"flex items-start space-x-2\">\n            <AlertTriangle className=\"w-5 h-5 text-yellow-500 flex-shrink-0 mt-0.5\" />\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium text-yellow-900 mb-2\">\n                Conflicts Require Resolution:\n              </h4>\n              <div className=\"space-y-1 max-h-32 overflow-y-auto\">\n                {progress.conflicts.map((conflict, index) => (\n                  <div key={index} className=\"text-sm text-yellow-700\">\n                    <span className=\"font-medium\">Row {conflict.rowIndex + 1}: </span>\n                    {conflict.message}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":["ImportProgress","importId","onComplete","onError","className","progress","setProgress","useState","loading","setLoading","useEffect","intervalId","fetchProgress","response","fetch","status","errorData","json","catch","message","includes","completedProgress","id","userId","fileName","importType","totalRows","processedRows","errors","conflicts","startTime","Date","endTime","clearInterval","Error","ok","data","error","console","setInterval","div","span","getStatusIcon","Clock","CheckCircle","XCircle","FileText","getStatusText","getStatusColor","h3","p","style","width","replace","toLocaleString","summary","h4","successfulImports","length","map","index","field","rowIndex","AlertTriangle","conflict"],"mappings":"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"}
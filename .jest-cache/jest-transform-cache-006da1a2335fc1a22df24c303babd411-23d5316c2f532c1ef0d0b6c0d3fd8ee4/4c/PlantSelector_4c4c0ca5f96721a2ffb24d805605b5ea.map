{"version":3,"names":["PlantSelector","onPlantSelect","selectedPlant","placeholder","disabled","cov_11i94dmr7j","b","className","showQuickSelect","autoFocus","f","viewMode","setViewMode","s","_react","useState","addFormQuery","setAddFormQuery","isCreating","setIsCreating","error","setError","handlePlantSelect","plant","handleAddNew","query","handleFormSubmit","plantData","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","result","newPlant","id","data","family","genus","species","commonName","isVerified","console","setTimeout","handleFormCancel","getInitialFormData","trim","scientificMatch","match","_jsxruntime","jsxs","jsx","_PlantTaxonomyForm","default","onSubmit","onCancel","initialData","isLoading","_PlantTaxonomySelector","onSelect","onAddNew","onClick","title","fill","viewBox","fillRule","d","clipRule"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/plants/PlantSelector.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport PlantTaxonomySelector from './PlantTaxonomySelector';\nimport PlantTaxonomyForm from './PlantTaxonomyForm';\nimport type { PlantSuggestion } from '@/lib/validation/plant-schemas';\nimport type { CreatePlant } from '@/lib/validation/plant-schemas';\n\ninterface PlantSelectorProps {\n  onPlantSelect: (plant: PlantSuggestion) => void;\n  selectedPlant?: PlantSuggestion | null;\n  placeholder?: string;\n  disabled?: boolean;\n  className?: string;\n  showQuickSelect?: boolean;\n  autoFocus?: boolean;\n}\n\ntype ViewMode = 'selector' | 'add-form';\n\nexport default function PlantSelector({\n  onPlantSelect,\n  selectedPlant,\n  placeholder,\n  disabled = false,\n  className = '',\n  showQuickSelect = true,\n  autoFocus = false,\n}: PlantSelectorProps) {\n  const [viewMode, setViewMode] = useState<ViewMode>('selector');\n  const [addFormQuery, setAddFormQuery] = useState('');\n  const [isCreating, setIsCreating] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Handle plant selection from selector\n  const handlePlantSelect = (plant: PlantSuggestion | null) => {\n    if (plant) {\n      onPlantSelect(plant);\n    }\n  };\n\n  // Handle \"add new\" from selector\n  const handleAddNew = (query: string) => {\n    setAddFormQuery(query);\n    setViewMode('add-form');\n  };\n\n  // Handle form submission\n  const handleFormSubmit = async (plantData: CreatePlant) => {\n    setIsCreating(true);\n    \n    try {\n      const response = await fetch('/api/plants', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(plantData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to create plant');\n      }\n\n      const result = await response.json();\n      const newPlant: PlantSuggestion = {\n        id: result.data.id,\n        family: result.data.family,\n        genus: result.data.genus,\n        species: result.data.species,\n        commonName: result.data.commonName,\n        isVerified: result.data.isVerified,\n      };\n\n      // Select the newly created plant\n      onPlantSelect(newPlant);\n      \n      // Return to selector view\n      setViewMode('selector');\n      setAddFormQuery('');\n    } catch (error) {\n      console.error('Error creating plant:', error);\n      setError('Failed to create plant. Please try again.');\n      setTimeout(() => setError(null), 5000);\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  // Handle form cancellation\n  const handleFormCancel = () => {\n    setViewMode('selector');\n    setAddFormQuery('');\n  };\n\n  // Parse initial form data from query\n  const getInitialFormData = (): Partial<CreatePlant> => {\n    if (!addFormQuery) return {};\n\n    // Try to parse common patterns\n    const query = addFormQuery.trim();\n    \n    // If query looks like \"Genus species\" (scientific name)\n    const scientificMatch = query.match(/^([A-Z][a-z]+)\\s+([a-z]+)$/);\n    if (scientificMatch) {\n      return {\n        genus: scientificMatch[1],\n        species: scientificMatch[2],\n        commonName: query,\n      };\n    }\n\n    // Otherwise, use as common name\n    return {\n      commonName: query,\n    };\n  };\n\n  if (viewMode === 'add-form') {\n    return (\n      <div className={className}>\n        {/* Error Display */}\n        {error && (\n          <div className=\"mb-3 p-3 bg-red-50 border border-red-200 rounded-lg text-red-700 text-sm\">\n            {error}\n          </div>\n        )}\n        <PlantTaxonomyForm\n          onSubmit={handleFormSubmit}\n          onCancel={handleFormCancel}\n          initialData={getInitialFormData()}\n          isLoading={isCreating}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      <PlantTaxonomySelector\n        onSelect={handlePlantSelect}\n        onAddNew={handleAddNew}\n        selectedPlant={selectedPlant}\n        placeholder={placeholder}\n        disabled={disabled}\n        showQuickSelect={showQuickSelect}\n        autoFocus={autoFocus}\n      />\n      \n      {/* Error Display */}\n      {error && (\n        <div className=\"mt-3 p-3 bg-red-50 border border-red-200 rounded-lg text-red-700 text-sm\">\n          {error}\n        </div>\n      )}\n      \n      {/* Selected Plant Display */}\n      {selectedPlant && (\n        <div className=\"mt-3 p-3 bg-primary-50 border border-primary-200 rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm font-medium text-primary-900\">\n                  {selectedPlant.commonName}\n                </span>\n                {selectedPlant.isVerified && (\n                  <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-primary-100 text-primary-800\">\n                    âœ“ Verified\n                  </span>\n                )}\n              </div>\n              <div className=\"text-xs text-primary-700 italic\">\n                {selectedPlant.genus} {selectedPlant.species}\n              </div>\n              <div className=\"text-xs text-primary-600\">\n                Family: {selectedPlant.family}\n              </div>\n            </div>\n            \n            <button\n              onClick={() => handlePlantSelect(null)}\n              className=\"flex-shrink-0 ml-2 p-1 text-primary-600 hover:text-primary-800 hover:bg-primary-100 rounded\"\n              title=\"Clear selection\"\n            >\n              <svg className=\"h-4 w-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"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","ignoreList":[]}
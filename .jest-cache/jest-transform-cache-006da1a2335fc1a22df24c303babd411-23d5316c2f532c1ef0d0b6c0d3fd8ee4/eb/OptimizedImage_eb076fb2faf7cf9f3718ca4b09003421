4faf19325c2158d4024ec2e4cb5be1d8
'use client';
"use strict";

/* istanbul ignore next */
function cov_1bnpm3fkpw() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/components/shared/OptimizedImage.tsx";
  var hash = "41665fb2f6d919eb96fa416c5e1238d60043a062";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/components/shared/OptimizedImage.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "8": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 76
        }
      },
      "9": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "10": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 6
        }
      },
      "11": {
        start: {
          line: 30,
          column: 36
        },
        end: {
          line: 30,
          column: 63
        }
      },
      "12": {
        start: {
          line: 31,
          column: 36
        },
        end: {
          line: 31,
          column: 63
        }
      },
      "13": {
        start: {
          line: 32,
          column: 44
        },
        end: {
          line: 32,
          column: 69
        }
      },
      "14": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 33,
          column: 43
        }
      },
      "15": {
        start: {
          line: 34,
          column: 36
        },
        end: {
          line: 34,
          column: 66
        }
      },
      "16": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 48,
          column: 7
        }
      },
      "17": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 48
        }
      },
      "18": {
        start: {
          line: 37,
          column: 41
        },
        end: {
          line: 37,
          column: 48
        }
      },
      "19": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "20": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "21": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 34
        }
      },
      "22": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 49
        }
      },
      "23": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 41
        }
      },
      "24": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "25": {
        start: {
          line: 45,
          column: 19
        },
        end: {
          line: 45,
          column: 40
        }
      },
      "26": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 60,
          column: 7
        }
      },
      "27": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "28": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 137
        }
      },
      "29": {
        start: {
          line: 52,
          column: 115
        },
        end: {
          line: 52,
          column: 135
        }
      },
      "30": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 33
        }
      },
      "31": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "32": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 26
        }
      },
      "33": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 19
        }
      },
      "34": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "35": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 26
        }
      },
      "36": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 20
        }
      },
      "37": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 104,
          column: 7
        }
      },
      "38": {
        start: {
          line: 107,
          column: 44
        },
        end: {
          line: 109,
          column: 7
        }
      },
      "39": {
        start: {
          line: 110,
          column: 30
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "40": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 114,
          column: 16
        }
      },
      "41": {
        start: {
          line: 111,
          column: 32
        },
        end: {
          line: 114,
          column: 14
        }
      },
      "42": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 126,
          column: 7
        }
      },
      "43": {
        start: {
          line: 118,
          column: 59
        },
        end: {
          line: 125,
          column: 21
        }
      },
      "44": {
        start: {
          line: 123,
          column: 30
        },
        end: {
          line: 123,
          column: 54
        }
      },
      "45": {
        start: {
          line: 124,
          column: 29
        },
        end: {
          line: 124,
          column: 50
        }
      },
      "46": {
        start: {
          line: 129,
          column: 19
        },
        end: {
          line: 129,
          column: 43
        }
      },
      "47": {
        start: {
          line: 130,
          column: 36
        },
        end: {
          line: 130,
          column: 63
        }
      },
      "48": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 142,
          column: 7
        }
      },
      "49": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 50
        }
      },
      "50": {
        start: {
          line: 132,
          column: 43
        },
        end: {
          line: 132,
          column: 50
        }
      },
      "51": {
        start: {
          line: 133,
          column: 25
        },
        end: {
          line: 136,
          column: 10
        }
      },
      "52": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 30
        }
      },
      "53": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 23
        }
      },
      "54": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 41
        }
      },
      "55": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 41
        }
      },
      "56": {
        start: {
          line: 138,
          column: 19
        },
        end: {
          line: 138,
          column: 40
        }
      },
      "57": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 161,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "OptimizedImage",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 23
          }
        },
        loc: {
          start: {
            line: 29,
            column: 153
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 27
          }
        },
        loc: {
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 36
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 38,
            column: 79
          },
          end: {
            line: 38,
            column: 80
          }
        },
        loc: {
          start: {
            line: 38,
            column: 88
          },
          end: {
            line: 43,
            column: 9
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 45,
            column: 15
          },
          end: {
            line: 45,
            column: 16
          }
        },
        loc: {
          start: {
            line: 45,
            column: 19
          },
          end: {
            line: 45,
            column: 40
          }
        },
        line: 45
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 50,
            column: 26
          },
          end: {
            line: 50,
            column: 27
          }
        },
        loc: {
          start: {
            line: 50,
            column: 30
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 50
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 52,
            column: 111
          },
          end: {
            line: 52,
            column: 112
          }
        },
        loc: {
          start: {
            line: 52,
            column: 115
          },
          end: {
            line: 52,
            column: 135
          }
        },
        line: 52
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 61,
            column: 23
          },
          end: {
            line: 61,
            column: 24
          }
        },
        loc: {
          start: {
            line: 61,
            column: 27
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 61
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 65,
            column: 25
          }
        },
        loc: {
          start: {
            line: 65,
            column: 28
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 65
      },
      "12": {
        name: "LazyImageGallery",
        decl: {
          start: {
            line: 106,
            column: 9
          },
          end: {
            line: 106,
            column: 25
          }
        },
        loc: {
          start: {
            line: 106,
            column: 73
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 106
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 110,
            column: 30
          },
          end: {
            line: 110,
            column: 31
          }
        },
        loc: {
          start: {
            line: 110,
            column: 39
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 110
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 111,
            column: 24
          },
          end: {
            line: 111,
            column: 25
          }
        },
        loc: {
          start: {
            line: 111,
            column: 32
          },
          end: {
            line: 114,
            column: 14
          }
        },
        line: 111
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 118,
            column: 29
          },
          end: {
            line: 118,
            column: 30
          }
        },
        loc: {
          start: {
            line: 118,
            column: 59
          },
          end: {
            line: 125,
            column: 21
          }
        },
        line: 118
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 123,
            column: 26
          },
          end: {
            line: 123,
            column: 27
          }
        },
        loc: {
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 54
          }
        },
        line: 123
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 124,
            column: 25
          },
          end: {
            line: 124,
            column: 26
          }
        },
        loc: {
          start: {
            line: 124,
            column: 29
          },
          end: {
            line: 124,
            column: 50
          }
        },
        line: 124
      },
      "18": {
        name: "LazyGalleryImage",
        decl: {
          start: {
            line: 128,
            column: 9
          },
          end: {
            line: 128,
            column: 25
          }
        },
        loc: {
          start: {
            line: 128,
            column: 78
          },
          end: {
            line: 162,
            column: 1
          }
        },
        line: 128
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 131,
            column: 26
          },
          end: {
            line: 131,
            column: 27
          }
        },
        loc: {
          start: {
            line: 131,
            column: 30
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 131
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 133,
            column: 79
          },
          end: {
            line: 133,
            column: 80
          }
        },
        loc: {
          start: {
            line: 133,
            column: 83
          },
          end: {
            line: 136,
            column: 9
          }
        },
        line: 133
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 16
          }
        },
        loc: {
          start: {
            line: 138,
            column: 19
          },
          end: {
            line: 138,
            column: 40
          }
        },
        line: 138
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 25,
            column: 38
          }
        }, {
          start: {
            line: 25,
            column: 41
          },
          end: {
            line: 27,
            column: 5
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 25,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 25,
            column: 14
          }
        }, {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 32
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 36
          },
          end: {
            line: 29,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 44
          },
          end: {
            line: 29,
            column: 47
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 49
          },
          end: {
            line: 29,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 58
          },
          end: {
            line: 29,
            column: 61
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 63
          },
          end: {
            line: 29,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 75
          },
          end: {
            line: 29,
            column: 77
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 79
          },
          end: {
            line: 29,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 90
          },
          end: {
            line: 29,
            column: 95
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 29,
            column: 97
          },
          end: {
            line: 29,
            column: 109
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 107
          },
          end: {
            line: 29,
            column: 109
          }
        }],
        line: 29
      },
      "7": {
        loc: {
          start: {
            line: 29,
            column: 111
          },
          end: {
            line: 29,
            column: 132
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 125
          },
          end: {
            line: 29,
            column: 132
          }
        }],
        line: 29
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 20
          }
        }, {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 39
          }
        }],
        line: 37
      },
      "10": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "11": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: 53,
            column: 15
          },
          end: {
            line: 55,
            column: 9
          }
        }],
        line: 51
      },
      "12": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 41
          }
        }, {
          start: {
            line: 51,
            column: 45
          },
          end: {
            line: 51,
            column: 54
          }
        }],
        line: 51
      },
      "13": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 82,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 21
          }
        }, {
          start: {
            line: 77,
            column: 25
          },
          end: {
            line: 77,
            column: 34
          }
        }, {
          start: {
            line: 77,
            column: 52
          },
          end: {
            line: 82,
            column: 14
          }
        }],
        line: 77
      },
      "14": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 89,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 83,
            column: 20
          }
        }, {
          start: {
            line: 83,
            column: 38
          },
          end: {
            line: 89,
            column: 14
          }
        }],
        line: 83
      },
      "15": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 102,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 20
          }
        }, {
          start: {
            line: 90,
            column: 24
          },
          end: {
            line: 90,
            column: 33
          }
        }, {
          start: {
            line: 90,
            column: 51
          },
          end: {
            line: 102,
            column: 14
          }
        }],
        line: 90
      },
      "16": {
        loc: {
          start: {
            line: 98,
            column: 62
          },
          end: {
            line: 98,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 73
          },
          end: {
            line: 98,
            column: 86
          }
        }, {
          start: {
            line: 98,
            column: 89
          },
          end: {
            line: 98,
            column: 100
          }
        }],
        line: 98
      },
      "17": {
        loc: {
          start: {
            line: 106,
            column: 41
          },
          end: {
            line: 106,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 106,
            column: 53
          },
          end: {
            line: 106,
            column: 55
          }
        }],
        line: 106
      },
      "18": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 132,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 132,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "19": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 132,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 132,
            column: 27
          }
        }, {
          start: {
            line: 132,
            column: 31
          },
          end: {
            line: 132,
            column: 41
          }
        }],
        line: 132
      },
      "20": {
        loc: {
          start: {
            line: 147,
            column: 18
          },
          end: {
            line: 160,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 57
          },
          end: {
            line: 154,
            column: 10
          }
        }, {
          start: {
            line: 154,
            column: 27
          },
          end: {
            line: 160,
            column: 10
          }
        }],
        line: 147
      },
      "21": {
        loc: {
          start: {
            line: 147,
            column: 18
          },
          end: {
            line: 147,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 18
          },
          end: {
            line: 147,
            column: 28
          }
        }, {
          start: {
            line: 147,
            column: 32
          },
          end: {
            line: 147,
            column: 40
          }
        }],
        line: 147
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/components/shared/OptimizedImage.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport Image from 'next/image';\nimport { imageOptimization } from '@/lib/utils/performance';\n\ninterface OptimizedImageProps {\n  src: string;\n  alt: string;\n  width?: number;\n  height?: number;\n  className?: string;\n  priority?: boolean;\n  quality?: number;\n  placeholder?: 'blur' | 'empty';\n  onLoad?: () => void;\n  onError?: () => void;\n}\n\nexport function OptimizedImage({\n  src,\n  alt,\n  width = 400,\n  height = 300,\n  className = '',\n  priority = false,\n  quality = 80,\n  placeholder = 'empty',\n  onLoad,\n  onError,\n}: OptimizedImageProps) {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [optimizedSrc, setOptimizedSrc] = useState<string>(src);\n  const imgRef = useRef<HTMLDivElement>(null);\n  const [isInView, setIsInView] = useState(priority);\n\n  // Lazy loading with Intersection Observer\n  useEffect(() => {\n    if (priority || !imgRef.current) return;\n\n    const observer = imageOptimization.createLazyLoadObserver((entry) => {\n      if (entry.isIntersecting) {\n        setIsInView(true);\n        observer.unobserve(entry.target);\n      }\n    });\n\n    observer.observe(imgRef.current);\n\n    return () => observer.disconnect();\n  }, [priority]);\n\n  // Optimize base64 images\n  useEffect(() => {\n    if (src.startsWith('data:image/') && !priority) {\n      imageOptimization.compressBase64Image(src, quality / 100)\n        .then(setOptimizedSrc)\n        .catch(() => setOptimizedSrc(src));\n    } else {\n      setOptimizedSrc(src);\n    }\n  }, [src, quality, priority]);\n\n  const handleLoad = () => {\n    setIsLoaded(true);\n    onLoad?.();\n  };\n\n  const handleError = () => {\n    setHasError(true);\n    onError?.();\n  };\n\n  return (\n    <div \n      ref={imgRef}\n      className={`relative overflow-hidden ${className}`}\n      style={{ width, height }}\n    >\n      {/* Loading placeholder */}\n      {!isLoaded && !hasError && (\n        <div className=\"image-placeholder--loading overlay\">\n          <div className=\"spinner\" />\n        </div>\n      )}\n\n      {/* Error placeholder */}\n      {hasError && (\n        <div className=\"image-placeholder--error overlay\">\n          <div className=\"image-placeholder-text\">Failed to load image</div>\n        </div>\n      )}\n\n      {/* Actual image */}\n      {isInView && !hasError && (\n        <Image\n          src={optimizedSrc}\n          alt={alt}\n          width={width}\n          height={height}\n          priority={priority}\n          quality={quality}\n          placeholder={placeholder}\n          className={`transition-opacity duration-300 ${\n            isLoaded ? 'opacity-100' : 'opacity-0'\n          }`}\n          onLoad={handleLoad}\n          onError={handleError}\n          sizes={`(max-width: 768px) ${width}px, (max-width: 1200px) ${Math.floor(width * 1.5)}px, ${width * 2}px`}\n        />\n      )}\n    </div>\n  );\n}\n\ninterface LazyImageGalleryProps {\n  images: string[];\n  alt: string;\n  className?: string;\n  onImageClick?: (index: number) => void;\n}\n\nexport function LazyImageGallery({\n  images,\n  alt,\n  className = '',\n  onImageClick,\n}: LazyImageGalleryProps) {\n  const [loadedImages, setLoadedImages] = useState<Set<number>>(new Set([0])); // Load first image immediately\n\n  const handleImageInView = (index: number) => {\n    setLoadedImages(prev => new Set([...prev, index]));\n  };\n\n  return (\n    <div className={`grid grid-cols-2 gap-2 ${className}`}>\n      {images.map((image, index) => (\n        <LazyGalleryImage\n          key={index}\n          src={image}\n          alt={`${alt} ${index + 1}`}\n          index={index}\n          shouldLoad={loadedImages.has(index)}\n          onInView={() => handleImageInView(index)}\n          onClick={() => onImageClick?.(index)}\n        />\n      ))}\n    </div>\n  );\n}\n\ninterface LazyGalleryImageProps {\n  src: string;\n  alt: string;\n  index: number;\n  shouldLoad: boolean;\n  onInView: () => void;\n  onClick: () => void;\n}\n\nfunction LazyGalleryImage({\n  src,\n  alt,\n  index,\n  shouldLoad,\n  onInView,\n  onClick,\n}: LazyGalleryImageProps) {\n  const imgRef = useRef<HTMLDivElement>(null);\n  const [isInView, setIsInView] = useState(false);\n\n  useEffect(() => {\n    if (!imgRef.current || shouldLoad) return;\n\n    const observer = imageOptimization.createLazyLoadObserver(() => {\n      setIsInView(true);\n      onInView();\n    });\n\n    observer.observe(imgRef.current);\n\n    return () => observer.disconnect();\n  }, [shouldLoad, onInView]);\n\n  return (\n    <div\n      ref={imgRef}\n      className=\"aspect-square cursor-pointer hover:opacity-80 transition-opacity\"\n      onClick={onClick}\n    >\n      {(shouldLoad || isInView) ? (\n        <OptimizedImage\n          src={src}\n          alt={alt}\n          width={200}\n          height={200}\n          className=\"w-full h-full object-cover rounded-lg\"\n          quality={70}\n        />\n      ) : (\n        <div className=\"image-placeholder--loading w-full h-full rounded-lg\">\n          <div className=\"image-placeholder-text text-xs\">Loading...</div>\n        </div>\n      )}\n    </div>\n  );\n}"],
      names: ["LazyImageGallery", "OptimizedImage", "src", "alt", "width", "height", "className", "priority", "quality", "placeholder", "onLoad", "onError", "isLoaded", "setIsLoaded", "useState", "hasError", "setHasError", "optimizedSrc", "setOptimizedSrc", "imgRef", "useRef", "isInView", "setIsInView", "useEffect", "current", "observer", "imageOptimization", "createLazyLoadObserver", "entry", "isIntersecting", "unobserve", "target", "observe", "disconnect", "startsWith", "compressBase64Image", "then", "catch", "handleLoad", "handleError", "div", "ref", "style", "Image", "sizes", "Math", "floor", "images", "onImageClick", "loadedImages", "setLoadedImages", "Set", "handleImageInView", "index", "prev", "map", "image", "LazyGalleryImage", "shouldLoad", "has", "onInView", "onClick"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "41665fb2f6d919eb96fa416c5e1238d60043a062"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bnpm3fkpw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bnpm3fkpw();
cov_1bnpm3fkpw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1bnpm3fkpw().f[0]++;
  cov_1bnpm3fkpw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1bnpm3fkpw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1bnpm3fkpw().s[3]++;
_export(exports, {
  get LazyImageGallery() {
    /* istanbul ignore next */
    cov_1bnpm3fkpw().f[1]++;
    cov_1bnpm3fkpw().s[4]++;
    return LazyImageGallery;
  },
  get OptimizedImage() {
    /* istanbul ignore next */
    cov_1bnpm3fkpw().f[2]++;
    cov_1bnpm3fkpw().s[5]++;
    return OptimizedImage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1bnpm3fkpw().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1bnpm3fkpw().s[7]++, require("react"));
const _image =
/* istanbul ignore next */
(/*#__PURE__*/cov_1bnpm3fkpw().s[8]++, _interop_require_default(require("next/image")));
const _performance =
/* istanbul ignore next */
(cov_1bnpm3fkpw().s[9]++, require("../../lib/utils/performance"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1bnpm3fkpw().f[3]++;
  cov_1bnpm3fkpw().s[10]++;
  return /* istanbul ignore next */(cov_1bnpm3fkpw().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().b[0][1]++, {
    default: obj
  });
}
function OptimizedImage({
  src,
  alt,
  width =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().b[2][0]++, 400),
  height =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().b[3][0]++, 300),
  className =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().b[4][0]++, ''),
  priority =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().b[5][0]++, false),
  quality =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().b[6][0]++, 80),
  placeholder =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().b[7][0]++, 'empty'),
  onLoad,
  onError
}) {
  /* istanbul ignore next */
  cov_1bnpm3fkpw().f[4]++;
  const [isLoaded, setIsLoaded] =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().s[11]++, (0, _react.useState)(false));
  const [hasError, setHasError] =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().s[12]++, (0, _react.useState)(false));
  const [optimizedSrc, setOptimizedSrc] =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().s[13]++, (0, _react.useState)(src));
  const imgRef =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().s[14]++, (0, _react.useRef)(null));
  const [isInView, setIsInView] =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().s[15]++, (0, _react.useState)(priority));
  // Lazy loading with Intersection Observer
  /* istanbul ignore next */
  cov_1bnpm3fkpw().s[16]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1bnpm3fkpw().f[5]++;
    cov_1bnpm3fkpw().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[9][0]++, priority) ||
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[9][1]++, !imgRef.current)) {
      /* istanbul ignore next */
      cov_1bnpm3fkpw().b[8][0]++;
      cov_1bnpm3fkpw().s[18]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1bnpm3fkpw().b[8][1]++;
    }
    const observer =
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().s[19]++, _performance.imageOptimization.createLazyLoadObserver(entry => {
      /* istanbul ignore next */
      cov_1bnpm3fkpw().f[6]++;
      cov_1bnpm3fkpw().s[20]++;
      if (entry.isIntersecting) {
        /* istanbul ignore next */
        cov_1bnpm3fkpw().b[10][0]++;
        cov_1bnpm3fkpw().s[21]++;
        setIsInView(true);
        /* istanbul ignore next */
        cov_1bnpm3fkpw().s[22]++;
        observer.unobserve(entry.target);
      } else
      /* istanbul ignore next */
      {
        cov_1bnpm3fkpw().b[10][1]++;
      }
    }));
    /* istanbul ignore next */
    cov_1bnpm3fkpw().s[23]++;
    observer.observe(imgRef.current);
    /* istanbul ignore next */
    cov_1bnpm3fkpw().s[24]++;
    return () => {
      /* istanbul ignore next */
      cov_1bnpm3fkpw().f[7]++;
      cov_1bnpm3fkpw().s[25]++;
      return observer.disconnect();
    };
  }, [priority]);
  // Optimize base64 images
  /* istanbul ignore next */
  cov_1bnpm3fkpw().s[26]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1bnpm3fkpw().f[8]++;
    cov_1bnpm3fkpw().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[12][0]++, src.startsWith('data:image/')) &&
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[12][1]++, !priority)) {
      /* istanbul ignore next */
      cov_1bnpm3fkpw().b[11][0]++;
      cov_1bnpm3fkpw().s[28]++;
      _performance.imageOptimization.compressBase64Image(src, quality / 100).then(setOptimizedSrc).catch(() => {
        /* istanbul ignore next */
        cov_1bnpm3fkpw().f[9]++;
        cov_1bnpm3fkpw().s[29]++;
        return setOptimizedSrc(src);
      });
    } else {
      /* istanbul ignore next */
      cov_1bnpm3fkpw().b[11][1]++;
      cov_1bnpm3fkpw().s[30]++;
      setOptimizedSrc(src);
    }
  }, [src, quality, priority]);
  /* istanbul ignore next */
  cov_1bnpm3fkpw().s[31]++;
  const handleLoad = () => {
    /* istanbul ignore next */
    cov_1bnpm3fkpw().f[10]++;
    cov_1bnpm3fkpw().s[32]++;
    setIsLoaded(true);
    /* istanbul ignore next */
    cov_1bnpm3fkpw().s[33]++;
    onLoad?.();
  };
  /* istanbul ignore next */
  cov_1bnpm3fkpw().s[34]++;
  const handleError = () => {
    /* istanbul ignore next */
    cov_1bnpm3fkpw().f[11]++;
    cov_1bnpm3fkpw().s[35]++;
    setHasError(true);
    /* istanbul ignore next */
    cov_1bnpm3fkpw().s[36]++;
    onError?.();
  };
  /* istanbul ignore next */
  cov_1bnpm3fkpw().s[37]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    ref: imgRef,
    className: `relative overflow-hidden ${className}`,
    style: {
      width,
      height
    },
    children: [
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[13][0]++, !isLoaded) &&
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[13][1]++, !hasError) &&
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[13][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "image-placeholder--loading overlay",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "spinner"
      })
    })),
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[14][0]++, hasError) &&
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[14][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "image-placeholder--error overlay",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "image-placeholder-text",
        children: "Failed to load image"
      })
    })),
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[15][0]++, isInView) &&
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[15][1]++, !hasError) &&
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[15][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_image.default, {
      src: optimizedSrc,
      alt: alt,
      width: width,
      height: height,
      priority: priority,
      quality: quality,
      placeholder: placeholder,
      className: `transition-opacity duration-300 ${isLoaded ?
      /* istanbul ignore next */
      (cov_1bnpm3fkpw().b[16][0]++, 'opacity-100') :
      /* istanbul ignore next */
      (cov_1bnpm3fkpw().b[16][1]++, 'opacity-0')}`,
      onLoad: handleLoad,
      onError: handleError,
      sizes: `(max-width: 768px) ${width}px, (max-width: 1200px) ${Math.floor(width * 1.5)}px, ${width * 2}px`
    }))]
  });
}
function LazyImageGallery({
  images,
  alt,
  className =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().b[17][0]++, ''),
  onImageClick
}) {
  /* istanbul ignore next */
  cov_1bnpm3fkpw().f[12]++;
  const [loadedImages, setLoadedImages] =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().s[38]++, (0, _react.useState)(new Set([0]))); // Load first image immediately
  /* istanbul ignore next */
  cov_1bnpm3fkpw().s[39]++;
  const handleImageInView = index => {
    /* istanbul ignore next */
    cov_1bnpm3fkpw().f[13]++;
    cov_1bnpm3fkpw().s[40]++;
    setLoadedImages(prev => {
      /* istanbul ignore next */
      cov_1bnpm3fkpw().f[14]++;
      cov_1bnpm3fkpw().s[41]++;
      return new Set([...prev, index]);
    });
  };
  /* istanbul ignore next */
  cov_1bnpm3fkpw().s[42]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `grid grid-cols-2 gap-2 ${className}`,
    children: images.map((image, index) => {
      /* istanbul ignore next */
      cov_1bnpm3fkpw().f[15]++;
      cov_1bnpm3fkpw().s[43]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(LazyGalleryImage, {
        src: image,
        alt: `${alt} ${index + 1}`,
        index: index,
        shouldLoad: loadedImages.has(index),
        onInView: () => {
          /* istanbul ignore next */
          cov_1bnpm3fkpw().f[16]++;
          cov_1bnpm3fkpw().s[44]++;
          return handleImageInView(index);
        },
        onClick: () => {
          /* istanbul ignore next */
          cov_1bnpm3fkpw().f[17]++;
          cov_1bnpm3fkpw().s[45]++;
          return onImageClick?.(index);
        }
      }, index);
    })
  });
}
function LazyGalleryImage({
  src,
  alt,
  index,
  shouldLoad,
  onInView,
  onClick
}) {
  /* istanbul ignore next */
  cov_1bnpm3fkpw().f[18]++;
  const imgRef =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().s[46]++, (0, _react.useRef)(null));
  const [isInView, setIsInView] =
  /* istanbul ignore next */
  (cov_1bnpm3fkpw().s[47]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_1bnpm3fkpw().s[48]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1bnpm3fkpw().f[19]++;
    cov_1bnpm3fkpw().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[19][0]++, !imgRef.current) ||
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[19][1]++, shouldLoad)) {
      /* istanbul ignore next */
      cov_1bnpm3fkpw().b[18][0]++;
      cov_1bnpm3fkpw().s[50]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1bnpm3fkpw().b[18][1]++;
    }
    const observer =
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().s[51]++, _performance.imageOptimization.createLazyLoadObserver(() => {
      /* istanbul ignore next */
      cov_1bnpm3fkpw().f[20]++;
      cov_1bnpm3fkpw().s[52]++;
      setIsInView(true);
      /* istanbul ignore next */
      cov_1bnpm3fkpw().s[53]++;
      onInView();
    }));
    /* istanbul ignore next */
    cov_1bnpm3fkpw().s[54]++;
    observer.observe(imgRef.current);
    /* istanbul ignore next */
    cov_1bnpm3fkpw().s[55]++;
    return () => {
      /* istanbul ignore next */
      cov_1bnpm3fkpw().f[21]++;
      cov_1bnpm3fkpw().s[56]++;
      return observer.disconnect();
    };
  }, [shouldLoad, onInView]);
  /* istanbul ignore next */
  cov_1bnpm3fkpw().s[57]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    ref: imgRef,
    className: "aspect-square cursor-pointer hover:opacity-80 transition-opacity",
    onClick: onClick,
    children:
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[21][0]++, shouldLoad) ||
    /* istanbul ignore next */
    (cov_1bnpm3fkpw().b[21][1]++, isInView) ?
    /* istanbul ignore next */
    (/*#__PURE__*/cov_1bnpm3fkpw().b[20][0]++, (0, _jsxruntime.jsx)(OptimizedImage, {
      src: src,
      alt: alt,
      width: 200,
      height: 200,
      className: "w-full h-full object-cover rounded-lg",
      quality: 70
    })) :
    /* istanbul ignore next */
    (/*#__PURE__*/cov_1bnpm3fkpw().b[20][1]++, (0, _jsxruntime.jsx)("div", {
      className: "image-placeholder--loading w-full h-full rounded-lg",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "image-placeholder-text text-xs",
        children: "Loading..."
      })
    }))
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
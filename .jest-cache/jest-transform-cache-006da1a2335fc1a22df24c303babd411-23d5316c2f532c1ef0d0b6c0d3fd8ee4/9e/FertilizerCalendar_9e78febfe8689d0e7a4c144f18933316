e6b29e080b7ec8d3af705f77629ecf82
'use client';
"use strict";

/* istanbul ignore next */
function cov_ured60oai() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/components/calendar/FertilizerCalendar.tsx";
  var hash = "b9ecc1a28e20ae6eba0f16f346b9dd2c87d9d839";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/components/calendar/FertilizerCalendar.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 15,
          column: 13
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "7": {
        start: {
          line: 15,
          column: 59
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "8": {
        start: {
          line: 19,
          column: 13
        },
        end: {
          line: 22,
          column: 6
        }
      },
      "9": {
        start: {
          line: 19,
          column: 59
        },
        end: {
          line: 22,
          column: 6
        }
      },
      "10": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "11": {
        start: {
          line: 23,
          column: 78
        },
        end: {
          line: 28,
          column: 6
        }
      },
      "12": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 49,
          column: 6
        }
      },
      "13": {
        start: {
          line: 29,
          column: 70
        },
        end: {
          line: 49,
          column: 6
        }
      },
      "14": {
        start: {
          line: 51,
          column: 42
        },
        end: {
          line: 51,
          column: 74
        }
      },
      "15": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "16": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 66,
          column: 47
        }
      },
      "17": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 67,
          column: 49
        }
      },
      "18": {
        start: {
          line: 68,
          column: 18
        },
        end: {
          line: 68,
          column: 28
        }
      },
      "19": {
        start: {
          line: 69,
          column: 22
        },
        end: {
          line: 69,
          column: 37
        }
      },
      "20": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 70,
          column: 39
        }
      },
      "21": {
        start: {
          line: 71,
          column: 22
        },
        end: {
          line: 71,
          column: 41
        }
      },
      "22": {
        start: {
          line: 73,
          column: 28
        },
        end: {
          line: 73,
          column: 66
        }
      },
      "23": {
        start: {
          line: 74,
          column: 27
        },
        end: {
          line: 74,
          column: 69
        }
      },
      "24": {
        start: {
          line: 75,
          column: 30
        },
        end: {
          line: 75,
          column: 54
        }
      },
      "25": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 76,
          column: 48
        }
      },
      "26": {
        start: {
          line: 77,
          column: 26
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "27": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 67
        }
      },
      "28": {
        start: {
          line: 80,
          column: 22
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "29": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 67
        }
      },
      "30": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 84,
          column: 27
        }
      },
      "31": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "32": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 17
        }
      },
      "33": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 32
        }
      },
      "34": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "35": {
        start: {
          line: 90,
          column: 18
        },
        end: {
          line: 90,
          column: 19
        }
      },
      "36": {
        start: {
          line: 91,
          column: 27
        },
        end: {
          line: 91,
          column: 120
        }
      },
      "37": {
        start: {
          line: 92,
          column: 26
        },
        end: {
          line: 92,
          column: 75
        }
      },
      "38": {
        start: {
          line: 92,
          column: 49
        },
        end: {
          line: 92,
          column: 74
        }
      },
      "39": {
        start: {
          line: 93,
          column: 24
        },
        end: {
          line: 93,
          column: 101
        }
      },
      "40": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "41": {
        start: {
          line: 101,
          column: 26
        },
        end: {
          line: 101,
          column: 32
        }
      },
      "42": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 106,
          column: 6
        }
      },
      "43": {
        start: {
          line: 104,
          column: 26
        },
        end: {
          line: 104,
          column: 46
        }
      },
      "44": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 96
        }
      },
      "45": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 230,
          column: 7
        }
      },
      "46": {
        start: {
          line: 143,
          column: 47
        },
        end: {
          line: 146,
          column: 31
        }
      },
      "47": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 152,
          column: 25
        }
      },
      "48": {
        start: {
          line: 149,
          column: 28
        },
        end: {
          line: 151,
          column: 49
        }
      },
      "49": {
        start: {
          line: 153,
          column: 68
        },
        end: {
          line: 153,
          column: 75
        }
      },
      "50": {
        start: {
          line: 154,
          column: 46
        },
        end: {
          line: 154,
          column: 66
        }
      },
      "51": {
        start: {
          line: 155,
          column: 24
        },
        end: {
          line: 185,
          column: 41
        }
      },
      "52": {
        start: {
          line: 165,
          column: 89
        },
        end: {
          line: 173,
          column: 56
        }
      },
      "53": {
        start: {
          line: 202,
          column: 59
        },
        end: {
          line: 202,
          column: 114
        }
      },
      "54": {
        start: {
          line: 202,
          column: 143
        },
        end: {
          line: 225,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 14
          }
        },
        loc: {
          start: {
            line: 15,
            column: 59
          },
          end: {
            line: 18,
            column: 6
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 13
          },
          end: {
            line: 19,
            column: 14
          }
        },
        loc: {
          start: {
            line: 19,
            column: 59
          },
          end: {
            line: 22,
            column: 6
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 23,
            column: 17
          }
        },
        loc: {
          start: {
            line: 23,
            column: 78
          },
          end: {
            line: 28,
            column: 6
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 22
          },
          end: {
            line: 29,
            column: 23
          }
        },
        loc: {
          start: {
            line: 29,
            column: 70
          },
          end: {
            line: 49,
            column: 6
          }
        },
        line: 29
      },
      "5": {
        name: "FertilizerCalendar",
        decl: {
          start: {
            line: 50,
            column: 9
          },
          end: {
            line: 50,
            column: 27
          }
        },
        loc: {
          start: {
            line: 50,
            column: 45
          },
          end: {
            line: 231,
            column: 1
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 77,
            column: 26
          },
          end: {
            line: 77,
            column: 27
          }
        },
        loc: {
          start: {
            line: 77,
            column: 30
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 77
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 80,
            column: 22
          },
          end: {
            line: 80,
            column: 23
          }
        },
        loc: {
          start: {
            line: 80,
            column: 26
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 80
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 92,
            column: 40
          },
          end: {
            line: 92,
            column: 41
          }
        },
        loc: {
          start: {
            line: 92,
            column: 49
          },
          end: {
            line: 92,
            column: 74
          }
        },
        line: 92
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 103,
            column: 45
          },
          end: {
            line: 103,
            column: 46
          }
        },
        loc: {
          start: {
            line: 103,
            column: 54
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 103
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 143,
            column: 26
          },
          end: {
            line: 143,
            column: 27
          }
        },
        loc: {
          start: {
            line: 143,
            column: 47
          },
          end: {
            line: 146,
            column: 31
          }
        },
        line: 143
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 147,
            column: 37
          },
          end: {
            line: 147,
            column: 38
          }
        },
        loc: {
          start: {
            line: 147,
            column: 55
          },
          end: {
            line: 186,
            column: 21
          }
        },
        line: 147
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 165,
            column: 66
          },
          end: {
            line: 165,
            column: 67
          }
        },
        loc: {
          start: {
            line: 165,
            column: 89
          },
          end: {
            line: 173,
            column: 56
          }
        },
        line: 165
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 202,
            column: 51
          },
          end: {
            line: 202,
            column: 52
          }
        },
        loc: {
          start: {
            line: 202,
            column: 59
          },
          end: {
            line: 202,
            column: 114
          }
        },
        line: 202
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 202,
            column: 120
          },
          end: {
            line: 202,
            column: 121
          }
        },
        loc: {
          start: {
            line: 202,
            column: 143
          },
          end: {
            line: 225,
            column: 40
          }
        },
        line: 202
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 15,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 38
          },
          end: {
            line: 15,
            column: 40
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 38
          },
          end: {
            line: 19,
            column: 40
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 45
          },
          end: {
            line: 23,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 57
          },
          end: {
            line: 23,
            column: 59
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 30
          },
          end: {
            line: 50,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 39
          },
          end: {
            line: 50,
            column: 41
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 93,
            column: 24
          },
          end: {
            line: 93,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 24
          },
          end: {
            line: 93,
            column: 41
          }
        }, {
          start: {
            line: 93,
            column: 45
          },
          end: {
            line: 93,
            column: 72
          }
        }, {
          start: {
            line: 93,
            column: 76
          },
          end: {
            line: 93,
            column: 101
          }
        }],
        line: 93
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 15
          },
          end: {
            line: 105,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 15
          },
          end: {
            line: 105,
            column: 52
          }
        }, {
          start: {
            line: 105,
            column: 56
          },
          end: {
            line: 105,
            column: 95
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 148,
            column: 24
          },
          end: {
            line: 152,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 24
          },
          end: {
            line: 152,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "7": {
        loc: {
          start: {
            line: 156,
            column: 102
          },
          end: {
            line: 156,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 112
          },
          end: {
            line: 156,
            column: 149
          }
        }, {
          start: {
            line: 156,
            column: 152
          },
          end: {
            line: 156,
            column: 170
          }
        }],
        line: 156
      },
      "8": {
        loc: {
          start: {
            line: 159,
            column: 85
          },
          end: {
            line: 159,
            column: 146
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 95
          },
          end: {
            line: 159,
            column: 127
          }
        }, {
          start: {
            line: 159,
            column: 130
          },
          end: {
            line: 159,
            column: 146
          }
        }],
        line: 159
      },
      "9": {
        loc: {
          start: {
            line: 162,
            column: 32
          },
          end: {
            line: 183,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 32
          },
          end: {
            line: 162,
            column: 45
          }
        }, {
          start: {
            line: 162,
            column: 63
          },
          end: {
            line: 183,
            column: 34
          }
        }],
        line: 162
      },
      "10": {
        loc: {
          start: {
            line: 171,
            column: 52
          },
          end: {
            line: 171,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 81
          },
          end: {
            line: 171,
            column: 120
          }
        }, {
          start: {
            line: 171,
            column: 123
          },
          end: {
            line: 171,
            column: 138
          }
        }],
        line: 171
      },
      "11": {
        loc: {
          start: {
            line: 174,
            column: 40
          },
          end: {
            line: 181,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 40
          },
          end: {
            line: 174,
            column: 60
          }
        }, {
          start: {
            line: 174,
            column: 78
          },
          end: {
            line: 181,
            column: 42
          }
        }],
        line: 174
      },
      "12": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 228,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 34
          }
        }, {
          start: {
            line: 189,
            column: 52
          },
          end: {
            line: 228,
            column: 14
          }
        }],
        line: 189
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/components/calendar/FertilizerCalendar.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { ChevronLeft, ChevronRight, FlaskConical, CalendarDays } from 'lucide-react';\n\ninterface FertilizerEvent {\n  id: string;\n  plantName: string;\n  plantId: string;\n  date: string;\n  type: 'fertilize';\n}\n\ninterface FertilizerCalendarProps {\n  events?: FertilizerEvent[];\n}\n\nconst Card = ({ children, className = \"\" }: { children: React.ReactNode; className?: string }) => (\n  <div className={`rounded-2xl shadow-sm border border-slate-200/70 bg-white/70 backdrop-blur p-4 ${className}`}>\n    {children}\n  </div>\n);\n\nconst Chip = ({ children, className = \"\" }: { children: React.ReactNode; className?: string }) => (\n  <span className={`inline-flex items-center rounded-full px-2 py-0.5 text-xs font-medium ring-1 ring-inset ${className}`}>\n    {children}\n  </span>\n);\n\nconst IconBtn = ({ children, onClick, label, className = \"\" }: { \n  children: React.ReactNode; \n  onClick: () => void; \n  label: string; \n  className?: string; \n}) => (\n  <button\n    aria-label={label}\n    onClick={onClick}\n    className={`inline-flex items-center justify-center rounded-xl border border-slate-200/70 bg-white/70 hover:bg-white transition h-10 w-10 ${className}`}\n  >\n    {children}\n  </button>\n);\n\nconst SectionHeader = ({ \n  icon: Icon, \n  title, \n  actions \n}: { \n  icon: React.ElementType; \n  title: string; \n  actions?: React.ReactNode; \n}) => (\n  <div className=\"flex items-center justify-between\">\n    <div className=\"flex items-center gap-2\">\n      <Icon className=\"h-5 w-5 text-slate-500\" />\n      <h3 className=\"text-sm font-semibold text-slate-700 tracking-wide\">{title}</h3>\n    </div>\n    <div className=\"flex items-center gap-2\">{actions}</div>\n  </div>\n);\n\nexport default function FertilizerCalendar({ events = [] }: FertilizerCalendarProps) {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  \n  const monthNames = [\n    'January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n  \n  const currentMonth = currentDate.getMonth();\n  const currentYear = currentDate.getFullYear();\n  const today = new Date();\n  const todayDate = today.getDate();\n  const todayMonth = today.getMonth();\n  const todayYear = today.getFullYear();\n  \n  // Get first day of month and days in month\n  const firstDayOfMonth = new Date(currentYear, currentMonth, 1);\n  const lastDayOfMonth = new Date(currentYear, currentMonth + 1, 0);\n  const startingDayOfWeek = firstDayOfMonth.getDay(); // 0 = Sunday\n  const daysInMonth = lastDayOfMonth.getDate();\n  \n  const previousMonth = () => {\n    setCurrentDate(new Date(currentYear, currentMonth - 1, 1));\n  };\n  \n  const nextMonth = () => {\n    setCurrentDate(new Date(currentYear, currentMonth + 1, 1));\n  };\n  \n  // Create calendar grid\n  const calendarDays = [];\n  \n  // Add empty cells for days before month starts\n  for (let i = 0; i < startingDayOfWeek; i++) {\n    calendarDays.push(null);\n  }\n  \n  // Add days of the month\n  for (let day = 1; day <= daysInMonth; day++) {\n    const dateString = `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\n    const dayEvents = events.filter(event => event.date === dateString);\n    const isToday = day === todayDate && currentMonth === todayMonth && currentYear === todayYear;\n    \n    calendarDays.push({\n      day,\n      dateString,\n      events: dayEvents,\n      isToday\n    });\n  }\n  \n  const displayEvents = events;\n  \n  // Filter events for current month\n  const monthEvents = displayEvents.filter(event => {\n    const eventDate = new Date(event.date);\n    return eventDate.getMonth() === currentMonth && eventDate.getFullYear() === currentYear;\n  });\n  \n  return (\n    <Card>\n      <SectionHeader\n        icon={CalendarDays}\n        title={`${monthNames[currentMonth]} ${currentYear} - Fertilizer Schedule`}\n        actions={\n          <div className=\"flex gap-2\">\n            <IconBtn label=\"Previous month\" onClick={previousMonth}>\n              <ChevronLeft className=\"h-4 w-4\" />\n            </IconBtn>\n            <IconBtn label=\"Next month\" onClick={nextMonth}>\n              <ChevronRight className=\"h-4 w-4\" />\n            </IconBtn>\n          </div>\n        }\n      />\n      \n      <div className=\"mt-4 grid grid-cols-7 gap-1 text-xs\">\n        {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day) => (\n          <div key={day} className=\"text-center text-slate-500 font-medium py-1\">\n            {day}\n          </div>\n        ))}\n        \n        {calendarDays.map((dayData, index) => {\n          if (!dayData) {\n            return <div key={`empty-${index}`} className=\"aspect-square\" />;\n          }\n          \n          const { day, events: dayEvents, isToday } = dayData;\n          const hasFertilizer = dayEvents.length > 0;\n          \n          return (\n            <div\n              key={`day-${day}`}\n              className={`aspect-square rounded-xl border text-slate-700 relative p-1 ${\n                isToday ? 'border-emerald-500 bg-emerald-50/50' : 'border-slate-200'\n              }`}\n            >\n              <div\n                className={`absolute top-1 right-1 text-[10px] ${\n                  isToday ? 'text-emerald-600 font-semibold' : 'text-slate-400'\n                }`}\n              >\n                {day}\n              </div>\n              \n              {hasFertilizer && (\n                <div className=\"mt-5 flex flex-col gap-1\">\n                  {dayEvents.slice(0, 2).map((event) => (\n                    <Chip\n                      key={event.id}\n                      className=\"bg-amber-50 text-amber-700 ring-amber-200 text-[9px] truncate\"\n                    >\n                      <FlaskConical className=\"h-2 w-2 mr-0.5\" />\n                      {event.plantName.length > 8 \n                        ? `${event.plantName.substring(0, 8)}...` \n                        : event.plantName\n                      }\n                    </Chip>\n                  ))}\n                  {dayEvents.length > 2 && (\n                    <Chip className=\"bg-slate-50 text-slate-600 ring-slate-200 text-[9px]\">\n                      +{dayEvents.length - 2} more\n                    </Chip>\n                  )}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n      \n      {monthEvents.length > 0 && (\n        <div className=\"mt-4 pt-4 border-t border-slate-200/70\">\n          <h4 className=\"text-sm font-medium text-slate-700 mb-2\">\n            This Month&apos;s Schedule ({monthEvents.length} plants)\n          </h4>\n          <div className=\"space-y-1 max-h-32 overflow-y-auto\">\n            {monthEvents\n              .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n              .map((event) => (\n              <div\n                key={event.id}\n                className=\"flex items-center justify-between text-sm p-2 rounded-lg hover:bg-slate-50/70 transition-colors\"\n              >\n                <div className=\"flex items-center gap-2\">\n                  <FlaskConical className=\"h-4 w-4 text-amber-600\" />\n                  <span className=\"font-medium text-slate-800\">{event.plantName}</span>\n                </div>\n                <div className=\"text-slate-500 text-xs\">\n                  {new Date(event.date).toLocaleDateString('en-US', { \n                    month: 'short', \n                    day: 'numeric' \n                  })}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </Card>\n  );\n}"],
      names: ["FertilizerCalendar", "Card", "children", "className", "div", "Chip", "span", "IconBtn", "onClick", "label", "button", "aria-label", "SectionHeader", "icon", "Icon", "title", "actions", "h3", "events", "currentDate", "setCurrentDate", "useState", "Date", "monthNames", "currentMonth", "getMonth", "currentYear", "getFullYear", "today", "todayDate", "getDate", "todayMonth", "todayYear", "firstDayOfMonth", "lastDayOfMonth", "startingDayOfWeek", "getDay", "daysInMonth", "previousMonth", "nextMonth", "calendarDays", "i", "push", "day", "dateString", "String", "padStart", "dayEvents", "filter", "event", "date", "isToday", "displayEvents", "monthEvents", "eventDate", "CalendarDays", "ChevronLeft", "ChevronRight", "map", "dayData", "index", "hasFertilizer", "length", "slice", "FlaskConical", "plantName", "substring", "id", "h4", "sort", "a", "b", "getTime", "toLocaleDateString", "month"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b9ecc1a28e20ae6eba0f16f346b9dd2c87d9d839"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ured60oai = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ured60oai();
cov_ured60oai().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ured60oai().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_ured60oai().f[0]++;
    cov_ured60oai().s[2]++;
    return FertilizerCalendar;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_ured60oai().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_ured60oai().s[4]++, require("react"));
const _lucidereact =
/* istanbul ignore next */
(cov_ured60oai().s[5]++, require("lucide-react"));
/* istanbul ignore next */
cov_ured60oai().s[6]++;
const Card = ({
  children,
  className =
  /* istanbul ignore next */
  (cov_ured60oai().b[0][0]++, "")
}) => {
  /* istanbul ignore next */
  cov_ured60oai().f[1]++;
  cov_ured60oai().s[7]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `rounded-2xl shadow-sm border border-slate-200/70 bg-white/70 backdrop-blur p-4 ${className}`,
    children: children
  });
};
/* istanbul ignore next */
cov_ured60oai().s[8]++;
const Chip = ({
  children,
  className =
  /* istanbul ignore next */
  (cov_ured60oai().b[1][0]++, "")
}) => {
  /* istanbul ignore next */
  cov_ured60oai().f[2]++;
  cov_ured60oai().s[9]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
    className: `inline-flex items-center rounded-full px-2 py-0.5 text-xs font-medium ring-1 ring-inset ${className}`,
    children: children
  });
};
/* istanbul ignore next */
cov_ured60oai().s[10]++;
const IconBtn = ({
  children,
  onClick,
  label,
  className =
  /* istanbul ignore next */
  (cov_ured60oai().b[2][0]++, "")
}) => {
  /* istanbul ignore next */
  cov_ured60oai().f[3]++;
  cov_ured60oai().s[11]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
    "aria-label": label,
    onClick: onClick,
    className: `inline-flex items-center justify-center rounded-xl border border-slate-200/70 bg-white/70 hover:bg-white transition h-10 w-10 ${className}`,
    children: children
  });
};
/* istanbul ignore next */
cov_ured60oai().s[12]++;
const SectionHeader = ({
  icon: Icon,
  title,
  actions
}) => {
  /* istanbul ignore next */
  cov_ured60oai().f[4]++;
  cov_ured60oai().s[13]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "flex items-center justify-between",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center gap-2",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(Icon, {
        className: "h-5 w-5 text-slate-500"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-sm font-semibold text-slate-700 tracking-wide",
        children: title
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex items-center gap-2",
      children: actions
    })]
  });
};
function FertilizerCalendar({
  events =
  /* istanbul ignore next */
  (cov_ured60oai().b[3][0]++, [])
}) {
  /* istanbul ignore next */
  cov_ured60oai().f[5]++;
  const [currentDate, setCurrentDate] =
  /* istanbul ignore next */
  (cov_ured60oai().s[14]++, (0, _react.useState)(new Date()));
  const monthNames =
  /* istanbul ignore next */
  (cov_ured60oai().s[15]++, ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']);
  const currentMonth =
  /* istanbul ignore next */
  (cov_ured60oai().s[16]++, currentDate.getMonth());
  const currentYear =
  /* istanbul ignore next */
  (cov_ured60oai().s[17]++, currentDate.getFullYear());
  const today =
  /* istanbul ignore next */
  (cov_ured60oai().s[18]++, new Date());
  const todayDate =
  /* istanbul ignore next */
  (cov_ured60oai().s[19]++, today.getDate());
  const todayMonth =
  /* istanbul ignore next */
  (cov_ured60oai().s[20]++, today.getMonth());
  const todayYear =
  /* istanbul ignore next */
  (cov_ured60oai().s[21]++, today.getFullYear());
  // Get first day of month and days in month
  const firstDayOfMonth =
  /* istanbul ignore next */
  (cov_ured60oai().s[22]++, new Date(currentYear, currentMonth, 1));
  const lastDayOfMonth =
  /* istanbul ignore next */
  (cov_ured60oai().s[23]++, new Date(currentYear, currentMonth + 1, 0));
  const startingDayOfWeek =
  /* istanbul ignore next */
  (cov_ured60oai().s[24]++, firstDayOfMonth.getDay()); // 0 = Sunday
  const daysInMonth =
  /* istanbul ignore next */
  (cov_ured60oai().s[25]++, lastDayOfMonth.getDate());
  /* istanbul ignore next */
  cov_ured60oai().s[26]++;
  const previousMonth = () => {
    /* istanbul ignore next */
    cov_ured60oai().f[6]++;
    cov_ured60oai().s[27]++;
    setCurrentDate(new Date(currentYear, currentMonth - 1, 1));
  };
  /* istanbul ignore next */
  cov_ured60oai().s[28]++;
  const nextMonth = () => {
    /* istanbul ignore next */
    cov_ured60oai().f[7]++;
    cov_ured60oai().s[29]++;
    setCurrentDate(new Date(currentYear, currentMonth + 1, 1));
  };
  // Create calendar grid
  const calendarDays =
  /* istanbul ignore next */
  (cov_ured60oai().s[30]++, []);
  // Add empty cells for days before month starts
  /* istanbul ignore next */
  cov_ured60oai().s[31]++;
  for (let i =
  /* istanbul ignore next */
  (cov_ured60oai().s[32]++, 0); i < startingDayOfWeek; i++) {
    /* istanbul ignore next */
    cov_ured60oai().s[33]++;
    calendarDays.push(null);
  }
  // Add days of the month
  /* istanbul ignore next */
  cov_ured60oai().s[34]++;
  for (let day =
  /* istanbul ignore next */
  (cov_ured60oai().s[35]++, 1); day <= daysInMonth; day++) {
    const dateString =
    /* istanbul ignore next */
    (cov_ured60oai().s[36]++, `${currentYear}-${String(currentMonth + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`);
    const dayEvents =
    /* istanbul ignore next */
    (cov_ured60oai().s[37]++, events.filter(event => {
      /* istanbul ignore next */
      cov_ured60oai().f[8]++;
      cov_ured60oai().s[38]++;
      return event.date === dateString;
    }));
    const isToday =
    /* istanbul ignore next */
    (cov_ured60oai().s[39]++,
    /* istanbul ignore next */
    (cov_ured60oai().b[4][0]++, day === todayDate) &&
    /* istanbul ignore next */
    (cov_ured60oai().b[4][1]++, currentMonth === todayMonth) &&
    /* istanbul ignore next */
    (cov_ured60oai().b[4][2]++, currentYear === todayYear));
    /* istanbul ignore next */
    cov_ured60oai().s[40]++;
    calendarDays.push({
      day,
      dateString,
      events: dayEvents,
      isToday
    });
  }
  const displayEvents =
  /* istanbul ignore next */
  (cov_ured60oai().s[41]++, events);
  // Filter events for current month
  const monthEvents =
  /* istanbul ignore next */
  (cov_ured60oai().s[42]++, displayEvents.filter(event => {
    /* istanbul ignore next */
    cov_ured60oai().f[9]++;
    const eventDate =
    /* istanbul ignore next */
    (cov_ured60oai().s[43]++, new Date(event.date));
    /* istanbul ignore next */
    cov_ured60oai().s[44]++;
    return /* istanbul ignore next */(cov_ured60oai().b[5][0]++, eventDate.getMonth() === currentMonth) &&
    /* istanbul ignore next */
    (cov_ured60oai().b[5][1]++, eventDate.getFullYear() === currentYear);
  }));
  /* istanbul ignore next */
  cov_ured60oai().s[45]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(Card, {
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(SectionHeader, {
      icon: _lucidereact.CalendarDays,
      title: `${monthNames[currentMonth]} ${currentYear} - Fertilizer Schedule`,
      actions: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(IconBtn, {
          label: "Previous month",
          onClick: previousMonth,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ChevronLeft, {
            className: "h-4 w-4"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(IconBtn, {
          label: "Next month",
          onClick: nextMonth,
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ChevronRight, {
            className: "h-4 w-4"
          })
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mt-4 grid grid-cols-7 gap-1 text-xs",
      children: [['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => {
        /* istanbul ignore next */
        cov_ured60oai().f[10]++;
        cov_ured60oai().s[46]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-center text-slate-500 font-medium py-1",
          children: day
        }, day);
      }), calendarDays.map((dayData, index) => {
        /* istanbul ignore next */
        cov_ured60oai().f[11]++;
        cov_ured60oai().s[47]++;
        if (!dayData) {
          /* istanbul ignore next */
          cov_ured60oai().b[6][0]++;
          cov_ured60oai().s[48]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "aspect-square"
          }, `empty-${index}`);
        } else
        /* istanbul ignore next */
        {
          cov_ured60oai().b[6][1]++;
        }
        const {
          day,
          events: dayEvents,
          isToday
        } =
        /* istanbul ignore next */
        (cov_ured60oai().s[49]++, dayData);
        const hasFertilizer =
        /* istanbul ignore next */
        (cov_ured60oai().s[50]++, dayEvents.length > 0);
        /* istanbul ignore next */
        cov_ured60oai().s[51]++;
        return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: `aspect-square rounded-xl border text-slate-700 relative p-1 ${isToday ?
          /* istanbul ignore next */
          (cov_ured60oai().b[7][0]++, 'border-emerald-500 bg-emerald-50/50') :
          /* istanbul ignore next */
          (cov_ured60oai().b[7][1]++, 'border-slate-200')}`,
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: `absolute top-1 right-1 text-[10px] ${isToday ?
            /* istanbul ignore next */
            (cov_ured60oai().b[8][0]++, 'text-emerald-600 font-semibold') :
            /* istanbul ignore next */
            (cov_ured60oai().b[8][1]++, 'text-slate-400')}`,
            children: day
          }),
          /* istanbul ignore next */
          (cov_ured60oai().b[9][0]++, hasFertilizer) &&
          /* istanbul ignore next */
          (cov_ured60oai().b[9][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "mt-5 flex flex-col gap-1",
            children: [dayEvents.slice(0, 2).map(event => {
              /* istanbul ignore next */
              cov_ured60oai().f[12]++;
              cov_ured60oai().s[52]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)(Chip, {
                className: "bg-amber-50 text-amber-700 ring-amber-200 text-[9px] truncate",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.FlaskConical, {
                  className: "h-2 w-2 mr-0.5"
                }), event.plantName.length > 8 ?
                /* istanbul ignore next */
                (cov_ured60oai().b[10][0]++, `${event.plantName.substring(0, 8)}...`) :
                /* istanbul ignore next */
                (cov_ured60oai().b[10][1]++, event.plantName)]
              }, event.id);
            }),
            /* istanbul ignore next */
            (cov_ured60oai().b[11][0]++, dayEvents.length > 2) &&
            /* istanbul ignore next */
            (cov_ured60oai().b[11][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(Chip, {
              className: "bg-slate-50 text-slate-600 ring-slate-200 text-[9px]",
              children: ["+", dayEvents.length - 2, " more"]
            }))]
          }))]
        }, `day-${day}`);
      })]
    }),
    /* istanbul ignore next */
    (cov_ured60oai().b[12][0]++, monthEvents.length > 0) &&
    /* istanbul ignore next */
    (cov_ured60oai().b[12][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mt-4 pt-4 border-t border-slate-200/70",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h4", {
        className: "text-sm font-medium text-slate-700 mb-2",
        children: ["This Month's Schedule (", monthEvents.length, " plants)"]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "space-y-1 max-h-32 overflow-y-auto",
        children: monthEvents.sort((a, b) => {
          /* istanbul ignore next */
          cov_ured60oai().f[13]++;
          cov_ured60oai().s[53]++;
          return new Date(a.date).getTime() - new Date(b.date).getTime();
        }).map(event => {
          /* istanbul ignore next */
          cov_ured60oai().f[14]++;
          cov_ured60oai().s[54]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between text-sm p-2 rounded-lg hover:bg-slate-50/70 transition-colors",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center gap-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.FlaskConical, {
                className: "h-4 w-4 text-amber-600"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "font-medium text-slate-800",
                children: event.plantName
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-slate-500 text-xs",
              children: new Date(event.date).toLocaleDateString('en-US', {
                month: 'short',
                day: 'numeric'
              })
            })]
          }, event.id);
        })
      })]
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
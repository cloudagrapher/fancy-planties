3730cce72073a2ec418634281aba18d3
"use strict";

/* istanbul ignore next */
function cov_jwbcsb9z1() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/lib/init.ts";
  var hash = "72ef4dace2cf6985e49a7eee2058e90ada29617f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/lib/init.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 40
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 23
        }
      },
      "4": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 41
        }
      },
      "5": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "6": {
        start: {
          line: 14,
          column: 31
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "7": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 23
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 28
        }
      },
      "9": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 28
        }
      },
      "10": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "11": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 26,
          column: 7
        }
      },
      "12": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 18
        }
      },
      "14": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 55
        }
      },
      "15": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 7
        }
      },
      "16": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 138
        }
      },
      "17": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 23
        }
      },
      "18": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "initializeServerServices",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 36
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 20
          },
          end: {
            line: 29,
            column: 21
          }
        },
        loc: {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 31,
            column: 9
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 68
          },
          end: {
            line: 34,
            column: 69
          }
        },
        loc: {
          start: {
            line: 34,
            column: 77
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 17
          },
          end: {
            line: 24,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 17
          },
          end: {
            line: 24,
            column: 48
          }
        }, {
          start: {
            line: 24,
            column: 52
          },
          end: {
            line: 24,
            column: 59
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 79
          },
          end: {
            line: 35,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 104
          },
          end: {
            line: 35,
            column: 109
          }
        }, {
          start: {
            line: 35,
            column: 112
          },
          end: {
            line: 35,
            column: 136
          }
        }],
        line: 35
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/lib/init.ts"],
      sourcesContent: ["import 'server-only';\nimport { setupErrorHandling, logger } from '@/lib/utils/logger';\nimport { monitoring } from '@/lib/utils/monitoring';\nimport { initializeEmailVerification } from '@/lib/init/email-verification-init';\n\n// Initialize error handling and monitoring\nlet initialized = false;\n\nexport function initializeServerServices() {\n  if (initialized) return;\n  \n  // Setup global error handling\n  setupErrorHandling();\n  \n  // Log application startup\n  logger.info('Fancy Planties application starting', {\n    nodeEnv: process.env.NODE_ENV,\n    version: process.env.npm_package_version || '0.1.0',\n    pid: process.pid,\n  });\n  \n  // Start memory monitoring in production\n  if (process.env.NODE_ENV === 'production') {\n    setInterval(() => {\n      monitoring.recordMemoryUsage();\n    }, 60000); // Every minute\n  }\n  \n  // Initialize email verification system\n  initializeEmailVerification().catch(error => {\n    logger.error(\n      'Failed to initialize email verification system', \n      error instanceof Error ? error : new Error(String(error))\n    );\n  });\n  \n  initialized = true;\n}\n\n// Auto-initialize when this module is imported\ninitializeServerServices();"],
      names: ["initializeServerServices", "initialized", "setupErrorHandling", "logger", "info", "nodeEnv", "process", "env", "NODE_ENV", "version", "npm_package_version", "pid", "setInterval", "monitoring", "recordMemoryUsage", "initializeEmailVerification", "catch", "error", "Error", "String"],
      mappings: ";;;;+BAQgBA;;;eAAAA;;;QART;wBACoC;4BAChB;uCACiB;AAE5C,2CAA2C;AAC3C,IAAIC,cAAc;AAEX,SAASD;IACd,IAAIC,aAAa;IAEjB,8BAA8B;IAC9BC,IAAAA,0BAAkB;IAElB,0BAA0B;IAC1BC,cAAM,CAACC,IAAI,CAAC,uCAAuC;QACjDC,SAASC,QAAQC,GAAG,CAACC,QAAQ;QAC7BC,SAASH,QAAQC,GAAG,CAACG,mBAAmB,IAAI;QAC5CC,KAAKL,QAAQK,GAAG;IAClB;IAEA,wCAAwC;IACxC,IAAIL,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;QACzCI,YAAY;YACVC,sBAAU,CAACC,iBAAiB;QAC9B,GAAG,QAAQ,eAAe;IAC5B;IAEA,uCAAuC;IACvCC,IAAAA,kDAA2B,IAAGC,KAAK,CAACC,CAAAA;QAClCd,cAAM,CAACc,KAAK,CACV,kDACAA,iBAAiBC,QAAQD,QAAQ,IAAIC,MAAMC,OAAOF;IAEtD;IAEAhB,cAAc;AAChB;AAEA,+CAA+C;AAC/CD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "72ef4dace2cf6985e49a7eee2058e90ada29617f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jwbcsb9z1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_jwbcsb9z1();
cov_jwbcsb9z1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_jwbcsb9z1().s[1]++;
Object.defineProperty(exports, "initializeServerServices", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_jwbcsb9z1().f[0]++;
    cov_jwbcsb9z1().s[2]++;
    return initializeServerServices;
  }
});
/* istanbul ignore next */
cov_jwbcsb9z1().s[3]++;
require("server-only");
const _logger =
/* istanbul ignore next */
(cov_jwbcsb9z1().s[4]++, require("./utils/logger"));
const _monitoring =
/* istanbul ignore next */
(cov_jwbcsb9z1().s[5]++, require("./utils/monitoring"));
const _emailverificationinit =
/* istanbul ignore next */
(cov_jwbcsb9z1().s[6]++, require("./init/email-verification-init"));
// Initialize error handling and monitoring
let initialized =
/* istanbul ignore next */
(cov_jwbcsb9z1().s[7]++, false);
function initializeServerServices() {
  /* istanbul ignore next */
  cov_jwbcsb9z1().f[1]++;
  cov_jwbcsb9z1().s[8]++;
  if (initialized) {
    /* istanbul ignore next */
    cov_jwbcsb9z1().b[0][0]++;
    cov_jwbcsb9z1().s[9]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_jwbcsb9z1().b[0][1]++;
  }
  // Setup global error handling
  cov_jwbcsb9z1().s[10]++;
  (0, _logger.setupErrorHandling)();
  // Log application startup
  /* istanbul ignore next */
  cov_jwbcsb9z1().s[11]++;
  _logger.logger.info('Fancy Planties application starting', {
    nodeEnv: process.env.NODE_ENV,
    version:
    /* istanbul ignore next */
    (cov_jwbcsb9z1().b[1][0]++, process.env.npm_package_version) ||
    /* istanbul ignore next */
    (cov_jwbcsb9z1().b[1][1]++, '0.1.0'),
    pid: process.pid
  });
  // Start memory monitoring in production
  /* istanbul ignore next */
  cov_jwbcsb9z1().s[12]++;
  if (process.env.NODE_ENV === 'production') {
    /* istanbul ignore next */
    cov_jwbcsb9z1().b[2][0]++;
    cov_jwbcsb9z1().s[13]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_jwbcsb9z1().f[2]++;
      cov_jwbcsb9z1().s[14]++;
      _monitoring.monitoring.recordMemoryUsage();
    }, 60000); // Every minute
  } else
  /* istanbul ignore next */
  {
    cov_jwbcsb9z1().b[2][1]++;
  }
  // Initialize email verification system
  cov_jwbcsb9z1().s[15]++;
  (0, _emailverificationinit.initializeEmailVerification)().catch(error => {
    /* istanbul ignore next */
    cov_jwbcsb9z1().f[3]++;
    cov_jwbcsb9z1().s[16]++;
    _logger.logger.error('Failed to initialize email verification system', error instanceof Error ?
    /* istanbul ignore next */
    (cov_jwbcsb9z1().b[3][0]++, error) :
    /* istanbul ignore next */
    (cov_jwbcsb9z1().b[3][1]++, new Error(String(error))));
  });
  /* istanbul ignore next */
  cov_jwbcsb9z1().s[17]++;
  initialized = true;
}
// Auto-initialize when this module is imported
/* istanbul ignore next */
cov_jwbcsb9z1().s[18]++;
initializeServerServices();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfandiY3NiOXoxIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiaW5pdGlhbGl6ZVNlcnZlclNlcnZpY2VzIiwiaW5pdGlhbGl6ZWQiLCJmIiwiYiIsIl9sb2dnZXIiLCJzZXR1cEVycm9ySGFuZGxpbmciLCJsb2dnZXIiLCJpbmZvIiwibm9kZUVudiIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInZlcnNpb24iLCJucG1fcGFja2FnZV92ZXJzaW9uIiwicGlkIiwic2V0SW50ZXJ2YWwiLCJfbW9uaXRvcmluZyIsIm1vbml0b3JpbmciLCJyZWNvcmRNZW1vcnlVc2FnZSIsIl9lbWFpbHZlcmlmaWNhdGlvbmluaXQiLCJpbml0aWFsaXplRW1haWxWZXJpZmljYXRpb24iLCJjYXRjaCIsImVycm9yIiwiRXJyb3IiLCJTdHJpbmciXSwic291cmNlcyI6WyIvVXNlcnMvc3RlZmFuYmVra2VyL3Byb2plY3RzL2ZhbmN5LXBsYW50aWVzL3NyYy9saWIvaW5pdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3NlcnZlci1vbmx5JztcbmltcG9ydCB7IHNldHVwRXJyb3JIYW5kbGluZywgbG9nZ2VyIH0gZnJvbSAnQC9saWIvdXRpbHMvbG9nZ2VyJztcbmltcG9ydCB7IG1vbml0b3JpbmcgfSBmcm9tICdAL2xpYi91dGlscy9tb25pdG9yaW5nJztcbmltcG9ydCB7IGluaXRpYWxpemVFbWFpbFZlcmlmaWNhdGlvbiB9IGZyb20gJ0AvbGliL2luaXQvZW1haWwtdmVyaWZpY2F0aW9uLWluaXQnO1xuXG4vLyBJbml0aWFsaXplIGVycm9yIGhhbmRsaW5nIGFuZCBtb25pdG9yaW5nXG5sZXQgaW5pdGlhbGl6ZWQgPSBmYWxzZTtcblxuZXhwb3J0IGZ1bmN0aW9uIGluaXRpYWxpemVTZXJ2ZXJTZXJ2aWNlcygpIHtcbiAgaWYgKGluaXRpYWxpemVkKSByZXR1cm47XG4gIFxuICAvLyBTZXR1cCBnbG9iYWwgZXJyb3IgaGFuZGxpbmdcbiAgc2V0dXBFcnJvckhhbmRsaW5nKCk7XG4gIFxuICAvLyBMb2cgYXBwbGljYXRpb24gc3RhcnR1cFxuICBsb2dnZXIuaW5mbygnRmFuY3kgUGxhbnRpZXMgYXBwbGljYXRpb24gc3RhcnRpbmcnLCB7XG4gICAgbm9kZUVudjogcHJvY2Vzcy5lbnYuTk9ERV9FTlYsXG4gICAgdmVyc2lvbjogcHJvY2Vzcy5lbnYubnBtX3BhY2thZ2VfdmVyc2lvbiB8fCAnMC4xLjAnLFxuICAgIHBpZDogcHJvY2Vzcy5waWQsXG4gIH0pO1xuICBcbiAgLy8gU3RhcnQgbWVtb3J5IG1vbml0b3JpbmcgaW4gcHJvZHVjdGlvblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgIHNldEludGVydmFsKCgpID0+IHtcbiAgICAgIG1vbml0b3JpbmcucmVjb3JkTWVtb3J5VXNhZ2UoKTtcbiAgICB9LCA2MDAwMCk7IC8vIEV2ZXJ5IG1pbnV0ZVxuICB9XG4gIFxuICAvLyBJbml0aWFsaXplIGVtYWlsIHZlcmlmaWNhdGlvbiBzeXN0ZW1cbiAgaW5pdGlhbGl6ZUVtYWlsVmVyaWZpY2F0aW9uKCkuY2F0Y2goZXJyb3IgPT4ge1xuICAgIGxvZ2dlci5lcnJvcihcbiAgICAgICdGYWlsZWQgdG8gaW5pdGlhbGl6ZSBlbWFpbCB2ZXJpZmljYXRpb24gc3lzdGVtJywgXG4gICAgICBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IgOiBuZXcgRXJyb3IoU3RyaW5nKGVycm9yKSlcbiAgICApO1xuICB9KTtcbiAgXG4gIGluaXRpYWxpemVkID0gdHJ1ZTtcbn1cblxuLy8gQXV0by1pbml0aWFsaXplIHdoZW4gdGhpcyBtb2R1bGUgaXMgaW1wb3J0ZWRcbmluaXRpYWxpemVTZXJ2ZXJTZXJ2aWNlcygpOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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
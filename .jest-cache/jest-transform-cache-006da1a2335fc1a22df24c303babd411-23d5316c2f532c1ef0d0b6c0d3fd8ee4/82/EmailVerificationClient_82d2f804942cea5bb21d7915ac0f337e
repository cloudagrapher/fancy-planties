6bf37aebec8127d9aaa081508e571351
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return EmailVerificationClient;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _navigation = require("next/navigation");
const _dynamic = /*#__PURE__*/ _interop_require_default(require("next/dynamic"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// Dynamically import with no SSR to prevent hydration issues
const VerificationCodeInput = (0, _dynamic.default)(()=>Promise.resolve().then(()=>/*#__PURE__*/ _interop_require_wildcard(require("../../../components/auth/VerificationCodeInput"))), {
    loadableGenerated: {
        webpack: ()=>[
                require.resolveWeak("@/components/auth/VerificationCodeInput")
            ]
    },
    ssr: false
});
function EmailVerificationClient({ email }) {
    const [code, setCode] = (0, _react.useState)('');
    const [isLoading, setIsLoading] = (0, _react.useState)(false);
    const [error, setError] = (0, _react.useState)('');
    const [success, setSuccess] = (0, _react.useState)(false);
    const [resendCooldown, setResendCooldown] = (0, _react.useState)(0);
    const [isResending, setIsResending] = (0, _react.useState)(false);
    const router = (0, _navigation.useRouter)();
    // Countdown timer for resend cooldown
    (0, _react.useEffect)(()=>{
        if (resendCooldown > 0) {
            const timer = setTimeout(()=>{
                setResendCooldown(resendCooldown - 1);
            }, 1000);
            return ()=>clearTimeout(timer);
        }
    }, [
        resendCooldown
    ]);
    // Auto-submit when code is complete
    (0, _react.useEffect)(()=>{
        if (code.length === 6 && !isLoading) {
            handleSubmit();
        }
    }, [
        code,
        isLoading
    ]);
    const handleSubmit = async (e)=>{
        if (e) e.preventDefault();
        if (code.length !== 6) {
            setError('Please enter a 6-digit code');
            return;
        }
        setIsLoading(true);
        setError('');
        try {
            const response = await fetch('/api/auth/verify-email', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    email,
                    code
                })
            });
            const data = await response.json();
            if (response.ok && data.success) {
                setSuccess(true);
                // Redirect to dashboard after a brief delay
                setTimeout(()=>{
                    router.push(data.redirectTo || '/dashboard');
                    router.refresh(); // Refresh to update auth state
                }, 1500);
            } else {
                // Handle different error types
                switch(data.error){
                    case 'CODE_EXPIRED':
                        setError('This code has expired. Please request a new one.');
                        break;
                    case 'CODE_INVALID':
                        setError('Invalid code. Please check and try again.');
                        break;
                    case 'TOO_MANY_ATTEMPTS':
                        setError('Too many attempts. Please request a new code.');
                        break;
                    case 'ALREADY_VERIFIED':
                        setError('Your email is already verified.');
                        setTimeout(()=>{
                            router.push('/dashboard');
                            router.refresh();
                        }, 2000);
                        break;
                    default:
                        setError(data.message || 'Verification failed. Please try again.');
                }
            }
        } catch (error) {
            console.error('Verification error:', error);
            setError('Network error. Please check your connection and try again.');
        } finally{
            setIsLoading(false);
        }
    };
    const handleResend = async ()=>{
        if (resendCooldown > 0 || isResending) return;
        setIsResending(true);
        setError('');
        try {
            const response = await fetch('/api/auth/resend-verification', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    email
                })
            });
            const data = await response.json();
            if (response.ok && data.success) {
                setResendCooldown(data.cooldownSeconds || 60);
                setCode(''); // Clear the input
                setError(''); // Clear any existing errors
            } else {
                setError(data.message || 'Failed to resend code. Please try again.');
                if (data.cooldownSeconds) {
                    setResendCooldown(data.cooldownSeconds);
                }
            }
        } catch (error) {
            console.error('Resend error:', error);
            setError('Network error. Please check your connection and try again.');
        } finally{
            setIsResending(false);
        }
    };
    const handleCodeChange = (value)=>{
        setCode(value);
        if (error) {
            setError(''); // Clear error when user starts typing
        }
    };
    if (success) {
        return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "card card--mint text-center",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "flex-center mb-4",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "w-16 h-16 rounded-full bg-mint-200 flex-center",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                            className: "w-8 h-8 text-mint-700",
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                strokeLinecap: "round",
                                strokeLinejoin: "round",
                                strokeWidth: 2,
                                d: "M5 13l4 4L19 7"
                            })
                        })
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                    className: "text-xl font-semibold text-mint-900 mb-2",
                    children: "Email verified successfully! \uD83C\uDF89"
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                    className: "text-mint-700 mb-4",
                    children: "Welcome to Fancy Planties! Redirecting you to your dashboard..."
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "spinner mx-auto"
                })
            ]
        });
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: "card card--dreamy",
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("form", {
            onSubmit: handleSubmit,
            className: "space-y-6",
            role: "form",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "text-center mb-6",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "w-12 h-12 rounded-full bg-mint-100 flex-center mx-auto mb-4",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                                className: "w-6 h-6 text-mint-600",
                                fill: "none",
                                stroke: "currentColor",
                                viewBox: "0 0 24 24",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                    strokeLinecap: "round",
                                    strokeLinejoin: "round",
                                    strokeWidth: 2,
                                    d: "M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
                                })
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h3", {
                            className: "text-lg font-semibold text-neutral-900 mb-2",
                            children: "Enter verification code"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                            className: "text-sm text-neutral-600",
                            children: "We've sent a 6-digit code to your email. Enter it below to verify your account."
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "space-y-4",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(VerificationCodeInput, {
                            value: code,
                            onChange: handleCodeChange,
                            disabled: isLoading,
                            error: error
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "text-center",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                type: "button",
                                onClick: handleResend,
                                disabled: resendCooldown > 0 || isResending || isLoading,
                                className: `
                text-sm font-medium transition-colors
                ${resendCooldown > 0 || isResending || isLoading ? 'text-neutral-400 cursor-not-allowed' : 'text-mint-600 hover:text-mint-700 cursor-pointer'}
              `,
                                children: isResending ? 'Sending...' : resendCooldown > 0 ? `Resend code in ${resendCooldown}s` : 'Didn\'t receive the code? Resend it'
                            })
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "pt-4",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        type: "submit",
                        disabled: isLoading || code.length !== 6,
                        className: `
              btn btn--primary btn--full
              ${isLoading ? 'btn--loading' : ''}
            `,
                        children: isLoading ? /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "spinner mr-2"
                                }),
                                "Verifying..."
                            ]
                        }) : 'Verify Email'
                    })
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                    className: "text-center",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("p", {
                        className: "text-xs text-neutral-500",
                        children: [
                            "Having trouble? Check your spam folder or",
                            ' ',
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                type: "button",
                                onClick: handleResend,
                                disabled: resendCooldown > 0 || isResending,
                                className: "text-mint-600 hover:text-mint-700 underline",
                                children: "request a new code"
                            })
                        ]
                    })
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,
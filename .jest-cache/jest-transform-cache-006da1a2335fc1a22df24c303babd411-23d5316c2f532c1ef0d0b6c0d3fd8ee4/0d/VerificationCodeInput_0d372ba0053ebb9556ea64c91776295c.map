{"version":3,"names":["cov_27rx777zdh","actualCoverage","s","VerificationCodeInput","value","onChange","disabled","b","error","length","f","focusedIndex","setFocusedIndex","_react","useState","inputRefs","useRef","useEffect","current","slice","firstEmptyIndex","focus","handleInputChange","index","inputValue","digit","replace","newValue","split","updatedValue","join","nextInput","handleKeyDown","e","key","preventDefault","Math","max","prevInput","handlePaste","pastedData","clipboardData","getData","digits","nextFocusIndex","min","targetInput","handleFocus","handleClick","targetIndex","_jsxruntime","jsxs","className","jsx","Array","from","_","ref","el","type","inputMode","pattern","maxLength","target","onKeyDown","onPaste","onFocus","onClick","undefined","id","role"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/auth/VerificationCodeInput.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect, KeyboardEvent, ClipboardEvent } from 'react';\n\nexport interface VerificationCodeInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  disabled?: boolean;\n  error?: string;\n  length?: number;\n}\n\nexport default function VerificationCodeInput({\n  value,\n  onChange,\n  disabled = false,\n  error,\n  length = 6\n}: VerificationCodeInputProps) {\n  const [focusedIndex, setFocusedIndex] = useState<number>(0);\n  const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\n\n  // Initialize refs array\n  useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, length);\n  }, [length]);\n\n  // Auto-focus first empty input when component mounts or value changes\n  useEffect(() => {\n    const firstEmptyIndex = value.length;\n    if (firstEmptyIndex < length && inputRefs.current[firstEmptyIndex]) {\n      inputRefs.current[firstEmptyIndex]?.focus();\n      setFocusedIndex(firstEmptyIndex);\n    }\n  }, [value, length]);\n\n  const handleInputChange = (index: number, inputValue: string) => {\n    if (disabled) return;\n\n    // Only allow digits\n    const digit = inputValue.replace(/\\D/g, '').slice(-1);\n    \n    // If no valid digit, don't update\n    if (!digit && inputValue) return;\n    \n    // Build new value\n    const newValue = value.split('');\n    newValue[index] = digit;\n    \n    // Update value up to current position\n    const updatedValue = newValue.slice(0, index + 1).join('');\n    onChange(updatedValue);\n\n    // Move to next input if digit was entered\n    if (digit && index < length - 1) {\n      const nextInput = inputRefs.current[index + 1];\n      if (nextInput) {\n        nextInput.focus();\n        setFocusedIndex(index + 1);\n      }\n    }\n  };\n\n  const handleKeyDown = (index: number, e: KeyboardEvent<HTMLInputElement>) => {\n    if (disabled) return;\n\n    if (e.key === 'Backspace') {\n      e.preventDefault();\n      \n      if (value[index]) {\n        // Clear current digit\n        const newValue = value.split('');\n        newValue[index] = '';\n        onChange(newValue.slice(0, Math.max(index, value.length - 1)).join(''));\n      } else if (index > 0) {\n        // Move to previous input and clear it\n        const newValue = value.split('');\n        newValue[index - 1] = '';\n        onChange(newValue.slice(0, index).join(''));\n        \n        const prevInput = inputRefs.current[index - 1];\n        if (prevInput) {\n          prevInput.focus();\n          setFocusedIndex(index - 1);\n        }\n      }\n    } else if (e.key === 'ArrowLeft' && index > 0) {\n      e.preventDefault();\n      const prevInput = inputRefs.current[index - 1];\n      if (prevInput) {\n        prevInput.focus();\n        setFocusedIndex(index - 1);\n      }\n    } else if (e.key === 'ArrowRight' && index < length - 1) {\n      e.preventDefault();\n      const nextInput = inputRefs.current[index + 1];\n      if (nextInput) {\n        nextInput.focus();\n        setFocusedIndex(index + 1);\n      }\n    }\n  };\n\n  const handlePaste = (e: ClipboardEvent<HTMLInputElement>) => {\n    if (disabled) return;\n    \n    e.preventDefault();\n    const pastedData = e.clipboardData.getData('text');\n    const digits = pastedData.replace(/\\D/g, '').slice(0, length);\n    \n    if (digits) {\n      onChange(digits);\n      \n      // Focus the next empty input or the last input\n      const nextFocusIndex = Math.min(digits.length, length - 1);\n      const targetInput = inputRefs.current[nextFocusIndex];\n      if (targetInput) {\n        targetInput.focus();\n        setFocusedIndex(nextFocusIndex);\n      }\n    }\n  };\n\n  const handleFocus = (index: number) => {\n    setFocusedIndex(index);\n  };\n\n  const handleClick = (index: number) => {\n    // When clicking on an input, focus the first empty position or the clicked position\n    const firstEmptyIndex = value.length;\n    const targetIndex = index <= firstEmptyIndex ? index : firstEmptyIndex;\n    \n    const targetInput = inputRefs.current[targetIndex];\n    if (targetInput) {\n      targetInput.focus();\n      setFocusedIndex(targetIndex);\n    }\n  };\n\n  return (\n    <div className=\"verification-code-input\">\n      <div className=\"flex justify-center gap-3 mb-2\">\n        {Array.from({ length }, (_, index) => (\n          <input\n            key={index}\n            ref={(el) => {\n              inputRefs.current[index] = el;\n            }}\n            type=\"text\"\n            inputMode=\"numeric\"\n            pattern=\"[0-9]*\"\n            maxLength={1}\n            value={value[index] || ''}\n            onChange={(e) => handleInputChange(index, e.target.value)}\n            onKeyDown={(e) => handleKeyDown(index, e)}\n            onPaste={handlePaste}\n            onFocus={() => handleFocus(index)}\n            onClick={() => handleClick(index)}\n            disabled={disabled}\n            className={`\n              w-12 h-12 text-center text-lg font-semibold\n              border-2 rounded-lg\n              transition-all duration-200\n              ${error \n                ? 'border-red-300 bg-red-50 text-red-900 focus:border-red-500 focus:ring-red-200' \n                : focusedIndex === index\n                  ? 'border-mint-400 bg-mint-50 text-mint-900 ring-2 ring-mint-200'\n                  : value[index]\n                    ? 'border-mint-300 bg-mint-50 text-mint-900'\n                    : 'border-neutral-300 bg-white text-neutral-700 hover:border-neutral-400'\n              }\n              ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-text'}\n              focus:outline-none focus:ring-2\n              ${!error && 'focus:ring-mint-200 focus:border-mint-400'}\n            `}\n            aria-label={`Verification code digit ${index + 1}`}\n            aria-describedby={error ? 'verification-code-error' : undefined}\n          />\n        ))}\n      </div>\n      \n      {error && (\n        <div \n          id=\"verification-code-error\" \n          className=\"text-sm text-red-600 text-center\"\n          role=\"alert\"\n        >\n          {error}\n        </div>\n      )}\n    </div>\n  );\n}"],"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","ignoreList":[]}
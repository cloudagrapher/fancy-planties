{
  "enabled": true,
  "name": "Commit on Task Completion",
  "description": "Automatically commits and pushes changes when tasks are marked as complete in spec files",
  "version": "1",
  "when": {
    "type": "fileChanged",
    "patterns": [
      ".kiro/specs/**/*.md"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "A spec file has been modified. Please check if any tasks were marked as complete and handle accordingly:\n\n**TASK COMPLETION WORKFLOW:**\n1. Read the modified spec file to identify if any tasks changed from `- [ ]` to `- [x]`\n2. If tasks were completed:\n   - Generate a descriptive commit message based on the completed tasks\n   - Stage all changed files in the repository\n   - Create a commit with the task-based message following conventional commit format\n   - Push the commit to the remote repository\n3. If no tasks were completed, acknowledge the spec update but don't commit\n\n**COMMIT MESSAGE FORMAT:**\nUse conventional commit format:\n- `feat(admin): implement user management interface` for new features\n- `fix(auth): resolve curator authentication issue` for bug fixes\n- `docs(spec): update admin dashboard requirements` for documentation\n\n**QUALITY CHECKS BEFORE COMMIT:**\n- Ensure `npm run build` passes\n- Verify `npm test` passes\n- Check that all modified files are properly formatted\n- Validate that no sensitive data is included\n\nFollow the version control guidelines in .kiro/steering/version-control.md for commit message format and process."
  }
}
4bc23a18969373c431b7c658dc84c7fc
'use client';
"use strict";

/* istanbul ignore next */
function cov_ckpxtywm0() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/components/import/ImportProgress.tsx";
  var hash = "1761b99474280098cee69083285371d9f847a25c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/components/import/ImportProgress.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 16,
          column: 36
        },
        end: {
          line: 16,
          column: 62
        }
      },
      "7": {
        start: {
          line: 17,
          column: 34
        },
        end: {
          line: 17,
          column: 60
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 79,
          column: 7
        }
      },
      "9": {
        start: {
          line: 20,
          column: 30
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "10": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "11": {
        start: {
          line: 22,
          column: 33
        },
        end: {
          line: 22,
          column: 75
        }
      },
      "12": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 49,
          column: 17
        }
      },
      "13": {
        start: {
          line: 25,
          column: 38
        },
        end: {
          line: 25,
          column: 75
        }
      },
      "14": {
        start: {
          line: 25,
          column: 71
        },
        end: {
          line: 25,
          column: 73
        }
      },
      "15": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 48,
          column: 21
        }
      },
      "16": {
        start: {
          line: 28,
          column: 50
        },
        end: {
          line: 41,
          column: 25
        }
      },
      "17": {
        start: {
          line: 42,
          column: 24
        },
        end: {
          line: 42,
          column: 55
        }
      },
      "18": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 43,
          column: 56
        }
      },
      "19": {
        start: {
          line: 44,
          column: 24
        },
        end: {
          line: 44,
          column: 50
        }
      },
      "20": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 45,
          column: 31
        }
      },
      "21": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 47,
          column: 82
        }
      },
      "22": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 52,
          column: 17
        }
      },
      "23": {
        start: {
          line: 51,
          column: 20
        },
        end: {
          line: 51,
          column: 64
        }
      },
      "24": {
        start: {
          line: 53,
          column: 29
        },
        end: {
          line: 53,
          column: 50
        }
      },
      "25": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 43
        }
      },
      "26": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 61,
          column: 17
        }
      },
      "27": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 48
        }
      },
      "28": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 46
        }
      },
      "29": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 61,
          column: 17
        }
      },
      "30": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 83
        }
      },
      "31": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 46
        }
      },
      "32": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 65
        }
      },
      "33": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 84
        }
      },
      "34": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 42
        }
      },
      "35": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 34
        }
      },
      "36": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 24
        }
      },
      "37": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 54
        }
      },
      "38": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 45
        }
      },
      "39": {
        start: {
          line: 74,
          column: 19
        },
        end: {
          line: 74,
          column: 44
        }
      },
      "40": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "41": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "42": {
        start: {
          line: 94,
          column: 26
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "43": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "44": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 99,
          column: 19
        }
      },
      "45": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 103,
          column: 19
        }
      },
      "46": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 107,
          column: 19
        }
      },
      "47": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 111,
          column: 19
        }
      },
      "48": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 115,
          column: 19
        }
      },
      "49": {
        start: {
          line: 118,
          column: 26
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "50": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "51": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 45
        }
      },
      "52": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 48
        }
      },
      "53": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 56
        }
      },
      "54": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 39
        }
      },
      "55": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 40
        }
      },
      "56": {
        start: {
          line: 132,
          column: 27
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "57": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "58": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 38
        }
      },
      "59": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 35
        }
      },
      "60": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 38
        }
      },
      "61": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 36
        }
      },
      "62": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 42
        }
      },
      "63": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 391,
          column: 7
        }
      },
      "64": {
        start: {
          line: 331,
          column: 96
        },
        end: {
          line: 346,
          column: 49
        }
      },
      "65": {
        start: {
          line: 370,
          column: 102
        },
        end: {
          line: 383,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "ImportProgress",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 23
          }
        },
        loc: {
          start: {
            line: 15,
            column: 75
          },
          end: {
            line: 392,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 27
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 20,
            column: 31
          }
        },
        loc: {
          start: {
            line: 20,
            column: 40
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 66
          },
          end: {
            line: 25,
            column: 67
          }
        },
        loc: {
          start: {
            line: 25,
            column: 71
          },
          end: {
            line: 25,
            column: 73
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 74,
            column: 15
          },
          end: {
            line: 74,
            column: 16
          }
        },
        loc: {
          start: {
            line: 74,
            column: 19
          },
          end: {
            line: 74,
            column: 44
          }
        },
        line: 74
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 94,
            column: 26
          },
          end: {
            line: 94,
            column: 27
          }
        },
        loc: {
          start: {
            line: 94,
            column: 30
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 94
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 118,
            column: 26
          },
          end: {
            line: 118,
            column: 27
          }
        },
        loc: {
          start: {
            line: 118,
            column: 30
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 118
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 132,
            column: 27
          },
          end: {
            line: 132,
            column: 28
          }
        },
        loc: {
          start: {
            line: 132,
            column: 31
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 132
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 331,
            column: 66
          },
          end: {
            line: 331,
            column: 67
          }
        },
        loc: {
          start: {
            line: 331,
            column: 96
          },
          end: {
            line: 346,
            column: 49
          }
        },
        line: 331
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 370,
            column: 69
          },
          end: {
            line: 370,
            column: 70
          }
        },
        loc: {
          start: {
            line: 370,
            column: 102
          },
          end: {
            line: 383,
            column: 49
          }
        },
        line: 370
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 57
          },
          end: {
            line: 15,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 69
          },
          end: {
            line: 15,
            column: 71
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 49,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 49,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 48,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 48,
            column: 21
          }
        }, {
          start: {
            line: 46,
            column: 27
          },
          end: {
            line: 48,
            column: 21
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 52,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 52,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        }, {
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 61,
            column: 17
          }
        }],
        line: 55
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 61,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 61,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 59,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 59,
            column: 62
          }
        }, {
          start: {
            line: 59,
            column: 66
          },
          end: {
            line: 59,
            column: 81
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 64,
            column: 26
          },
          end: {
            line: 64,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 51
          },
          end: {
            line: 64,
            column: 64
          }
        }, {
          start: {
            line: 64,
            column: 67
          },
          end: {
            line: 64,
            column: 82
          }
        }],
        line: 64
      },
      "8": {
        loc: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "9": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 15
          }
        }, {
          start: {
            line: 80,
            column: 19
          },
          end: {
            line: 80,
            column: 28
          }
        }],
        line: 80
      },
      "10": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 19
          }
        }, {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 103,
            column: 19
          }
        }, {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 107,
            column: 19
          }
        }, {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 111,
            column: 19
          }
        }, {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 115,
            column: 19
          }
        }],
        line: 95
      },
      "11": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 121,
            column: 45
          }
        }, {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 123,
            column: 48
          }
        }, {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 125,
            column: 56
          }
        }, {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 127,
            column: 39
          }
        }, {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 129,
            column: 40
          }
        }],
        line: 119
      },
      "12": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 135,
            column: 38
          }
        }, {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 137,
            column: 35
          }
        }, {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 139,
            column: 38
          }
        }, {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 141,
            column: 36
          }
        }, {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 143,
            column: 42
          }
        }],
        line: 133
      },
      "13": {
        loc: {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 195,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 167,
            column: 44
          }
        }, {
          start: {
            line: 167,
            column: 62
          },
          end: {
            line: 195,
            column: 14
          }
        }],
        line: 167
      },
      "14": {
        loc: {
          start: {
            line: 237,
            column: 24
          },
          end: {
            line: 248,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 24
          },
          end: {
            line: 237,
            column: 40
          }
        }, {
          start: {
            line: 237,
            column: 58
          },
          end: {
            line: 248,
            column: 26
          }
        }],
        line: 237
      },
      "15": {
        loc: {
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 313,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 252,
            column: 43
          }
        }, {
          start: {
            line: 252,
            column: 47
          },
          end: {
            line: 252,
            column: 63
          }
        }, {
          start: {
            line: 252,
            column: 81
          },
          end: {
            line: 313,
            column: 14
          }
        }],
        line: 252
      },
      "16": {
        loc: {
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 352,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 314,
            column: 38
          }
        }, {
          start: {
            line: 314,
            column: 56
          },
          end: {
            line: 352,
            column: 14
          }
        }],
        line: 314
      },
      "17": {
        loc: {
          start: {
            line: 334,
            column: 48
          },
          end: {
            line: 343,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 48
          },
          end: {
            line: 334,
            column: 59
          }
        }, {
          start: {
            line: 334,
            column: 77
          },
          end: {
            line: 343,
            column: 50
          }
        }],
        line: 334
      },
      "18": {
        loc: {
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 389,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 353,
            column: 41
          }
        }, {
          start: {
            line: 353,
            column: 59
          },
          end: {
            line: 389,
            column: 14
          }
        }],
        line: 353
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0, 0],
      "11": [0, 0, 0, 0, 0],
      "12": [0, 0, 0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/components/import/ImportProgress.tsx"],
      sourcesContent: ["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { CheckCircle, XCircle, AlertTriangle, Loader2, Clock, FileText } from 'lucide-react';\nimport type { ImportProgress as ImportProgressType } from '@/lib/validation/csv-schemas';\n\ninterface ImportProgressProps {\n  importId: string;\n  onComplete?: (progress: ImportProgressType) => void;\n  onError?: (error: string) => void;\n  className?: string;\n}\n\nexport function ImportProgress({\n  importId,\n  onComplete,\n  onError,\n  className = '',\n}: ImportProgressProps) {\n  const [progress, setProgress] = useState<ImportProgressType | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n\n    const fetchProgress = async () => {\n      try {\n        const response = await fetch(`/api/import/csv/${importId}`);\n        \n        if (response.status === 404) {\n          // Import might have completed and been cleaned up\n          const errorData = await response.json().catch(() => ({}));\n          \n          if (errorData.message?.includes('completed successfully')) {\n            // Treat as successful completion\n            const completedProgress: ImportProgressType = {\n              id: importId,\n              userId: 0, // Will be filled by onComplete handler\n              fileName: 'Import completed',\n              importType: 'plant_instances',\n              status: 'completed',\n              progress: 100,\n              totalRows: 0,\n              processedRows: 0,\n              errors: [],\n              conflicts: [],\n              startTime: new Date(),\n              endTime: new Date(),\n            };\n            setProgress(completedProgress);\n            onComplete?.(completedProgress);\n            clearInterval(intervalId);\n            return;\n          } else {\n            throw new Error('Import not found - it may have expired');\n          }\n        }\n        \n        if (!response.ok) {\n          throw new Error('Failed to fetch progress');\n        }\n\n        const data = await response.json();\n        setProgress(data.progress);\n\n        if (data.progress.status === 'completed') {\n          onComplete?.(data.progress);\n          clearInterval(intervalId);\n        } else if (data.progress.status === 'failed') {\n          onError?.(data.progress.errors[0]?.message || 'Import failed');\n          clearInterval(intervalId);\n        }\n      } catch (error) {\n        console.error('Error fetching progress:', error);\n        onError?.(error instanceof Error ? error.message : 'Unknown error');\n        clearInterval(intervalId);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Initial fetch\n    fetchProgress();\n\n    // Poll for updates every 2 seconds\n    intervalId = setInterval(fetchProgress, 2000);\n\n    return () => clearInterval(intervalId);\n  }, [importId, onComplete, onError]);\n\n  if (loading || !progress) {\n    return (\n      <div className={`flex-center p-8 ${className}`}>\n        <div className=\"spinner spinner--primary\" />\n        <span className=\"loading-text\">Loading import status...</span>\n      </div>\n    );\n  }\n\n  const getStatusIcon = () => {\n    switch (progress.status) {\n      case 'pending':\n        return <Clock className=\"w-6 h-6 text-warning\" />;\n      case 'processing':\n        return <div className=\"spinner spinner--primary\" />;\n      case 'completed':\n        return <CheckCircle className=\"w-6 h-6 text-success\" />;\n      case 'failed':\n        return <XCircle className=\"w-6 h-6 text-error\" />;\n      default:\n        return <FileText className=\"w-6 h-6 text-neutral-500\" />;\n    }\n  };\n\n  const getStatusText = () => {\n    switch (progress.status) {\n      case 'pending':\n        return 'Waiting to start...';\n      case 'processing':\n        return 'Processing CSV data...';\n      case 'completed':\n        return 'Import completed successfully!';\n      case 'failed':\n        return 'Import failed';\n      default:\n        return 'Unknown status';\n    }\n  };\n\n  const getStatusColor = () => {\n    switch (progress.status) {\n      case 'pending':\n        return 'text-warning';\n      case 'processing':\n        return 'text-info';\n      case 'completed':\n        return 'text-success';\n      case 'failed':\n        return 'text-error';\n      default:\n        return 'text-neutral-700';\n    }\n  };\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Status Header */}\n      <div className=\"flex-start space-x-3\">\n        {getStatusIcon()}\n        <div>\n          <h3 className=\"text-lg font-semibold text-neutral-900\">\n            Import Progress\n          </h3>\n          <p className={`text-sm ${getStatusColor()}`}>\n            {getStatusText()}\n          </p>\n        </div>\n      </div>\n\n      {/* Progress Bar */}\n      {progress.status === 'processing' && (\n        <div className=\"space-y-2\">\n          <div className=\"flex-between text-sm text-neutral-600\">\n            <span>Processing rows...</span>\n            <span>{progress.processedRows} / {progress.totalRows}</span>\n          </div>\n          <div className=\"w-full bg-neutral-200 rounded-full h-2\">\n            <div\n              className=\"bg-primary-500 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${progress.progress}%` }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* File Info */}\n      <div className=\"card card-body\">\n        <div className=\"grid-responsive text-sm\">\n          <div>\n            <span className=\"font-medium text-neutral-700\">File:</span>\n            <p className=\"text-neutral-600 truncate\">{progress.fileName}</p>\n          </div>\n          <div>\n            <span className=\"font-medium text-neutral-700\">Type:</span>\n            <p className=\"text-neutral-600 capitalize\">\n              {progress.importType.replace('_', ' ')}\n            </p>\n          </div>\n          <div>\n            <span className=\"font-medium text-neutral-700\">Started:</span>\n            <p className=\"text-neutral-600\">\n              {new Date(progress.startTime).toLocaleString()}\n            </p>\n          </div>\n          {progress.endTime && (\n            <div>\n              <span className=\"font-medium text-neutral-700\">Completed:</span>\n              <p className=\"text-neutral-600\">\n                {new Date(progress.endTime).toLocaleString()}\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Results Summary */}\n      {progress.status === 'completed' && progress.summary && (\n        <div className=\"card card--mint card-body\">\n          <h4 className=\"font-medium text-success mb-3\">Import Summary</h4>\n          <div className=\"grid-responsive text-sm\">\n            <div>\n              <span className=\"font-medium text-success\">Total Rows:</span>\n              <p className=\"text-success\">{progress.summary.totalRows}</p>\n            </div>\n            <div>\n              <span className=\"font-medium text-success\">Successful:</span>\n              <p className=\"text-success\">{progress.summary.successfulImports}</p>\n            </div>\n            <div>\n              <span className=\"font-medium text-success\">Errors:</span>\n              <p className=\"text-success\">{progress.summary.errors.length}</p>\n            </div>\n            <div>\n              <span className=\"font-medium text-success\">Conflicts:</span>\n              <p className=\"text-success\">{progress.summary.conflicts.length}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Errors */}\n      {progress.errors.length > 0 && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n          <div className=\"flex items-start space-x-2\">\n            <XCircle className=\"w-5 h-5 text-red-500 flex-shrink-0 mt-0.5\" />\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium text-red-900 mb-2\">Errors:</h4>\n              <div className=\"space-y-1 max-h-32 overflow-y-auto\">\n                {progress.errors.map((error, index) => (\n                  <div key={index} className=\"text-sm text-red-700\">\n                    {error.field && (\n                      <span className=\"font-medium\">Row {error.rowIndex + 1}, {error.field}: </span>\n                    )}\n                    {error.message}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Conflicts */}\n      {progress.conflicts.length > 0 && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n          <div className=\"flex items-start space-x-2\">\n            <AlertTriangle className=\"w-5 h-5 text-yellow-500 flex-shrink-0 mt-0.5\" />\n            <div className=\"flex-1\">\n              <h4 className=\"font-medium text-yellow-900 mb-2\">\n                Conflicts Require Resolution:\n              </h4>\n              <div className=\"space-y-1 max-h-32 overflow-y-auto\">\n                {progress.conflicts.map((conflict, index) => (\n                  <div key={index} className=\"text-sm text-yellow-700\">\n                    <span className=\"font-medium\">Row {conflict.rowIndex + 1}: </span>\n                    {conflict.message}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],
      names: ["ImportProgress", "importId", "onComplete", "onError", "className", "progress", "setProgress", "useState", "loading", "setLoading", "useEffect", "intervalId", "fetchProgress", "response", "fetch", "status", "errorData", "json", "catch", "message", "includes", "completedProgress", "id", "userId", "fileName", "importType", "totalRows", "processedRows", "errors", "conflicts", "startTime", "Date", "endTime", "clearInterval", "Error", "ok", "data", "error", "console", "setInterval", "div", "span", "getStatusIcon", "Clock", "CheckCircle", "XCircle", "FileText", "getStatusText", "getStatusColor", "h3", "p", "style", "width", "replace", "toLocaleString", "summary", "h4", "successfulImports", "length", "map", "index", "field", "rowIndex", "AlertTriangle", "conflict"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1761b99474280098cee69083285371d9f847a25c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ckpxtywm0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ckpxtywm0();
cov_ckpxtywm0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ckpxtywm0().s[1]++;
Object.defineProperty(exports, "ImportProgress", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_ckpxtywm0().f[0]++;
    cov_ckpxtywm0().s[2]++;
    return ImportProgress;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_ckpxtywm0().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_ckpxtywm0().s[4]++, require("react"));
const _lucidereact =
/* istanbul ignore next */
(cov_ckpxtywm0().s[5]++, require("lucide-react"));
function ImportProgress({
  importId,
  onComplete,
  onError,
  className =
  /* istanbul ignore next */
  (cov_ckpxtywm0().b[0][0]++, '')
}) {
  /* istanbul ignore next */
  cov_ckpxtywm0().f[1]++;
  const [progress, setProgress] =
  /* istanbul ignore next */
  (cov_ckpxtywm0().s[6]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_ckpxtywm0().s[7]++, (0, _react.useState)(true));
  /* istanbul ignore next */
  cov_ckpxtywm0().s[8]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_ckpxtywm0().f[2]++;
    let intervalId;
    /* istanbul ignore next */
    cov_ckpxtywm0().s[9]++;
    const fetchProgress = async () => {
      /* istanbul ignore next */
      cov_ckpxtywm0().f[3]++;
      cov_ckpxtywm0().s[10]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_ckpxtywm0().s[11]++, await fetch(`/api/import/csv/${importId}`));
        /* istanbul ignore next */
        cov_ckpxtywm0().s[12]++;
        if (response.status === 404) {
          /* istanbul ignore next */
          cov_ckpxtywm0().b[1][0]++;
          // Import might have completed and been cleaned up
          const errorData =
          /* istanbul ignore next */
          (cov_ckpxtywm0().s[13]++, await response.json().catch(() => {
            /* istanbul ignore next */
            cov_ckpxtywm0().f[4]++;
            cov_ckpxtywm0().s[14]++;
            return {};
          }));
          /* istanbul ignore next */
          cov_ckpxtywm0().s[15]++;
          if (errorData.message?.includes('completed successfully')) {
            /* istanbul ignore next */
            cov_ckpxtywm0().b[2][0]++;
            // Treat as successful completion
            const completedProgress =
            /* istanbul ignore next */
            (cov_ckpxtywm0().s[16]++, {
              id: importId,
              userId: 0,
              fileName: 'Import completed',
              importType: 'plant_instances',
              status: 'completed',
              progress: 100,
              totalRows: 0,
              processedRows: 0,
              errors: [],
              conflicts: [],
              startTime: new Date(),
              endTime: new Date()
            });
            /* istanbul ignore next */
            cov_ckpxtywm0().s[17]++;
            setProgress(completedProgress);
            /* istanbul ignore next */
            cov_ckpxtywm0().s[18]++;
            onComplete?.(completedProgress);
            /* istanbul ignore next */
            cov_ckpxtywm0().s[19]++;
            clearInterval(intervalId);
            /* istanbul ignore next */
            cov_ckpxtywm0().s[20]++;
            return;
          } else {
            /* istanbul ignore next */
            cov_ckpxtywm0().b[2][1]++;
            cov_ckpxtywm0().s[21]++;
            throw new Error('Import not found - it may have expired');
          }
        } else
        /* istanbul ignore next */
        {
          cov_ckpxtywm0().b[1][1]++;
        }
        cov_ckpxtywm0().s[22]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_ckpxtywm0().b[3][0]++;
          cov_ckpxtywm0().s[23]++;
          throw new Error('Failed to fetch progress');
        } else
        /* istanbul ignore next */
        {
          cov_ckpxtywm0().b[3][1]++;
        }
        const data =
        /* istanbul ignore next */
        (cov_ckpxtywm0().s[24]++, await response.json());
        /* istanbul ignore next */
        cov_ckpxtywm0().s[25]++;
        setProgress(data.progress);
        /* istanbul ignore next */
        cov_ckpxtywm0().s[26]++;
        if (data.progress.status === 'completed') {
          /* istanbul ignore next */
          cov_ckpxtywm0().b[4][0]++;
          cov_ckpxtywm0().s[27]++;
          onComplete?.(data.progress);
          /* istanbul ignore next */
          cov_ckpxtywm0().s[28]++;
          clearInterval(intervalId);
        } else {
          /* istanbul ignore next */
          cov_ckpxtywm0().b[4][1]++;
          cov_ckpxtywm0().s[29]++;
          if (data.progress.status === 'failed') {
            /* istanbul ignore next */
            cov_ckpxtywm0().b[5][0]++;
            cov_ckpxtywm0().s[30]++;
            onError?.(
            /* istanbul ignore next */
            (cov_ckpxtywm0().b[6][0]++, data.progress.errors[0]?.message) ||
            /* istanbul ignore next */
            (cov_ckpxtywm0().b[6][1]++, 'Import failed'));
            /* istanbul ignore next */
            cov_ckpxtywm0().s[31]++;
            clearInterval(intervalId);
          } else
          /* istanbul ignore next */
          {
            cov_ckpxtywm0().b[5][1]++;
          }
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_ckpxtywm0().s[32]++;
        console.error('Error fetching progress:', error);
        /* istanbul ignore next */
        cov_ckpxtywm0().s[33]++;
        onError?.(error instanceof Error ?
        /* istanbul ignore next */
        (cov_ckpxtywm0().b[7][0]++, error.message) :
        /* istanbul ignore next */
        (cov_ckpxtywm0().b[7][1]++, 'Unknown error'));
        /* istanbul ignore next */
        cov_ckpxtywm0().s[34]++;
        clearInterval(intervalId);
      } finally {
        /* istanbul ignore next */
        cov_ckpxtywm0().s[35]++;
        setLoading(false);
      }
    };
    // Initial fetch
    /* istanbul ignore next */
    cov_ckpxtywm0().s[36]++;
    fetchProgress();
    // Poll for updates every 2 seconds
    /* istanbul ignore next */
    cov_ckpxtywm0().s[37]++;
    intervalId = setInterval(fetchProgress, 2000);
    /* istanbul ignore next */
    cov_ckpxtywm0().s[38]++;
    return () => {
      /* istanbul ignore next */
      cov_ckpxtywm0().f[5]++;
      cov_ckpxtywm0().s[39]++;
      return clearInterval(intervalId);
    };
  }, [importId, onComplete, onError]);
  /* istanbul ignore next */
  cov_ckpxtywm0().s[40]++;
  if (
  /* istanbul ignore next */
  (cov_ckpxtywm0().b[9][0]++, loading) ||
  /* istanbul ignore next */
  (cov_ckpxtywm0().b[9][1]++, !progress)) {
    /* istanbul ignore next */
    cov_ckpxtywm0().b[8][0]++;
    cov_ckpxtywm0().s[41]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: `flex-center p-8 ${className}`,
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "spinner spinner--primary"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
        className: "loading-text",
        children: "Loading import status..."
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_ckpxtywm0().b[8][1]++;
  }
  cov_ckpxtywm0().s[42]++;
  const getStatusIcon = () => {
    /* istanbul ignore next */
    cov_ckpxtywm0().f[6]++;
    cov_ckpxtywm0().s[43]++;
    switch (progress.status) {
      case 'pending':
        /* istanbul ignore next */
        cov_ckpxtywm0().b[10][0]++;
        cov_ckpxtywm0().s[44]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
          className: "w-6 h-6 text-warning"
        });
      case 'processing':
        /* istanbul ignore next */
        cov_ckpxtywm0().b[10][1]++;
        cov_ckpxtywm0().s[45]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "spinner spinner--primary"
        });
      case 'completed':
        /* istanbul ignore next */
        cov_ckpxtywm0().b[10][2]++;
        cov_ckpxtywm0().s[46]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
          className: "w-6 h-6 text-success"
        });
      case 'failed':
        /* istanbul ignore next */
        cov_ckpxtywm0().b[10][3]++;
        cov_ckpxtywm0().s[47]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.XCircle, {
          className: "w-6 h-6 text-error"
        });
      default:
        /* istanbul ignore next */
        cov_ckpxtywm0().b[10][4]++;
        cov_ckpxtywm0().s[48]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.FileText, {
          className: "w-6 h-6 text-neutral-500"
        });
    }
  };
  /* istanbul ignore next */
  cov_ckpxtywm0().s[49]++;
  const getStatusText = () => {
    /* istanbul ignore next */
    cov_ckpxtywm0().f[7]++;
    cov_ckpxtywm0().s[50]++;
    switch (progress.status) {
      case 'pending':
        /* istanbul ignore next */
        cov_ckpxtywm0().b[11][0]++;
        cov_ckpxtywm0().s[51]++;
        return 'Waiting to start...';
      case 'processing':
        /* istanbul ignore next */
        cov_ckpxtywm0().b[11][1]++;
        cov_ckpxtywm0().s[52]++;
        return 'Processing CSV data...';
      case 'completed':
        /* istanbul ignore next */
        cov_ckpxtywm0().b[11][2]++;
        cov_ckpxtywm0().s[53]++;
        return 'Import completed successfully!';
      case 'failed':
        /* istanbul ignore next */
        cov_ckpxtywm0().b[11][3]++;
        cov_ckpxtywm0().s[54]++;
        return 'Import failed';
      default:
        /* istanbul ignore next */
        cov_ckpxtywm0().b[11][4]++;
        cov_ckpxtywm0().s[55]++;
        return 'Unknown status';
    }
  };
  /* istanbul ignore next */
  cov_ckpxtywm0().s[56]++;
  const getStatusColor = () => {
    /* istanbul ignore next */
    cov_ckpxtywm0().f[8]++;
    cov_ckpxtywm0().s[57]++;
    switch (progress.status) {
      case 'pending':
        /* istanbul ignore next */
        cov_ckpxtywm0().b[12][0]++;
        cov_ckpxtywm0().s[58]++;
        return 'text-warning';
      case 'processing':
        /* istanbul ignore next */
        cov_ckpxtywm0().b[12][1]++;
        cov_ckpxtywm0().s[59]++;
        return 'text-info';
      case 'completed':
        /* istanbul ignore next */
        cov_ckpxtywm0().b[12][2]++;
        cov_ckpxtywm0().s[60]++;
        return 'text-success';
      case 'failed':
        /* istanbul ignore next */
        cov_ckpxtywm0().b[12][3]++;
        cov_ckpxtywm0().s[61]++;
        return 'text-error';
      default:
        /* istanbul ignore next */
        cov_ckpxtywm0().b[12][4]++;
        cov_ckpxtywm0().s[62]++;
        return 'text-neutral-700';
    }
  };
  /* istanbul ignore next */
  cov_ckpxtywm0().s[63]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: `space-y-6 ${className}`,
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex-start space-x-3",
      children: [getStatusIcon(), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-semibold text-neutral-900",
          children: "Import Progress"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: `text-sm ${getStatusColor()}`,
          children: getStatusText()
        })]
      })]
    }),
    /* istanbul ignore next */
    (cov_ckpxtywm0().b[13][0]++, progress.status === 'processing') &&
    /* istanbul ignore next */
    (cov_ckpxtywm0().b[13][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "space-y-2",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex-between text-sm text-neutral-600",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          children: "Processing rows..."
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          children: [progress.processedRows, " / ", progress.totalRows]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "w-full bg-neutral-200 rounded-full h-2",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "bg-primary-500 h-2 rounded-full transition-all duration-300",
          style: {
            width: `${progress.progress}%`
          }
        })
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "card card-body",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid-responsive text-sm",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "font-medium text-neutral-700",
            children: "File:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-neutral-600 truncate",
            children: progress.fileName
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "font-medium text-neutral-700",
            children: "Type:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-neutral-600 capitalize",
            children: progress.importType.replace('_', ' ')
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "font-medium text-neutral-700",
            children: "Started:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-neutral-600",
            children: new Date(progress.startTime).toLocaleString()
          })]
        }),
        /* istanbul ignore next */
        (cov_ckpxtywm0().b[14][0]++, progress.endTime) &&
        /* istanbul ignore next */
        (cov_ckpxtywm0().b[14][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "font-medium text-neutral-700",
            children: "Completed:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-neutral-600",
            children: new Date(progress.endTime).toLocaleString()
          })]
        }))]
      })
    }),
    /* istanbul ignore next */
    (cov_ckpxtywm0().b[15][0]++, progress.status === 'completed') &&
    /* istanbul ignore next */
    (cov_ckpxtywm0().b[15][1]++, progress.summary) &&
    /* istanbul ignore next */
    (cov_ckpxtywm0().b[15][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "card card--mint card-body",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
        className: "font-medium text-success mb-3",
        children: "Import Summary"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid-responsive text-sm",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "font-medium text-success",
            children: "Total Rows:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-success",
            children: progress.summary.totalRows
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "font-medium text-success",
            children: "Successful:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-success",
            children: progress.summary.successfulImports
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "font-medium text-success",
            children: "Errors:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-success",
            children: progress.summary.errors.length
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "font-medium text-success",
            children: "Conflicts:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-success",
            children: progress.summary.conflicts.length
          })]
        })]
      })]
    })),
    /* istanbul ignore next */
    (cov_ckpxtywm0().b[16][0]++, progress.errors.length > 0) &&
    /* istanbul ignore next */
    (cov_ckpxtywm0().b[16][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-red-50 border border-red-200 rounded-lg p-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-start space-x-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.XCircle, {
          className: "w-5 h-5 text-red-500 flex-shrink-0 mt-0.5"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex-1",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
            className: "font-medium text-red-900 mb-2",
            children: "Errors:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "space-y-1 max-h-32 overflow-y-auto",
            children: progress.errors.map((error, index) => {
              /* istanbul ignore next */
              cov_ckpxtywm0().f[9]++;
              cov_ckpxtywm0().s[64]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-sm text-red-700",
                children: [
                /* istanbul ignore next */
                (cov_ckpxtywm0().b[17][0]++, error.field) &&
                /* istanbul ignore next */
                (cov_ckpxtywm0().b[17][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "font-medium",
                  children: ["Row ", error.rowIndex + 1, ", ", error.field, ": "]
                })), error.message]
              }, index);
            })
          })]
        })]
      })
    })),
    /* istanbul ignore next */
    (cov_ckpxtywm0().b[18][0]++, progress.conflicts.length > 0) &&
    /* istanbul ignore next */
    (cov_ckpxtywm0().b[18][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-yellow-50 border border-yellow-200 rounded-lg p-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-start space-x-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
          className: "w-5 h-5 text-yellow-500 flex-shrink-0 mt-0.5"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex-1",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
            className: "font-medium text-yellow-900 mb-2",
            children: "Conflicts Require Resolution:"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "space-y-1 max-h-32 overflow-y-auto",
            children: progress.conflicts.map((conflict, index) => {
              /* istanbul ignore next */
              cov_ckpxtywm0().f[10]++;
              cov_ckpxtywm0().s[65]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-sm text-yellow-700",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "font-medium",
                  children: ["Row ", conflict.rowIndex + 1, ": "]
                }), conflict.message]
              }, index);
            })
          })]
        })]
      })
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
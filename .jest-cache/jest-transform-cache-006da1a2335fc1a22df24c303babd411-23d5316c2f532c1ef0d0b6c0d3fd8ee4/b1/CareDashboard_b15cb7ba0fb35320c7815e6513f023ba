e69293247a6ccab02281a13f71a72766
'use client';
"use strict";

/* istanbul ignore next */
function cov_1f6p9e24bh() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/components/care/CareDashboard.tsx";
  var hash = "af3109a161875db48a98d5c1076a0ca3f29d5e64";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/components/care/CareDashboard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "6": {
        start: {
          line: 15,
          column: 36
        },
        end: {
          line: 15,
          column: 87
        }
      },
      "7": {
        start: {
          line: 16,
          column: 38
        },
        end: {
          line: 16,
          column: 91
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 6
        }
      },
      "9": {
        start: {
          line: 23,
          column: 42
        },
        end: {
          line: 23,
          column: 73
        }
      },
      "10": {
        start: {
          line: 24,
          column: 52
        },
        end: {
          line: 24,
          column: 78
        }
      },
      "11": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 57
        }
      },
      "12": {
        start: {
          line: 27,
          column: 63
        },
        end: {
          line: 49,
          column: 6
        }
      },
      "13": {
        start: {
          line: 33,
          column: 29
        },
        end: {
          line: 39,
          column: 14
        }
      },
      "14": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "15": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 65
        }
      },
      "16": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 35
        }
      },
      "17": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "18": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "19": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 49
        }
      },
      "20": {
        start: {
          line: 53,
          column: 29
        },
        end: {
          line: 64,
          column: 14
        }
      },
      "21": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "22": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 54
        }
      },
      "23": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 75,
          column: 15
        }
      },
      "24": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 82,
          column: 15
        }
      },
      "25": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 88,
          column: 15
        }
      },
      "26": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 60
        }
      },
      "27": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 38
        }
      },
      "28": {
        start: {
          line: 96,
          column: 32
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "29": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 35
        }
      },
      "30": {
        start: {
          line: 97,
          column: 28
        },
        end: {
          line: 97,
          column: 35
        }
      },
      "31": {
        start: {
          line: 99,
          column: 34
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "32": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "33": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 70
        }
      },
      "34": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 19
        }
      },
      "35": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "36": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 36
        }
      },
      "37": {
        start: {
          line: 111,
          column: 29
        },
        end: {
          line: 122,
          column: 19
        }
      },
      "38": {
        start: {
          line: 111,
          column: 73
        },
        end: {
          line: 122,
          column: 18
        }
      },
      "39": {
        start: {
          line: 123,
          column: 28
        },
        end: {
          line: 123,
          column: 62
        }
      },
      "40": {
        start: {
          line: 124,
          column: 33
        },
        end: {
          line: 124,
          column: 85
        }
      },
      "41": {
        start: {
          line: 124,
          column: 53
        },
        end: {
          line: 124,
          column: 77
        }
      },
      "42": {
        start: {
          line: 125,
          column: 33
        },
        end: {
          line: 125,
          column: 62
        }
      },
      "43": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "44": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 143
        }
      },
      "45": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 135,
          column: 19
        }
      },
      "46": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 142,
          column: 19
        }
      },
      "47": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 148,
          column: 19
        }
      },
      "48": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 69
        }
      },
      "49": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 56
        }
      },
      "50": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 38
        }
      },
      "51": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "52": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 198,
          column: 11
        }
      },
      "53": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "54": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 228,
          column: 11
        }
      },
      "55": {
        start: {
          line: 217,
          column: 33
        },
        end: {
          line: 222,
          column: 26
        }
      },
      "56": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "57": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 20
        }
      },
      "58": {
        start: {
          line: 233,
          column: 17
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "59": {
        start: {
          line: 259,
          column: 22
        },
        end: {
          line: 259,
          column: 62
        }
      },
      "60": {
        start: {
          line: 259,
          column: 39
        },
        end: {
          line: 259,
          column: 61
        }
      },
      "61": {
        start: {
          line: 260,
          column: 25
        },
        end: {
          line: 260,
          column: 48
        }
      },
      "62": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 397,
          column: 7
        }
      },
      "63": {
        start: {
          line: 283,
          column: 38
        },
        end: {
          line: 283,
          column: 86
        }
      },
      "64": {
        start: {
          line: 284,
          column: 46
        },
        end: {
          line: 288,
          column: 32
        }
      },
      "65": {
        start: {
          line: 289,
          column: 20
        },
        end: {
          line: 336,
          column: 34
        }
      },
      "66": {
        start: {
          line: 290,
          column: 37
        },
        end: {
          line: 290,
          column: 73
        }
      },
      "67": {
        start: {
          line: 343,
          column: 64
        },
        end: {
          line: 368,
          column: 38
        }
      },
      "68": {
        start: {
          line: 344,
          column: 45
        },
        end: {
          line: 344,
          column: 67
        }
      },
      "69": {
        start: {
          line: 388,
          column: 69
        },
        end: {
          line: 392,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "CareDashboard",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 22
          }
        },
        loc: {
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 398,
            column: 1
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 18
          }
        },
        loc: {
          start: {
            line: 32,
            column: 27
          },
          end: {
            line: 44,
            column: 9
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 50,
            column: 29
          }
        },
        loc: {
          start: {
            line: 50,
            column: 63
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 50
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 96,
            column: 32
          },
          end: {
            line: 96,
            column: 33
          }
        },
        loc: {
          start: {
            line: 96,
            column: 50
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 96
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 111,
            column: 64
          },
          end: {
            line: 111,
            column: 65
          }
        },
        loc: {
          start: {
            line: 111,
            column: 73
          },
          end: {
            line: 122,
            column: 18
          }
        },
        line: 111
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 124,
            column: 48
          },
          end: {
            line: 124,
            column: 49
          }
        },
        loc: {
          start: {
            line: 124,
            column: 53
          },
          end: {
            line: 124,
            column: 77
          }
        },
        line: 124
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 217,
            column: 29
          },
          end: {
            line: 217,
            column: 30
          }
        },
        loc: {
          start: {
            line: 217,
            column: 33
          },
          end: {
            line: 222,
            column: 26
          }
        },
        line: 217
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 259,
            column: 32
          },
          end: {
            line: 259,
            column: 33
          }
        },
        loc: {
          start: {
            line: 259,
            column: 39
          },
          end: {
            line: 259,
            column: 61
          }
        },
        line: 259
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 282,
            column: 57
          },
          end: {
            line: 282,
            column: 58
          }
        },
        loc: {
          start: {
            line: 282,
            column: 67
          },
          end: {
            line: 337,
            column: 17
          }
        },
        line: 282
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 290,
            column: 33
          },
          end: {
            line: 290,
            column: 34
          }
        },
        loc: {
          start: {
            line: 290,
            column: 37
          },
          end: {
            line: 290,
            column: 73
          }
        },
        line: 290
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 343,
            column: 43
          },
          end: {
            line: 343,
            column: 44
          }
        },
        loc: {
          start: {
            line: 343,
            column: 64
          },
          end: {
            line: 368,
            column: 38
          }
        },
        line: 343
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 344,
            column: 41
          },
          end: {
            line: 344,
            column: 42
          }
        },
        loc: {
          start: {
            line: 344,
            column: 45
          },
          end: {
            line: 344,
            column: 67
          }
        },
        line: 344
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 388,
            column: 46
          },
          end: {
            line: 388,
            column: 47
          }
        },
        loc: {
          start: {
            line: 388,
            column: 69
          },
          end: {
            line: 392,
            column: 40
          }
        },
        line: 388
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 18,
            column: 38
          }
        }, {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 20,
            column: 5
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 14
          }
        }, {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 32
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "4": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 97,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 97,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "5": {
        loc: {
          start: {
            line: 102,
            column: 15
          },
          end: {
            line: 102,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 43
          },
          end: {
            line: 102,
            column: 64
          }
        }, {
          start: {
            line: 102,
            column: 67
          },
          end: {
            line: 102,
            column: 69
          }
        }],
        line: 102
      },
      "6": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "7": {
        loc: {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: 149,
            column: 19
          },
          end: {
            line: 151,
            column: 13
          }
        }],
        line: 126
      },
      "8": {
        loc: {
          start: {
            line: 128,
            column: 89
          },
          end: {
            line: 128,
            column: 139
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 108
          },
          end: {
            line: 128,
            column: 134
          }
        }, {
          start: {
            line: 128,
            column: 137
          },
          end: {
            line: 128,
            column: 139
          }
        }],
        line: 128
      },
      "9": {
        loc: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "10": {
        loc: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "11": {
        loc: {
          start: {
            line: 214,
            column: 30
          },
          end: {
            line: 214,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 55
          },
          end: {
            line: 214,
            column: 68
          }
        }, {
          start: {
            line: 214,
            column: 71
          },
          end: {
            line: 214,
            column: 97
          }
        }],
        line: 214
      },
      "12": {
        loc: {
          start: {
            line: 224,
            column: 130
          },
          end: {
            line: 224,
            column: 176
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 140
          },
          end: {
            line: 224,
            column: 171
          }
        }, {
          start: {
            line: 224,
            column: 174
          },
          end: {
            line: 224,
            column: 176
          }
        }],
        line: 224
      },
      "13": {
        loc: {
          start: {
            line: 225,
            column: 30
          },
          end: {
            line: 225,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 225,
            column: 40
          },
          end: {
            line: 225,
            column: 52
          }
        }, {
          start: {
            line: 225,
            column: 55
          },
          end: {
            line: 225,
            column: 66
          }
        }],
        line: 225
      },
      "14": {
        loc: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "15": {
        loc: {
          start: {
            line: 260,
            column: 25
          },
          end: {
            line: 260,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 25
          },
          end: {
            line: 260,
            column: 42
          }
        }, {
          start: {
            line: 260,
            column: 46
          },
          end: {
            line: 260,
            column: 48
          }
        }],
        line: 260
      },
      "16": {
        loc: {
          start: {
            line: 284,
            column: 46
          },
          end: {
            line: 288,
            column: 32
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 284,
            column: 62
          },
          end: {
            line: 288,
            column: 28
          }
        }, {
          start: {
            line: 288,
            column: 31
          },
          end: {
            line: 288,
            column: 32
          }
        }],
        line: 284
      },
      "17": {
        loc: {
          start: {
            line: 287,
            column: 27
          },
          end: {
            line: 287,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 287,
            column: 62
          },
          end: {
            line: 287,
            column: 83
          }
        }, {
          start: {
            line: 287,
            column: 86
          },
          end: {
            line: 287,
            column: 88
          }
        }],
        line: 287
      },
      "18": {
        loc: {
          start: {
            line: 291,
            column: 130
          },
          end: {
            line: 291,
            column: 261
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 291,
            column: 214
          },
          end: {
            line: 291,
            column: 226
          }
        }, {
          start: {
            line: 291,
            column: 229
          },
          end: {
            line: 291,
            column: 261
          }
        }],
        line: 291
      },
      "19": {
        loc: {
          start: {
            line: 291,
            column: 130
          },
          end: {
            line: 291,
            column: 211
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 130
          },
          end: {
            line: 291,
            column: 139
          }
        }, {
          start: {
            line: 291,
            column: 143
          },
          end: {
            line: 291,
            column: 164
          }
        }, {
          start: {
            line: 291,
            column: 168
          },
          end: {
            line: 291,
            column: 184
          }
        }, {
          start: {
            line: 291,
            column: 188
          },
          end: {
            line: 291,
            column: 211
          }
        }],
        line: 291
      },
      "20": {
        loc: {
          start: {
            line: 292,
            column: 34
          },
          end: {
            line: 292,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 34
          },
          end: {
            line: 292,
            column: 51
          }
        }, {
          start: {
            line: 292,
            column: 55
          },
          end: {
            line: 292,
            column: 65
          }
        }, {
          start: {
            line: 292,
            column: 69
          },
          end: {
            line: 292,
            column: 92
          }
        }, {
          start: {
            line: 292,
            column: 96
          },
          end: {
            line: 292,
            column: 119
          }
        }, {
          start: {
            line: 292,
            column: 123
          },
          end: {
            line: 292,
            column: 130
          }
        }],
        line: 292
      },
      "21": {
        loc: {
          start: {
            line: 293,
            column: 31
          },
          end: {
            line: 293,
            column: 296
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 41
          },
          end: {
            line: 293,
            column: 53
          }
        }, {
          start: {
            line: 293,
            column: 56
          },
          end: {
            line: 293,
            column: 296
          }
        }],
        line: 293
      },
      "22": {
        loc: {
          start: {
            line: 293,
            column: 56
          },
          end: {
            line: 293,
            column: 296
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 82
          },
          end: {
            line: 293,
            column: 119
          }
        }, {
          start: {
            line: 293,
            column: 122
          },
          end: {
            line: 293,
            column: 296
          }
        }],
        line: 293
      },
      "23": {
        loc: {
          start: {
            line: 293,
            column: 122
          },
          end: {
            line: 293,
            column: 296
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 135
          },
          end: {
            line: 293,
            column: 173
          }
        }, {
          start: {
            line: 293,
            column: 176
          },
          end: {
            line: 293,
            column: 296
          }
        }],
        line: 293
      },
      "24": {
        loc: {
          start: {
            line: 293,
            column: 176
          },
          end: {
            line: 293,
            column: 296
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 293,
            column: 202
          },
          end: {
            line: 293,
            column: 238
          }
        }, {
          start: {
            line: 293,
            column: 241
          },
          end: {
            line: 293,
            column: 296
          }
        }],
        line: 293
      },
      "25": {
        loc: {
          start: {
            line: 294,
            column: 34
          },
          end: {
            line: 335,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 294,
            column: 74
          },
          end: {
            line: 324,
            column: 26
          }
        }, {
          start: {
            line: 324,
            column: 43
          },
          end: {
            line: 335,
            column: 26
          }
        }],
        line: 294
      },
      "26": {
        loc: {
          start: {
            line: 348,
            column: 18
          },
          end: {
            line: 348,
            column: 160
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 348,
            column: 43
          },
          end: {
            line: 348,
            column: 104
          }
        }, {
          start: {
            line: 348,
            column: 107
          },
          end: {
            line: 348,
            column: 160
          }
        }],
        line: 348
      },
      "27": {
        loc: {
          start: {
            line: 349,
            column: 18
          },
          end: {
            line: 349,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 349,
            column: 28
          },
          end: {
            line: 349,
            column: 59
          }
        }, {
          start: {
            line: 349,
            column: 62
          },
          end: {
            line: 349,
            column: 64
          }
        }],
        line: 349
      },
      "28": {
        loc: {
          start: {
            line: 354,
            column: 50
          },
          end: {
            line: 354,
            column: 153
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 354,
            column: 73
          },
          end: {
            line: 354,
            column: 82
          }
        }, {
          start: {
            line: 354,
            column: 85
          },
          end: {
            line: 354,
            column: 153
          }
        }],
        line: 354
      },
      "29": {
        loc: {
          start: {
            line: 354,
            column: 85
          },
          end: {
            line: 354,
            column: 153
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 354,
            column: 106
          },
          end: {
            line: 354,
            column: 113
          }
        }, {
          start: {
            line: 354,
            column: 116
          },
          end: {
            line: 354,
            column: 153
          }
        }],
        line: 354
      },
      "30": {
        loc: {
          start: {
            line: 354,
            column: 116
          },
          end: {
            line: 354,
            column: 153
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 354,
            column: 136
          },
          end: {
            line: 354,
            column: 142
          }
        }, {
          start: {
            line: 354,
            column: 145
          },
          end: {
            line: 354,
            column: 153
          }
        }],
        line: 354
      },
      "31": {
        loc: {
          start: {
            line: 360,
            column: 36
          },
          end: {
            line: 366,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 360,
            column: 36
          },
          end: {
            line: 360,
            column: 49
          }
        }, {
          start: {
            line: 360,
            column: 67
          },
          end: {
            line: 366,
            column: 38
          }
        }],
        line: 360
      },
      "32": {
        loc: {
          start: {
            line: 363,
            column: 20
          },
          end: {
            line: 363,
            column: 262
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 363,
            column: 45
          },
          end: {
            line: 363,
            column: 232
          }
        }, {
          start: {
            line: 363,
            column: 235
          },
          end: {
            line: 363,
            column: 262
          }
        }],
        line: 363
      },
      "33": {
        loc: {
          start: {
            line: 363,
            column: 45
          },
          end: {
            line: 363,
            column: 232
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 363,
            column: 68
          },
          end: {
            line: 363,
            column: 93
          }
        }, {
          start: {
            line: 363,
            column: 96
          },
          end: {
            line: 363,
            column: 232
          }
        }],
        line: 363
      },
      "34": {
        loc: {
          start: {
            line: 363,
            column: 96
          },
          end: {
            line: 363,
            column: 232
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 363,
            column: 117
          },
          end: {
            line: 363,
            column: 146
          }
        }, {
          start: {
            line: 363,
            column: 149
          },
          end: {
            line: 363,
            column: 232
          }
        }],
        line: 363
      },
      "35": {
        loc: {
          start: {
            line: 363,
            column: 149
          },
          end: {
            line: 363,
            column: 232
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 363,
            column: 169
          },
          end: {
            line: 363,
            column: 200
          }
        }, {
          start: {
            line: 363,
            column: 203
          },
          end: {
            line: 363,
            column: 232
          }
        }],
        line: 363
      },
      "36": {
        loc: {
          start: {
            line: 372,
            column: 34
          },
          end: {
            line: 392,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 372,
            column: 76
          },
          end: {
            line: 388,
            column: 26
          }
        }, {
          start: {
            line: 388,
            column: 29
          },
          end: {
            line: 392,
            column: 41
          }
        }],
        line: 372
      },
      "37": {
        loc: {
          start: {
            line: 377,
            column: 46
          },
          end: {
            line: 377,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 377,
            column: 74
          },
          end: {
            line: 377,
            column: 77
          }
        }, {
          start: {
            line: 377,
            column: 80
          },
          end: {
            line: 377,
            column: 148
          }
        }],
        line: 377
      },
      "38": {
        loc: {
          start: {
            line: 377,
            column: 80
          },
          end: {
            line: 377,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 377,
            column: 106
          },
          end: {
            line: 377,
            column: 110
          }
        }, {
          start: {
            line: 377,
            column: 113
          },
          end: {
            line: 377,
            column: 148
          }
        }],
        line: 377
      },
      "39": {
        loc: {
          start: {
            line: 377,
            column: 113
          },
          end: {
            line: 377,
            column: 148
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 377,
            column: 138
          },
          end: {
            line: 377,
            column: 141
          }
        }, {
          start: {
            line: 377,
            column: 144
          },
          end: {
            line: 377,
            column: 148
          }
        }],
        line: 377
      },
      "40": {
        loc: {
          start: {
            line: 381,
            column: 46
          },
          end: {
            line: 381,
            column: 210
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 381,
            column: 74
          },
          end: {
            line: 381,
            column: 90
          }
        }, {
          start: {
            line: 381,
            column: 93
          },
          end: {
            line: 381,
            column: 210
          }
        }],
        line: 381
      },
      "41": {
        loc: {
          start: {
            line: 381,
            column: 93
          },
          end: {
            line: 381,
            column: 210
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 381,
            column: 119
          },
          end: {
            line: 381,
            column: 138
          }
        }, {
          start: {
            line: 381,
            column: 141
          },
          end: {
            line: 381,
            column: 210
          }
        }],
        line: 381
      },
      "42": {
        loc: {
          start: {
            line: 381,
            column: 141
          },
          end: {
            line: 381,
            column: 210
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 381,
            column: 166
          },
          end: {
            line: 381,
            column: 184
          }
        }, {
          start: {
            line: 381,
            column: 187
          },
          end: {
            line: 381,
            column: 210
          }
        }],
        line: 381
      },
      "43": {
        loc: {
          start: {
            line: 385,
            column: 46
          },
          end: {
            line: 385,
            column: 301
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 385,
            column: 74
          },
          end: {
            line: 385,
            column: 118
          }
        }, {
          start: {
            line: 385,
            column: 121
          },
          end: {
            line: 385,
            column: 301
          }
        }],
        line: 385
      },
      "44": {
        loc: {
          start: {
            line: 385,
            column: 121
          },
          end: {
            line: 385,
            column: 301
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 385,
            column: 147
          },
          end: {
            line: 385,
            column: 188
          }
        }, {
          start: {
            line: 385,
            column: 191
          },
          end: {
            line: 385,
            column: 301
          }
        }],
        line: 385
      },
      "45": {
        loc: {
          start: {
            line: 385,
            column: 191
          },
          end: {
            line: 385,
            column: 301
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 385,
            column: 216
          },
          end: {
            line: 385,
            column: 249
          }
        }, {
          start: {
            line: 385,
            column: 252
          },
          end: {
            line: 385,
            column: 301
          }
        }],
        line: 385
      },
      "46": {
        loc: {
          start: {
            line: 391,
            column: 45
          },
          end: {
            line: 391,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 391,
            column: 45
          },
          end: {
            line: 391,
            column: 70
          }
        }, {
          start: {
            line: 391,
            column: 74
          },
          end: {
            line: 391,
            column: 97
          }
        }],
        line: 391
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0, 0],
      "20": [0, 0, 0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/components/care/CareDashboard.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport type { CareDashboardData } from '@/lib/types/care-types';\nimport CareTaskCard from './CareTaskCard';\n// import QuickCareActions from './QuickCareActions';\nimport CareStatistics from './CareStatistics';\n\ninterface CareDashboardProps {\n  userId: number;\n}\n\nexport default function CareDashboard({ userId }: CareDashboardProps) {\n  const [selectedTab, setSelectedTab] = useState<'overdue' | 'today' | 'soon' | 'recent'>('overdue');\n  const [quickCareLoading, setQuickCareLoading] = useState<number | null>(null);\n  const queryClient = useQueryClient();\n\n  // Use React Query for dashboard data\n  const { data: dashboardData, isLoading: loading, error } = useQuery({\n    queryKey: ['care-dashboard', userId],\n    queryFn: async (): Promise<CareDashboardData> => {\n      const response = await fetch(`/api/care/dashboard?userId=${userId}`, {\n        // Prevent browser caching\n        cache: 'no-store',\n        headers: {\n          'Cache-Control': 'no-cache',\n        },\n      });\n      if (!response.ok) {\n        throw new Error('Failed to load care dashboard');\n      }\n      return response.json();\n    },\n    staleTime: 0, // Always consider data stale\n    gcTime: 0, // Don't keep old data in cache\n    refetchOnWindowFocus: true,\n    refetchOnMount: true,\n  });\n\n  const handleQuickCare = async (plantInstanceId: number, careType: string) => {\n    try {\n      setQuickCareLoading(plantInstanceId);\n      const response = await fetch('/api/care/quick-log', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          plantInstanceId,\n          careType,\n          careDate: new Date().toISOString(),\n          userId,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to log care');\n      }\n\n      // Invalidate and refetch dashboard data\n      await queryClient.invalidateQueries({ \n        queryKey: ['care-dashboard', userId],\n        refetchType: 'active'\n      });\n      // Also remove from cache entirely and refetch\n      queryClient.removeQueries({ queryKey: ['care-dashboard', userId] });\n      await queryClient.refetchQueries({ queryKey: ['care-dashboard', userId] });\n    } catch (err) {\n      console.error('Error logging quick care:', err);\n      // Could show a toast notification here instead\n    } finally {\n      setQuickCareLoading(null);\n    }\n  };\n\n  const handleBulkQuickCare = async (careType: string) => {\n    if (!dashboardData) return;\n    \n    // Get plants that need this type of care based on urgency\n    const plantsNeedingCare = [\n      ...dashboardData.overdue,\n      ...dashboardData.dueToday,\n      ...(careType !== 'fertilizer' ? dashboardData.dueSoon : []) // Be less aggressive for fertilizer\n    ];\n\n    if (plantsNeedingCare.length === 0) {\n      console.log('No plants currently need this type of care');\n      return;\n    }\n\n    try {\n      setQuickCareLoading(-1); // Use -1 to indicate bulk operation\n      \n      // Log care for multiple plants\n      const promises = plantsNeedingCare.slice(0, 10).map(plant => // Limit to first 10 plants\n        fetch('/api/care/quick-log', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            plantInstanceId: plant.id,\n            careType,\n            careDate: new Date().toISOString(),\n            userId,\n          }),\n        })\n      );\n\n      const results = await Promise.allSettled(promises);\n      const successCount = results.filter(r => r.status === 'fulfilled').length;\n      const failureCount = results.length - successCount;\n\n      if (successCount > 0) {\n        // Show success message\n        console.log(`Successfully logged ${careType} for ${successCount} plants${failureCount > 0 ? `, ${failureCount} failed` : ''}`);\n        await queryClient.invalidateQueries({ \n          queryKey: ['care-dashboard', userId],\n          refetchType: 'active'\n        });\n        // Also remove from cache entirely and refetch\n        queryClient.removeQueries({ queryKey: ['care-dashboard', userId] });\n        await queryClient.refetchQueries({ queryKey: ['care-dashboard', userId] });\n      } else {\n        throw new Error('Failed to log care for any plants');\n      }\n    } catch (err) {\n      console.error('Error with bulk care:', err);\n      // Could show a toast notification here instead\n    } finally {\n      setQuickCareLoading(null);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"animate-pulse space-y-6\" role=\"status\" aria-label=\"Loading care dashboard\">\n        <div className=\"h-8 bg-gray-200 rounded w-1/3 mb-4\"></div>\n        <div className=\"grid grid-cols-2 gap-4 mb-6\">\n          <div className=\"h-20 bg-gray-200 rounded\"></div>\n          <div className=\"h-20 bg-gray-200 rounded\"></div>\n        </div>\n        <div className=\"space-y-3\">\n          <div className=\"h-16 bg-gray-200 rounded\"></div>\n          <div className=\"h-16 bg-gray-200 rounded\"></div>\n          <div className=\"h-16 bg-gray-200 rounded\"></div>\n        </div>\n        <span className=\"sr-only\">Loading care dashboard...</span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"rounded-2xl shadow-sm border border-red-200/70 bg-red-50/70 backdrop-blur p-6 text-center\">\n        <div className=\"text-red-600 mb-4\">\u26A0\uFE0F</div>\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Error Loading Care Dashboard</h3>\n        <p className=\"text-gray-600 mb-4\">{error instanceof Error ? error.message : 'Failed to load dashboard'}</p>\n        <button\n          onClick={() => queryClient.invalidateQueries({ queryKey: ['care-dashboard', userId] })}\n          disabled={loading}\n          className={`px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors shadow-sm ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}\n        >\n          {loading ? 'Loading...' : 'Try Again'}\n        </button>\n      </div>\n    );\n  }\n\n  if (!dashboardData) {\n    return null;\n  }\n\n  const tabs = [\n    { id: 'overdue', label: 'Overdue', count: dashboardData.statistics.overdueCount, plants: dashboardData.overdue },\n    { id: 'today', label: 'Due Today', count: dashboardData.statistics.dueTodayCount, plants: dashboardData.dueToday },\n    { id: 'soon', label: 'Due Soon', count: dashboardData.statistics.dueSoonCount, plants: dashboardData.dueSoon },\n    { id: 'recent', label: 'Recent Care', count: dashboardData.recentlyCared.length, plants: dashboardData.recentlyCared },\n  ] as const;\n\n  const activeTab = tabs.find(tab => tab.id === selectedTab);\n  const activePlants = activeTab?.plants || [];\n\n  return (\n    <div className=\"space-y-6\" data-testid=\"care-dashboard\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-2\">Plant Care</h1>\n        <p className=\"text-sm sm:text-base text-gray-600\">Keep your plants healthy and thriving</p>\n      </div>\n\n      {/* Statistics */}\n      <CareStatistics statistics={dashboardData.statistics} />\n\n      {/* Quick Actions */}\n      <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-2 sm:gap-3 mb-6\">\n        {dashboardData.quickActions.map((action) => {\n          const hasPlants = dashboardData?.statistics?.totalActivePlants > 0;\n          const plantsNeedingCare = dashboardData ? [\n            ...dashboardData.overdue,\n            ...dashboardData.dueToday,\n            ...(action.careType !== 'fertilizer' ? dashboardData.dueSoon : [])\n          ].length : 0;\n          \n          return (\n            <button\n              key={action.id}\n              onClick={() => handleBulkQuickCare(action.careType)}\n              className={`p-3 sm:p-4 rounded-xl text-white font-medium transition-colors shadow-sm touch-manipulation ${\n                hasPlants && plantsNeedingCare > 0 && action.isEnabled && quickCareLoading !== -1 ? action.color : 'bg-gray-400 cursor-not-allowed'\n              }`}\n              disabled={!action.isEnabled || !hasPlants || plantsNeedingCare === 0 || quickCareLoading === -1 || loading}\n              title={\n                loading ? 'Loading...' :\n                quickCareLoading === -1 ? 'Logging care for multiple plants...' :\n                !hasPlants ? 'Add plants to use quick care actions' :\n                plantsNeedingCare === 0 ? 'No plants currently need this care' :\n                `${action.description} for ${plantsNeedingCare} plants`\n              }\n            >\n              {quickCareLoading === -1 ? (\n                <>\n                  <div className=\"text-lg mb-1\">\n                    <svg className=\"animate-spin h-5 w-5 mx-auto\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                  </div>\n                  <div className=\"text-sm\">Logging...</div>\n                </>\n              ) : (\n                <>\n                  <div className=\"text-base sm:text-lg mb-1\">{action.icon}</div>\n                  <div className=\"text-xs sm:text-sm\">{action.label}</div>\n                </>\n              )}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Care Tasks Tabs */}\n      <div>\n        <div className=\"flex space-x-1 mb-4 bg-white/50 p-1 rounded-xl border border-slate-200/70 backdrop-blur overflow-x-auto\">\n          {tabs.map((tab) => (\n            <button\n              key={tab.id}\n              onClick={() => setSelectedTab(tab.id)}\n              disabled={loading}\n              className={`\n                flex-1 px-2 sm:px-3 py-2 rounded-lg text-xs sm:text-sm font-medium transition-colors relative whitespace-nowrap touch-manipulation min-w-fit\n                ${selectedTab === tab.id\n                  ? 'bg-white text-gray-900 shadow-sm border border-slate-200/70'\n                  : 'text-gray-600 hover:text-gray-900 hover:bg-white/50'\n                }\n                ${loading ? 'opacity-50 cursor-not-allowed' : ''}\n              `}\n            >\n              <span className=\"sm:hidden\">\n                {tab.id === 'overdue' ? 'Overdue' :\n                 tab.id === 'today' ? 'Today' :\n                 tab.id === 'soon' ? 'Soon' : 'Recent'}\n              </span>\n              <span className=\"hidden sm:inline\">{tab.label}</span>\n              {tab.count > 0 && (\n                <span className={`\n                  ml-1 sm:ml-2 px-1.5 sm:px-2 py-0.5 rounded-full text-xs font-medium\n                  ${selectedTab === tab.id\n                    ? tab.id === 'overdue' ? 'bg-red-100 text-red-800' :\n                      tab.id === 'today' ? 'bg-amber-100 text-amber-800' :\n                      tab.id === 'soon' ? 'bg-yellow-100 text-yellow-800' :\n                      'bg-green-100 text-green-800'\n                    : 'bg-gray-200 text-gray-600'\n                  }\n                `}>\n                  {tab.count}\n                </span>\n              )}\n            </button>\n          ))}\n        </div>\n\n        {/* Care Tasks List */}\n        <div className=\"space-y-3\">\n          {activePlants.length === 0 ? (\n            <div className=\"rounded-2xl shadow-sm border border-slate-200/70 bg-white/50 backdrop-blur p-8 text-center\">\n              <div className=\"text-4xl mb-4\">\n                {selectedTab === 'overdue' ? '\u2705' :\n                 selectedTab === 'today' ? '\uD83D\uDCC5' :\n                 selectedTab === 'soon' ? '\u23F0' : '\uD83C\uDF31'}\n              </div>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                {selectedTab === 'overdue' ? 'All caught up!' :\n                 selectedTab === 'today' ? 'No care due today' :\n                 selectedTab === 'soon' ? 'Nothing due soon' : 'No recent care logged'}\n              </h3>\n              <p className=\"text-gray-600\">\n                {selectedTab === 'overdue' ? 'Great job keeping up with your plant care!' :\n                 selectedTab === 'today' ? 'Check back tomorrow for new care tasks.' :\n                 selectedTab === 'soon' ? 'Your plants are well cared for.' : 'Start logging care to see your recent activity.'}\n              </p>\n            </div>\n          ) : (\n            activePlants.map((plant) => (\n              <CareTaskCard\n                key={plant.id}\n                plant={plant}\n                onQuickCare={handleQuickCare}\n                showUrgency={selectedTab === 'overdue' || selectedTab === 'today'}\n              />\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],
      names: ["CareDashboard", "userId", "selectedTab", "setSelectedTab", "useState", "quickCareLoading", "setQuickCareLoading", "queryClient", "useQueryClient", "data", "dashboardData", "isLoading", "loading", "error", "useQuery", "queryKey", "queryFn", "response", "fetch", "cache", "headers", "ok", "Error", "json", "staleTime", "gcTime", "refetchOnWindowFocus", "refetchOnMount", "handleQuickCare", "plantInstanceId", "careType", "method", "body", "JSON", "stringify", "careDate", "Date", "toISOString", "invalidateQueries", "refetchType", "removeQueries", "refetchQueries", "err", "console", "handleBulkQuickCare", "plantsNeedingCare", "overdue", "dueToday", "dueSoon", "length", "log", "promises", "slice", "map", "plant", "id", "results", "Promise", "allSettled", "successCount", "filter", "r", "status", "failureCount", "div", "className", "role", "aria-label", "span", "h3", "p", "message", "button", "onClick", "disabled", "tabs", "label", "count", "statistics", "overdueCount", "plants", "dueTodayCount", "dueSoonCount", "recentlyCared", "activeTab", "find", "tab", "activePlants", "data-testid", "h1", "CareStatistics", "quickActions", "action", "hasPlants", "totalActivePlants", "isEnabled", "color", "title", "description", "svg", "fill", "viewBox", "circle", "cx", "cy", "stroke", "strokeWidth", "path", "d", "icon", "CareTaskCard", "onQuickCare", "showUrgency"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "af3109a161875db48a98d5c1076a0ca3f29d5e64"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1f6p9e24bh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1f6p9e24bh();
cov_1f6p9e24bh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1f6p9e24bh().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1f6p9e24bh().f[0]++;
    cov_1f6p9e24bh().s[2]++;
    return CareDashboard;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1f6p9e24bh().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1f6p9e24bh().s[4]++, require("react"));
const _reactquery =
/* istanbul ignore next */
(cov_1f6p9e24bh().s[5]++, require("@tanstack/react-query"));
const _CareTaskCard =
/* istanbul ignore next */
(/*#__PURE__*/cov_1f6p9e24bh().s[6]++, _interop_require_default(require("./CareTaskCard")));
const _CareStatistics =
/* istanbul ignore next */
(/*#__PURE__*/cov_1f6p9e24bh().s[7]++, _interop_require_default(require("./CareStatistics")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1f6p9e24bh().f[1]++;
  cov_1f6p9e24bh().s[8]++;
  return /* istanbul ignore next */(cov_1f6p9e24bh().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1f6p9e24bh().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1f6p9e24bh().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1f6p9e24bh().b[0][1]++, {
    default: obj
  });
}
function CareDashboard({
  userId
}) {
  /* istanbul ignore next */
  cov_1f6p9e24bh().f[2]++;
  const [selectedTab, setSelectedTab] =
  /* istanbul ignore next */
  (cov_1f6p9e24bh().s[9]++, (0, _react.useState)('overdue'));
  const [quickCareLoading, setQuickCareLoading] =
  /* istanbul ignore next */
  (cov_1f6p9e24bh().s[10]++, (0, _react.useState)(null));
  const queryClient =
  /* istanbul ignore next */
  (cov_1f6p9e24bh().s[11]++, (0, _reactquery.useQueryClient)());
  // Use React Query for dashboard data
  const {
    data: dashboardData,
    isLoading: loading,
    error
  } =
  /* istanbul ignore next */
  (cov_1f6p9e24bh().s[12]++, (0, _reactquery.useQuery)({
    queryKey: ['care-dashboard', userId],
    queryFn: async () => {
      /* istanbul ignore next */
      cov_1f6p9e24bh().f[3]++;
      const response =
      /* istanbul ignore next */
      (cov_1f6p9e24bh().s[13]++, await fetch(`/api/care/dashboard?userId=${userId}`, {
        // Prevent browser caching
        cache: 'no-store',
        headers: {
          'Cache-Control': 'no-cache'
        }
      }));
      /* istanbul ignore next */
      cov_1f6p9e24bh().s[14]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1f6p9e24bh().b[2][0]++;
        cov_1f6p9e24bh().s[15]++;
        throw new Error('Failed to load care dashboard');
      } else
      /* istanbul ignore next */
      {
        cov_1f6p9e24bh().b[2][1]++;
      }
      cov_1f6p9e24bh().s[16]++;
      return response.json();
    },
    staleTime: 0,
    gcTime: 0,
    refetchOnWindowFocus: true,
    refetchOnMount: true
  }));
  /* istanbul ignore next */
  cov_1f6p9e24bh().s[17]++;
  const handleQuickCare = async (plantInstanceId, careType) => {
    /* istanbul ignore next */
    cov_1f6p9e24bh().f[4]++;
    cov_1f6p9e24bh().s[18]++;
    try {
      /* istanbul ignore next */
      cov_1f6p9e24bh().s[19]++;
      setQuickCareLoading(plantInstanceId);
      const response =
      /* istanbul ignore next */
      (cov_1f6p9e24bh().s[20]++, await fetch('/api/care/quick-log', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          plantInstanceId,
          careType,
          careDate: new Date().toISOString(),
          userId
        })
      }));
      /* istanbul ignore next */
      cov_1f6p9e24bh().s[21]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_1f6p9e24bh().b[3][0]++;
        cov_1f6p9e24bh().s[22]++;
        throw new Error('Failed to log care');
      } else
      /* istanbul ignore next */
      {
        cov_1f6p9e24bh().b[3][1]++;
      }
      // Invalidate and refetch dashboard data
      cov_1f6p9e24bh().s[23]++;
      await queryClient.invalidateQueries({
        queryKey: ['care-dashboard', userId],
        refetchType: 'active'
      });
      // Also remove from cache entirely and refetch
      /* istanbul ignore next */
      cov_1f6p9e24bh().s[24]++;
      queryClient.removeQueries({
        queryKey: ['care-dashboard', userId]
      });
      /* istanbul ignore next */
      cov_1f6p9e24bh().s[25]++;
      await queryClient.refetchQueries({
        queryKey: ['care-dashboard', userId]
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_1f6p9e24bh().s[26]++;
      console.error('Error logging quick care:', err);
      // Could show a toast notification here instead
    } finally {
      /* istanbul ignore next */
      cov_1f6p9e24bh().s[27]++;
      setQuickCareLoading(null);
    }
  };
  /* istanbul ignore next */
  cov_1f6p9e24bh().s[28]++;
  const handleBulkQuickCare = async careType => {
    /* istanbul ignore next */
    cov_1f6p9e24bh().f[5]++;
    cov_1f6p9e24bh().s[29]++;
    if (!dashboardData) {
      /* istanbul ignore next */
      cov_1f6p9e24bh().b[4][0]++;
      cov_1f6p9e24bh().s[30]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1f6p9e24bh().b[4][1]++;
    }
    // Get plants that need this type of care based on urgency
    const plantsNeedingCare =
    /* istanbul ignore next */
    (cov_1f6p9e24bh().s[31]++, [...dashboardData.overdue, ...dashboardData.dueToday, ...(careType !== 'fertilizer' ?
    /* istanbul ignore next */
    (cov_1f6p9e24bh().b[5][0]++, dashboardData.dueSoon) :
    /* istanbul ignore next */
    (cov_1f6p9e24bh().b[5][1]++, [])) // Be less aggressive for fertilizer
    ]);
    /* istanbul ignore next */
    cov_1f6p9e24bh().s[32]++;
    if (plantsNeedingCare.length === 0) {
      /* istanbul ignore next */
      cov_1f6p9e24bh().b[6][0]++;
      cov_1f6p9e24bh().s[33]++;
      console.log('No plants currently need this type of care');
      /* istanbul ignore next */
      cov_1f6p9e24bh().s[34]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1f6p9e24bh().b[6][1]++;
    }
    cov_1f6p9e24bh().s[35]++;
    try {
      /* istanbul ignore next */
      cov_1f6p9e24bh().s[36]++;
      setQuickCareLoading(-1); // Use -1 to indicate bulk operation
      // Log care for multiple plants
      const promises =
      /* istanbul ignore next */
      (cov_1f6p9e24bh().s[37]++, plantsNeedingCare.slice(0, 10).map(plant => {
        /* istanbul ignore next */
        cov_1f6p9e24bh().f[6]++;
        cov_1f6p9e24bh().s[38]++;
        return fetch('/api/care/quick-log', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            plantInstanceId: plant.id,
            careType,
            careDate: new Date().toISOString(),
            userId
          })
        });
      }));
      const results =
      /* istanbul ignore next */
      (cov_1f6p9e24bh().s[39]++, await Promise.allSettled(promises));
      const successCount =
      /* istanbul ignore next */
      (cov_1f6p9e24bh().s[40]++, results.filter(r => {
        /* istanbul ignore next */
        cov_1f6p9e24bh().f[7]++;
        cov_1f6p9e24bh().s[41]++;
        return r.status === 'fulfilled';
      }).length);
      const failureCount =
      /* istanbul ignore next */
      (cov_1f6p9e24bh().s[42]++, results.length - successCount);
      /* istanbul ignore next */
      cov_1f6p9e24bh().s[43]++;
      if (successCount > 0) {
        /* istanbul ignore next */
        cov_1f6p9e24bh().b[7][0]++;
        cov_1f6p9e24bh().s[44]++;
        // Show success message
        console.log(`Successfully logged ${careType} for ${successCount} plants${failureCount > 0 ?
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[8][0]++, `, ${failureCount} failed`) :
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[8][1]++, '')}`);
        /* istanbul ignore next */
        cov_1f6p9e24bh().s[45]++;
        await queryClient.invalidateQueries({
          queryKey: ['care-dashboard', userId],
          refetchType: 'active'
        });
        // Also remove from cache entirely and refetch
        /* istanbul ignore next */
        cov_1f6p9e24bh().s[46]++;
        queryClient.removeQueries({
          queryKey: ['care-dashboard', userId]
        });
        /* istanbul ignore next */
        cov_1f6p9e24bh().s[47]++;
        await queryClient.refetchQueries({
          queryKey: ['care-dashboard', userId]
        });
      } else {
        /* istanbul ignore next */
        cov_1f6p9e24bh().b[7][1]++;
        cov_1f6p9e24bh().s[48]++;
        throw new Error('Failed to log care for any plants');
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_1f6p9e24bh().s[49]++;
      console.error('Error with bulk care:', err);
      // Could show a toast notification here instead
    } finally {
      /* istanbul ignore next */
      cov_1f6p9e24bh().s[50]++;
      setQuickCareLoading(null);
    }
  };
  /* istanbul ignore next */
  cov_1f6p9e24bh().s[51]++;
  if (loading) {
    /* istanbul ignore next */
    cov_1f6p9e24bh().b[9][0]++;
    cov_1f6p9e24bh().s[52]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "animate-pulse space-y-6",
      role: "status",
      "aria-label": "Loading care dashboard",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "h-8 bg-gray-200 rounded w-1/3 mb-4"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid grid-cols-2 gap-4 mb-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-20 bg-gray-200 rounded"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-20 bg-gray-200 rounded"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-3",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-16 bg-gray-200 rounded"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-16 bg-gray-200 rounded"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-16 bg-gray-200 rounded"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
        className: "sr-only",
        children: "Loading care dashboard..."
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_1f6p9e24bh().b[9][1]++;
  }
  cov_1f6p9e24bh().s[53]++;
  if (error) {
    /* istanbul ignore next */
    cov_1f6p9e24bh().b[10][0]++;
    cov_1f6p9e24bh().s[54]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "rounded-2xl shadow-sm border border-red-200/70 bg-red-50/70 backdrop-blur p-6 text-center",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-red-600 mb-4",
        children: "⚠️"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-medium text-gray-900 mb-2",
        children: "Error Loading Care Dashboard"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-gray-600 mb-4",
        children: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[11][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[11][1]++, 'Failed to load dashboard')
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: () => {
          /* istanbul ignore next */
          cov_1f6p9e24bh().f[8]++;
          cov_1f6p9e24bh().s[55]++;
          return queryClient.invalidateQueries({
            queryKey: ['care-dashboard', userId]
          });
        },
        disabled: loading,
        className: `px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors shadow-sm ${loading ?
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[12][0]++, 'opacity-50 cursor-not-allowed') :
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[12][1]++, '')}`,
        children: loading ?
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[13][0]++, 'Loading...') :
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[13][1]++, 'Try Again')
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_1f6p9e24bh().b[10][1]++;
  }
  cov_1f6p9e24bh().s[56]++;
  if (!dashboardData) {
    /* istanbul ignore next */
    cov_1f6p9e24bh().b[14][0]++;
    cov_1f6p9e24bh().s[57]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1f6p9e24bh().b[14][1]++;
  }
  const tabs =
  /* istanbul ignore next */
  (cov_1f6p9e24bh().s[58]++, [{
    id: 'overdue',
    label: 'Overdue',
    count: dashboardData.statistics.overdueCount,
    plants: dashboardData.overdue
  }, {
    id: 'today',
    label: 'Due Today',
    count: dashboardData.statistics.dueTodayCount,
    plants: dashboardData.dueToday
  }, {
    id: 'soon',
    label: 'Due Soon',
    count: dashboardData.statistics.dueSoonCount,
    plants: dashboardData.dueSoon
  }, {
    id: 'recent',
    label: 'Recent Care',
    count: dashboardData.recentlyCared.length,
    plants: dashboardData.recentlyCared
  }]);
  const activeTab =
  /* istanbul ignore next */
  (cov_1f6p9e24bh().s[59]++, tabs.find(tab => {
    /* istanbul ignore next */
    cov_1f6p9e24bh().f[9]++;
    cov_1f6p9e24bh().s[60]++;
    return tab.id === selectedTab;
  }));
  const activePlants =
  /* istanbul ignore next */
  (cov_1f6p9e24bh().s[61]++,
  /* istanbul ignore next */
  (cov_1f6p9e24bh().b[15][0]++, activeTab?.plants) ||
  /* istanbul ignore next */
  (cov_1f6p9e24bh().b[15][1]++, []));
  /* istanbul ignore next */
  cov_1f6p9e24bh().s[62]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    "data-testid": "care-dashboard",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
        className: "text-2xl sm:text-3xl font-bold text-gray-900 mb-2",
        children: "Plant Care"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-sm sm:text-base text-gray-600",
        children: "Keep your plants healthy and thriving"
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_CareStatistics.default, {
      statistics: dashboardData.statistics
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "grid grid-cols-2 sm:grid-cols-4 gap-2 sm:gap-3 mb-6",
      children: dashboardData.quickActions.map(action => {
        /* istanbul ignore next */
        cov_1f6p9e24bh().f[10]++;
        const hasPlants =
        /* istanbul ignore next */
        (cov_1f6p9e24bh().s[63]++, dashboardData?.statistics?.totalActivePlants > 0);
        const plantsNeedingCare =
        /* istanbul ignore next */
        (cov_1f6p9e24bh().s[64]++, dashboardData ?
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[16][0]++, [...dashboardData.overdue, ...dashboardData.dueToday, ...(action.careType !== 'fertilizer' ?
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[17][0]++, dashboardData.dueSoon) :
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[17][1]++, []))].length) :
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[16][1]++, 0));
        /* istanbul ignore next */
        cov_1f6p9e24bh().s[65]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: () => {
            /* istanbul ignore next */
            cov_1f6p9e24bh().f[11]++;
            cov_1f6p9e24bh().s[66]++;
            return handleBulkQuickCare(action.careType);
          },
          className: `p-3 sm:p-4 rounded-xl text-white font-medium transition-colors shadow-sm touch-manipulation ${
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[19][0]++, hasPlants) &&
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[19][1]++, plantsNeedingCare > 0) &&
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[19][2]++, action.isEnabled) &&
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[19][3]++, quickCareLoading !== -1) ?
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[18][0]++, action.color) :
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[18][1]++, 'bg-gray-400 cursor-not-allowed')}`,
          disabled:
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[20][0]++, !action.isEnabled) ||
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[20][1]++, !hasPlants) ||
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[20][2]++, plantsNeedingCare === 0) ||
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[20][3]++, quickCareLoading === -1) ||
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[20][4]++, loading),
          title: loading ?
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[21][0]++, 'Loading...') :
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[21][1]++, quickCareLoading === -1 ?
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[22][0]++, 'Logging care for multiple plants...') :
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[22][1]++, !hasPlants ?
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[23][0]++, 'Add plants to use quick care actions') :
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[23][1]++, plantsNeedingCare === 0 ?
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[24][0]++, 'No plants currently need this care') :
          /* istanbul ignore next */
          (cov_1f6p9e24bh().b[24][1]++, `${action.description} for ${plantsNeedingCare} plants`)))),
          children: quickCareLoading === -1 ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1f6p9e24bh().b[25][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-lg mb-1",
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("svg", {
                className: "animate-spin h-5 w-5 mx-auto",
                fill: "none",
                viewBox: "0 0 24 24",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("circle", {
                  className: "opacity-25",
                  cx: "12",
                  cy: "12",
                  r: "10",
                  stroke: "currentColor",
                  strokeWidth: "4"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                  className: "opacity-75",
                  fill: "currentColor",
                  d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                })]
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-sm",
              children: "Logging..."
            })]
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1f6p9e24bh().b[25][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-base sm:text-lg mb-1",
              children: action.icon
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-xs sm:text-sm",
              children: action.label
            })]
          }))
        }, action.id);
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex space-x-1 mb-4 bg-white/50 p-1 rounded-xl border border-slate-200/70 backdrop-blur overflow-x-auto",
        children: tabs.map(tab => {
          /* istanbul ignore next */
          cov_1f6p9e24bh().f[12]++;
          cov_1f6p9e24bh().s[67]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_1f6p9e24bh().f[13]++;
              cov_1f6p9e24bh().s[68]++;
              return setSelectedTab(tab.id);
            },
            disabled: loading,
            className: `
                flex-1 px-2 sm:px-3 py-2 rounded-lg text-xs sm:text-sm font-medium transition-colors relative whitespace-nowrap touch-manipulation min-w-fit
                ${selectedTab === tab.id ?
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[26][0]++, 'bg-white text-gray-900 shadow-sm border border-slate-200/70') :
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[26][1]++, 'text-gray-600 hover:text-gray-900 hover:bg-white/50')}
                ${loading ?
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[27][0]++, 'opacity-50 cursor-not-allowed') :
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[27][1]++, '')}
              `,
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "sm:hidden",
              children: tab.id === 'overdue' ?
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[28][0]++, 'Overdue') :
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[28][1]++, tab.id === 'today' ?
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[29][0]++, 'Today') :
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[29][1]++, tab.id === 'soon' ?
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[30][0]++, 'Soon') :
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[30][1]++, 'Recent')))
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "hidden sm:inline",
              children: tab.label
            }),
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[31][0]++, tab.count > 0) &&
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[31][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: `
                  ml-1 sm:ml-2 px-1.5 sm:px-2 py-0.5 rounded-full text-xs font-medium
                  ${selectedTab === tab.id ?
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[32][0]++, tab.id === 'overdue' ?
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[33][0]++, 'bg-red-100 text-red-800') :
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[33][1]++, tab.id === 'today' ?
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[34][0]++, 'bg-amber-100 text-amber-800') :
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[34][1]++, tab.id === 'soon' ?
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[35][0]++, 'bg-yellow-100 text-yellow-800') :
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[35][1]++, 'bg-green-100 text-green-800')))) :
              /* istanbul ignore next */
              (cov_1f6p9e24bh().b[32][1]++, 'bg-gray-200 text-gray-600')}
                `,
              children: tab.count
            }))]
          }, tab.id);
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "space-y-3",
        children: activePlants.length === 0 ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_1f6p9e24bh().b[36][0]++, (0, _jsxruntime.jsxs)("div", {
          className: "rounded-2xl shadow-sm border border-slate-200/70 bg-white/50 backdrop-blur p-8 text-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-4xl mb-4",
            children: selectedTab === 'overdue' ?
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[37][0]++, '✅') :
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[37][1]++, selectedTab === 'today' ?
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[38][0]++, '📅') :
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[38][1]++, selectedTab === 'soon' ?
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[39][0]++, '⏰') :
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[39][1]++, '🌱')))
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            className: "text-lg font-medium text-gray-900 mb-2",
            children: selectedTab === 'overdue' ?
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[40][0]++, 'All caught up!') :
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[40][1]++, selectedTab === 'today' ?
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[41][0]++, 'No care due today') :
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[41][1]++, selectedTab === 'soon' ?
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[42][0]++, 'Nothing due soon') :
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[42][1]++, 'No recent care logged')))
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-gray-600",
            children: selectedTab === 'overdue' ?
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[43][0]++, 'Great job keeping up with your plant care!') :
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[43][1]++, selectedTab === 'today' ?
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[44][0]++, 'Check back tomorrow for new care tasks.') :
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[44][1]++, selectedTab === 'soon' ?
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[45][0]++, 'Your plants are well cared for.') :
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[45][1]++, 'Start logging care to see your recent activity.')))
          })]
        })) :
        /* istanbul ignore next */
        (cov_1f6p9e24bh().b[36][1]++, activePlants.map(plant => {
          /* istanbul ignore next */
          cov_1f6p9e24bh().f[14]++;
          cov_1f6p9e24bh().s[69]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)(_CareTaskCard.default, {
            plant: plant,
            onQuickCare: handleQuickCare,
            showUrgency:
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[46][0]++, selectedTab === 'overdue') ||
            /* istanbul ignore next */
            (cov_1f6p9e24bh().b[46][1]++, selectedTab === 'today')
          }, plant.id);
        }))
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
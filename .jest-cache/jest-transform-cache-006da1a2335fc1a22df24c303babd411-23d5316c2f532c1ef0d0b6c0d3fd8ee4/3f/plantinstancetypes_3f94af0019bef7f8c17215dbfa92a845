8af547b4407801709e2e58831fc82fd2
"use strict";

/* istanbul ignore next */
function cov_1eclvvn1z9() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/lib/types/plant-instance-types.ts";
  var hash = "3e77d38c7a50a6ae98ea65973cf97d20f0df35d4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/lib/types/plant-instance-types.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 36
        }
      },
      "3": {
        start: {
          line: 11,
          column: 29
        },
        end: {
          line: 154,
          column: 1
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 45
        }
      },
      "5": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 45
        }
      },
      "6": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 30
        }
      },
      "7": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 62
        }
      },
      "8": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 17,
          column: 66
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 43
        }
      },
      "10": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 18,
          column: 43
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 47
        }
      },
      "12": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 47
        }
      },
      "13": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 45
        }
      },
      "14": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 45
        }
      },
      "15": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 25
        }
      },
      "16": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 42
        }
      },
      "17": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 42
        }
      },
      "18": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 30
        }
      },
      "19": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 27,
          column: 62
        }
      },
      "20": {
        start: {
          line: 28,
          column: 25
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "21": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 45
        }
      },
      "22": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 45
        }
      },
      "23": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "24": {
        start: {
          line: 30,
          column: 26
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "25": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "26": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "27": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "28": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "29": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 22
        }
      },
      "30": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 40
        }
      },
      "31": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 40
        }
      },
      "32": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 30
        }
      },
      "33": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 62
        }
      },
      "34": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 57
        }
      },
      "35": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 41
        }
      },
      "36": {
        start: {
          line: 44,
          column: 29
        },
        end: {
          line: 44,
          column: 41
        }
      },
      "37": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "38": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 63
        }
      },
      "39": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 58
        }
      },
      "40": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 36
        }
      },
      "41": {
        start: {
          line: 51,
          column: 24
        },
        end: {
          line: 51,
          column: 36
        }
      },
      "42": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 30
        }
      },
      "43": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 58
        }
      },
      "44": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 58
        }
      },
      "45": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 73
        }
      },
      "46": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "47": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 38
        }
      },
      "48": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 43
        }
      },
      "49": {
        start: {
          line: 69,
          column: 27
        },
        end: {
          line: 69,
          column: 91
        }
      },
      "50": {
        start: {
          line: 70,
          column: 28
        },
        end: {
          line: 70,
          column: 93
        }
      },
      "51": {
        start: {
          line: 71,
          column: 39
        },
        end: {
          line: 71,
          column: 115
        }
      },
      "52": {
        start: {
          line: 72,
          column: 40
        },
        end: {
          line: 72,
          column: 118
        }
      },
      "53": {
        start: {
          line: 73,
          column: 35
        },
        end: {
          line: 73,
          column: 103
        }
      },
      "54": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 74,
          column: 80
        }
      },
      "55": {
        start: {
          line: 75,
          column: 29
        },
        end: {
          line: 75,
          column: 82
        }
      },
      "56": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 86,
          column: 10
        }
      },
      "57": {
        start: {
          line: 90,
          column: 29
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "58": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "59": {
        start: {
          line: 100,
          column: 27
        },
        end: {
          line: 100,
          column: 54
        }
      },
      "60": {
        start: {
          line: 101,
          column: 27
        },
        end: {
          line: 101,
          column: 54
        }
      },
      "61": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "62": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 39
        }
      },
      "63": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "64": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 77
        }
      },
      "65": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 63
        }
      },
      "66": {
        start: {
          line: 110,
          column: 53
        },
        end: {
          line: 110,
          column: 63
        }
      },
      "67": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 62
        }
      },
      "68": {
        start: {
          line: 111,
          column: 53
        },
        end: {
          line: 111,
          column: 62
        }
      },
      "69": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 62
        }
      },
      "70": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 76
        }
      },
      "71": {
        start: {
          line: 118,
          column: 44
        },
        end: {
          line: 118,
          column: 74
        }
      },
      "72": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "73": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 48
        }
      },
      "74": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 52
        }
      },
      "75": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 54
        }
      },
      "76": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 52
        }
      },
      "77": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 50
        }
      },
      "78": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 50
        }
      },
      "79": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "80": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 36
        }
      },
      "81": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 36
        }
      },
      "82": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 38
        }
      },
      "83": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 39
        }
      },
      "84": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 38
        }
      },
      "85": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 13,
            column: 26
          }
        },
        loc: {
          start: {
            line: 13,
            column: 42
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 27
          }
        },
        loc: {
          start: {
            line: 24,
            column: 43
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 38
          }
        },
        loc: {
          start: {
            line: 36,
            column: 54
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 43,
            column: 38
          },
          end: {
            line: 43,
            column: 39
          }
        },
        loc: {
          start: {
            line: 43,
            column: 56
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 43
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 34
          }
        },
        loc: {
          start: {
            line: 50,
            column: 46
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 57,
            column: 21
          }
        },
        loc: {
          start: {
            line: 57,
            column: 39
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 61,
            column: 21
          },
          end: {
            line: 61,
            column: 22
          }
        },
        loc: {
          start: {
            line: 61,
            column: 40
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 61
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 68,
            column: 26
          },
          end: {
            line: 68,
            column: 27
          }
        },
        loc: {
          start: {
            line: 68,
            column: 45
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 68
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 89,
            column: 23
          },
          end: {
            line: 89,
            column: 24
          }
        },
        loc: {
          start: {
            line: 89,
            column: 36
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 89
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 99,
            column: 15
          },
          end: {
            line: 99,
            column: 16
          }
        },
        loc: {
          start: {
            line: 99,
            column: 23
          },
          end: {
            line: 114,
            column: 9
          }
        },
        line: 99
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 117,
            column: 24
          },
          end: {
            line: 117,
            column: 25
          }
        },
        loc: {
          start: {
            line: 117,
            column: 45
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 117
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 118,
            column: 32
          },
          end: {
            line: 118,
            column: 33
          }
        },
        loc: {
          start: {
            line: 118,
            column: 44
          },
          end: {
            line: 118,
            column: 74
          }
        },
        line: 118
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 121,
            column: 24
          },
          end: {
            line: 121,
            column: 25
          }
        },
        loc: {
          start: {
            line: 121,
            column: 34
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 121
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 138,
            column: 25
          },
          end: {
            line: 138,
            column: 26
          }
        },
        loc: {
          start: {
            line: 138,
            column: 36
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 138
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 14,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 14,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 19,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 20,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 20,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "9": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "10": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "11": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 51,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "12": {
        loc: {
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 58,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 58,
            column: 32
          }
        }, {
          start: {
            line: 58,
            column: 36
          },
          end: {
            line: 58,
            column: 53
          }
        }, {
          start: {
            line: 58,
            column: 57
          },
          end: {
            line: 58,
            column: 72
          }
        }],
        line: 58
      },
      "13": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "14": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 27
          }
        }, {
          start: {
            line: 62,
            column: 31
          },
          end: {
            line: 62,
            column: 57
          }
        }],
        line: 62
      },
      "15": {
        loc: {
          start: {
            line: 65,
            column: 15
          },
          end: {
            line: 65,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 15
          },
          end: {
            line: 65,
            column: 34
          }
        }, {
          start: {
            line: 65,
            column: 38
          },
          end: {
            line: 65,
            column: 42
          }
        }],
        line: 65
      },
      "16": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "17": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "18": {
        loc: {
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 106,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 106,
            column: 31
          }
        }, {
          start: {
            line: 106,
            column: 35
          },
          end: {
            line: 106,
            column: 50
          }
        }],
        line: 106
      },
      "19": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "20": {
        loc: {
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 110,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 110,
            column: 31
          }
        }, {
          start: {
            line: 110,
            column: 35
          },
          end: {
            line: 110,
            column: 51
          }
        }],
        line: 110
      },
      "21": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 62
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 62
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "22": {
        loc: {
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 111,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 111,
            column: 32
          }
        }, {
          start: {
            line: 111,
            column: 36
          },
          end: {
            line: 111,
            column: 51
          }
        }],
        line: 111
      },
      "23": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 124,
            column: 48
          }
        }, {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 126,
            column: 52
          }
        }, {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 128,
            column: 54
          }
        }, {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 130,
            column: 52
          }
        }, {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 132,
            column: 50
          }
        }, {
          start: {
            line: 133,
            column: 12
          },
          end: {
            line: 134,
            column: 50
          }
        }],
        line: 122
      },
      "24": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 141,
            column: 36
          }
        }, {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 143,
            column: 36
          }
        }, {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 145,
            column: 38
          }
        }, {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 147,
            column: 39
          }
        }, {
          start: {
            line: 148,
            column: 12
          },
          end: {
            line: 149,
            column: 38
          }
        }, {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 151,
            column: 37
          }
        }],
        line: 139
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0, 0, 0],
      "24": [0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/lib/types/plant-instance-types.ts"],
      sourcesContent: ["import type { PlantInstance, Plant } from '@/lib/db/schema';\nimport type { PlantInstanceData, PlantInstanceFilter } from '@/lib/validation/plant-schemas';\nimport type { CareStatus, CareUrgency } from './care-types';\n\n// Advanced search result interface\nexport interface AdvancedSearchResult extends PlantInstanceSearchResult {\n  // Search metadata\n  searchId: string;\n  searchType: 'basic' | 'advanced' | 'fuzzy' | 'preset';\n  suggestions: string[];\n  relatedSearches: string[];\n  \n  // Performance metrics\n  databaseTime: number;\n  processingTime: number;\n  \n  // Result enhancements\n  highlightedResults?: EnhancedPlantInstance[];\n  facets?: SearchFacets;\n}\n\n// Search facets for filtering\nexport interface SearchFacets {\n  locations: Array<{ value: string; count: number }>;\n  plantTypes: Array<{ value: string; count: number; plantId: number }>;\n  careStatus: Array<{ value: string; count: number }>;\n  dateRanges: Array<{ value: string; count: number; range: [Date, Date] }>;\n}\n\n// Enhanced PlantInstance interface with computed properties\nexport interface EnhancedPlantInstance extends PlantInstance {\n  // Joined plant taxonomy data\n  plant: Plant;\n  \n  // Computed care status\n  careStatus: CareStatus;\n  \n  // Days until next fertilizer due (negative if overdue)\n  daysUntilFertilizerDue: number | null;\n  \n  // Days since last fertilized\n  daysSinceLastFertilized: number | null;\n  \n  // Days since last repot\n  daysSinceLastRepot: number | null;\n  \n  // Display name (nickname or plant common name)\n  displayName: string;\n  \n  // Primary image (first image or plant default image)\n  primaryImage: string | null;\n  \n  // Care urgency level for sorting and display\n  careUrgency: CareUrgency;\n}\n\n// Plant instance with care statistics\nexport interface PlantInstanceWithStats extends EnhancedPlantInstance {\n  // Care history statistics\n  totalFertilizerApplications: number;\n  averageFertilizerInterval: number; // in days\n  lastCareDate: Date | null;\n  careConsistencyScore: number; // 0-100 based on schedule adherence\n  \n  // Growth tracking\n  daysSinceAcquired: number;\n  repotHistory: RepotEvent[];\n  \n  // Image history\n  imageCount: number;\n  hasRecentImages: boolean; // Images added in last 30 days\n}\n\n// Repot event interface\nexport interface RepotEvent {\n  date: Date;\n  notes?: string;\n  potSize?: string;\n  soilType?: string;\n}\n\n// Plant instance search result\nexport interface PlantInstanceSearchResult {\n  instances: EnhancedPlantInstance[];\n  totalCount: number;\n  hasMore: boolean;\n  searchTime: number;\n  filters: PlantInstanceFilter;\n}\n\n// Plant instance grid view options\nexport interface PlantInstanceGridOptions {\n  // Display options\n  showCareStatus: boolean;\n  showLocation: boolean;\n  showLastCare: boolean;\n  cardSize: 'small' | 'medium' | 'large';\n  \n  // Sorting options\n  sortBy: PlantInstanceSortField;\n  sortOrder: 'asc' | 'desc';\n  \n  // Filtering options\n  activeFilter: PlantInstanceFilter;\n  \n  // View state\n  selectedInstances: number[];\n  isSelectionMode: boolean;\n}\n\n// Sort field options\nexport type PlantInstanceSortField = \n  | 'nickname'\n  | 'location'\n  | 'created_at'\n  | 'last_fertilized'\n  | 'fertilizer_due'\n  | 'care_urgency'\n  | 'plant_name';\n\n// Care dashboard data\nexport interface CareDashboardData {\n  overdue: EnhancedPlantInstance[];\n  dueToday: EnhancedPlantInstance[];\n  dueSoon: EnhancedPlantInstance[];\n  recentlyCared: EnhancedPlantInstance[];\n  \n  statistics: {\n    totalActivePlants: number;\n    overdueCount: number;\n    dueTodayCount: number;\n    dueSoonCount: number;\n    careStreakDays: number;\n  };\n}\n\n// Quick care action types\nexport type QuickCareAction = \n  | 'fertilize'\n  | 'water'\n  | 'repot'\n  | 'prune'\n  | 'inspect';\n\n// Quick care log entry\nexport interface QuickCareLog {\n  plantInstanceId: number;\n  action: QuickCareAction;\n  date: Date;\n  notes?: string;\n}\n\n// Plant instance operation result\nexport interface PlantInstanceOperationResult {\n  success: boolean;\n  instance?: EnhancedPlantInstance;\n  error?: string;\n  warnings?: string[];\n}\n\n// Bulk operation result\nexport interface BulkOperationResult {\n  success: boolean;\n  successCount: number;\n  failureCount: number;\n  results: Array<{\n    plantInstanceId: number;\n    success: boolean;\n    error?: string;\n  }>;\n}\n\n// Plant instance form data\nexport interface PlantInstanceFormData extends Omit<PlantInstanceData, 'images'> {\n  // Handle images as File objects for upload\n  imageFiles?: File[];\n  // Keep existing images as base64 strings\n  existingImages?: string[];\n  // Primary image index\n  primaryImageIndex?: number;\n}\n\n// Plant instance validation context\nexport interface PlantInstanceValidationContext {\n  userId: number;\n  isUpdate: boolean;\n  existingInstance?: PlantInstance;\n  plantTaxonomy?: Plant;\n}\n\n// Helper functions for plant instance data manipulation\nexport const plantInstanceHelpers = {\n  // Calculate care status based on fertilizer due date\n  calculateCareStatus: (fertilizerDue: Date | null): CareStatus => {\n    if (!fertilizerDue) return 'unknown';\n    \n    const now = new Date();\n    const diffMs = fertilizerDue.getTime() - now.getTime();\n    const diffDays = Math.ceil(diffMs / (1000 * 60 * 60 * 24));\n    \n    if (diffDays < 0) return 'overdue';\n    if (diffDays === 0) return 'due_today';\n    if (diffDays <= 7) return 'due_soon';\n    return 'healthy';\n  },\n\n  // Calculate care urgency for prioritization\n  calculateCareUrgency: (fertilizerDue: Date | null): CareUrgency => {\n    if (!fertilizerDue) return 'none';\n    \n    const now = new Date();\n    const diffMs = fertilizerDue.getTime() - now.getTime();\n    const diffDays = Math.ceil(diffMs / (1000 * 60 * 60 * 24));\n    \n    if (diffDays < -7) return 'critical';\n    if (diffDays < 0) return 'high';\n    if (diffDays <= 1) return 'medium';\n    if (diffDays <= 7) return 'low';\n    return 'none';\n  },\n\n  // Calculate days until fertilizer due (negative if overdue)\n  calculateDaysUntilFertilizerDue: (fertilizerDue: Date | null): number | null => {\n    if (!fertilizerDue) return null;\n    \n    const now = new Date();\n    const diffMs = fertilizerDue.getTime() - now.getTime();\n    return Math.ceil(diffMs / (1000 * 60 * 60 * 24));\n  },\n\n  // Calculate days since last fertilized\n  calculateDaysSinceLastFertilized: (lastFertilized: Date | null): number | null => {\n    if (!lastFertilized) return null;\n    \n    const now = new Date();\n    const diffMs = now.getTime() - lastFertilized.getTime();\n    return Math.floor(diffMs / (1000 * 60 * 60 * 24));\n  },\n\n  // Calculate days since last repot\n  calculateDaysSinceLastRepot: (lastRepot: Date | null): number | null => {\n    if (!lastRepot) return null;\n    \n    const now = new Date();\n    const diffMs = now.getTime() - lastRepot.getTime();\n    return Math.floor(diffMs / (1000 * 60 * 60 * 24));\n  },\n\n  // Get display name (nickname or plant common name)\n  getDisplayName: (instance: PlantInstance, plant?: Plant): string => {\n    return instance.nickname || plant?.commonName || 'Unnamed Plant';\n  },\n\n  // Get primary image (first image or plant default image)\n  getPrimaryImage: (instance: PlantInstance, plant?: Plant): string | null => {\n    if (instance.images && instance.images.length > 0) {\n      return instance.images[0];\n    }\n    return plant?.defaultImage || null;\n  },\n\n  // Enhance plant instance with computed properties\n  enhancePlantInstance: (instance: PlantInstance, plant: Plant): EnhancedPlantInstance => {\n    const careStatus = plantInstanceHelpers.calculateCareStatus(instance.fertilizerDue);\n    const careUrgency = plantInstanceHelpers.calculateCareUrgency(instance.fertilizerDue);\n    const daysUntilFertilizerDue = plantInstanceHelpers.calculateDaysUntilFertilizerDue(instance.fertilizerDue);\n    const daysSinceLastFertilized = plantInstanceHelpers.calculateDaysSinceLastFertilized(instance.lastFertilized);\n    const daysSinceLastRepot = plantInstanceHelpers.calculateDaysSinceLastRepot(instance.lastRepot);\n    const displayName = plantInstanceHelpers.getDisplayName(instance, plant);\n    const primaryImage = plantInstanceHelpers.getPrimaryImage(instance, plant);\n\n    return {\n      ...instance,\n      plant,\n      careStatus,\n      careUrgency,\n      daysUntilFertilizerDue,\n      daysSinceLastFertilized,\n      daysSinceLastRepot,\n      displayName,\n      primaryImage,\n    };\n  },\n\n  // Sort plant instances by care urgency\n  sortByCareUrgency: (instances: EnhancedPlantInstance[]): EnhancedPlantInstance[] => {\n    const urgencyOrder: Record<CareUrgency, number> = {\n      critical: 0,\n      high: 1,\n      medium: 2,\n      low: 3,\n      none: 4,\n    };\n\n    return [...instances].sort((a, b) => {\n      const aOrder = urgencyOrder[a.careUrgency];\n      const bOrder = urgencyOrder[b.careUrgency];\n      \n      if (aOrder !== bOrder) {\n        return aOrder - bOrder;\n      }\n      \n      // If same urgency, sort by fertilizer due date\n      if (a.fertilizerDue && b.fertilizerDue) {\n        return a.fertilizerDue.getTime() - b.fertilizerDue.getTime();\n      }\n      \n      // If one has no due date, prioritize the one with a due date\n      if (a.fertilizerDue && !b.fertilizerDue) return -1;\n      if (!a.fertilizerDue && b.fertilizerDue) return 1;\n      \n      // If neither has a due date, sort by nickname\n      return a.displayName.localeCompare(b.displayName);\n    });\n  },\n\n  // Filter instances by care status\n  filterByCareStatus: (instances: EnhancedPlantInstance[], status: CareStatus): EnhancedPlantInstance[] => {\n    return instances.filter(instance => instance.careStatus === status);\n  },\n\n  // Get care status color for UI\n  getCareStatusColor: (status: CareStatus): string => {\n    switch (status) {\n      case 'overdue': return 'text-red-600 bg-red-50';\n      case 'due_today': return 'text-amber-600 bg-amber-50';\n      case 'due_soon': return 'text-yellow-600 bg-yellow-50';\n      case 'healthy': return 'text-green-600 bg-green-50';\n      case 'unknown': return 'text-gray-600 bg-gray-50';\n      default: return 'text-gray-600 bg-gray-50';\n    }\n  },\n\n  // Get care urgency color for UI\n  getCareUrgencyColor: (urgency: CareUrgency): string => {\n    switch (urgency) {\n      case 'critical': return 'bg-red-500';\n      case 'high': return 'bg-red-400';\n      case 'medium': return 'bg-amber-400';\n      case 'low': return 'bg-yellow-400';\n      case 'none': return 'bg-green-400';\n      default: return 'bg-gray-400';\n    }\n  },\n};"],
      names: ["plantInstanceHelpers", "calculateCareStatus", "fertilizerDue", "now", "Date", "diffMs", "getTime", "diffDays", "Math", "ceil", "calculateCareUrgency", "calculateDaysUntilFertilizerDue", "calculateDaysSinceLastFertilized", "lastFertilized", "floor", "calculateDaysSinceLastRepot", "lastRepot", "getDisplayName", "instance", "plant", "nickname", "commonName", "getPrimaryImage", "images", "length", "defaultImage", "enhancePlantInstance", "careStatus", "careUrgency", "daysUntilFertilizerDue", "daysSinceLastFertilized", "daysSinceLastRepot", "displayName", "primaryImage", "sortByCareUrgency", "instances", "urgencyOrder", "critical", "high", "medium", "low", "none", "sort", "a", "b", "aOrder", "bOrder", "localeCompare", "filterByCareStatus", "status", "filter", "getCareStatusColor", "getCareUrgencyColor", "urgency"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3e77d38c7a50a6ae98ea65973cf97d20f0df35d4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1eclvvn1z9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1eclvvn1z9();
cov_1eclvvn1z9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1eclvvn1z9().s[1]++;
Object.defineProperty(exports, "plantInstanceHelpers", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[0]++;
    cov_1eclvvn1z9().s[2]++;
    return plantInstanceHelpers;
  }
});
const plantInstanceHelpers =
/* istanbul ignore next */
(cov_1eclvvn1z9().s[3]++, {
  // Calculate care status based on fertilizer due date
  calculateCareStatus: fertilizerDue => {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[1]++;
    cov_1eclvvn1z9().s[4]++;
    if (!fertilizerDue) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[0][0]++;
      cov_1eclvvn1z9().s[5]++;
      return 'unknown';
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[0][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[6]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[7]++, fertilizerDue.getTime() - now.getTime());
    const diffDays =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[8]++, Math.ceil(diffMs / (1000 * 60 * 60 * 24)));
    /* istanbul ignore next */
    cov_1eclvvn1z9().s[9]++;
    if (diffDays < 0) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[1][0]++;
      cov_1eclvvn1z9().s[10]++;
      return 'overdue';
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[1][1]++;
    }
    cov_1eclvvn1z9().s[11]++;
    if (diffDays === 0) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[2][0]++;
      cov_1eclvvn1z9().s[12]++;
      return 'due_today';
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[2][1]++;
    }
    cov_1eclvvn1z9().s[13]++;
    if (diffDays <= 7) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[3][0]++;
      cov_1eclvvn1z9().s[14]++;
      return 'due_soon';
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[3][1]++;
    }
    cov_1eclvvn1z9().s[15]++;
    return 'healthy';
  },
  // Calculate care urgency for prioritization
  calculateCareUrgency: fertilizerDue => {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[2]++;
    cov_1eclvvn1z9().s[16]++;
    if (!fertilizerDue) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[4][0]++;
      cov_1eclvvn1z9().s[17]++;
      return 'none';
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[4][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[18]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[19]++, fertilizerDue.getTime() - now.getTime());
    const diffDays =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[20]++, Math.ceil(diffMs / (1000 * 60 * 60 * 24)));
    /* istanbul ignore next */
    cov_1eclvvn1z9().s[21]++;
    if (diffDays < -7) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[5][0]++;
      cov_1eclvvn1z9().s[22]++;
      return 'critical';
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[5][1]++;
    }
    cov_1eclvvn1z9().s[23]++;
    if (diffDays < 0) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[6][0]++;
      cov_1eclvvn1z9().s[24]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[6][1]++;
    }
    cov_1eclvvn1z9().s[25]++;
    if (diffDays <= 1) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[7][0]++;
      cov_1eclvvn1z9().s[26]++;
      return 'medium';
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[7][1]++;
    }
    cov_1eclvvn1z9().s[27]++;
    if (diffDays <= 7) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[8][0]++;
      cov_1eclvvn1z9().s[28]++;
      return 'low';
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[8][1]++;
    }
    cov_1eclvvn1z9().s[29]++;
    return 'none';
  },
  // Calculate days until fertilizer due (negative if overdue)
  calculateDaysUntilFertilizerDue: fertilizerDue => {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[3]++;
    cov_1eclvvn1z9().s[30]++;
    if (!fertilizerDue) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[9][0]++;
      cov_1eclvvn1z9().s[31]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[9][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[32]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[33]++, fertilizerDue.getTime() - now.getTime());
    /* istanbul ignore next */
    cov_1eclvvn1z9().s[34]++;
    return Math.ceil(diffMs / (1000 * 60 * 60 * 24));
  },
  // Calculate days since last fertilized
  calculateDaysSinceLastFertilized: lastFertilized => {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[4]++;
    cov_1eclvvn1z9().s[35]++;
    if (!lastFertilized) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[10][0]++;
      cov_1eclvvn1z9().s[36]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[10][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[37]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[38]++, now.getTime() - lastFertilized.getTime());
    /* istanbul ignore next */
    cov_1eclvvn1z9().s[39]++;
    return Math.floor(diffMs / (1000 * 60 * 60 * 24));
  },
  // Calculate days since last repot
  calculateDaysSinceLastRepot: lastRepot => {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[5]++;
    cov_1eclvvn1z9().s[40]++;
    if (!lastRepot) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[11][0]++;
      cov_1eclvvn1z9().s[41]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[11][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[42]++, new Date());
    const diffMs =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[43]++, now.getTime() - lastRepot.getTime());
    /* istanbul ignore next */
    cov_1eclvvn1z9().s[44]++;
    return Math.floor(diffMs / (1000 * 60 * 60 * 24));
  },
  // Get display name (nickname or plant common name)
  getDisplayName: (instance, plant) => {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[6]++;
    cov_1eclvvn1z9().s[45]++;
    return /* istanbul ignore next */(cov_1eclvvn1z9().b[12][0]++, instance.nickname) ||
    /* istanbul ignore next */
    (cov_1eclvvn1z9().b[12][1]++, plant?.commonName) ||
    /* istanbul ignore next */
    (cov_1eclvvn1z9().b[12][2]++, 'Unnamed Plant');
  },
  // Get primary image (first image or plant default image)
  getPrimaryImage: (instance, plant) => {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[7]++;
    cov_1eclvvn1z9().s[46]++;
    if (
    /* istanbul ignore next */
    (cov_1eclvvn1z9().b[14][0]++, instance.images) &&
    /* istanbul ignore next */
    (cov_1eclvvn1z9().b[14][1]++, instance.images.length > 0)) {
      /* istanbul ignore next */
      cov_1eclvvn1z9().b[13][0]++;
      cov_1eclvvn1z9().s[47]++;
      return instance.images[0];
    } else
    /* istanbul ignore next */
    {
      cov_1eclvvn1z9().b[13][1]++;
    }
    cov_1eclvvn1z9().s[48]++;
    return /* istanbul ignore next */(cov_1eclvvn1z9().b[15][0]++, plant?.defaultImage) ||
    /* istanbul ignore next */
    (cov_1eclvvn1z9().b[15][1]++, null);
  },
  // Enhance plant instance with computed properties
  enhancePlantInstance: (instance, plant) => {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[8]++;
    const careStatus =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[49]++, plantInstanceHelpers.calculateCareStatus(instance.fertilizerDue));
    const careUrgency =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[50]++, plantInstanceHelpers.calculateCareUrgency(instance.fertilizerDue));
    const daysUntilFertilizerDue =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[51]++, plantInstanceHelpers.calculateDaysUntilFertilizerDue(instance.fertilizerDue));
    const daysSinceLastFertilized =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[52]++, plantInstanceHelpers.calculateDaysSinceLastFertilized(instance.lastFertilized));
    const daysSinceLastRepot =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[53]++, plantInstanceHelpers.calculateDaysSinceLastRepot(instance.lastRepot));
    const displayName =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[54]++, plantInstanceHelpers.getDisplayName(instance, plant));
    const primaryImage =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[55]++, plantInstanceHelpers.getPrimaryImage(instance, plant));
    /* istanbul ignore next */
    cov_1eclvvn1z9().s[56]++;
    return {
      ...instance,
      plant,
      careStatus,
      careUrgency,
      daysUntilFertilizerDue,
      daysSinceLastFertilized,
      daysSinceLastRepot,
      displayName,
      primaryImage
    };
  },
  // Sort plant instances by care urgency
  sortByCareUrgency: instances => {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[9]++;
    const urgencyOrder =
    /* istanbul ignore next */
    (cov_1eclvvn1z9().s[57]++, {
      critical: 0,
      high: 1,
      medium: 2,
      low: 3,
      none: 4
    });
    /* istanbul ignore next */
    cov_1eclvvn1z9().s[58]++;
    return [...instances].sort((a, b) => {
      /* istanbul ignore next */
      cov_1eclvvn1z9().f[10]++;
      const aOrder =
      /* istanbul ignore next */
      (cov_1eclvvn1z9().s[59]++, urgencyOrder[a.careUrgency]);
      const bOrder =
      /* istanbul ignore next */
      (cov_1eclvvn1z9().s[60]++, urgencyOrder[b.careUrgency]);
      /* istanbul ignore next */
      cov_1eclvvn1z9().s[61]++;
      if (aOrder !== bOrder) {
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[16][0]++;
        cov_1eclvvn1z9().s[62]++;
        return aOrder - bOrder;
      } else
      /* istanbul ignore next */
      {
        cov_1eclvvn1z9().b[16][1]++;
      }
      // If same urgency, sort by fertilizer due date
      cov_1eclvvn1z9().s[63]++;
      if (
      /* istanbul ignore next */
      (cov_1eclvvn1z9().b[18][0]++, a.fertilizerDue) &&
      /* istanbul ignore next */
      (cov_1eclvvn1z9().b[18][1]++, b.fertilizerDue)) {
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[17][0]++;
        cov_1eclvvn1z9().s[64]++;
        return a.fertilizerDue.getTime() - b.fertilizerDue.getTime();
      } else
      /* istanbul ignore next */
      {
        cov_1eclvvn1z9().b[17][1]++;
      }
      // If one has no due date, prioritize the one with a due date
      cov_1eclvvn1z9().s[65]++;
      if (
      /* istanbul ignore next */
      (cov_1eclvvn1z9().b[20][0]++, a.fertilizerDue) &&
      /* istanbul ignore next */
      (cov_1eclvvn1z9().b[20][1]++, !b.fertilizerDue)) {
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[19][0]++;
        cov_1eclvvn1z9().s[66]++;
        return -1;
      } else
      /* istanbul ignore next */
      {
        cov_1eclvvn1z9().b[19][1]++;
      }
      cov_1eclvvn1z9().s[67]++;
      if (
      /* istanbul ignore next */
      (cov_1eclvvn1z9().b[22][0]++, !a.fertilizerDue) &&
      /* istanbul ignore next */
      (cov_1eclvvn1z9().b[22][1]++, b.fertilizerDue)) {
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[21][0]++;
        cov_1eclvvn1z9().s[68]++;
        return 1;
      } else
      /* istanbul ignore next */
      {
        cov_1eclvvn1z9().b[21][1]++;
      }
      // If neither has a due date, sort by nickname
      cov_1eclvvn1z9().s[69]++;
      return a.displayName.localeCompare(b.displayName);
    });
  },
  // Filter instances by care status
  filterByCareStatus: (instances, status) => {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[11]++;
    cov_1eclvvn1z9().s[70]++;
    return instances.filter(instance => {
      /* istanbul ignore next */
      cov_1eclvvn1z9().f[12]++;
      cov_1eclvvn1z9().s[71]++;
      return instance.careStatus === status;
    });
  },
  // Get care status color for UI
  getCareStatusColor: status => {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[13]++;
    cov_1eclvvn1z9().s[72]++;
    switch (status) {
      case 'overdue':
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[23][0]++;
        cov_1eclvvn1z9().s[73]++;
        return 'text-red-600 bg-red-50';
      case 'due_today':
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[23][1]++;
        cov_1eclvvn1z9().s[74]++;
        return 'text-amber-600 bg-amber-50';
      case 'due_soon':
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[23][2]++;
        cov_1eclvvn1z9().s[75]++;
        return 'text-yellow-600 bg-yellow-50';
      case 'healthy':
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[23][3]++;
        cov_1eclvvn1z9().s[76]++;
        return 'text-green-600 bg-green-50';
      case 'unknown':
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[23][4]++;
        cov_1eclvvn1z9().s[77]++;
        return 'text-gray-600 bg-gray-50';
      default:
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[23][5]++;
        cov_1eclvvn1z9().s[78]++;
        return 'text-gray-600 bg-gray-50';
    }
  },
  // Get care urgency color for UI
  getCareUrgencyColor: urgency => {
    /* istanbul ignore next */
    cov_1eclvvn1z9().f[14]++;
    cov_1eclvvn1z9().s[79]++;
    switch (urgency) {
      case 'critical':
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[24][0]++;
        cov_1eclvvn1z9().s[80]++;
        return 'bg-red-500';
      case 'high':
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[24][1]++;
        cov_1eclvvn1z9().s[81]++;
        return 'bg-red-400';
      case 'medium':
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[24][2]++;
        cov_1eclvvn1z9().s[82]++;
        return 'bg-amber-400';
      case 'low':
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[24][3]++;
        cov_1eclvvn1z9().s[83]++;
        return 'bg-yellow-400';
      case 'none':
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[24][4]++;
        cov_1eclvvn1z9().s[84]++;
        return 'bg-green-400';
      default:
        /* istanbul ignore next */
        cov_1eclvvn1z9().b[24][5]++;
        cov_1eclvvn1z9().s[85]++;
        return 'bg-gray-400';
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
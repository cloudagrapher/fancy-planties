7b0d629f4eca40ff53b6058aae77ea37
"use strict";

/* istanbul ignore next */
function cov_1kcfy4c2nf() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/lib/auth/index.ts";
  var hash = "2ca95585c2a1f5ce35c42d898ae3ad6ede8f3aae";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/lib/auth/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 48,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 26
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 27
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 28
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 38
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 22
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 23
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 22
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 30
        }
      },
      "16": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 49,
          column: 23
        }
      },
      "17": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 50,
          column: 77
        }
      },
      "18": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 38
        }
      },
      "19": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 28
        }
      },
      "20": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 39
        }
      },
      "21": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 54,
          column: 42
        }
      },
      "22": {
        start: {
          line: 55,
          column: 15
        },
        end: {
          line: 55,
          column: 33
        }
      },
      "23": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 56,
          column: 47
        }
      },
      "24": {
        start: {
          line: 57,
          column: 0
        },
        end: {
          line: 57,
          column: 47
        }
      },
      "25": {
        start: {
          line: 58,
          column: 0
        },
        end: {
          line: 58,
          column: 44
        }
      },
      "26": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 69,
          column: 7
        }
      },
      "27": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "28": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 67,
          column: 15
        }
      },
      "29": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 35
        }
      },
      "30": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 16
        }
      },
      "31": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 75,
          column: 6
        }
      },
      "32": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 78,
          column: 25
        }
      },
      "33": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 62
        }
      },
      "34": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 59
        }
      },
      "35": {
        start: {
          line: 85,
          column: 22
        },
        end: {
          line: 85,
          column: 125
        }
      },
      "36": {
        start: {
          line: 86,
          column: 22
        },
        end: {
          line: 86,
          column: 69
        }
      },
      "37": {
        start: {
          line: 87,
          column: 22
        },
        end: {
          line: 91,
          column: 18
        }
      },
      "38": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 19
        }
      },
      "39": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 52
        }
      },
      "40": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 65
        }
      },
      "41": {
        start: {
          line: 101,
          column: 27
        },
        end: {
          line: 101,
          column: 55
        }
      },
      "42": {
        start: {
          line: 102,
          column: 19
        },
        end: {
          line: 106,
          column: 18
        }
      },
      "43": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 107,
          column: 16
        }
      },
      "44": {
        start: {
          line: 110,
          column: 19
        },
        end: {
          line: 110,
          column: 129
        }
      },
      "45": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 111,
          column: 24
        }
      },
      "46": {
        start: {
          line: 114,
          column: 19
        },
        end: {
          line: 114,
          column: 109
        }
      },
      "47": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 24
        }
      },
      "48": {
        start: {
          line: 118,
          column: 17
        },
        end: {
          line: 118,
          column: 44
        }
      },
      "49": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "50": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 20
        }
      },
      "51": {
        start: {
          line: 122,
          column: 26
        },
        end: {
          line: 122,
          column: 77
        }
      },
      "52": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "53": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 20
        }
      },
      "54": {
        start: {
          line: 126,
          column: 25
        },
        end: {
          line: 126,
          column: 81
        }
      },
      "55": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "56": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 135,
          column: 6
        }
      },
      "57": {
        start: {
          line: 139,
          column: 25
        },
        end: {
          line: 139,
          column: 52
        }
      },
      "58": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "59": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 47
        }
      },
      "60": {
        start: {
          line: 144,
          column: 17
        },
        end: {
          line: 144,
          column: 56
        }
      },
      "61": {
        start: {
          line: 146,
          column: 25
        },
        end: {
          line: 146,
          column: 81
        }
      },
      "62": {
        start: {
          line: 147,
          column: 20
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "63": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 155,
          column: 6
        }
      },
      "64": {
        start: {
          line: 159,
          column: 25
        },
        end: {
          line: 159,
          column: 52
        }
      },
      "65": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "66": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 47
        }
      },
      "67": {
        start: {
          line: 164,
          column: 17
        },
        end: {
          line: 164,
          column: 56
        }
      },
      "68": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 16
        }
      },
      "69": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 168,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 25
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 18
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 26
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "13": {
        name: "_export_star",
        decl: {
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 59,
            column: 21
          }
        },
        loc: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 59
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 60,
            column: 30
          },
          end: {
            line: 60,
            column: 31
          }
        },
        loc: {
          start: {
            line: 60,
            column: 42
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 60
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 64,
            column: 21
          },
          end: {
            line: 64,
            column: 22
          }
        },
        loc: {
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 66,
            column: 17
          }
        },
        line: 64
      },
      "16": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 72,
            column: 9
          },
          end: {
            line: 72,
            column: 33
          }
        },
        loc: {
          start: {
            line: 72,
            column: 39
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 72
      },
      "17": {
        name: "hashPassword",
        decl: {
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 27
          }
        },
        loc: {
          start: {
            line: 77,
            column: 38
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 77
      },
      "18": {
        name: "verifyPassword",
        decl: {
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 29
          }
        },
        loc: {
          start: {
            line: 81,
            column: 46
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 81
      },
      "19": {
        name: "createSession",
        decl: {
          start: {
            line: 84,
            column: 15
          },
          end: {
            line: 84,
            column: 28
          }
        },
        loc: {
          start: {
            line: 84,
            column: 37
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 84
      },
      "20": {
        name: "invalidateSession",
        decl: {
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 32
          }
        },
        loc: {
          start: {
            line: 94,
            column: 44
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 94
      },
      "21": {
        name: "invalidateUserSessions",
        decl: {
          start: {
            line: 97,
            column: 15
          },
          end: {
            line: 97,
            column: 37
          }
        },
        loc: {
          start: {
            line: 97,
            column: 46
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 97
      },
      "22": {
        name: "createUser",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 25
          }
        },
        loc: {
          start: {
            line: 100,
            column: 49
          },
          end: {
            line: 108,
            column: 1
          }
        },
        line: 100
      },
      "23": {
        name: "getUserByEmail",
        decl: {
          start: {
            line: 109,
            column: 15
          },
          end: {
            line: 109,
            column: 29
          }
        },
        loc: {
          start: {
            line: 109,
            column: 37
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 109
      },
      "24": {
        name: "getUserById",
        decl: {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 26
          }
        },
        loc: {
          start: {
            line: 113,
            column: 31
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 113
      },
      "25": {
        name: "signIn",
        decl: {
          start: {
            line: 117,
            column: 15
          },
          end: {
            line: 117,
            column: 21
          }
        },
        loc: {
          start: {
            line: 117,
            column: 39
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 117
      },
      "26": {
        name: "signUp",
        decl: {
          start: {
            line: 137,
            column: 15
          },
          end: {
            line: 137,
            column: 21
          }
        },
        loc: {
          start: {
            line: 137,
            column: 45
          },
          end: {
            line: 156,
            column: 1
          }
        },
        line: 137
      },
      "27": {
        name: "signUpUnverified",
        decl: {
          start: {
            line: 157,
            column: 15
          },
          end: {
            line: 157,
            column: 31
          }
        },
        loc: {
          start: {
            line: 157,
            column: 55
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 157
      },
      "28": {
        name: "signOut",
        decl: {
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 167,
            column: 22
          }
        },
        loc: {
          start: {
            line: 167,
            column: 34
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 167
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "1": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 27
          }
        }, {
          start: {
            line: 61,
            column: 31
          },
          end: {
            line: 61,
            column: 75
          }
        }],
        line: 61
      },
      "2": {
        loc: {
          start: {
            line: 73,
            column: 11
          },
          end: {
            line: 75,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 35
          },
          end: {
            line: 73,
            column: 38
          }
        }, {
          start: {
            line: 73,
            column: 41
          },
          end: {
            line: 75,
            column: 5
          }
        }],
        line: 73
      },
      "3": {
        loc: {
          start: {
            line: 73,
            column: 11
          },
          end: {
            line: 73,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 11
          },
          end: {
            line: 73,
            column: 14
          }
        }, {
          start: {
            line: 73,
            column: 18
          },
          end: {
            line: 73,
            column: 32
          }
        }],
        line: 73
      },
      "4": {
        loc: {
          start: {
            line: 111,
            column: 11
          },
          end: {
            line: 111,
            column: 23
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 11
          },
          end: {
            line: 111,
            column: 15
          }
        }, {
          start: {
            line: 111,
            column: 19
          },
          end: {
            line: 111,
            column: 23
          }
        }],
        line: 111
      },
      "5": {
        loc: {
          start: {
            line: 115,
            column: 11
          },
          end: {
            line: 115,
            column: 23
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 11
          },
          end: {
            line: 115,
            column: 15
          }
        }, {
          start: {
            line: 115,
            column: 19
          },
          end: {
            line: 115,
            column: 23
          }
        }],
        line: 115
      },
      "6": {
        loc: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "7": {
        loc: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "8": {
        loc: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "9": {
        loc: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/lib/auth/index.ts"],
      sourcesContent: ["import 'server-only';\n\nimport bcrypt from 'bcryptjs';\nimport { generateRandomString } from 'oslo/crypto';\nimport { db } from '../db';\nimport { users, sessions, type User as DatabaseUser, type Session as DatabaseSession } from '../db/schema';\nimport { eq } from 'drizzle-orm';\nimport { lucia } from './lucia';\n\n// Export types for use throughout the application\nexport type User = DatabaseUser;\nexport type Session = DatabaseSession;\n\n// Password hashing utilities\nexport async function hashPassword(password: string): Promise<string> {\n  const saltRounds = 12;\n  return await bcrypt.hash(password, saltRounds);\n}\n\nexport async function verifyPassword(password: string, hash: string): Promise<boolean> {\n  return await bcrypt.compare(password, hash);\n}\n\n// Session management utilities\nexport async function createSession(userId: number): Promise<Session> {\n  const sessionId = generateRandomString(40, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  const expiresAt = new Date(Date.now() + 1000 * 60 * 60 * 24 * 30); // 30 days\n  \n  const [session] = await db.insert(sessions).values({\n    id: sessionId,\n    userId,\n    expiresAt,\n  }).returning();\n  \n  return session;\n}\n\nexport async function invalidateSession(sessionId: string): Promise<void> {\n  await lucia.invalidateSession(sessionId);\n}\n\nexport async function invalidateUserSessions(userId: number): Promise<void> {\n  await lucia.invalidateUserSessions(userId.toString());\n}\n\n\n// User management utilities\nexport async function createUser(email: string, password: string, name: string): Promise<User> {\n  const hashedPassword = await hashPassword(password);\n  \n  const [user] = await db.insert(users).values({\n    email: email.toLowerCase(),\n    hashedPassword,\n    name,\n  }).returning();\n  \n  return user;\n}\n\nexport async function getUserByEmail(email: string): Promise<User | null> {\n  const [user] = await db.select().from(users).where(eq(users.email, email.toLowerCase()));\n  return user || null;\n}\n\nexport async function getUserById(id: number): Promise<User | null> {\n  const [user] = await db.select().from(users).where(eq(users.id, id));\n  return user || null;\n}\n\n// Authentication flow helpers\nexport async function signIn(email: string, password: string): Promise<{ user: User; session: Session } | null> {\n  const user = await getUserByEmail(email);\n  \n  if (!user) {\n    return null;\n  }\n  \n  const validPassword = await verifyPassword(password, user.hashedPassword);\n  \n  if (!validPassword) {\n    return null;\n  }\n  \n  const luciaSession = await lucia.createSession(user.id.toString(), {});\n  \n  const session: Session = {\n    id: luciaSession.id,\n    userId: user.id,\n    expiresAt: luciaSession.expiresAt,\n  };\n  \n  return {\n    user,\n    session,\n  };\n}\n\nexport async function signUp(email: string, password: string, name: string): Promise<{ user: User; session: Session }> {\n  // Check if user already exists\n  const existingUser = await getUserByEmail(email);\n  \n  if (existingUser) {\n    throw new Error('User already exists');\n  }\n  \n  // Create new user\n  const user = await createUser(email, password, name);\n  \n  // Create session\n  const luciaSession = await lucia.createSession(user.id.toString(), {});\n  \n  const session: Session = {\n    id: luciaSession.id,\n    userId: user.id,\n    expiresAt: luciaSession.expiresAt,\n  };\n  \n  return {\n    user,\n    session,\n  };\n}\n\nexport async function signUpUnverified(email: string, password: string, name: string): Promise<User> {\n  // Check if user already exists\n  const existingUser = await getUserByEmail(email);\n  \n  if (existingUser) {\n    throw new Error('User already exists');\n  }\n  \n  // Create new unverified user (no session created)\n  const user = await createUser(email, password, name);\n  \n  return user;\n}\n\nexport async function signOut(sessionId: string): Promise<void> {\n  await lucia.invalidateSession(sessionId);\n}\n\n// Re-export utilities from other auth modules  \nexport * from './validation';\nexport * from './middleware';\nexport * from './session';"],
      names: ["createSession", "createUser", "getUserByEmail", "getUserById", "hashPassword", "invalidateSession", "invalidateUserSessions", "signIn", "signOut", "signUp", "signUpUnverified", "verifyPassword", "password", "saltRounds", "bcrypt", "hash", "compare", "userId", "sessionId", "generateRandomString", "expiresAt", "Date", "now", "session", "db", "insert", "sessions", "values", "id", "returning", "lucia", "toString", "email", "name", "hashedPassword", "user", "users", "toLowerCase", "select", "from", "where", "eq", "validPassword", "luciaSession", "existingUser", "Error"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2ca95585c2a1f5ce35c42d898ae3ad6ede8f3aae"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kcfy4c2nf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kcfy4c2nf();
cov_1kcfy4c2nf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[0]++;
  cov_1kcfy4c2nf().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1kcfy4c2nf().s[3]++;
_export(exports, {
  get createSession() {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[1]++;
    cov_1kcfy4c2nf().s[4]++;
    return createSession;
  },
  get createUser() {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[2]++;
    cov_1kcfy4c2nf().s[5]++;
    return createUser;
  },
  get getUserByEmail() {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[3]++;
    cov_1kcfy4c2nf().s[6]++;
    return getUserByEmail;
  },
  get getUserById() {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[4]++;
    cov_1kcfy4c2nf().s[7]++;
    return getUserById;
  },
  get hashPassword() {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[5]++;
    cov_1kcfy4c2nf().s[8]++;
    return hashPassword;
  },
  get invalidateSession() {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[6]++;
    cov_1kcfy4c2nf().s[9]++;
    return invalidateSession;
  },
  get invalidateUserSessions() {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[7]++;
    cov_1kcfy4c2nf().s[10]++;
    return invalidateUserSessions;
  },
  get signIn() {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[8]++;
    cov_1kcfy4c2nf().s[11]++;
    return signIn;
  },
  get signOut() {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[9]++;
    cov_1kcfy4c2nf().s[12]++;
    return signOut;
  },
  get signUp() {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[10]++;
    cov_1kcfy4c2nf().s[13]++;
    return signUp;
  },
  get signUpUnverified() {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[11]++;
    cov_1kcfy4c2nf().s[14]++;
    return signUpUnverified;
  },
  get verifyPassword() {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[12]++;
    cov_1kcfy4c2nf().s[15]++;
    return verifyPassword;
  }
});
/* istanbul ignore next */
cov_1kcfy4c2nf().s[16]++;
require("server-only");
const _bcryptjs =
/* istanbul ignore next */
(/*#__PURE__*/cov_1kcfy4c2nf().s[17]++, _interop_require_default(require("bcryptjs")));
const _crypto =
/* istanbul ignore next */
(cov_1kcfy4c2nf().s[18]++, require("oslo/crypto"));
const _db =
/* istanbul ignore next */
(cov_1kcfy4c2nf().s[19]++, require("../db"));
const _schema =
/* istanbul ignore next */
(cov_1kcfy4c2nf().s[20]++, require("../db/schema"));
const _drizzleorm =
/* istanbul ignore next */
(cov_1kcfy4c2nf().s[21]++, require("drizzle-orm"));
const _lucia =
/* istanbul ignore next */
(cov_1kcfy4c2nf().s[22]++, require("./lucia"));
/* istanbul ignore next */
cov_1kcfy4c2nf().s[23]++;
_export_star(require("./validation"), exports);
/* istanbul ignore next */
cov_1kcfy4c2nf().s[24]++;
_export_star(require("./middleware"), exports);
/* istanbul ignore next */
cov_1kcfy4c2nf().s[25]++;
_export_star(require("./session"), exports);
function _export_star(from, to) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[13]++;
  cov_1kcfy4c2nf().s[26]++;
  Object.keys(from).forEach(function (k) {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().f[14]++;
    cov_1kcfy4c2nf().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_1kcfy4c2nf().b[1][0]++, k !== "default") &&
    /* istanbul ignore next */
    (cov_1kcfy4c2nf().b[1][1]++, !Object.prototype.hasOwnProperty.call(to, k))) {
      /* istanbul ignore next */
      cov_1kcfy4c2nf().b[0][0]++;
      cov_1kcfy4c2nf().s[28]++;
      Object.defineProperty(to, k, {
        enumerable: true,
        get: function () {
          /* istanbul ignore next */
          cov_1kcfy4c2nf().f[15]++;
          cov_1kcfy4c2nf().s[29]++;
          return from[k];
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1kcfy4c2nf().b[0][1]++;
    }
  });
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[30]++;
  return from;
}
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[16]++;
  cov_1kcfy4c2nf().s[31]++;
  return /* istanbul ignore next */(cov_1kcfy4c2nf().b[3][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().b[3][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().b[2][0]++, obj) :
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().b[2][1]++, {
    default: obj
  });
}
async function hashPassword(password) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[17]++;
  const saltRounds =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[32]++, 12);
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[33]++;
  return await _bcryptjs.default.hash(password, saltRounds);
}
async function verifyPassword(password, hash) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[18]++;
  cov_1kcfy4c2nf().s[34]++;
  return await _bcryptjs.default.compare(password, hash);
}
async function createSession(userId) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[19]++;
  const sessionId =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[35]++, (0, _crypto.generateRandomString)(40, '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'));
  const expiresAt =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[36]++, new Date(Date.now() + 1000 * 60 * 60 * 24 * 30)); // 30 days
  const [session] =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[37]++, await _db.db.insert(_schema.sessions).values({
    id: sessionId,
    userId,
    expiresAt
  }).returning());
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[38]++;
  return session;
}
async function invalidateSession(sessionId) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[20]++;
  cov_1kcfy4c2nf().s[39]++;
  await _lucia.lucia.invalidateSession(sessionId);
}
async function invalidateUserSessions(userId) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[21]++;
  cov_1kcfy4c2nf().s[40]++;
  await _lucia.lucia.invalidateUserSessions(userId.toString());
}
async function createUser(email, password, name) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[22]++;
  const hashedPassword =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[41]++, await hashPassword(password));
  const [user] =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[42]++, await _db.db.insert(_schema.users).values({
    email: email.toLowerCase(),
    hashedPassword,
    name
  }).returning());
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[43]++;
  return user;
}
async function getUserByEmail(email) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[23]++;
  const [user] =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[44]++, await _db.db.select().from(_schema.users).where((0, _drizzleorm.eq)(_schema.users.email, email.toLowerCase())));
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[45]++;
  return /* istanbul ignore next */(cov_1kcfy4c2nf().b[4][0]++, user) ||
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().b[4][1]++, null);
}
async function getUserById(id) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[24]++;
  const [user] =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[46]++, await _db.db.select().from(_schema.users).where((0, _drizzleorm.eq)(_schema.users.id, id)));
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[47]++;
  return /* istanbul ignore next */(cov_1kcfy4c2nf().b[5][0]++, user) ||
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().b[5][1]++, null);
}
async function signIn(email, password) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[25]++;
  const user =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[48]++, await getUserByEmail(email));
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[49]++;
  if (!user) {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().b[6][0]++;
    cov_1kcfy4c2nf().s[50]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1kcfy4c2nf().b[6][1]++;
  }
  const validPassword =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[51]++, await verifyPassword(password, user.hashedPassword));
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[52]++;
  if (!validPassword) {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().b[7][0]++;
    cov_1kcfy4c2nf().s[53]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1kcfy4c2nf().b[7][1]++;
  }
  const luciaSession =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[54]++, await _lucia.lucia.createSession(user.id.toString(), {}));
  const session =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[55]++, {
    id: luciaSession.id,
    userId: user.id,
    expiresAt: luciaSession.expiresAt
  });
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[56]++;
  return {
    user,
    session
  };
}
async function signUp(email, password, name) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[26]++;
  // Check if user already exists
  const existingUser =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[57]++, await getUserByEmail(email));
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[58]++;
  if (existingUser) {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().b[8][0]++;
    cov_1kcfy4c2nf().s[59]++;
    throw new Error('User already exists');
  } else
  /* istanbul ignore next */
  {
    cov_1kcfy4c2nf().b[8][1]++;
  }
  // Create new user
  const user =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[60]++, await createUser(email, password, name));
  // Create session
  const luciaSession =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[61]++, await _lucia.lucia.createSession(user.id.toString(), {}));
  const session =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[62]++, {
    id: luciaSession.id,
    userId: user.id,
    expiresAt: luciaSession.expiresAt
  });
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[63]++;
  return {
    user,
    session
  };
}
async function signUpUnverified(email, password, name) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[27]++;
  // Check if user already exists
  const existingUser =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[64]++, await getUserByEmail(email));
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[65]++;
  if (existingUser) {
    /* istanbul ignore next */
    cov_1kcfy4c2nf().b[9][0]++;
    cov_1kcfy4c2nf().s[66]++;
    throw new Error('User already exists');
  } else
  /* istanbul ignore next */
  {
    cov_1kcfy4c2nf().b[9][1]++;
  }
  // Create new unverified user (no session created)
  const user =
  /* istanbul ignore next */
  (cov_1kcfy4c2nf().s[67]++, await createUser(email, password, name));
  /* istanbul ignore next */
  cov_1kcfy4c2nf().s[68]++;
  return user;
}
async function signOut(sessionId) {
  /* istanbul ignore next */
  cov_1kcfy4c2nf().f[28]++;
  cov_1kcfy4c2nf().s[69]++;
  await _lucia.lucia.invalidateSession(sessionId);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/lib/auth/client.ts"],"sourcesContent":["// Client-safe auth utilities\nexport interface User {\n  id: number;\n  email: string;\n  name: string;\n}\n\nexport interface Session {\n  id: string;\n  userId: number;\n  expiresAt: Date;\n}\n\n// Session security helpers (client-safe)\nexport function getSessionSecurityInfo(request: Request) {\n  const userAgent = request.headers.get('user-agent') || 'Unknown';\n  const ip = request.headers.get('x-forwarded-for') || \n            request.headers.get('x-real-ip') || \n            'Unknown';\n  \n  return {\n    userAgent,\n    ip,\n    timestamp: new Date().toISOString(),\n  };\n}\n\n// Session activity tracking (for future security features)\nexport interface SessionActivity {\n  sessionId: string;\n  userId: number;\n  action: string;\n  ip: string;\n  userAgent: string;\n  timestamp: Date;\n}\n\n// Auth state types for client components\nexport interface AuthState {\n  user: User | null;\n  session: Session | null;\n  loading: boolean;\n}\n\n// Client-side auth API calls\nexport async function signInClient(email: string, password: string): Promise<{ user: User; session: Session }> {\n  const response = await fetch('/api/auth/signin', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n\n  if (!response.ok) {\n    const error = await response.text();\n    throw new Error(error || 'Sign in failed');\n  }\n\n  return response.json();\n}\n\nexport async function signUpClient(email: string, password: string, name: string): Promise<{ user: User; session: Session }> {\n  const response = await fetch('/api/auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password, name }),\n  });\n\n  if (!response.ok) {\n    const error = await response.text();\n    throw new Error(error || 'Sign up failed');\n  }\n\n  return response.json();\n}\n\nexport async function signOutClient(): Promise<void> {\n  const response = await fetch('/api/auth/signout', {\n    method: 'POST',\n  });\n\n  if (!response.ok) {\n    throw new Error('Sign out failed');\n  }\n}\n\nexport async function getCurrentUser(): Promise<{ user: User; session: Session } | null> {\n  try {\n    const response = await fetch('/api/user/me');\n    \n    if (!response.ok) {\n      return null;\n    }\n\n    return response.json();\n  } catch (error) {\n    console.error('Failed to get current user:', error);\n    return null;\n  }\n}"],"names":["getCurrentUser","getSessionSecurityInfo","signInClient","signOutClient","signUpClient","request","userAgent","headers","get","ip","timestamp","Date","toISOString","email","password","response","fetch","method","body","JSON","stringify","ok","error","text","Error","json","name","console"],"mappings":"AAAA,6BAA6B;;;;;;;;;;;;QAyFPA;eAAAA;;QA3ENC;eAAAA;;QA+BMC;eAAAA;;QAkCAC;eAAAA;;QAjBAC;eAAAA;;;AAhDf,SAASH,uBAAuBI,OAAgB;IACrD,MAAMC,YAAYD,QAAQE,OAAO,CAACC,GAAG,CAAC,iBAAiB;IACvD,MAAMC,KAAKJ,QAAQE,OAAO,CAACC,GAAG,CAAC,sBACrBH,QAAQE,OAAO,CAACC,GAAG,CAAC,gBACpB;IAEV,OAAO;QACLF;QACAG;QACAC,WAAW,IAAIC,OAAOC,WAAW;IACnC;AACF;AAoBO,eAAeV,aAAaW,KAAa,EAAEC,QAAgB;IAChE,MAAMC,WAAW,MAAMC,MAAM,oBAAoB;QAC/CC,QAAQ;QACRV,SAAS;YACP,gBAAgB;QAClB;QACAW,MAAMC,KAAKC,SAAS,CAAC;YAAEP;YAAOC;QAAS;IACzC;IAEA,IAAI,CAACC,SAASM,EAAE,EAAE;QAChB,MAAMC,QAAQ,MAAMP,SAASQ,IAAI;QACjC,MAAM,IAAIC,MAAMF,SAAS;IAC3B;IAEA,OAAOP,SAASU,IAAI;AACtB;AAEO,eAAerB,aAAaS,KAAa,EAAEC,QAAgB,EAAEY,IAAY;IAC9E,MAAMX,WAAW,MAAMC,MAAM,oBAAoB;QAC/CC,QAAQ;QACRV,SAAS;YACP,gBAAgB;QAClB;QACAW,MAAMC,KAAKC,SAAS,CAAC;YAAEP;YAAOC;YAAUY;QAAK;IAC/C;IAEA,IAAI,CAACX,SAASM,EAAE,EAAE;QAChB,MAAMC,QAAQ,MAAMP,SAASQ,IAAI;QACjC,MAAM,IAAIC,MAAMF,SAAS;IAC3B;IAEA,OAAOP,SAASU,IAAI;AACtB;AAEO,eAAetB;IACpB,MAAMY,WAAW,MAAMC,MAAM,qBAAqB;QAChDC,QAAQ;IACV;IAEA,IAAI,CAACF,SAASM,EAAE,EAAE;QAChB,MAAM,IAAIG,MAAM;IAClB;AACF;AAEO,eAAexB;IACpB,IAAI;QACF,MAAMe,WAAW,MAAMC,MAAM;QAE7B,IAAI,CAACD,SAASM,EAAE,EAAE;YAChB,OAAO;QACT;QAEA,OAAON,SAASU,IAAI;IACtB,EAAE,OAAOH,OAAO;QACdK,QAAQL,KAAK,CAAC,+BAA+BA;QAC7C,OAAO;IACT;AACF"}
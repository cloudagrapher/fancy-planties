d18ee084de29fc4af8f840fc0f2aaa27
// Re-export client-safe utilities
"use strict";

/* istanbul ignore next */
function cov_1h8ui8svcg() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/lib/auth/session.ts";
  var hash = "6ac7e734589781e333105119439b43fea91c24fb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/lib/auth/session.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 34
        }
      },
      "6": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 43
        }
      },
      "7": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 31,
          column: 7
        }
      },
      "8": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "9": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 29,
          column: 15
        }
      },
      "10": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 35
        }
      },
      "11": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 16
        }
      },
      "12": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 36,
          column: 28
        }
      },
      "13": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "14": {
        start: {
          line: 43,
          column: 40
        },
        end: {
          line: 43,
          column: 105
        }
      },
      "15": {
        start: {
          line: 43,
          column: 70
        },
        end: {
          line: 43,
          column: 104
        }
      },
      "16": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "17": {
        start: {
          line: 45,
          column: 25
        },
        end: {
          line: 45,
          column: 67
        }
      },
      "18": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "19": {
        start: {
          line: 47,
          column: 26
        },
        end: {
          line: 47,
          column: 61
        }
      },
      "20": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "21": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 51
        }
      },
      "22": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 68
        }
      },
      "23": {
        start: {
          line: 55,
          column: 41
        },
        end: {
          line: 55,
          column: 66
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_export_star",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 21
          }
        },
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 30
          },
          end: {
            line: 22,
            column: 31
          }
        },
        loc: {
          start: {
            line: 22,
            column: 42
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 21
          },
          end: {
            line: 26,
            column: 22
          }
        },
        loc: {
          start: {
            line: 26,
            column: 32
          },
          end: {
            line: 28,
            column: 17
          }
        },
        line: 26
      },
      "6": {
        name: "logSessionActivity",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 27
          }
        },
        loc: {
          start: {
            line: 37,
            column: 38
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 37
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 43,
            column: 65
          },
          end: {
            line: 43,
            column: 66
          }
        },
        loc: {
          start: {
            line: 43,
            column: 70
          },
          end: {
            line: 43,
            column: 104
          }
        },
        line: 43
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 46,
            column: 26
          }
        },
        loc: {
          start: {
            line: 46,
            column: 37
          },
          end: {
            line: 51,
            column: 9
          }
        },
        line: 46
      },
      "9": {
        name: "getSessionActivities",
        decl: {
          start: {
            line: 54,
            column: 9
          },
          end: {
            line: 54,
            column: 29
          }
        },
        loc: {
          start: {
            line: 54,
            column: 41
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 54
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 55,
            column: 36
          },
          end: {
            line: 55,
            column: 37
          }
        },
        loc: {
          start: {
            line: 55,
            column: 41
          },
          end: {
            line: 55,
            column: 66
          }
        },
        line: 55
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 27
          }
        }, {
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 23,
            column: 75
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/lib/auth/session.ts"],
      sourcesContent: ["// Re-export client-safe utilities\nexport * from './client';\n\n// In-memory session activity storage (for demonstration)\n// In production, this would be in a database\nconst sessionActivities: SessionActivity[] = [];\n\nexport function logSessionActivity(activity: Omit<SessionActivity, 'timestamp'>) {\n  sessionActivities.push({\n    ...activity,\n    timestamp: new Date(),\n  });\n  \n  // Keep only last 100 activities per session (in memory)\n  const sessionActivitiesForSession = sessionActivities.filter(\n    a => a.sessionId === activity.sessionId\n  );\n  \n  if (sessionActivitiesForSession.length > 100) {\n    const toRemove = sessionActivitiesForSession.slice(0, -100);\n    toRemove.forEach(activity => {\n      const index = sessionActivities.indexOf(activity);\n      if (index > -1) {\n        sessionActivities.splice(index, 1);\n      }\n    });\n  }\n}\n\nexport function getSessionActivities(sessionId: string): SessionActivity[] {\n  return sessionActivities.filter(a => a.sessionId === sessionId);\n}\n\n// Import SessionActivity type from client\nimport type { SessionActivity } from './client';"],
      names: ["getSessionActivities", "logSessionActivity", "sessionActivities", "activity", "push", "timestamp", "Date", "sessionActivitiesForSession", "filter", "a", "sessionId", "length", "toRemove", "slice", "forEach", "index", "indexOf", "splice"],
      mappings: "AAAA,kCAAkC;;;;;;;;;;;;QA6BlBA;eAAAA;;QAtBAC;eAAAA;;;qBANF;;;;;;;;;;;;;;AAEd,yDAAyD;AACzD,6CAA6C;AAC7C,MAAMC,oBAAuC,EAAE;AAExC,SAASD,mBAAmBE,QAA4C;IAC7ED,kBAAkBE,IAAI,CAAC;QACrB,GAAGD,QAAQ;QACXE,WAAW,IAAIC;IACjB;IAEA,wDAAwD;IACxD,MAAMC,8BAA8BL,kBAAkBM,MAAM,CAC1DC,CAAAA,IAAKA,EAAEC,SAAS,KAAKP,SAASO,SAAS;IAGzC,IAAIH,4BAA4BI,MAAM,GAAG,KAAK;QAC5C,MAAMC,WAAWL,4BAA4BM,KAAK,CAAC,GAAG,CAAC;QACvDD,SAASE,OAAO,CAACX,CAAAA;YACf,MAAMY,QAAQb,kBAAkBc,OAAO,CAACb;YACxC,IAAIY,QAAQ,CAAC,GAAG;gBACdb,kBAAkBe,MAAM,CAACF,OAAO;YAClC;QACF;IACF;AACF;AAEO,SAASf,qBAAqBU,SAAiB;IACpD,OAAOR,kBAAkBM,MAAM,CAACC,CAAAA,IAAKA,EAAEC,SAAS,KAAKA;AACvD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6ac7e734589781e333105119439b43fea91c24fb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1h8ui8svcg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1h8ui8svcg();
cov_1h8ui8svcg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1h8ui8svcg().f[0]++;
  cov_1h8ui8svcg().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1h8ui8svcg().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1h8ui8svcg().s[3]++;
_export(exports, {
  get getSessionActivities() {
    /* istanbul ignore next */
    cov_1h8ui8svcg().f[1]++;
    cov_1h8ui8svcg().s[4]++;
    return getSessionActivities;
  },
  get logSessionActivity() {
    /* istanbul ignore next */
    cov_1h8ui8svcg().f[2]++;
    cov_1h8ui8svcg().s[5]++;
    return logSessionActivity;
  }
});
/* istanbul ignore next */
cov_1h8ui8svcg().s[6]++;
_export_star(require("./client"), exports);
function _export_star(from, to) {
  /* istanbul ignore next */
  cov_1h8ui8svcg().f[3]++;
  cov_1h8ui8svcg().s[7]++;
  Object.keys(from).forEach(function (k) {
    /* istanbul ignore next */
    cov_1h8ui8svcg().f[4]++;
    cov_1h8ui8svcg().s[8]++;
    if (
    /* istanbul ignore next */
    (cov_1h8ui8svcg().b[1][0]++, k !== "default") &&
    /* istanbul ignore next */
    (cov_1h8ui8svcg().b[1][1]++, !Object.prototype.hasOwnProperty.call(to, k))) {
      /* istanbul ignore next */
      cov_1h8ui8svcg().b[0][0]++;
      cov_1h8ui8svcg().s[9]++;
      Object.defineProperty(to, k, {
        enumerable: true,
        get: function () {
          /* istanbul ignore next */
          cov_1h8ui8svcg().f[5]++;
          cov_1h8ui8svcg().s[10]++;
          return from[k];
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1h8ui8svcg().b[0][1]++;
    }
  });
  /* istanbul ignore next */
  cov_1h8ui8svcg().s[11]++;
  return from;
}
// In-memory session activity storage (for demonstration)
// In production, this would be in a database
const sessionActivities =
/* istanbul ignore next */
(cov_1h8ui8svcg().s[12]++, []);
function logSessionActivity(activity) {
  /* istanbul ignore next */
  cov_1h8ui8svcg().f[6]++;
  cov_1h8ui8svcg().s[13]++;
  sessionActivities.push({
    ...activity,
    timestamp: new Date()
  });
  // Keep only last 100 activities per session (in memory)
  const sessionActivitiesForSession =
  /* istanbul ignore next */
  (cov_1h8ui8svcg().s[14]++, sessionActivities.filter(a => {
    /* istanbul ignore next */
    cov_1h8ui8svcg().f[7]++;
    cov_1h8ui8svcg().s[15]++;
    return a.sessionId === activity.sessionId;
  }));
  /* istanbul ignore next */
  cov_1h8ui8svcg().s[16]++;
  if (sessionActivitiesForSession.length > 100) {
    /* istanbul ignore next */
    cov_1h8ui8svcg().b[2][0]++;
    const toRemove =
    /* istanbul ignore next */
    (cov_1h8ui8svcg().s[17]++, sessionActivitiesForSession.slice(0, -100));
    /* istanbul ignore next */
    cov_1h8ui8svcg().s[18]++;
    toRemove.forEach(activity => {
      /* istanbul ignore next */
      cov_1h8ui8svcg().f[8]++;
      const index =
      /* istanbul ignore next */
      (cov_1h8ui8svcg().s[19]++, sessionActivities.indexOf(activity));
      /* istanbul ignore next */
      cov_1h8ui8svcg().s[20]++;
      if (index > -1) {
        /* istanbul ignore next */
        cov_1h8ui8svcg().b[3][0]++;
        cov_1h8ui8svcg().s[21]++;
        sessionActivities.splice(index, 1);
      } else
      /* istanbul ignore next */
      {
        cov_1h8ui8svcg().b[3][1]++;
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1h8ui8svcg().b[2][1]++;
  }
}
function getSessionActivities(sessionId) {
  /* istanbul ignore next */
  cov_1h8ui8svcg().f[9]++;
  cov_1h8ui8svcg().s[22]++;
  return sessionActivities.filter(a => {
    /* istanbul ignore next */
    cov_1h8ui8svcg().f[10]++;
    cov_1h8ui8svcg().s[23]++;
    return a.sessionId === sessionId;
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWg4dWk4c3ZjZyIsImFjdHVhbENvdmVyYWdlIiwicyIsImdldFNlc3Npb25BY3Rpdml0aWVzIiwiZiIsImxvZ1Nlc3Npb25BY3Rpdml0eSIsImV4cG9ydHMiLCJzZXNzaW9uQWN0aXZpdGllcyIsImFjdGl2aXR5IiwicHVzaCIsInRpbWVzdGFtcCIsIkRhdGUiLCJzZXNzaW9uQWN0aXZpdGllc0ZvclNlc3Npb24iLCJmaWx0ZXIiLCJhIiwic2Vzc2lvbklkIiwibGVuZ3RoIiwiYiIsInRvUmVtb3ZlIiwic2xpY2UiLCJmb3JFYWNoIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIl0sInNvdXJjZXMiOlsiL1VzZXJzL3N0ZWZhbmJla2tlci9wcm9qZWN0cy9mYW5jeS1wbGFudGllcy9zcmMvbGliL2F1dGgvc2Vzc2lvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBSZS1leHBvcnQgY2xpZW50LXNhZmUgdXRpbGl0aWVzXG5leHBvcnQgKiBmcm9tICcuL2NsaWVudCc7XG5cbi8vIEluLW1lbW9yeSBzZXNzaW9uIGFjdGl2aXR5IHN0b3JhZ2UgKGZvciBkZW1vbnN0cmF0aW9uKVxuLy8gSW4gcHJvZHVjdGlvbiwgdGhpcyB3b3VsZCBiZSBpbiBhIGRhdGFiYXNlXG5jb25zdCBzZXNzaW9uQWN0aXZpdGllczogU2Vzc2lvbkFjdGl2aXR5W10gPSBbXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGxvZ1Nlc3Npb25BY3Rpdml0eShhY3Rpdml0eTogT21pdDxTZXNzaW9uQWN0aXZpdHksICd0aW1lc3RhbXAnPikge1xuICBzZXNzaW9uQWN0aXZpdGllcy5wdXNoKHtcbiAgICAuLi5hY3Rpdml0eSxcbiAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCksXG4gIH0pO1xuICBcbiAgLy8gS2VlcCBvbmx5IGxhc3QgMTAwIGFjdGl2aXRpZXMgcGVyIHNlc3Npb24gKGluIG1lbW9yeSlcbiAgY29uc3Qgc2Vzc2lvbkFjdGl2aXRpZXNGb3JTZXNzaW9uID0gc2Vzc2lvbkFjdGl2aXRpZXMuZmlsdGVyKFxuICAgIGEgPT4gYS5zZXNzaW9uSWQgPT09IGFjdGl2aXR5LnNlc3Npb25JZFxuICApO1xuICBcbiAgaWYgKHNlc3Npb25BY3Rpdml0aWVzRm9yU2Vzc2lvbi5sZW5ndGggPiAxMDApIHtcbiAgICBjb25zdCB0b1JlbW92ZSA9IHNlc3Npb25BY3Rpdml0aWVzRm9yU2Vzc2lvbi5zbGljZSgwLCAtMTAwKTtcbiAgICB0b1JlbW92ZS5mb3JFYWNoKGFjdGl2aXR5ID0+IHtcbiAgICAgIGNvbnN0IGluZGV4ID0gc2Vzc2lvbkFjdGl2aXRpZXMuaW5kZXhPZihhY3Rpdml0eSk7XG4gICAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICBzZXNzaW9uQWN0aXZpdGllcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTZXNzaW9uQWN0aXZpdGllcyhzZXNzaW9uSWQ6IHN0cmluZyk6IFNlc3Npb25BY3Rpdml0eVtdIHtcbiAgcmV0dXJuIHNlc3Npb25BY3Rpdml0aWVzLmZpbHRlcihhID0+IGEuc2Vzc2lvbklkID09PSBzZXNzaW9uSWQpO1xufVxuXG4vLyBJbXBvcnQgU2Vzc2lvbkFjdGl2aXR5IHR5cGUgZnJvbSBjbGllbnRcbmltcG9ydCB0eXBlIHsgU2Vzc2lvbkFjdGl2aXR5IH0gZnJvbSAnLi9jbGllbnQnOyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQU9nQjtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFzQkFDLHFCQUFBO0lBQUE7SUFBQUgsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtXQUFBQyxvQkFBQTs7TUF0QkFFLG1CQUFBO0lBQUE7SUFBQUwsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtXQUFBRyxrQkFBQTs7Ozs7cUJBTkYsYUFBQUMsT0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWQ7QUFDQTtBQUNBLE1BQU1DLGlCQUFBO0FBQUE7QUFBQSxDQUFBUCxjQUFBLEdBQUFFLENBQUEsUUFBdUMsRUFBRTtBQUV4QyxTQUFTRyxtQkFBbUJHLFFBQTRDO0VBQUE7RUFBQVIsY0FBQSxHQUFBSSxDQUFBO0VBQUFKLGNBQUEsR0FBQUUsQ0FBQTtFQUM3RUssaUJBQUEsQ0FBa0JFLElBQUksQ0FBQztJQUNyQixHQUFHRCxRQUFRO0lBQ1hFLFNBQUEsRUFBVyxJQUFJQyxJQUFBO0VBQ2pCO0VBRUE7RUFDQSxNQUFNQywyQkFBQTtFQUFBO0VBQUEsQ0FBQVosY0FBQSxHQUFBRSxDQUFBLFFBQThCSyxpQkFBQSxDQUFrQk0sTUFBTSxDQUMxREMsQ0FBQSxJQUFLO0lBQUE7SUFBQWQsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtJQUFBLE9BQUFZLENBQUEsQ0FBRUMsU0FBUyxLQUFLUCxRQUFBLENBQVNPLFNBQVM7RUFBVCxDQUFTO0VBQUE7RUFBQWYsY0FBQSxHQUFBRSxDQUFBO0VBR3pDLElBQUlVLDJCQUFBLENBQTRCSSxNQUFNLEdBQUcsS0FBSztJQUFBO0lBQUFoQixjQUFBLEdBQUFpQixDQUFBO0lBQzVDLE1BQU1DLFFBQUE7SUFBQTtJQUFBLENBQUFsQixjQUFBLEdBQUFFLENBQUEsUUFBV1UsMkJBQUEsQ0FBNEJPLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFBQTtJQUFBbkIsY0FBQSxHQUFBRSxDQUFBO0lBQ3ZEZ0IsUUFBQSxDQUFTRSxPQUFPLENBQUNaLFFBQUE7TUFBQTtNQUFBUixjQUFBLEdBQUFJLENBQUE7TUFDZixNQUFNaUIsS0FBQTtNQUFBO01BQUEsQ0FBQXJCLGNBQUEsR0FBQUUsQ0FBQSxRQUFRSyxpQkFBQSxDQUFrQmUsT0FBTyxDQUFDZCxRQUFBO01BQUE7TUFBQVIsY0FBQSxHQUFBRSxDQUFBO01BQ3hDLElBQUltQixLQUFBLEdBQVEsQ0FBQyxHQUFHO1FBQUE7UUFBQXJCLGNBQUEsR0FBQWlCLENBQUE7UUFBQWpCLGNBQUEsR0FBQUUsQ0FBQTtRQUNkSyxpQkFBQSxDQUFrQmdCLE1BQU0sQ0FBQ0YsS0FBQSxFQUFPO01BQ2xDO01BQUE7TUFBQTtRQUFBckIsY0FBQSxHQUFBaUIsQ0FBQTtNQUFBO0lBQ0Y7RUFDRjtFQUFBO0VBQUE7SUFBQWpCLGNBQUEsR0FBQWlCLENBQUE7RUFBQTtBQUNGO0FBRU8sU0FBU2QscUJBQXFCWSxTQUFpQjtFQUFBO0VBQUFmLGNBQUEsR0FBQUksQ0FBQTtFQUFBSixjQUFBLEdBQUFFLENBQUE7RUFDcEQsT0FBT0ssaUJBQUEsQ0FBa0JNLE1BQU0sQ0FBQ0MsQ0FBQSxJQUFLO0lBQUE7SUFBQWQsY0FBQSxHQUFBSSxDQUFBO0lBQUFKLGNBQUEsR0FBQUUsQ0FBQTtJQUFBLE9BQUFZLENBQUEsQ0FBRUMsU0FBUyxLQUFLQSxTQUFBO0VBQUE7QUFDdkQiLCJpZ25vcmVMaXN0IjpbXX0=
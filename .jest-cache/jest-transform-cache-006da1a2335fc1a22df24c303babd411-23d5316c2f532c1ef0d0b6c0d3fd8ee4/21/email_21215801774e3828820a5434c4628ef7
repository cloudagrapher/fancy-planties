b3cef62cfc53afa6bb13c15b025ef230
"use strict";

/* istanbul ignore next */
function cov_15fnqfwaj8() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/lib/services/email.ts";
  var hash = "8bce56957682f969bb20951356f4f7f7d83d1928";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/lib/services/email.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "7": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 23
        }
      },
      "8": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "9": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "10": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 56
        }
      },
      "13": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 67
        }
      },
      "15": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 28
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "17": {
        start: {
          line: 41,
          column: 26
        },
        end: {
          line: 41,
          column: 27
        }
      },
      "18": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "19": {
        start: {
          line: 43,
          column: 40
        },
        end: {
          line: 50,
          column: 18
        }
      },
      "20": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 53,
          column: 17
        }
      },
      "21": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 118
        }
      },
      "22": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 60,
          column: 17
        }
      },
      "23": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 58,
          column: 21
        }
      },
      "24": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 57,
          column: 96
        }
      },
      "25": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 32
        }
      },
      "26": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 93
        }
      },
      "27": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 86
        }
      },
      "28": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 67,
          column: 17
        }
      },
      "29": {
        start: {
          line: 66,
          column: 20
        },
        end: {
          line: 66,
          column: 108
        }
      },
      "30": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 71,
          column: 17
        }
      },
      "31": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 32
        }
      },
      "32": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 76,
          column: 17
        }
      },
      "33": {
        start: {
          line: 74,
          column: 34
        },
        end: {
          line: 74,
          column: 65
        }
      },
      "34": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 77
        }
      },
      "35": {
        start: {
          line: 75,
          column: 49
        },
        end: {
          line: 75,
          column: 75
        }
      },
      "36": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 91
        }
      },
      "37": {
        start: {
          line: 82,
          column: 24
        },
        end: {
          line: 82,
          column: 58
        }
      },
      "38": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "39": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 36
        }
      },
      "40": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "41": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 35
        }
      },
      "42": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "43": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 35
        }
      },
      "44": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 27
        }
      },
      "45": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 209,
          column: 6
        }
      },
      "46": {
        start: {
          line: 213,
          column: 19
        },
        end: {
          line: 217,
          column: 5
        }
      },
      "47": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 220,
          column: 5
        }
      },
      "48": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 75
        }
      },
      "49": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 221,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 23
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 32
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 60
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 39
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 75,
            column: 38
          },
          end: {
            line: 75,
            column: 39
          }
        },
        loc: {
          start: {
            line: 75,
            column: 49
          },
          end: {
            line: 75,
            column: 75
          }
        },
        line: 75
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 81
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        loc: {
          start: {
            line: 94,
            column: 50
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 94
      },
      "11": {
        name: "createEmailService",
        decl: {
          start: {
            line: 212,
            column: 9
          },
          end: {
            line: 212,
            column: 27
          }
        },
        loc: {
          start: {
            line: 212,
            column: 30
          },
          end: {
            line: 222,
            column: 1
          }
        },
        line: 212
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 53,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 53,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 60,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 60,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "2": {
        loc: {
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 58,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 58,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "3": {
        loc: {
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 53
          },
          end: {
            line: 63,
            column: 58
          }
        }, {
          start: {
            line: 63,
            column: 61
          },
          end: {
            line: 63,
            column: 85
          }
        }],
        line: 63
      },
      "4": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 67,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 67,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 69,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 69,
            column: 54
          }
        }, {
          start: {
            line: 69,
            column: 59
          },
          end: {
            line: 69,
            column: 89
          }
        }, {
          start: {
            line: 69,
            column: 93
          },
          end: {
            line: 69,
            column: 124
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 79,
            column: 14
          },
          end: {
            line: 79,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 14
          },
          end: {
            line: 79,
            column: 23
          }
        }, {
          start: {
            line: 79,
            column: 27
          },
          end: {
            line: 79,
            column: 90
          }
        }],
        line: 79
      },
      "9": {
        loc: {
          start: {
            line: 82,
            column: 24
          },
          end: {
            line: 82,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 24
          },
          end: {
            line: 82,
            column: 52
          }
        }, {
          start: {
            line: 82,
            column: 56
          },
          end: {
            line: 82,
            column: 58
          }
        }],
        line: 82
      },
      "10": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "11": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 83,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 83,
            column: 37
          }
        }, {
          start: {
            line: 83,
            column: 41
          },
          end: {
            line: 83,
            column: 66
          }
        }],
        line: 83
      },
      "12": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "13": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 86,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 86,
            column: 39
          }
        }, {
          start: {
            line: 86,
            column: 43
          },
          end: {
            line: 86,
            column: 68
          }
        }],
        line: 86
      },
      "14": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "15": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 89,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 89,
            column: 39
          }
        }, {
          start: {
            line: 89,
            column: 43
          },
          end: {
            line: 89,
            column: 70
          }
        }],
        line: 89
      },
      "16": {
        loc: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/lib/services/email.ts"],
      sourcesContent: ["import 'server-only';\n\nimport { Resend } from 'resend';\nimport { emailConfig } from '@/lib/config/email';\n\nexport interface EmailService {\n  sendVerificationEmail(email: string, code: string, name: string): Promise<boolean>;\n}\n\nexport interface EmailConfig {\n  apiKey: string;\n  fromEmail: string;\n  fromName: string;\n}\n\nexport class EmailServiceError extends Error {\n  constructor(\n    message: string,\n    public code: 'QUOTA_EXCEEDED' | 'API_ERROR' | 'NETWORK_ERROR' | 'INVALID_EMAIL'\n  ) {\n    super(message);\n    this.name = 'EmailServiceError';\n  }\n}\n\nexport class ResendEmailService implements EmailService {\n  private resend: Resend;\n  private config: EmailConfig;\n\n  constructor(config: EmailConfig) {\n    this.resend = new Resend(config.apiKey);\n    this.config = config;\n  }\n\n  async sendVerificationEmail(email: string, code: string, name: string): Promise<boolean> {\n    return await this.sendEmailWithRetry(email, code, name, 3);\n  }\n\n  private async sendEmailWithRetry(\n    email: string,\n    code: string,\n    name: string,\n    maxRetries: number\n  ): Promise<boolean> {\n    let lastError: Error | null = null;\n\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        const { data, error } = await this.resend.emails.send({\n          from: `${this.config.fromName} <${this.config.fromEmail}>`,\n          to: [email],\n          subject: 'Verify your email address',\n          html: this.generateVerificationEmailTemplate(code, name),\n        });\n\n        if (error) {\n          throw new EmailServiceError(\n            `Resend API error: ${error.message}`,\n            this.mapResendErrorCode(error)\n          );\n        }\n\n        if (data?.id) {\n          // Log success in development\n          if (emailConfig.logEmailCodes) {\n            console.log(`\u2705 Verification email sent to ${email} with code: ${code}`);\n          }\n          return true;\n        }\n\n        throw new EmailServiceError('No email ID returned from Resend', 'API_ERROR');\n\n      } catch (error) {\n        lastError = error instanceof Error ? error : new Error(String(error));\n        \n        // Log attempt in development\n        if (emailConfig.isDevelopment) {\n          console.log(`\u274C Email send attempt ${attempt}/${maxRetries} failed:`, lastError.message);\n        }\n\n        // Don't retry on certain errors\n        if (error instanceof EmailServiceError && \n            (error.code === 'INVALID_EMAIL' || error.code === 'QUOTA_EXCEEDED')) {\n          throw error;\n        }\n\n        // Wait before retry with exponential backoff\n        if (attempt < maxRetries) {\n          const delay = Math.pow(2, attempt - 1) * 1000; // 1s, 2s, 4s\n          await new Promise(resolve => setTimeout(resolve, delay));\n        }\n      }\n    }\n\n    throw lastError || new EmailServiceError('All retry attempts failed', 'API_ERROR');\n  }\n\n  private mapResendErrorCode(error: any): EmailServiceError['code'] {\n    const message = error.message?.toLowerCase() || '';\n    \n    if (message.includes('quota') || message.includes('limit')) {\n      return 'QUOTA_EXCEEDED';\n    }\n    if (message.includes('invalid') && message.includes('email')) {\n      return 'INVALID_EMAIL';\n    }\n    if (message.includes('network') || message.includes('timeout')) {\n      return 'NETWORK_ERROR';\n    }\n    \n    return 'API_ERROR';\n  }\n\n  private generateVerificationEmailTemplate(code: string, name: string): string {\n    return `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Verify Your Email</title>\n        <style>\n          body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 600px;\n            margin: 0 auto;\n            padding: 20px;\n            background-color: #f9f9f9;\n          }\n          .container {\n            background: white;\n            padding: 40px;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n          }\n          .header {\n            text-align: center;\n            margin-bottom: 30px;\n          }\n          .logo {\n            font-size: 24px;\n            font-weight: bold;\n            color: #22c55e;\n            margin-bottom: 10px;\n          }\n          .code-container {\n            background: #f8f9fa;\n            border: 2px dashed #22c55e;\n            border-radius: 8px;\n            padding: 20px;\n            text-align: center;\n            margin: 30px 0;\n          }\n          .verification-code {\n            font-size: 32px;\n            font-weight: bold;\n            letter-spacing: 8px;\n            color: #22c55e;\n            font-family: 'Courier New', monospace;\n          }\n          .instructions {\n            background: #e7f3ff;\n            border-left: 4px solid #2196f3;\n            padding: 15px;\n            margin: 20px 0;\n          }\n          .footer {\n            text-align: center;\n            margin-top: 30px;\n            padding-top: 20px;\n            border-top: 1px solid #eee;\n            color: #666;\n            font-size: 14px;\n          }\n          .warning {\n            background: #fff3cd;\n            border: 1px solid #ffeaa7;\n            border-radius: 4px;\n            padding: 12px;\n            margin: 20px 0;\n            color: #856404;\n          }\n        </style>\n      </head>\n      <body>\n        <div class=\"container\">\n          <div class=\"header\">\n            <div class=\"logo\">\uD83C\uDF31 Fancy Planties</div>\n            <h1>Verify Your Email Address</h1>\n          </div>\n          \n          <p>Hi ${name},</p>\n          \n          <p>Welcome to Fancy Planties! To complete your account setup and start tracking your plants, please verify your email address using the code below:</p>\n          \n          <div class=\"code-container\">\n            <div class=\"verification-code\">${code}</div>\n          </div>\n          \n          <div class=\"instructions\">\n            <strong>How to verify:</strong>\n            <ol>\n              <li>Return to the Fancy Planties verification page</li>\n              <li>Enter the 6-digit code above</li>\n              <li>Click \"Verify Email\" to complete your registration</li>\n            </ol>\n          </div>\n          \n          <div class=\"warning\">\n            <strong>\u23F0 Important:</strong> This verification code will expire in ${emailConfig.codeExpiryMinutes} minutes for security reasons. If you need a new code, you can request one on the verification page.\n          </div>\n          \n          <p>If you didn't create an account with Fancy Planties, you can safely ignore this email.</p>\n          \n          <div class=\"footer\">\n            <p>Happy planting! \uD83C\uDF3F</p>\n            <p><strong>The Fancy Planties Team</strong></p>\n            <hr style=\"margin: 20px 0; border: none; border-top: 1px solid #eee;\">\n            <p style=\"font-size: 12px; color: #999;\">\n              This is an automated message. Please do not reply to this email.<br>\n              If you have questions, visit our support page or contact us through the app.\n            </p>\n          </div>\n        </div>\n      </body>\n      </html>\n    `;\n  }\n}\n\n// Factory function to create email service instance\nexport function createEmailService(): EmailService {\n  const config: EmailConfig = {\n    apiKey: process.env.RESEND_API_KEY!,\n    fromEmail: emailConfig.fromEmail,\n    fromName: emailConfig.fromName,\n  };\n\n  if (!config.apiKey) {\n    throw new Error('RESEND_API_KEY environment variable is required');\n  }\n\n  return new ResendEmailService(config);\n}"],
      names: ["EmailServiceError", "ResendEmailService", "createEmailService", "Error", "message", "code", "name", "config", "resend", "Resend", "apiKey", "sendVerificationEmail", "email", "sendEmailWithRetry", "maxRetries", "lastError", "attempt", "data", "error", "emails", "send", "from", "fromName", "fromEmail", "to", "subject", "html", "generateVerificationEmailTemplate", "mapResendErrorCode", "id", "emailConfig", "logEmailCodes", "console", "log", "String", "isDevelopment", "delay", "Math", "pow", "Promise", "resolve", "setTimeout", "toLowerCase", "includes", "codeExpiryMinutes", "process", "env", "RESEND_API_KEY"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8bce56957682f969bb20951356f4f7f7d83d1928"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15fnqfwaj8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15fnqfwaj8();
cov_15fnqfwaj8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_15fnqfwaj8().f[0]++;
  cov_15fnqfwaj8().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_15fnqfwaj8().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_15fnqfwaj8().s[3]++;
_export(exports, {
  get EmailServiceError() {
    /* istanbul ignore next */
    cov_15fnqfwaj8().f[1]++;
    cov_15fnqfwaj8().s[4]++;
    return EmailServiceError;
  },
  get ResendEmailService() {
    /* istanbul ignore next */
    cov_15fnqfwaj8().f[2]++;
    cov_15fnqfwaj8().s[5]++;
    return ResendEmailService;
  },
  get createEmailService() {
    /* istanbul ignore next */
    cov_15fnqfwaj8().f[3]++;
    cov_15fnqfwaj8().s[6]++;
    return createEmailService;
  }
});
/* istanbul ignore next */
cov_15fnqfwaj8().s[7]++;
require("server-only");
const _resend =
/* istanbul ignore next */
(cov_15fnqfwaj8().s[8]++, require("resend"));
const _email =
/* istanbul ignore next */
(cov_15fnqfwaj8().s[9]++, require("../config/email"));
class EmailServiceError extends Error {
  constructor(message, code) {
    /* istanbul ignore next */
    cov_15fnqfwaj8().f[4]++;
    cov_15fnqfwaj8().s[10]++;
    super(message), this.code = code;
    /* istanbul ignore next */
    cov_15fnqfwaj8().s[11]++;
    this.name = 'EmailServiceError';
  }
}
class ResendEmailService {
  constructor(config) {
    /* istanbul ignore next */
    cov_15fnqfwaj8().f[5]++;
    cov_15fnqfwaj8().s[12]++;
    this.resend = new _resend.Resend(config.apiKey);
    /* istanbul ignore next */
    cov_15fnqfwaj8().s[13]++;
    this.config = config;
  }
  async sendVerificationEmail(email, code, name) {
    /* istanbul ignore next */
    cov_15fnqfwaj8().f[6]++;
    cov_15fnqfwaj8().s[14]++;
    return await this.sendEmailWithRetry(email, code, name, 3);
  }
  async sendEmailWithRetry(email, code, name, maxRetries) {
    /* istanbul ignore next */
    cov_15fnqfwaj8().f[7]++;
    let lastError =
    /* istanbul ignore next */
    (cov_15fnqfwaj8().s[15]++, null);
    /* istanbul ignore next */
    cov_15fnqfwaj8().s[16]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_15fnqfwaj8().s[17]++, 1); attempt <= maxRetries; attempt++) {
      /* istanbul ignore next */
      cov_15fnqfwaj8().s[18]++;
      try {
        const {
          data,
          error
        } =
        /* istanbul ignore next */
        (cov_15fnqfwaj8().s[19]++, await this.resend.emails.send({
          from: `${this.config.fromName} <${this.config.fromEmail}>`,
          to: [email],
          subject: 'Verify your email address',
          html: this.generateVerificationEmailTemplate(code, name)
        }));
        /* istanbul ignore next */
        cov_15fnqfwaj8().s[20]++;
        if (error) {
          /* istanbul ignore next */
          cov_15fnqfwaj8().b[0][0]++;
          cov_15fnqfwaj8().s[21]++;
          throw new EmailServiceError(`Resend API error: ${error.message}`, this.mapResendErrorCode(error));
        } else
        /* istanbul ignore next */
        {
          cov_15fnqfwaj8().b[0][1]++;
        }
        cov_15fnqfwaj8().s[22]++;
        if (data?.id) {
          /* istanbul ignore next */
          cov_15fnqfwaj8().b[1][0]++;
          cov_15fnqfwaj8().s[23]++;
          // Log success in development
          if (_email.emailConfig.logEmailCodes) {
            /* istanbul ignore next */
            cov_15fnqfwaj8().b[2][0]++;
            cov_15fnqfwaj8().s[24]++;
            console.log(`✅ Verification email sent to ${email} with code: ${code}`);
          } else
          /* istanbul ignore next */
          {
            cov_15fnqfwaj8().b[2][1]++;
          }
          cov_15fnqfwaj8().s[25]++;
          return true;
        } else
        /* istanbul ignore next */
        {
          cov_15fnqfwaj8().b[1][1]++;
        }
        cov_15fnqfwaj8().s[26]++;
        throw new EmailServiceError('No email ID returned from Resend', 'API_ERROR');
      } catch (error) {
        /* istanbul ignore next */
        cov_15fnqfwaj8().s[27]++;
        lastError = error instanceof Error ?
        /* istanbul ignore next */
        (cov_15fnqfwaj8().b[3][0]++, error) :
        /* istanbul ignore next */
        (cov_15fnqfwaj8().b[3][1]++, new Error(String(error)));
        // Log attempt in development
        /* istanbul ignore next */
        cov_15fnqfwaj8().s[28]++;
        if (_email.emailConfig.isDevelopment) {
          /* istanbul ignore next */
          cov_15fnqfwaj8().b[4][0]++;
          cov_15fnqfwaj8().s[29]++;
          console.log(`❌ Email send attempt ${attempt}/${maxRetries} failed:`, lastError.message);
        } else
        /* istanbul ignore next */
        {
          cov_15fnqfwaj8().b[4][1]++;
        }
        // Don't retry on certain errors
        cov_15fnqfwaj8().s[30]++;
        if (
        /* istanbul ignore next */
        (cov_15fnqfwaj8().b[6][0]++, error instanceof EmailServiceError) && (
        /* istanbul ignore next */
        (cov_15fnqfwaj8().b[6][1]++, error.code === 'INVALID_EMAIL') ||
        /* istanbul ignore next */
        (cov_15fnqfwaj8().b[6][2]++, error.code === 'QUOTA_EXCEEDED'))) {
          /* istanbul ignore next */
          cov_15fnqfwaj8().b[5][0]++;
          cov_15fnqfwaj8().s[31]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_15fnqfwaj8().b[5][1]++;
        }
        // Wait before retry with exponential backoff
        cov_15fnqfwaj8().s[32]++;
        if (attempt < maxRetries) {
          /* istanbul ignore next */
          cov_15fnqfwaj8().b[7][0]++;
          const delay =
          /* istanbul ignore next */
          (cov_15fnqfwaj8().s[33]++, Math.pow(2, attempt - 1) * 1000); // 1s, 2s, 4s
          /* istanbul ignore next */
          cov_15fnqfwaj8().s[34]++;
          await new Promise(resolve => {
            /* istanbul ignore next */
            cov_15fnqfwaj8().f[8]++;
            cov_15fnqfwaj8().s[35]++;
            return setTimeout(resolve, delay);
          });
        } else
        /* istanbul ignore next */
        {
          cov_15fnqfwaj8().b[7][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_15fnqfwaj8().s[36]++;
    throw /* istanbul ignore next */(cov_15fnqfwaj8().b[8][0]++, lastError) ||
    /* istanbul ignore next */
    (cov_15fnqfwaj8().b[8][1]++, new EmailServiceError('All retry attempts failed', 'API_ERROR'));
  }
  mapResendErrorCode(error) {
    /* istanbul ignore next */
    cov_15fnqfwaj8().f[9]++;
    const message =
    /* istanbul ignore next */
    (cov_15fnqfwaj8().s[37]++,
    /* istanbul ignore next */
    (cov_15fnqfwaj8().b[9][0]++, error.message?.toLowerCase()) ||
    /* istanbul ignore next */
    (cov_15fnqfwaj8().b[9][1]++, ''));
    /* istanbul ignore next */
    cov_15fnqfwaj8().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_15fnqfwaj8().b[11][0]++, message.includes('quota')) ||
    /* istanbul ignore next */
    (cov_15fnqfwaj8().b[11][1]++, message.includes('limit'))) {
      /* istanbul ignore next */
      cov_15fnqfwaj8().b[10][0]++;
      cov_15fnqfwaj8().s[39]++;
      return 'QUOTA_EXCEEDED';
    } else
    /* istanbul ignore next */
    {
      cov_15fnqfwaj8().b[10][1]++;
    }
    cov_15fnqfwaj8().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_15fnqfwaj8().b[13][0]++, message.includes('invalid')) &&
    /* istanbul ignore next */
    (cov_15fnqfwaj8().b[13][1]++, message.includes('email'))) {
      /* istanbul ignore next */
      cov_15fnqfwaj8().b[12][0]++;
      cov_15fnqfwaj8().s[41]++;
      return 'INVALID_EMAIL';
    } else
    /* istanbul ignore next */
    {
      cov_15fnqfwaj8().b[12][1]++;
    }
    cov_15fnqfwaj8().s[42]++;
    if (
    /* istanbul ignore next */
    (cov_15fnqfwaj8().b[15][0]++, message.includes('network')) ||
    /* istanbul ignore next */
    (cov_15fnqfwaj8().b[15][1]++, message.includes('timeout'))) {
      /* istanbul ignore next */
      cov_15fnqfwaj8().b[14][0]++;
      cov_15fnqfwaj8().s[43]++;
      return 'NETWORK_ERROR';
    } else
    /* istanbul ignore next */
    {
      cov_15fnqfwaj8().b[14][1]++;
    }
    cov_15fnqfwaj8().s[44]++;
    return 'API_ERROR';
  }
  generateVerificationEmailTemplate(code, name) {
    /* istanbul ignore next */
    cov_15fnqfwaj8().f[10]++;
    cov_15fnqfwaj8().s[45]++;
    return `
      <!DOCTYPE html>
      <html lang="en">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Verify Your Email</title>
        <style>
          body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f9f9f9;
          }
          .container {
            background: white;
            padding: 40px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
          }
          .header {
            text-align: center;
            margin-bottom: 30px;
          }
          .logo {
            font-size: 24px;
            font-weight: bold;
            color: #22c55e;
            margin-bottom: 10px;
          }
          .code-container {
            background: #f8f9fa;
            border: 2px dashed #22c55e;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            margin: 30px 0;
          }
          .verification-code {
            font-size: 32px;
            font-weight: bold;
            letter-spacing: 8px;
            color: #22c55e;
            font-family: 'Courier New', monospace;
          }
          .instructions {
            background: #e7f3ff;
            border-left: 4px solid #2196f3;
            padding: 15px;
            margin: 20px 0;
          }
          .footer {
            text-align: center;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            color: #666;
            font-size: 14px;
          }
          .warning {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 4px;
            padding: 12px;
            margin: 20px 0;
            color: #856404;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <div class="logo">🌱 Fancy Planties</div>
            <h1>Verify Your Email Address</h1>
          </div>
          
          <p>Hi ${name},</p>
          
          <p>Welcome to Fancy Planties! To complete your account setup and start tracking your plants, please verify your email address using the code below:</p>
          
          <div class="code-container">
            <div class="verification-code">${code}</div>
          </div>
          
          <div class="instructions">
            <strong>How to verify:</strong>
            <ol>
              <li>Return to the Fancy Planties verification page</li>
              <li>Enter the 6-digit code above</li>
              <li>Click "Verify Email" to complete your registration</li>
            </ol>
          </div>
          
          <div class="warning">
            <strong>⏰ Important:</strong> This verification code will expire in ${_email.emailConfig.codeExpiryMinutes} minutes for security reasons. If you need a new code, you can request one on the verification page.
          </div>
          
          <p>If you didn't create an account with Fancy Planties, you can safely ignore this email.</p>
          
          <div class="footer">
            <p>Happy planting! 🌿</p>
            <p><strong>The Fancy Planties Team</strong></p>
            <hr style="margin: 20px 0; border: none; border-top: 1px solid #eee;">
            <p style="font-size: 12px; color: #999;">
              This is an automated message. Please do not reply to this email.<br>
              If you have questions, visit our support page or contact us through the app.
            </p>
          </div>
        </div>
      </body>
      </html>
    `;
  }
}
function createEmailService() {
  /* istanbul ignore next */
  cov_15fnqfwaj8().f[11]++;
  const config =
  /* istanbul ignore next */
  (cov_15fnqfwaj8().s[46]++, {
    apiKey: process.env.RESEND_API_KEY,
    fromEmail: _email.emailConfig.fromEmail,
    fromName: _email.emailConfig.fromName
  });
  /* istanbul ignore next */
  cov_15fnqfwaj8().s[47]++;
  if (!config.apiKey) {
    /* istanbul ignore next */
    cov_15fnqfwaj8().b[16][0]++;
    cov_15fnqfwaj8().s[48]++;
    throw new Error('RESEND_API_KEY environment variable is required');
  } else
  /* istanbul ignore next */
  {
    cov_15fnqfwaj8().b[16][1]++;
  }
  cov_15fnqfwaj8().s[49]++;
  return new ResendEmailService(config);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
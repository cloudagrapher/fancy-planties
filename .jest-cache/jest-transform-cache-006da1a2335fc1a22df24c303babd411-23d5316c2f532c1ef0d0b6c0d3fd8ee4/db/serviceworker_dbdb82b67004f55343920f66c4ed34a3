353d553cda7da330c3738a7d3ce1a5af
'use client';
"use strict";

/* istanbul ignore next */
function cov_11sovjiz7f() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/lib/utils/service-worker.ts";
  var hash = "5e4096c76c318664675c555a96a86912164fe6b3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/lib/utils/service-worker.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "9": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 71
        }
      },
      "10": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 45
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "12": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 56
        }
      },
      "13": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 25
        }
      },
      "14": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "15": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 41,
          column: 15
        }
      },
      "16": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 66
        }
      },
      "17": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 54,
          column: 15
        }
      },
      "18": {
        start: {
          line: 45,
          column: 34
        },
        end: {
          line: 45,
          column: 63
        }
      },
      "19": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 53,
          column: 17
        }
      },
      "20": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 52,
          column: 23
        }
      },
      "21": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "22": {
        start: {
          line: 49,
          column: 28
        },
        end: {
          line: 49,
          column: 56
        }
      },
      "23": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 57
        }
      },
      "24": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 95
        }
      },
      "25": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 24
        }
      },
      "26": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 72
        }
      },
      "27": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 25
        }
      },
      "28": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "29": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 45
        }
      },
      "30": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "31": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 76,
          column: 15
        }
      },
      "32": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "33": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 58
        }
      },
      "34": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "35": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "36": {
        start: {
          line: 104,
          column: 31
        },
        end: {
          line: 104,
          column: 41
        }
      },
      "37": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "38": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 64
        }
      },
      "39": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 111,
          column: 20
        }
      },
      "40": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 22
        }
      },
      "41": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 74
        }
      },
      "42": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 69
        }
      },
      "43": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 36
        }
      },
      "44": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 42
        }
      },
      "45": {
        start: {
          line: 134,
          column: 22
        },
        end: {
          line: 134,
          column: 56
        }
      },
      "46": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 143,
          column: 6
        }
      },
      "47": {
        start: {
          line: 136,
          column: 22
        },
        end: {
          line: 136,
          column: 42
        }
      },
      "48": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 38
        }
      },
      "49": {
        start: {
          line: 138,
          column: 25
        },
        end: {
          line: 138,
          column: 48
        }
      },
      "50": {
        start: {
          line: 139,
          column: 34
        },
        end: {
          line: 139,
          column: 66
        }
      },
      "51": {
        start: {
          line: 140,
          column: 36
        },
        end: {
          line: 140,
          column: 70
        }
      },
      "52": {
        start: {
          line: 141,
          column: 31
        },
        end: {
          line: 141,
          column: 60
        }
      },
      "53": {
        start: {
          line: 142,
          column: 26
        },
        end: {
          line: 142,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 17
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 33,
            column: 7
          }
        },
        loc: {
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 62
          },
          end: {
            line: 44,
            column: 63
          }
        },
        loc: {
          start: {
            line: 44,
            column: 66
          },
          end: {
            line: 54,
            column: 13
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 47,
            column: 62
          },
          end: {
            line: 47,
            column: 63
          }
        },
        loc: {
          start: {
            line: 47,
            column: 66
          },
          end: {
            line: 52,
            column: 21
          }
        },
        line: 47
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 65,
            column: 6
          },
          end: {
            line: 65,
            column: 7
          }
        },
        loc: {
          start: {
            line: 65,
            column: 21
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 65
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 72,
            column: 6
          },
          end: {
            line: 72,
            column: 7
          }
        },
        loc: {
          start: {
            line: 72,
            column: 20
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 72
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 81,
            column: 6
          },
          end: {
            line: 81,
            column: 7
          }
        },
        loc: {
          start: {
            line: 81,
            column: 27
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 81
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 88,
            column: 6
          },
          end: {
            line: 88,
            column: 7
          }
        },
        loc: {
          start: {
            line: 88,
            column: 29
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 88
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 96,
            column: 6
          },
          end: {
            line: 96,
            column: 7
          }
        },
        loc: {
          start: {
            line: 96,
            column: 31
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 96
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 103,
            column: 6
          },
          end: {
            line: 103,
            column: 7
          }
        },
        loc: {
          start: {
            line: 103,
            column: 27
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 103
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 119,
            column: 7
          }
        },
        loc: {
          start: {
            line: 119,
            column: 30
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 119
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 124,
            column: 6
          },
          end: {
            line: 124,
            column: 7
          }
        },
        loc: {
          start: {
            line: 124,
            column: 26
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 124
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 129,
            column: 6
          },
          end: {
            line: 129,
            column: 7
          }
        },
        loc: {
          start: {
            line: 129,
            column: 21
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 129
      },
      "17": {
        name: "useServiceWorker",
        decl: {
          start: {
            line: 133,
            column: 9
          },
          end: {
            line: 133,
            column: 25
          }
        },
        loc: {
          start: {
            line: 133,
            column: 28
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 133
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 136,
            column: 18
          },
          end: {
            line: 136,
            column: 19
          }
        },
        loc: {
          start: {
            line: 136,
            column: 22
          },
          end: {
            line: 136,
            column: 42
          }
        },
        line: 136
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 137,
            column: 17
          }
        },
        loc: {
          start: {
            line: 137,
            column: 20
          },
          end: {
            line: 137,
            column: 38
          }
        },
        line: 137
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 138,
            column: 21
          },
          end: {
            line: 138,
            column: 22
          }
        },
        loc: {
          start: {
            line: 138,
            column: 25
          },
          end: {
            line: 138,
            column: 48
          }
        },
        line: 138
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 139,
            column: 26
          },
          end: {
            line: 139,
            column: 27
          }
        },
        loc: {
          start: {
            line: 139,
            column: 34
          },
          end: {
            line: 139,
            column: 66
          }
        },
        line: 139
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 140,
            column: 32
          },
          end: {
            line: 140,
            column: 33
          }
        },
        loc: {
          start: {
            line: 140,
            column: 36
          },
          end: {
            line: 140,
            column: 70
          }
        },
        line: 140
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 141,
            column: 27
          },
          end: {
            line: 141,
            column: 28
          }
        },
        loc: {
          start: {
            line: 141,
            column: 31
          },
          end: {
            line: 141,
            column: 60
          }
        },
        line: 141
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 142,
            column: 22
          },
          end: {
            line: 142,
            column: 23
          }
        },
        loc: {
          start: {
            line: 142,
            column: 26
          },
          end: {
            line: 142,
            column: 50
          }
        },
        line: 142
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 12
          },
          end: {
            line: 34,
            column: 44
          }
        }, {
          start: {
            line: 34,
            column: 48
          },
          end: {
            line: 34,
            column: 79
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 53,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 53,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 51,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 51,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 59
          }
        }, {
          start: {
            line: 48,
            column: 63
          },
          end: {
            line: 48,
            column: 97
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "9": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 112,
            column: 22
          }
        }, {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 114,
            column: 74
          }
        }],
        line: 105
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/lib/utils/service-worker.ts"],
      sourcesContent: ["'use client';\n\n/**\n * Service Worker Registration and Management\n * Handles registration, updates, and communication with the service worker\n */\n\nexport class ServiceWorkerManager {\n  private static instance: ServiceWorkerManager;\n  private registration: ServiceWorkerRegistration | null = null;\n  private updateAvailable = false;\n\n  private constructor() {}\n\n  static getInstance(): ServiceWorkerManager {\n    if (!ServiceWorkerManager.instance) {\n      ServiceWorkerManager.instance = new ServiceWorkerManager();\n    }\n    return ServiceWorkerManager.instance;\n  }\n\n  /**\n   * Register the service worker\n   */\n  async register(): Promise<boolean> {\n    if (typeof navigator === 'undefined' || !('serviceWorker' in navigator)) {\n      console.log('Service Worker not supported');\n      return false;\n    }\n\n    try {\n      this.registration = await navigator.serviceWorker.register('/custom-sw.js', {\n        scope: '/',\n      });\n\n      console.log('Service Worker registered successfully');\n\n      // Listen for updates\n      this.registration.addEventListener('updatefound', () => {\n        const newWorker = this.registration?.installing;\n        if (newWorker) {\n          newWorker.addEventListener('statechange', () => {\n            if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n              this.updateAvailable = true;\n              this.notifyUpdateAvailable();\n            }\n          });\n        }\n      });\n\n      // Listen for messages from service worker\n      navigator.serviceWorker.addEventListener('message', this.handleMessage.bind(this));\n\n      return true;\n    } catch (error) {\n      console.error('Service Worker registration failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Update the service worker\n   */\n  async update(): Promise<void> {\n    if (this.registration) {\n      await this.registration.update();\n    }\n  }\n\n  /**\n   * Skip waiting and activate new service worker\n   */\n  skipWaiting(): void {\n    if (this.registration?.waiting) {\n      this.registration.waiting.postMessage({ type: 'SKIP_WAITING' });\n    }\n  }\n\n  /**\n   * Send message to service worker\n   */\n  postMessage(message: any): void {\n    if (this.registration?.active) {\n      this.registration.active.postMessage(message);\n    }\n  }\n\n  /**\n   * Cache offline data in service worker\n   */\n  cacheOfflineData(data: any): void {\n    this.postMessage({\n      type: 'CACHE_OFFLINE_DATA',\n      data,\n    });\n  }\n\n  /**\n   * Register background sync for care entries\n   */\n  registerBackgroundSync(): void {\n    this.postMessage({\n      type: 'REGISTER_BACKGROUND_SYNC',\n    });\n  }\n\n  /**\n   * Handle messages from service worker\n   */\n  private handleMessage(event: MessageEvent): void {\n    const { type, data } = event.data;\n\n    switch (type) {\n      case 'SYNC_COMPLETE':\n        console.log('Background sync completed:', data);\n        // Dispatch custom event for React components to listen to\n        window.dispatchEvent(new CustomEvent('sw-sync-complete', { detail: data }));\n        break;\n\n      default:\n        console.log('Unknown message from service worker:', type);\n    }\n  }\n\n  /**\n   * Notify about available update\n   */\n  private notifyUpdateAvailable(): void {\n    window.dispatchEvent(new CustomEvent('sw-update-available'));\n  }\n\n  /**\n   * Check if update is available\n   */\n  isUpdateAvailable(): boolean {\n    return this.updateAvailable;\n  }\n\n  /**\n   * Get registration status\n   */\n  isRegistered(): boolean {\n    return this.registration !== null;\n  }\n}\n\n/**\n * Hook for service worker functionality\n */\nexport function useServiceWorker() {\n  const swManager = ServiceWorkerManager.getInstance();\n\n  return {\n    register: () => swManager.register(),\n    update: () => swManager.update(),\n    skipWaiting: () => swManager.skipWaiting(),\n    cacheOfflineData: (data: any) => swManager.cacheOfflineData(data),\n    registerBackgroundSync: () => swManager.registerBackgroundSync(),\n    isUpdateAvailable: () => swManager.isUpdateAvailable(),\n    isRegistered: () => swManager.isRegistered(),\n  };\n}"],
      names: ["ServiceWorkerManager", "useServiceWorker", "registration", "updateAvailable", "getInstance", "instance", "register", "navigator", "console", "log", "serviceWorker", "scope", "addEventListener", "newWorker", "installing", "state", "controller", "notifyUpdateAvailable", "handleMessage", "bind", "error", "update", "skipWaiting", "waiting", "postMessage", "type", "message", "active", "cacheOfflineData", "data", "registerBackgroundSync", "event", "window", "dispatchEvent", "CustomEvent", "detail", "isUpdateAvailable", "isRegistered", "swManager"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5e4096c76c318664675c555a96a86912164fe6b3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11sovjiz7f = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11sovjiz7f();
cov_11sovjiz7f().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_11sovjiz7f().f[0]++;
  cov_11sovjiz7f().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_11sovjiz7f().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_11sovjiz7f().s[3]++;
_export(exports, {
  get ServiceWorkerManager() {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[1]++;
    cov_11sovjiz7f().s[4]++;
    return ServiceWorkerManager;
  },
  get useServiceWorker() {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[2]++;
    cov_11sovjiz7f().s[5]++;
    return useServiceWorker;
  }
});
class ServiceWorkerManager {
  constructor() {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[3]++;
    cov_11sovjiz7f().s[6]++;
    this.registration = null;
    /* istanbul ignore next */
    cov_11sovjiz7f().s[7]++;
    this.updateAvailable = false;
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[4]++;
    cov_11sovjiz7f().s[8]++;
    if (!ServiceWorkerManager.instance) {
      /* istanbul ignore next */
      cov_11sovjiz7f().b[0][0]++;
      cov_11sovjiz7f().s[9]++;
      ServiceWorkerManager.instance = new ServiceWorkerManager();
    } else
    /* istanbul ignore next */
    {
      cov_11sovjiz7f().b[0][1]++;
    }
    cov_11sovjiz7f().s[10]++;
    return ServiceWorkerManager.instance;
  }
  /**
  * Register the service worker
  */
  async register() {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[5]++;
    cov_11sovjiz7f().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_11sovjiz7f().b[2][0]++, typeof navigator === 'undefined') ||
    /* istanbul ignore next */
    (cov_11sovjiz7f().b[2][1]++, !('serviceWorker' in navigator))) {
      /* istanbul ignore next */
      cov_11sovjiz7f().b[1][0]++;
      cov_11sovjiz7f().s[12]++;
      console.log('Service Worker not supported');
      /* istanbul ignore next */
      cov_11sovjiz7f().s[13]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_11sovjiz7f().b[1][1]++;
    }
    cov_11sovjiz7f().s[14]++;
    try {
      /* istanbul ignore next */
      cov_11sovjiz7f().s[15]++;
      this.registration = await navigator.serviceWorker.register('/custom-sw.js', {
        scope: '/'
      });
      /* istanbul ignore next */
      cov_11sovjiz7f().s[16]++;
      console.log('Service Worker registered successfully');
      // Listen for updates
      /* istanbul ignore next */
      cov_11sovjiz7f().s[17]++;
      this.registration.addEventListener('updatefound', () => {
        /* istanbul ignore next */
        cov_11sovjiz7f().f[6]++;
        const newWorker =
        /* istanbul ignore next */
        (cov_11sovjiz7f().s[18]++, this.registration?.installing);
        /* istanbul ignore next */
        cov_11sovjiz7f().s[19]++;
        if (newWorker) {
          /* istanbul ignore next */
          cov_11sovjiz7f().b[3][0]++;
          cov_11sovjiz7f().s[20]++;
          newWorker.addEventListener('statechange', () => {
            /* istanbul ignore next */
            cov_11sovjiz7f().f[7]++;
            cov_11sovjiz7f().s[21]++;
            if (
            /* istanbul ignore next */
            (cov_11sovjiz7f().b[5][0]++, newWorker.state === 'installed') &&
            /* istanbul ignore next */
            (cov_11sovjiz7f().b[5][1]++, navigator.serviceWorker.controller)) {
              /* istanbul ignore next */
              cov_11sovjiz7f().b[4][0]++;
              cov_11sovjiz7f().s[22]++;
              this.updateAvailable = true;
              /* istanbul ignore next */
              cov_11sovjiz7f().s[23]++;
              this.notifyUpdateAvailable();
            } else
            /* istanbul ignore next */
            {
              cov_11sovjiz7f().b[4][1]++;
            }
          });
        } else
        /* istanbul ignore next */
        {
          cov_11sovjiz7f().b[3][1]++;
        }
      });
      // Listen for messages from service worker
      /* istanbul ignore next */
      cov_11sovjiz7f().s[24]++;
      navigator.serviceWorker.addEventListener('message', this.handleMessage.bind(this));
      /* istanbul ignore next */
      cov_11sovjiz7f().s[25]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_11sovjiz7f().s[26]++;
      console.error('Service Worker registration failed:', error);
      /* istanbul ignore next */
      cov_11sovjiz7f().s[27]++;
      return false;
    }
  }
  /**
  * Update the service worker
  */
  async update() {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[8]++;
    cov_11sovjiz7f().s[28]++;
    if (this.registration) {
      /* istanbul ignore next */
      cov_11sovjiz7f().b[6][0]++;
      cov_11sovjiz7f().s[29]++;
      await this.registration.update();
    } else
    /* istanbul ignore next */
    {
      cov_11sovjiz7f().b[6][1]++;
    }
  }
  /**
  * Skip waiting and activate new service worker
  */
  skipWaiting() {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[9]++;
    cov_11sovjiz7f().s[30]++;
    if (this.registration?.waiting) {
      /* istanbul ignore next */
      cov_11sovjiz7f().b[7][0]++;
      cov_11sovjiz7f().s[31]++;
      this.registration.waiting.postMessage({
        type: 'SKIP_WAITING'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11sovjiz7f().b[7][1]++;
    }
  }
  /**
  * Send message to service worker
  */
  postMessage(message) {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[10]++;
    cov_11sovjiz7f().s[32]++;
    if (this.registration?.active) {
      /* istanbul ignore next */
      cov_11sovjiz7f().b[8][0]++;
      cov_11sovjiz7f().s[33]++;
      this.registration.active.postMessage(message);
    } else
    /* istanbul ignore next */
    {
      cov_11sovjiz7f().b[8][1]++;
    }
  }
  /**
  * Cache offline data in service worker
  */
  cacheOfflineData(data) {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[11]++;
    cov_11sovjiz7f().s[34]++;
    this.postMessage({
      type: 'CACHE_OFFLINE_DATA',
      data
    });
  }
  /**
  * Register background sync for care entries
  */
  registerBackgroundSync() {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[12]++;
    cov_11sovjiz7f().s[35]++;
    this.postMessage({
      type: 'REGISTER_BACKGROUND_SYNC'
    });
  }
  /**
  * Handle messages from service worker
  */
  handleMessage(event) {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[13]++;
    const {
      type,
      data
    } =
    /* istanbul ignore next */
    (cov_11sovjiz7f().s[36]++, event.data);
    /* istanbul ignore next */
    cov_11sovjiz7f().s[37]++;
    switch (type) {
      case 'SYNC_COMPLETE':
        /* istanbul ignore next */
        cov_11sovjiz7f().b[9][0]++;
        cov_11sovjiz7f().s[38]++;
        console.log('Background sync completed:', data);
        // Dispatch custom event for React components to listen to
        /* istanbul ignore next */
        cov_11sovjiz7f().s[39]++;
        window.dispatchEvent(new CustomEvent('sw-sync-complete', {
          detail: data
        }));
        /* istanbul ignore next */
        cov_11sovjiz7f().s[40]++;
        break;
      default:
        /* istanbul ignore next */
        cov_11sovjiz7f().b[9][1]++;
        cov_11sovjiz7f().s[41]++;
        console.log('Unknown message from service worker:', type);
    }
  }
  /**
  * Notify about available update
  */
  notifyUpdateAvailable() {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[14]++;
    cov_11sovjiz7f().s[42]++;
    window.dispatchEvent(new CustomEvent('sw-update-available'));
  }
  /**
  * Check if update is available
  */
  isUpdateAvailable() {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[15]++;
    cov_11sovjiz7f().s[43]++;
    return this.updateAvailable;
  }
  /**
  * Get registration status
  */
  isRegistered() {
    /* istanbul ignore next */
    cov_11sovjiz7f().f[16]++;
    cov_11sovjiz7f().s[44]++;
    return this.registration !== null;
  }
}
function useServiceWorker() {
  /* istanbul ignore next */
  cov_11sovjiz7f().f[17]++;
  const swManager =
  /* istanbul ignore next */
  (cov_11sovjiz7f().s[45]++, ServiceWorkerManager.getInstance());
  /* istanbul ignore next */
  cov_11sovjiz7f().s[46]++;
  return {
    register: () => {
      /* istanbul ignore next */
      cov_11sovjiz7f().f[18]++;
      cov_11sovjiz7f().s[47]++;
      return swManager.register();
    },
    update: () => {
      /* istanbul ignore next */
      cov_11sovjiz7f().f[19]++;
      cov_11sovjiz7f().s[48]++;
      return swManager.update();
    },
    skipWaiting: () => {
      /* istanbul ignore next */
      cov_11sovjiz7f().f[20]++;
      cov_11sovjiz7f().s[49]++;
      return swManager.skipWaiting();
    },
    cacheOfflineData: data => {
      /* istanbul ignore next */
      cov_11sovjiz7f().f[21]++;
      cov_11sovjiz7f().s[50]++;
      return swManager.cacheOfflineData(data);
    },
    registerBackgroundSync: () => {
      /* istanbul ignore next */
      cov_11sovjiz7f().f[22]++;
      cov_11sovjiz7f().s[51]++;
      return swManager.registerBackgroundSync();
    },
    isUpdateAvailable: () => {
      /* istanbul ignore next */
      cov_11sovjiz7f().f[23]++;
      cov_11sovjiz7f().s[52]++;
      return swManager.isUpdateAvailable();
    },
    isRegistered: () => {
      /* istanbul ignore next */
      cov_11sovjiz7f().f[24]++;
      cov_11sovjiz7f().s[53]++;
      return swManager.isRegistered();
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
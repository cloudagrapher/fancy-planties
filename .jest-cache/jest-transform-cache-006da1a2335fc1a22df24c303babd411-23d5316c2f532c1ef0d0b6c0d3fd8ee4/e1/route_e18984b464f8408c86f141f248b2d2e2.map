{"version":3,"names":["cov_105wl78jnv","actualCoverage","s","POST","request","f","user","_server1","validateRequest","b","_server","NextResponse","json","error","status","body","searchSchema","_zod","z","object","criteria","_plantschemas","multiFieldSearchSchema","options","limit","number","int","min","max","default","offset","sortBy","enum","optional","sortOrder","parse","result","_advancedsearch","advancedSearchService","multiFieldSearch","id","success","data","console","ZodError","details","issues"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/app/api/search/advanced/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { z } from 'zod';\nimport { validateRequest } from '@/lib/auth/server';\nimport { advancedSearchService } from '@/lib/services/advanced-search';\nimport { multiFieldSearchSchema } from '@/lib/validation/plant-schemas';\n\n// POST /api/search/advanced - Multi-field advanced search\nexport async function POST(request: NextRequest) {\n  try {\n    const { user } = await validateRequest();\n    if (!user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = await request.json();\n    \n    // Validate request body\n    const searchSchema = z.object({\n      criteria: multiFieldSearchSchema,\n      options: z.object({\n        limit: z.number().int().min(1).max(100).default(20),\n        offset: z.number().int().min(0).default(0),\n        sortBy: z.enum(['nickname', 'location', 'created_at', 'last_fertilized', 'fertilizer_due', 'care_urgency', 'plant_name']).optional(),\n        sortOrder: z.enum(['asc', 'desc']).optional(),\n      }).optional(),\n    });\n\n    const { criteria, options = {} } = searchSchema.parse(body);\n\n    // Perform advanced search\n    const result = await advancedSearchService.multiFieldSearch(\n      criteria,\n      user.id,\n      options\n    );\n\n    return NextResponse.json({\n      success: true,\n      data: result,\n    });\n\n  } catch (error) {\n    console.error('Advanced search error:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Invalid search parameters', details: error.issues },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Search failed' },\n      { status: 500 }\n    );\n  }\n}"],"mappings":"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","ignoreList":[]}
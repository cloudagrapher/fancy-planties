{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/auth/VerificationCodeInput.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect, KeyboardEvent, ClipboardEvent } from 'react';\n\nexport interface VerificationCodeInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  disabled?: boolean;\n  error?: string;\n  length?: number;\n}\n\nexport default function VerificationCodeInput({\n  value,\n  onChange,\n  disabled = false,\n  error,\n  length = 6\n}: VerificationCodeInputProps) {\n  const [focusedIndex, setFocusedIndex] = useState<number>(0);\n  const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\n\n  // Initialize refs array\n  useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, length);\n  }, [length]);\n\n  // Auto-focus first empty input when component mounts or value changes\n  useEffect(() => {\n    const firstEmptyIndex = value.length;\n    if (firstEmptyIndex < length && inputRefs.current[firstEmptyIndex]) {\n      inputRefs.current[firstEmptyIndex]?.focus();\n      setFocusedIndex(firstEmptyIndex);\n    }\n  }, [value, length]);\n\n  const handleInputChange = (index: number, inputValue: string) => {\n    if (disabled) return;\n\n    // Only allow digits\n    const digit = inputValue.replace(/\\D/g, '').slice(-1);\n    \n    // If no valid digit, don't update\n    if (!digit && inputValue) return;\n    \n    // Build new value\n    const newValue = value.split('');\n    newValue[index] = digit;\n    \n    // Update value up to current position\n    const updatedValue = newValue.slice(0, index + 1).join('');\n    onChange(updatedValue);\n\n    // Move to next input if digit was entered\n    if (digit && index < length - 1) {\n      const nextInput = inputRefs.current[index + 1];\n      if (nextInput) {\n        nextInput.focus();\n        setFocusedIndex(index + 1);\n      }\n    }\n  };\n\n  const handleKeyDown = (index: number, e: KeyboardEvent<HTMLInputElement>) => {\n    if (disabled) return;\n\n    if (e.key === 'Backspace') {\n      e.preventDefault();\n      \n      if (value[index]) {\n        // Clear current digit\n        const newValue = value.split('');\n        newValue[index] = '';\n        onChange(newValue.slice(0, Math.max(index, value.length - 1)).join(''));\n      } else if (index > 0) {\n        // Move to previous input and clear it\n        const newValue = value.split('');\n        newValue[index - 1] = '';\n        onChange(newValue.slice(0, index).join(''));\n        \n        const prevInput = inputRefs.current[index - 1];\n        if (prevInput) {\n          prevInput.focus();\n          setFocusedIndex(index - 1);\n        }\n      }\n    } else if (e.key === 'ArrowLeft' && index > 0) {\n      e.preventDefault();\n      const prevInput = inputRefs.current[index - 1];\n      if (prevInput) {\n        prevInput.focus();\n        setFocusedIndex(index - 1);\n      }\n    } else if (e.key === 'ArrowRight' && index < length - 1) {\n      e.preventDefault();\n      const nextInput = inputRefs.current[index + 1];\n      if (nextInput) {\n        nextInput.focus();\n        setFocusedIndex(index + 1);\n      }\n    }\n  };\n\n  const handlePaste = (e: ClipboardEvent<HTMLInputElement>) => {\n    if (disabled) return;\n    \n    e.preventDefault();\n    const pastedData = e.clipboardData.getData('text');\n    const digits = pastedData.replace(/\\D/g, '').slice(0, length);\n    \n    if (digits) {\n      onChange(digits);\n      \n      // Focus the next empty input or the last input\n      const nextFocusIndex = Math.min(digits.length, length - 1);\n      const targetInput = inputRefs.current[nextFocusIndex];\n      if (targetInput) {\n        targetInput.focus();\n        setFocusedIndex(nextFocusIndex);\n      }\n    }\n  };\n\n  const handleFocus = (index: number) => {\n    setFocusedIndex(index);\n  };\n\n  const handleClick = (index: number) => {\n    // When clicking on an input, focus the first empty position or the clicked position\n    const firstEmptyIndex = value.length;\n    const targetIndex = index <= firstEmptyIndex ? index : firstEmptyIndex;\n    \n    const targetInput = inputRefs.current[targetIndex];\n    if (targetInput) {\n      targetInput.focus();\n      setFocusedIndex(targetIndex);\n    }\n  };\n\n  return (\n    <div className=\"verification-code-input\">\n      <div className=\"flex justify-center gap-3 mb-2\">\n        {Array.from({ length }, (_, index) => (\n          <input\n            key={index}\n            ref={(el) => (inputRefs.current[index] = el)}\n            type=\"text\"\n            inputMode=\"numeric\"\n            pattern=\"[0-9]*\"\n            maxLength={1}\n            value={value[index] || ''}\n            onChange={(e) => handleInputChange(index, e.target.value)}\n            onKeyDown={(e) => handleKeyDown(index, e)}\n            onPaste={handlePaste}\n            onFocus={() => handleFocus(index)}\n            onClick={() => handleClick(index)}\n            disabled={disabled}\n            className={`\n              w-12 h-12 text-center text-lg font-semibold\n              border-2 rounded-lg\n              transition-all duration-200\n              ${error \n                ? 'border-red-300 bg-red-50 text-red-900 focus:border-red-500 focus:ring-red-200' \n                : focusedIndex === index\n                  ? 'border-mint-400 bg-mint-50 text-mint-900 ring-2 ring-mint-200'\n                  : value[index]\n                    ? 'border-mint-300 bg-mint-50 text-mint-900'\n                    : 'border-neutral-300 bg-white text-neutral-700 hover:border-neutral-400'\n              }\n              ${disabled ? 'opacity-50 cursor-not-allowed' : 'cursor-text'}\n              focus:outline-none focus:ring-2\n              ${!error && 'focus:ring-mint-200 focus:border-mint-400'}\n            `}\n            aria-label={`Verification code digit ${index + 1}`}\n            aria-describedby={error ? 'verification-code-error' : undefined}\n          />\n        ))}\n      </div>\n      \n      {error && (\n        <div \n          id=\"verification-code-error\" \n          className=\"text-sm text-red-600 text-center\"\n          role=\"alert\"\n        >\n          {error}\n        </div>\n      )}\n    </div>\n  );\n}"],"names":["VerificationCodeInput","value","onChange","disabled","error","length","focusedIndex","setFocusedIndex","useState","inputRefs","useRef","useEffect","current","slice","firstEmptyIndex","focus","handleInputChange","index","inputValue","digit","replace","newValue","split","updatedValue","join","nextInput","handleKeyDown","e","key","preventDefault","Math","max","prevInput","handlePaste","pastedData","clipboardData","getData","digits","nextFocusIndex","min","targetInput","handleFocus","handleClick","targetIndex","div","className","Array","from","_","input","ref","el","type","inputMode","pattern","maxLength","target","onKeyDown","onPaste","onFocus","onClick","aria-label","aria-describedby","undefined","id","role"],"mappings":"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"}
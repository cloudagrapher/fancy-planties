ad10ba71392cd9faf4d441a43e97ad41
'use client';
"use strict";

/* istanbul ignore next */
function cov_1ub9a2kw9w() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/components/shared/VirtualScrollList.tsx";
  var hash = "b3de25cfe0e12c20e5d62f6122627cd0aa7b4f15";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/components/shared/VirtualScrollList.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 32
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 31
        }
      },
      "9": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "10": {
        start: {
          line: 27,
          column: 38
        },
        end: {
          line: 27,
          column: 61
        }
      },
      "11": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 53
        }
      },
      "12": {
        start: {
          line: 30,
          column: 51
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 131
        }
      },
      "14": {
        start: {
          line: 40,
          column: 35
        },
        end: {
          line: 47,
          column: 6
        }
      },
      "15": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "16": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 39
        }
      },
      "17": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 37
        }
      },
      "18": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 53,
          column: 6
        }
      },
      "19": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 31
        }
      },
      "20": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 49
        }
      },
      "21": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 49
        }
      },
      "22": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 43
        }
      },
      "23": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 58,
          column: 62
        }
      },
      "24": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 88,
          column: 7
        }
      },
      "25": {
        start: {
          line: 79,
          column: 72
        },
        end: {
          line: 85,
          column: 42
        }
      },
      "26": {
        start: {
          line: 91,
          column: 38
        },
        end: {
          line: 91,
          column: 61
        }
      },
      "27": {
        start: {
          line: 93,
          column: 26
        },
        end: {
          line: 93,
          column: 80
        }
      },
      "28": {
        start: {
          line: 94,
          column: 22
        },
        end: {
          line: 94,
          column: 61
        }
      },
      "29": {
        start: {
          line: 95,
          column: 22
        },
        end: {
          line: 95,
          column: 38
        }
      },
      "30": {
        start: {
          line: 97,
          column: 55
        },
        end: {
          line: 105,
          column: 6
        }
      },
      "31": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 127
        }
      },
      "32": {
        start: {
          line: 107,
          column: 35
        },
        end: {
          line: 109,
          column: 10
        }
      },
      "33": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 79
        }
      },
      "34": {
        start: {
          line: 110,
          column: 25
        },
        end: {
          line: 115,
          column: 6
        }
      },
      "35": {
        start: {
          line: 111,
          column: 23
        },
        end: {
          line: 111,
          column: 31
        }
      },
      "36": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 49
        }
      },
      "37": {
        start: {
          line: 117,
          column: 27
        },
        end: {
          line: 117,
          column: 51
        }
      },
      "38": {
        start: {
          line: 118,
          column: 25
        },
        end: {
          line: 118,
          column: 85
        }
      },
      "39": {
        start: {
          line: 119,
          column: 25
        },
        end: {
          line: 119,
          column: 70
        }
      },
      "40": {
        start: {
          line: 121,
          column: 24
        },
        end: {
          line: 121,
          column: 45
        }
      },
      "41": {
        start: {
          line: 122,
          column: 20
        },
        end: {
          line: 122,
          column: 40
        }
      },
      "42": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 151,
          column: 7
        }
      },
      "43": {
        start: {
          line: 146,
          column: 72
        },
        end: {
          line: 148,
          column: 46
        }
      },
      "44": {
        start: {
          line: 154,
          column: 38
        },
        end: {
          line: 154,
          column: 61
        }
      },
      "45": {
        start: {
          line: 155,
          column: 25
        },
        end: {
          line: 163,
          column: 6
        }
      },
      "46": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 131
        }
      },
      "47": {
        start: {
          line: 164,
          column: 26
        },
        end: {
          line: 166,
          column: 10
        }
      },
      "48": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 79
        }
      },
      "49": {
        start: {
          line: 167,
          column: 25
        },
        end: {
          line: 173,
          column: 6
        }
      },
      "50": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 79
        }
      },
      "51": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 180,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "VirtualScrollList",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 26
          }
        },
        loc: {
          start: {
            line: 26,
            column: 119
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 71
          },
          end: {
            line: 30,
            column: 72
          }
        },
        loc: {
          start: {
            line: 30,
            column: 75
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 40,
            column: 55
          },
          end: {
            line: 40,
            column: 56
          }
        },
        loc: {
          start: {
            line: 40,
            column: 59
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 40
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 41,
            column: 65
          },
          end: {
            line: 41,
            column: 66
          }
        },
        loc: {
          start: {
            line: 41,
            column: 81
          },
          end: {
            line: 44,
            column: 9
          }
        },
        line: 41
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 48,
            column: 49
          },
          end: {
            line: 48,
            column: 50
          }
        },
        loc: {
          start: {
            line: 48,
            column: 54
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 48
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 79,
            column: 43
          },
          end: {
            line: 79,
            column: 44
          }
        },
        loc: {
          start: {
            line: 79,
            column: 72
          },
          end: {
            line: 85,
            column: 42
          }
        },
        line: 79
      },
      "10": {
        name: "VirtualGrid",
        decl: {
          start: {
            line: 90,
            column: 9
          },
          end: {
            line: 90,
            column: 20
          }
        },
        loc: {
          start: {
            line: 90,
            column: 140
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 90
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 97,
            column: 75
          },
          end: {
            line: 97,
            column: 76
          }
        },
        loc: {
          start: {
            line: 97,
            column: 79
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 97
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 107,
            column: 55
          },
          end: {
            line: 107,
            column: 56
          }
        },
        loc: {
          start: {
            line: 107,
            column: 59
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 107
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 110,
            column: 49
          },
          end: {
            line: 110,
            column: 50
          }
        },
        loc: {
          start: {
            line: 110,
            column: 54
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 110
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 146,
            column: 43
          },
          end: {
            line: 146,
            column: 44
          }
        },
        loc: {
          start: {
            line: 146,
            column: 72
          },
          end: {
            line: 148,
            column: 46
          }
        },
        line: 146
      },
      "15": {
        name: "useVirtualScroll",
        decl: {
          start: {
            line: 153,
            column: 9
          },
          end: {
            line: 153,
            column: 25
          }
        },
        loc: {
          start: {
            line: 153,
            column: 76
          },
          end: {
            line: 181,
            column: 1
          }
        },
        line: 153
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 155,
            column: 45
          },
          end: {
            line: 155,
            column: 46
          }
        },
        loc: {
          start: {
            line: 155,
            column: 49
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 155
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 164,
            column: 46
          },
          end: {
            line: 164,
            column: 47
          }
        },
        loc: {
          start: {
            line: 164,
            column: 50
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 164
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 167,
            column: 45
          },
          end: {
            line: 167,
            column: 46
          }
        },
        loc: {
          start: {
            line: 167,
            column: 49
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 167
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 77
          },
          end: {
            line: 26,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 89
          },
          end: {
            line: 26,
            column: 91
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 93
          },
          end: {
            line: 26,
            column: 105
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 104
          },
          end: {
            line: 26,
            column: 105
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 90,
            column: 98
          },
          end: {
            line: 90,
            column: 112
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 90,
            column: 110
          },
          end: {
            line: 90,
            column: 112
          }
        }],
        line: 90
      },
      "3": {
        loc: {
          start: {
            line: 90,
            column: 114
          },
          end: {
            line: 90,
            column: 122
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 90,
            column: 120
          },
          end: {
            line: 90,
            column: 122
          }
        }],
        line: 90
      },
      "4": {
        loc: {
          start: {
            line: 90,
            column: 124
          },
          end: {
            line: 90,
            column: 136
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 90,
            column: 135
          },
          end: {
            line: 90,
            column: 136
          }
        }],
        line: 90
      },
      "5": {
        loc: {
          start: {
            line: 153,
            column: 62
          },
          end: {
            line: 153,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 153,
            column: 73
          },
          end: {
            line: 153,
            column: 74
          }
        }],
        line: 153
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/components/shared/VirtualScrollList.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport { virtualScrolling } from '@/lib/utils/performance';\n\ninterface VirtualScrollListProps<T> {\n  items: T[];\n  itemHeight: number;\n  containerHeight: number;\n  renderItem: (item: T, index: number) => React.ReactNode;\n  className?: string;\n  overscan?: number;\n  onScroll?: (scrollTop: number) => void;\n}\n\nexport function VirtualScrollList<T>({\n  items,\n  itemHeight,\n  containerHeight,\n  renderItem,\n  className = '',\n  overscan = 5,\n  onScroll,\n}: VirtualScrollListProps<T>) {\n  const [scrollTop, setScrollTop] = useState(0);\n  const scrollElementRef = useRef<HTMLDivElement>(null);\n\n  // Calculate visible items\n  const { startIndex, endIndex, visibleCount } = useMemo(() => {\n    return virtualScrolling.calculateVisibleItems(\n      scrollTop,\n      containerHeight,\n      itemHeight,\n      items.length,\n      overscan\n    );\n  }, [scrollTop, containerHeight, itemHeight, items.length, overscan]);\n\n  // Create debounced scroll handler\n  const debouncedScrollHandler = useMemo(() => {\n    return virtualScrolling.createScrollHandler((newScrollTop) => {\n      setScrollTop(newScrollTop);\n      onScroll?.(newScrollTop);\n    });\n  }, [onScroll]);\n\n  const handleScroll = useCallback((e: React.UIEvent<HTMLDivElement>) => {\n    const target = e.target as HTMLDivElement;\n    debouncedScrollHandler(target.scrollTop);\n  }, [debouncedScrollHandler]);\n\n  // Calculate total height and offset\n  const totalHeight = items.length * itemHeight;\n  const offsetY = startIndex * itemHeight;\n\n  // Get visible items\n  const visibleItems = items.slice(startIndex, endIndex + 1);\n\n  return (\n    <div\n      ref={scrollElementRef}\n      className={`overflow-auto ${className}`}\n      style={{ height: containerHeight }}\n      onScroll={handleScroll}\n    >\n      <div style={{ height: totalHeight, position: 'relative' }}>\n        <div\n          style={{\n            transform: `translateY(${offsetY}px)`,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n          }}\n        >\n          {visibleItems.map((item, index) => (\n            <div\n              key={startIndex + index}\n              style={{ height: itemHeight }}\n              className=\"flex-shrink-0\"\n            >\n              {renderItem(item, startIndex + index)}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface VirtualGridProps<T> {\n  items: T[];\n  itemWidth: number;\n  itemHeight: number;\n  containerWidth: number;\n  containerHeight: number;\n  renderItem: (item: T, index: number) => React.ReactNode;\n  className?: string;\n  gap?: number;\n  overscan?: number;\n}\n\nexport function VirtualGrid<T>({\n  items,\n  itemWidth,\n  itemHeight,\n  containerWidth,\n  containerHeight,\n  renderItem,\n  className = '',\n  gap = 16,\n  overscan = 5,\n}: VirtualGridProps<T>) {\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // Calculate grid dimensions\n  const columnsPerRow = Math.floor((containerWidth + gap) / (itemWidth + gap));\n  const totalRows = Math.ceil(items.length / columnsPerRow);\n  const rowHeight = itemHeight + gap;\n\n  // Calculate visible rows\n  const { startIndex: startRow, endIndex: endRow } = useMemo(() => {\n    return virtualScrolling.calculateVisibleItems(\n      scrollTop,\n      containerHeight,\n      rowHeight,\n      totalRows,\n      overscan\n    );\n  }, [scrollTop, containerHeight, rowHeight, totalRows, overscan]);\n\n  // Create debounced scroll handler\n  const debouncedScrollHandler = useMemo(() => {\n    return virtualScrolling.createScrollHandler(setScrollTop);\n  }, []);\n\n  const handleScroll = useCallback((e: React.UIEvent<HTMLDivElement>) => {\n    const target = e.target as HTMLDivElement;\n    debouncedScrollHandler(target.scrollTop);\n  }, [debouncedScrollHandler]);\n\n  // Calculate visible items\n  const startItemIndex = startRow * columnsPerRow;\n  const endItemIndex = Math.min((endRow + 1) * columnsPerRow - 1, items.length - 1);\n  const visibleItems = items.slice(startItemIndex, endItemIndex + 1);\n\n  // Calculate total height and offset\n  const totalHeight = totalRows * rowHeight;\n  const offsetY = startRow * rowHeight;\n\n  return (\n    <div\n      className={`overflow-auto ${className}`}\n      style={{ height: containerHeight }}\n      onScroll={handleScroll}\n    >\n      <div style={{ height: totalHeight, position: 'relative' }}>\n        <div\n          style={{\n            transform: `translateY(${offsetY}px)`,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            display: 'grid',\n            gridTemplateColumns: `repeat(${columnsPerRow}, ${itemWidth}px)`,\n            gap: `${gap}px`,\n            justifyContent: 'center',\n          }}\n        >\n          {visibleItems.map((item, index) => (\n            <div key={startItemIndex + index}>\n              {renderItem(item, startItemIndex + index)}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Hook for virtual scrolling\nexport function useVirtualScroll<T>(\n  items: T[],\n  itemHeight: number,\n  containerHeight: number,\n  overscan: number = 5\n) {\n  const [scrollTop, setScrollTop] = useState(0);\n\n  const visibleRange = useMemo(() => {\n    return virtualScrolling.calculateVisibleItems(\n      scrollTop,\n      containerHeight,\n      itemHeight,\n      items.length,\n      overscan\n    );\n  }, [scrollTop, containerHeight, itemHeight, items.length, overscan]);\n\n  const scrollHandler = useMemo(() => {\n    return virtualScrolling.createScrollHandler(setScrollTop);\n  }, []);\n\n  const visibleItems = useMemo(() => {\n    return items.slice(visibleRange.startIndex, visibleRange.endIndex + 1);\n  }, [items, visibleRange.startIndex, visibleRange.endIndex]);\n\n  return {\n    visibleItems,\n    visibleRange,\n    scrollHandler,\n    totalHeight: items.length * itemHeight,\n    offsetY: visibleRange.startIndex * itemHeight,\n  };\n}"],
      names: ["VirtualGrid", "VirtualScrollList", "useVirtualScroll", "items", "itemHeight", "containerHeight", "renderItem", "className", "overscan", "onScroll", "scrollTop", "setScrollTop", "useState", "scrollElementRef", "useRef", "startIndex", "endIndex", "visibleCount", "useMemo", "virtualScrolling", "calculateVisibleItems", "length", "debouncedScrollHandler", "createScrollHandler", "newScrollTop", "handleScroll", "useCallback", "e", "target", "totalHeight", "offsetY", "visibleItems", "slice", "div", "ref", "style", "height", "position", "transform", "top", "left", "right", "map", "item", "index", "itemWidth", "containerWidth", "gap", "columnsPerRow", "Math", "floor", "totalRows", "ceil", "rowHeight", "startRow", "endRow", "startItemIndex", "endItemIndex", "min", "display", "gridTemplateColumns", "justifyContent", "visibleRange", "scrollHandler"],
      mappings: "AAAA;;;;;;;;;;;;QAsGgBA;eAAAA;;QAvFAC;eAAAA;;QAuKAC;eAAAA;;;;uBApLkD;6BACjC;AAY1B,SAASD,kBAAqB,EACnCE,KAAK,EACLC,UAAU,EACVC,eAAe,EACfC,UAAU,EACVC,YAAY,EAAE,EACdC,WAAW,CAAC,EACZC,QAAQ,EACkB;IAC1B,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAC3C,MAAMC,mBAAmBC,IAAAA,aAAM,EAAiB;IAEhD,0BAA0B;IAC1B,MAAM,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,YAAY,EAAE,GAAGC,IAAAA,cAAO,EAAC;QACrD,OAAOC,6BAAgB,CAACC,qBAAqB,CAC3CV,WACAL,iBACAD,YACAD,MAAMkB,MAAM,EACZb;IAEJ,GAAG;QAACE;QAAWL;QAAiBD;QAAYD,MAAMkB,MAAM;QAAEb;KAAS;IAEnE,kCAAkC;IAClC,MAAMc,yBAAyBJ,IAAAA,cAAO,EAAC;QACrC,OAAOC,6BAAgB,CAACI,mBAAmB,CAAC,CAACC;YAC3Cb,aAAaa;YACbf,WAAWe;QACb;IACF,GAAG;QAACf;KAAS;IAEb,MAAMgB,eAAeC,IAAAA,kBAAW,EAAC,CAACC;QAChC,MAAMC,SAASD,EAAEC,MAAM;QACvBN,uBAAuBM,OAAOlB,SAAS;IACzC,GAAG;QAACY;KAAuB;IAE3B,oCAAoC;IACpC,MAAMO,cAAc1B,MAAMkB,MAAM,GAAGjB;IACnC,MAAM0B,UAAUf,aAAaX;IAE7B,oBAAoB;IACpB,MAAM2B,eAAe5B,MAAM6B,KAAK,CAACjB,YAAYC,WAAW;IAExD,qBACE,qBAACiB;QACCC,KAAKrB;QACLN,WAAW,CAAC,cAAc,EAAEA,WAAW;QACvC4B,OAAO;YAAEC,QAAQ/B;QAAgB;QACjCI,UAAUgB;kBAEV,cAAA,qBAACQ;YAAIE,OAAO;gBAAEC,QAAQP;gBAAaQ,UAAU;YAAW;sBACtD,cAAA,qBAACJ;gBACCE,OAAO;oBACLG,WAAW,CAAC,WAAW,EAAER,QAAQ,GAAG,CAAC;oBACrCO,UAAU;oBACVE,KAAK;oBACLC,MAAM;oBACNC,OAAO;gBACT;0BAECV,aAAaW,GAAG,CAAC,CAACC,MAAMC,sBACvB,qBAACX;wBAECE,OAAO;4BAAEC,QAAQhC;wBAAW;wBAC5BG,WAAU;kCAETD,WAAWqC,MAAM5B,aAAa6B;uBAJ1B7B,aAAa6B;;;;AAWhC;AAcO,SAAS5C,YAAe,EAC7BG,KAAK,EACL0C,SAAS,EACTzC,UAAU,EACV0C,cAAc,EACdzC,eAAe,EACfC,UAAU,EACVC,YAAY,EAAE,EACdwC,MAAM,EAAE,EACRvC,WAAW,CAAC,EACQ;IACpB,MAAM,CAACE,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAE3C,4BAA4B;IAC5B,MAAMoC,gBAAgBC,KAAKC,KAAK,CAAC,AAACJ,CAAAA,iBAAiBC,GAAE,IAAMF,CAAAA,YAAYE,GAAE;IACzE,MAAMI,YAAYF,KAAKG,IAAI,CAACjD,MAAMkB,MAAM,GAAG2B;IAC3C,MAAMK,YAAYjD,aAAa2C;IAE/B,yBAAyB;IACzB,MAAM,EAAEhC,YAAYuC,QAAQ,EAAEtC,UAAUuC,MAAM,EAAE,GAAGrC,IAAAA,cAAO,EAAC;QACzD,OAAOC,6BAAgB,CAACC,qBAAqB,CAC3CV,WACAL,iBACAgD,WACAF,WACA3C;IAEJ,GAAG;QAACE;QAAWL;QAAiBgD;QAAWF;QAAW3C;KAAS;IAE/D,kCAAkC;IAClC,MAAMc,yBAAyBJ,IAAAA,cAAO,EAAC;QACrC,OAAOC,6BAAgB,CAACI,mBAAmB,CAACZ;IAC9C,GAAG,EAAE;IAEL,MAAMc,eAAeC,IAAAA,kBAAW,EAAC,CAACC;QAChC,MAAMC,SAASD,EAAEC,MAAM;QACvBN,uBAAuBM,OAAOlB,SAAS;IACzC,GAAG;QAACY;KAAuB;IAE3B,0BAA0B;IAC1B,MAAMkC,iBAAiBF,WAAWN;IAClC,MAAMS,eAAeR,KAAKS,GAAG,CAAC,AAACH,CAAAA,SAAS,CAAA,IAAKP,gBAAgB,GAAG7C,MAAMkB,MAAM,GAAG;IAC/E,MAAMU,eAAe5B,MAAM6B,KAAK,CAACwB,gBAAgBC,eAAe;IAEhE,oCAAoC;IACpC,MAAM5B,cAAcsB,YAAYE;IAChC,MAAMvB,UAAUwB,WAAWD;IAE3B,qBACE,qBAACpB;QACC1B,WAAW,CAAC,cAAc,EAAEA,WAAW;QACvC4B,OAAO;YAAEC,QAAQ/B;QAAgB;QACjCI,UAAUgB;kBAEV,cAAA,qBAACQ;YAAIE,OAAO;gBAAEC,QAAQP;gBAAaQ,UAAU;YAAW;sBACtD,cAAA,qBAACJ;gBACCE,OAAO;oBACLG,WAAW,CAAC,WAAW,EAAER,QAAQ,GAAG,CAAC;oBACrCO,UAAU;oBACVE,KAAK;oBACLC,MAAM;oBACNC,OAAO;oBACPkB,SAAS;oBACTC,qBAAqB,CAAC,OAAO,EAAEZ,cAAc,EAAE,EAAEH,UAAU,GAAG,CAAC;oBAC/DE,KAAK,GAAGA,IAAI,EAAE,CAAC;oBACfc,gBAAgB;gBAClB;0BAEC9B,aAAaW,GAAG,CAAC,CAACC,MAAMC,sBACvB,qBAACX;kCACE3B,WAAWqC,MAAMa,iBAAiBZ;uBAD3BY,iBAAiBZ;;;;AAQvC;AAGO,SAAS1C,iBACdC,KAAU,EACVC,UAAkB,EAClBC,eAAuB,EACvBG,WAAmB,CAAC;IAEpB,MAAM,CAACE,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAE3C,MAAMkD,eAAe5C,IAAAA,cAAO,EAAC;QAC3B,OAAOC,6BAAgB,CAACC,qBAAqB,CAC3CV,WACAL,iBACAD,YACAD,MAAMkB,MAAM,EACZb;IAEJ,GAAG;QAACE;QAAWL;QAAiBD;QAAYD,MAAMkB,MAAM;QAAEb;KAAS;IAEnE,MAAMuD,gBAAgB7C,IAAAA,cAAO,EAAC;QAC5B,OAAOC,6BAAgB,CAACI,mBAAmB,CAACZ;IAC9C,GAAG,EAAE;IAEL,MAAMoB,eAAeb,IAAAA,cAAO,EAAC;QAC3B,OAAOf,MAAM6B,KAAK,CAAC8B,aAAa/C,UAAU,EAAE+C,aAAa9C,QAAQ,GAAG;IACtE,GAAG;QAACb;QAAO2D,aAAa/C,UAAU;QAAE+C,aAAa9C,QAAQ;KAAC;IAE1D,OAAO;QACLe;QACA+B;QACAC;QACAlC,aAAa1B,MAAMkB,MAAM,GAAGjB;QAC5B0B,SAASgC,aAAa/C,UAAU,GAAGX;IACrC;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b3de25cfe0e12c20e5d62f6122627cd0aa7b4f15"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ub9a2kw9w = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ub9a2kw9w();
cov_1ub9a2kw9w().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1ub9a2kw9w().f[0]++;
  cov_1ub9a2kw9w().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1ub9a2kw9w().s[3]++;
_export(exports, {
  get VirtualGrid() {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().f[1]++;
    cov_1ub9a2kw9w().s[4]++;
    return VirtualGrid;
  },
  get VirtualScrollList() {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().f[2]++;
    cov_1ub9a2kw9w().s[5]++;
    return VirtualScrollList;
  },
  get useVirtualScroll() {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().f[3]++;
    cov_1ub9a2kw9w().s[6]++;
    return useVirtualScroll;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1ub9a2kw9w().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1ub9a2kw9w().s[8]++, require("react"));
const _performance =
/* istanbul ignore next */
(cov_1ub9a2kw9w().s[9]++, require("../../lib/utils/performance"));
function VirtualScrollList({
  items,
  itemHeight,
  containerHeight,
  renderItem,
  className =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().b[0][0]++, ''),
  overscan =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().b[1][0]++, 5),
  onScroll
}) {
  /* istanbul ignore next */
  cov_1ub9a2kw9w().f[4]++;
  const [scrollTop, setScrollTop] =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[10]++, (0, _react.useState)(0));
  const scrollElementRef =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[11]++, (0, _react.useRef)(null));
  // Calculate visible items
  const {
    startIndex,
    endIndex,
    visibleCount
  } =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[12]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().f[5]++;
    cov_1ub9a2kw9w().s[13]++;
    return _performance.virtualScrolling.calculateVisibleItems(scrollTop, containerHeight, itemHeight, items.length, overscan);
  }, [scrollTop, containerHeight, itemHeight, items.length, overscan]));
  // Create debounced scroll handler
  const debouncedScrollHandler =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[14]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().f[6]++;
    cov_1ub9a2kw9w().s[15]++;
    return _performance.virtualScrolling.createScrollHandler(newScrollTop => {
      /* istanbul ignore next */
      cov_1ub9a2kw9w().f[7]++;
      cov_1ub9a2kw9w().s[16]++;
      setScrollTop(newScrollTop);
      /* istanbul ignore next */
      cov_1ub9a2kw9w().s[17]++;
      onScroll?.(newScrollTop);
    });
  }, [onScroll]));
  const handleScroll =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[18]++, (0, _react.useCallback)(e => {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().f[8]++;
    const target =
    /* istanbul ignore next */
    (cov_1ub9a2kw9w().s[19]++, e.target);
    /* istanbul ignore next */
    cov_1ub9a2kw9w().s[20]++;
    debouncedScrollHandler(target.scrollTop);
  }, [debouncedScrollHandler]));
  // Calculate total height and offset
  const totalHeight =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[21]++, items.length * itemHeight);
  const offsetY =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[22]++, startIndex * itemHeight);
  // Get visible items
  const visibleItems =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[23]++, items.slice(startIndex, endIndex + 1));
  /* istanbul ignore next */
  cov_1ub9a2kw9w().s[24]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    ref: scrollElementRef,
    className: `overflow-auto ${className}`,
    style: {
      height: containerHeight
    },
    onScroll: handleScroll,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      style: {
        height: totalHeight,
        position: 'relative'
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        style: {
          transform: `translateY(${offsetY}px)`,
          position: 'absolute',
          top: 0,
          left: 0,
          right: 0
        },
        children: visibleItems.map((item, index) => {
          /* istanbul ignore next */
          cov_1ub9a2kw9w().f[9]++;
          cov_1ub9a2kw9w().s[25]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            style: {
              height: itemHeight
            },
            className: "flex-shrink-0",
            children: renderItem(item, startIndex + index)
          }, startIndex + index);
        })
      })
    })
  });
}
function VirtualGrid({
  items,
  itemWidth,
  itemHeight,
  containerWidth,
  containerHeight,
  renderItem,
  className =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().b[2][0]++, ''),
  gap =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().b[3][0]++, 16),
  overscan =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().b[4][0]++, 5)
}) {
  /* istanbul ignore next */
  cov_1ub9a2kw9w().f[10]++;
  const [scrollTop, setScrollTop] =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[26]++, (0, _react.useState)(0));
  // Calculate grid dimensions
  const columnsPerRow =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[27]++, Math.floor((containerWidth + gap) / (itemWidth + gap)));
  const totalRows =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[28]++, Math.ceil(items.length / columnsPerRow));
  const rowHeight =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[29]++, itemHeight + gap);
  // Calculate visible rows
  const {
    startIndex: startRow,
    endIndex: endRow
  } =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[30]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().f[11]++;
    cov_1ub9a2kw9w().s[31]++;
    return _performance.virtualScrolling.calculateVisibleItems(scrollTop, containerHeight, rowHeight, totalRows, overscan);
  }, [scrollTop, containerHeight, rowHeight, totalRows, overscan]));
  // Create debounced scroll handler
  const debouncedScrollHandler =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[32]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().f[12]++;
    cov_1ub9a2kw9w().s[33]++;
    return _performance.virtualScrolling.createScrollHandler(setScrollTop);
  }, []));
  const handleScroll =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[34]++, (0, _react.useCallback)(e => {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().f[13]++;
    const target =
    /* istanbul ignore next */
    (cov_1ub9a2kw9w().s[35]++, e.target);
    /* istanbul ignore next */
    cov_1ub9a2kw9w().s[36]++;
    debouncedScrollHandler(target.scrollTop);
  }, [debouncedScrollHandler]));
  // Calculate visible items
  const startItemIndex =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[37]++, startRow * columnsPerRow);
  const endItemIndex =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[38]++, Math.min((endRow + 1) * columnsPerRow - 1, items.length - 1));
  const visibleItems =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[39]++, items.slice(startItemIndex, endItemIndex + 1));
  // Calculate total height and offset
  const totalHeight =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[40]++, totalRows * rowHeight);
  const offsetY =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[41]++, startRow * rowHeight);
  /* istanbul ignore next */
  cov_1ub9a2kw9w().s[42]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `overflow-auto ${className}`,
    style: {
      height: containerHeight
    },
    onScroll: handleScroll,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      style: {
        height: totalHeight,
        position: 'relative'
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        style: {
          transform: `translateY(${offsetY}px)`,
          position: 'absolute',
          top: 0,
          left: 0,
          right: 0,
          display: 'grid',
          gridTemplateColumns: `repeat(${columnsPerRow}, ${itemWidth}px)`,
          gap: `${gap}px`,
          justifyContent: 'center'
        },
        children: visibleItems.map((item, index) => {
          /* istanbul ignore next */
          cov_1ub9a2kw9w().f[14]++;
          cov_1ub9a2kw9w().s[43]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            children: renderItem(item, startItemIndex + index)
          }, startItemIndex + index);
        })
      })
    })
  });
}
function useVirtualScroll(items, itemHeight, containerHeight, overscan =
/* istanbul ignore next */
(cov_1ub9a2kw9w().b[5][0]++, 5)) {
  /* istanbul ignore next */
  cov_1ub9a2kw9w().f[15]++;
  const [scrollTop, setScrollTop] =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[44]++, (0, _react.useState)(0));
  const visibleRange =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[45]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().f[16]++;
    cov_1ub9a2kw9w().s[46]++;
    return _performance.virtualScrolling.calculateVisibleItems(scrollTop, containerHeight, itemHeight, items.length, overscan);
  }, [scrollTop, containerHeight, itemHeight, items.length, overscan]));
  const scrollHandler =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[47]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().f[17]++;
    cov_1ub9a2kw9w().s[48]++;
    return _performance.virtualScrolling.createScrollHandler(setScrollTop);
  }, []));
  const visibleItems =
  /* istanbul ignore next */
  (cov_1ub9a2kw9w().s[49]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1ub9a2kw9w().f[18]++;
    cov_1ub9a2kw9w().s[50]++;
    return items.slice(visibleRange.startIndex, visibleRange.endIndex + 1);
  }, [items, visibleRange.startIndex, visibleRange.endIndex]));
  /* istanbul ignore next */
  cov_1ub9a2kw9w().s[51]++;
  return {
    visibleItems,
    visibleRange,
    scrollHandler,
    totalHeight: items.length * itemHeight,
    offsetY: visibleRange.startIndex * itemHeight
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
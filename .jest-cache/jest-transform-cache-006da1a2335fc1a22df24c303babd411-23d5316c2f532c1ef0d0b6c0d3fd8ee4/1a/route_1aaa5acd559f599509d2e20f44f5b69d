75c82a71ddc3c53b31acb69456ae9afb
"use strict";

/* istanbul ignore next */
function cov_21zasgjx6x() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/app/api/search/presets/[presetId]/route.ts";
  var hash = "58f468ec02f58de65ecef3cf3c2adc0d96017b74";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/app/api/search/presets/[presetId]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 58
        }
      },
      "5": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 78
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "7": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 62
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "9": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 22,
          column: 15
        }
      },
      "10": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "11": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 25,
          column: 53
        }
      },
      "12": {
        start: {
          line: 27,
          column: 26
        },
        end: {
          line: 27,
          column: 28
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 62
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "16": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 79
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "18": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 70
        }
      },
      "19": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "20": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 72
        }
      },
      "21": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 113
        }
      },
      "22": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "23": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 58
        }
      },
      "24": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "25": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 15
        }
      },
      "26": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 18
          }
        },
        loc: {
          start: {
            line: 14,
            column: 37
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 34
          }
        }, {
          start: {
            line: 48,
            column: 38
          },
          end: {
            line: 48,
            column: 81
          }
        }],
        line: 48
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/app/api/search/presets/[presetId]/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { z } from 'zod';\nimport { validateRequest } from '@/lib/auth/server';\nimport { advancedSearchService } from '@/lib/services/advanced-search';\nimport { plantInstanceFilterSchema } from '@/lib/validation/plant-schemas';\n\n// GET /api/search/presets/[presetId] - Search with a saved preset\nexport async function GET(\n  request: NextRequest,\n  context: { params: Promise<{ presetId: string }> }\n) {\n  try {\n    const { user } = await validateRequest();\n    if (!user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { presetId } = await context.params;\n    const { searchParams } = new URL(request.url);\n    \n    // Parse any filter overrides from query params\n    const overrides: any = {};\n    \n    if (searchParams.get('location')) {\n      overrides.location = searchParams.get('location')!;\n    }\n    \n    if (searchParams.get('overdueOnly')) {\n      overrides.overdueOnly = searchParams.get('overdueOnly') === 'true';\n    }\n    \n    if (searchParams.get('limit')) {\n      overrides.limit = parseInt(searchParams.get('limit')!, 10);\n    }\n    \n    if (searchParams.get('offset')) {\n      overrides.offset = parseInt(searchParams.get('offset')!, 10);\n    }\n\n    // Search with preset\n    const result = await advancedSearchService.searchWithPreset(\n      presetId,\n      user.id,\n      overrides\n    );\n\n    return NextResponse.json({\n      success: true,\n      data: result,\n    });\n\n  } catch (error) {\n    console.error('Search with preset error:', error);\n    \n    if (error instanceof Error && error.message === 'Search preset not found') {\n      return NextResponse.json(\n        { error: 'Search preset not found' },\n        { status: 404 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Search with preset failed' },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["GET", "request", "context", "user", "validateRequest", "NextResponse", "json", "error", "status", "presetId", "params", "searchParams", "URL", "url", "overrides", "get", "location", "overdueOnly", "limit", "parseInt", "offset", "result", "advancedSearchService", "searchWithPreset", "id", "success", "data", "console", "Error", "message"],
      mappings: ";;;;+BAOsBA;;;eAAAA;;;wBAPoB;yBAEV;gCACM;AAI/B,eAAeA,IACpBC,OAAoB,EACpBC,OAAkD;IAElD,IAAI;QACF,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMC,IAAAA,wBAAe;QACtC,IAAI,CAACD,MAAM;YACT,OAAOE,oBAAY,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAAe,GAAG;gBAAEC,QAAQ;YAAI;QACpE;QAEA,MAAM,EAAEC,QAAQ,EAAE,GAAG,MAAMP,QAAQQ,MAAM;QACzC,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAIX,QAAQY,GAAG;QAE5C,+CAA+C;QAC/C,MAAMC,YAAiB,CAAC;QAExB,IAAIH,aAAaI,GAAG,CAAC,aAAa;YAChCD,UAAUE,QAAQ,GAAGL,aAAaI,GAAG,CAAC;QACxC;QAEA,IAAIJ,aAAaI,GAAG,CAAC,gBAAgB;YACnCD,UAAUG,WAAW,GAAGN,aAAaI,GAAG,CAAC,mBAAmB;QAC9D;QAEA,IAAIJ,aAAaI,GAAG,CAAC,UAAU;YAC7BD,UAAUI,KAAK,GAAGC,SAASR,aAAaI,GAAG,CAAC,UAAW;QACzD;QAEA,IAAIJ,aAAaI,GAAG,CAAC,WAAW;YAC9BD,UAAUM,MAAM,GAAGD,SAASR,aAAaI,GAAG,CAAC,WAAY;QAC3D;QAEA,qBAAqB;QACrB,MAAMM,SAAS,MAAMC,qCAAqB,CAACC,gBAAgB,CACzDd,UACAN,KAAKqB,EAAE,EACPV;QAGF,OAAOT,oBAAY,CAACC,IAAI,CAAC;YACvBmB,SAAS;YACTC,MAAML;QACR;IAEF,EAAE,OAAOd,OAAO;QACdoB,QAAQpB,KAAK,CAAC,6BAA6BA;QAE3C,IAAIA,iBAAiBqB,SAASrB,MAAMsB,OAAO,KAAK,2BAA2B;YACzE,OAAOxB,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAA0B,GACnC;gBAAEC,QAAQ;YAAI;QAElB;QAEA,OAAOH,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAA4B,GACrC;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "58f468ec02f58de65ecef3cf3c2adc0d96017b74"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_21zasgjx6x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21zasgjx6x();
cov_21zasgjx6x().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_21zasgjx6x().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_21zasgjx6x().f[0]++;
    cov_21zasgjx6x().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_21zasgjx6x().s[3]++, require("next/server"));
const _server1 =
/* istanbul ignore next */
(cov_21zasgjx6x().s[4]++, require("../../../../../lib/auth/server"));
const _advancedsearch =
/* istanbul ignore next */
(cov_21zasgjx6x().s[5]++, require("../../../../../lib/services/advanced-search"));
async function GET(request, context) {
  /* istanbul ignore next */
  cov_21zasgjx6x().f[1]++;
  cov_21zasgjx6x().s[6]++;
  try {
    const {
      user
    } =
    /* istanbul ignore next */
    (cov_21zasgjx6x().s[7]++, await (0, _server1.validateRequest)());
    /* istanbul ignore next */
    cov_21zasgjx6x().s[8]++;
    if (!user) {
      /* istanbul ignore next */
      cov_21zasgjx6x().b[0][0]++;
      cov_21zasgjx6x().s[9]++;
      return _server.NextResponse.json({
        error: 'Unauthorized'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_21zasgjx6x().b[0][1]++;
    }
    const {
      presetId
    } =
    /* istanbul ignore next */
    (cov_21zasgjx6x().s[10]++, await context.params);
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_21zasgjx6x().s[11]++, new URL(request.url));
    // Parse any filter overrides from query params
    const overrides =
    /* istanbul ignore next */
    (cov_21zasgjx6x().s[12]++, {});
    /* istanbul ignore next */
    cov_21zasgjx6x().s[13]++;
    if (searchParams.get('location')) {
      /* istanbul ignore next */
      cov_21zasgjx6x().b[1][0]++;
      cov_21zasgjx6x().s[14]++;
      overrides.location = searchParams.get('location');
    } else
    /* istanbul ignore next */
    {
      cov_21zasgjx6x().b[1][1]++;
    }
    cov_21zasgjx6x().s[15]++;
    if (searchParams.get('overdueOnly')) {
      /* istanbul ignore next */
      cov_21zasgjx6x().b[2][0]++;
      cov_21zasgjx6x().s[16]++;
      overrides.overdueOnly = searchParams.get('overdueOnly') === 'true';
    } else
    /* istanbul ignore next */
    {
      cov_21zasgjx6x().b[2][1]++;
    }
    cov_21zasgjx6x().s[17]++;
    if (searchParams.get('limit')) {
      /* istanbul ignore next */
      cov_21zasgjx6x().b[3][0]++;
      cov_21zasgjx6x().s[18]++;
      overrides.limit = parseInt(searchParams.get('limit'), 10);
    } else
    /* istanbul ignore next */
    {
      cov_21zasgjx6x().b[3][1]++;
    }
    cov_21zasgjx6x().s[19]++;
    if (searchParams.get('offset')) {
      /* istanbul ignore next */
      cov_21zasgjx6x().b[4][0]++;
      cov_21zasgjx6x().s[20]++;
      overrides.offset = parseInt(searchParams.get('offset'), 10);
    } else
    /* istanbul ignore next */
    {
      cov_21zasgjx6x().b[4][1]++;
    }
    // Search with preset
    const result =
    /* istanbul ignore next */
    (cov_21zasgjx6x().s[21]++, await _advancedsearch.advancedSearchService.searchWithPreset(presetId, user.id, overrides));
    /* istanbul ignore next */
    cov_21zasgjx6x().s[22]++;
    return _server.NextResponse.json({
      success: true,
      data: result
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_21zasgjx6x().s[23]++;
    console.error('Search with preset error:', error);
    /* istanbul ignore next */
    cov_21zasgjx6x().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_21zasgjx6x().b[6][0]++, error instanceof Error) &&
    /* istanbul ignore next */
    (cov_21zasgjx6x().b[6][1]++, error.message === 'Search preset not found')) {
      /* istanbul ignore next */
      cov_21zasgjx6x().b[5][0]++;
      cov_21zasgjx6x().s[25]++;
      return _server.NextResponse.json({
        error: 'Search preset not found'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_21zasgjx6x().b[5][1]++;
    }
    cov_21zasgjx6x().s[26]++;
    return _server.NextResponse.json({
      error: 'Search with preset failed'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjF6YXNnang2eCIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdFVCIsInJlcXVlc3QiLCJjb250ZXh0IiwiZiIsInVzZXIiLCJfc2VydmVyMSIsInZhbGlkYXRlUmVxdWVzdCIsImIiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsImVycm9yIiwic3RhdHVzIiwicHJlc2V0SWQiLCJwYXJhbXMiLCJzZWFyY2hQYXJhbXMiLCJVUkwiLCJ1cmwiLCJvdmVycmlkZXMiLCJnZXQiLCJsb2NhdGlvbiIsIm92ZXJkdWVPbmx5IiwibGltaXQiLCJwYXJzZUludCIsIm9mZnNldCIsInJlc3VsdCIsIl9hZHZhbmNlZHNlYXJjaCIsImFkdmFuY2VkU2VhcmNoU2VydmljZSIsInNlYXJjaFdpdGhQcmVzZXQiLCJpZCIsInN1Y2Nlc3MiLCJkYXRhIiwiY29uc29sZSIsIkVycm9yIiwibWVzc2FnZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdGVmYW5iZWtrZXIvcHJvamVjdHMvZmFuY3ktcGxhbnRpZXMvc3JjL2FwcC9hcGkvc2VhcmNoL3ByZXNldHMvW3ByZXNldElkXS9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgeiB9IGZyb20gJ3pvZCc7XG5pbXBvcnQgeyB2YWxpZGF0ZVJlcXVlc3QgfSBmcm9tICdAL2xpYi9hdXRoL3NlcnZlcic7XG5pbXBvcnQgeyBhZHZhbmNlZFNlYXJjaFNlcnZpY2UgfSBmcm9tICdAL2xpYi9zZXJ2aWNlcy9hZHZhbmNlZC1zZWFyY2gnO1xuaW1wb3J0IHsgcGxhbnRJbnN0YW5jZUZpbHRlclNjaGVtYSB9IGZyb20gJ0AvbGliL3ZhbGlkYXRpb24vcGxhbnQtc2NoZW1hcyc7XG5cbi8vIEdFVCAvYXBpL3NlYXJjaC9wcmVzZXRzL1twcmVzZXRJZF0gLSBTZWFyY2ggd2l0aCBhIHNhdmVkIHByZXNldFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChcbiAgcmVxdWVzdDogTmV4dFJlcXVlc3QsXG4gIGNvbnRleHQ6IHsgcGFyYW1zOiBQcm9taXNlPHsgcHJlc2V0SWQ6IHN0cmluZyB9PiB9XG4pIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHVzZXIgfSA9IGF3YWl0IHZhbGlkYXRlUmVxdWVzdCgpO1xuICAgIGlmICghdXNlcikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdVbmF1dGhvcml6ZWQnIH0sIHsgc3RhdHVzOiA0MDEgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgeyBwcmVzZXRJZCB9ID0gYXdhaXQgY29udGV4dC5wYXJhbXM7XG4gICAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xuICAgIFxuICAgIC8vIFBhcnNlIGFueSBmaWx0ZXIgb3ZlcnJpZGVzIGZyb20gcXVlcnkgcGFyYW1zXG4gICAgY29uc3Qgb3ZlcnJpZGVzOiBhbnkgPSB7fTtcbiAgICBcbiAgICBpZiAoc2VhcmNoUGFyYW1zLmdldCgnbG9jYXRpb24nKSkge1xuICAgICAgb3ZlcnJpZGVzLmxvY2F0aW9uID0gc2VhcmNoUGFyYW1zLmdldCgnbG9jYXRpb24nKSE7XG4gICAgfVxuICAgIFxuICAgIGlmIChzZWFyY2hQYXJhbXMuZ2V0KCdvdmVyZHVlT25seScpKSB7XG4gICAgICBvdmVycmlkZXMub3ZlcmR1ZU9ubHkgPSBzZWFyY2hQYXJhbXMuZ2V0KCdvdmVyZHVlT25seScpID09PSAndHJ1ZSc7XG4gICAgfVxuICAgIFxuICAgIGlmIChzZWFyY2hQYXJhbXMuZ2V0KCdsaW1pdCcpKSB7XG4gICAgICBvdmVycmlkZXMubGltaXQgPSBwYXJzZUludChzZWFyY2hQYXJhbXMuZ2V0KCdsaW1pdCcpISwgMTApO1xuICAgIH1cbiAgICBcbiAgICBpZiAoc2VhcmNoUGFyYW1zLmdldCgnb2Zmc2V0JykpIHtcbiAgICAgIG92ZXJyaWRlcy5vZmZzZXQgPSBwYXJzZUludChzZWFyY2hQYXJhbXMuZ2V0KCdvZmZzZXQnKSEsIDEwKTtcbiAgICB9XG5cbiAgICAvLyBTZWFyY2ggd2l0aCBwcmVzZXRcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBhZHZhbmNlZFNlYXJjaFNlcnZpY2Uuc2VhcmNoV2l0aFByZXNldChcbiAgICAgIHByZXNldElkLFxuICAgICAgdXNlci5pZCxcbiAgICAgIG92ZXJyaWRlc1xuICAgICk7XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGRhdGE6IHJlc3VsdCxcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1NlYXJjaCB3aXRoIHByZXNldCBlcnJvcjonLCBlcnJvcik7XG4gICAgXG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgZXJyb3IubWVzc2FnZSA9PT0gJ1NlYXJjaCBwcmVzZXQgbm90IGZvdW5kJykge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnU2VhcmNoIHByZXNldCBub3QgZm91bmQnIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDQgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnU2VhcmNoIHdpdGggcHJlc2V0IGZhaWxlZCcgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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
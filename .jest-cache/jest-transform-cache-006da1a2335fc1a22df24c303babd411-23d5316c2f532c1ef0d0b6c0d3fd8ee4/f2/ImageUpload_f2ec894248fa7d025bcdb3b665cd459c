4b19f783037b7414cb9f4a4c5438cb92
'use client';
"use strict";

/* istanbul ignore next */
function cov_1d4uuer59u() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/components/shared/ImageUpload.tsx";
  var hash = "e2d55eb73fd6277ffe7bc2f3d0313aab7c83442c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/components/shared/ImageUpload.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 27
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 48
        }
      },
      "6": {
        start: {
          line: 20,
          column: 46
        },
        end: {
          line: 20,
          column: 70
        }
      },
      "7": {
        start: {
          line: 21,
          column: 36
        },
        end: {
          line: 21,
          column: 60
        }
      },
      "8": {
        start: {
          line: 22,
          column: 32
        },
        end: {
          line: 22,
          column: 56
        }
      },
      "9": {
        start: {
          line: 23,
          column: 48
        },
        end: {
          line: 23,
          column: 72
        }
      },
      "10": {
        start: {
          line: 24,
          column: 42
        },
        end: {
          line: 24,
          column: 69
        }
      },
      "11": {
        start: {
          line: 25,
          column: 25
        },
        end: {
          line: 25,
          column: 49
        }
      },
      "12": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 34,
          column: 6
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "15": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 101,
          column: 6
        }
      },
      "16": {
        start: {
          line: 37,
          column: 26
        },
        end: {
          line: 37,
          column: 28
        }
      },
      "17": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 29
        }
      },
      "18": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "20": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 66
        }
      },
      "21": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 19
        }
      },
      "22": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "23": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "24": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 98
        }
      },
      "25": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 23
        }
      },
      "26": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "27": {
        start: {
          line: 53,
          column: 34
        },
        end: {
          line: 53,
          column: 77
        }
      },
      "28": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 96
        }
      },
      "29": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 23
        }
      },
      "30": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "31": {
        start: {
          line: 58,
          column: 47
        },
        end: {
          line: 58,
          column: 105
        }
      },
      "32": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 71
        }
      },
      "33": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 23
        }
      },
      "34": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 34
        }
      },
      "35": {
        start: {
          line: 64,
          column: 27
        },
        end: {
          line: 64,
          column: 43
        }
      },
      "36": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 76,
          column: 14
        }
      },
      "37": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 75,
          column: 17
        }
      },
      "38": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 54
        }
      },
      "39": {
        start: {
          line: 69,
          column: 20
        },
        end: {
          line: 74,
          column: 21
        }
      },
      "40": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 73,
          column: 31
        }
      },
      "41": {
        start: {
          line: 70,
          column: 44
        },
        end: {
          line: 73,
          column: 29
        }
      },
      "42": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 83,
          column: 14
        }
      },
      "43": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 69
        }
      },
      "44": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 82,
          column: 23
        }
      },
      "45": {
        start: {
          line: 79,
          column: 34
        },
        end: {
          line: 82,
          column: 21
        }
      },
      "46": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 39
        }
      },
      "47": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "48": {
        start: {
          line: 87,
          column: 33
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "49": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 43
        }
      },
      "50": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 41
        }
      },
      "51": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 29
        }
      },
      "52": {
        start: {
          line: 103,
          column: 58
        },
        end: {
          line: 111,
          column: 6
        }
      },
      "53": {
        start: {
          line: 105,
          column: 51
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "54": {
        start: {
          line: 113,
          column: 23
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "55": {
        start: {
          line: 114,
          column: 25
        },
        end: {
          line: 114,
          column: 66
        }
      },
      "56": {
        start: {
          line: 114,
          column: 54
        },
        end: {
          line: 114,
          column: 65
        }
      },
      "57": {
        start: {
          line: 115,
          column: 28
        },
        end: {
          line: 115,
          column: 64
        }
      },
      "58": {
        start: {
          line: 115,
          column: 52
        },
        end: {
          line: 115,
          column: 63
        }
      },
      "59": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 35
        }
      },
      "60": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 33
        }
      },
      "61": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 33
        }
      },
      "62": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 22
        }
      },
      "63": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "64": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 60
        }
      },
      "65": {
        start: {
          line: 123,
          column: 53
        },
        end: {
          line: 123,
          column: 60
        }
      },
      "66": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 29
        }
      },
      "67": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 22
        }
      },
      "68": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "69": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 148,
          column: 15
        }
      },
      "70": {
        start: {
          line: 129,
          column: 32
        },
        end: {
          line: 129,
          column: 55
        }
      },
      "71": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 133,
          column: 24
        }
      },
      "72": {
        start: {
          line: 130,
          column: 43
        },
        end: {
          line: 133,
          column: 21
        }
      },
      "73": {
        start: {
          line: 135,
          column: 33
        },
        end: {
          line: 147,
          column: 23
        }
      },
      "74": {
        start: {
          line: 136,
          column: 20
        },
        end: {
          line: 146,
          column: 23
        }
      },
      "75": {
        start: {
          line: 137,
          column: 48
        },
        end: {
          line: 137,
          column: 66
        }
      },
      "76": {
        start: {
          line: 138,
          column: 24
        },
        end: {
          line: 141,
          column: 25
        }
      },
      "77": {
        start: {
          line: 139,
          column: 28
        },
        end: {
          line: 139,
          column: 52
        }
      },
      "78": {
        start: {
          line: 140,
          column: 28
        },
        end: {
          line: 140,
          column: 40
        }
      },
      "79": {
        start: {
          line: 142,
          column: 24
        },
        end: {
          line: 145,
          column: 26
        }
      },
      "80": {
        start: {
          line: 149,
          column: 33
        },
        end: {
          line: 149,
          column: 62
        }
      },
      "81": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 34
        }
      },
      "82": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 158,
          column: 15
        }
      },
      "83": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 34
        }
      },
      "84": {
        start: {
          line: 164,
          column: 21
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "85": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 29
        }
      },
      "86": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 24
        }
      },
      "87": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 27
        }
      },
      "88": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 22
        }
      },
      "89": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 30
        }
      },
      "90": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "91": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 44
        }
      },
      "92": {
        start: {
          line: 175,
          column: 27
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "93": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 42
        }
      },
      "94": {
        start: {
          line: 176,
          column: 25
        },
        end: {
          line: 176,
          column: 42
        }
      },
      "95": {
        start: {
          line: 177,
          column: 18
        },
        end: {
          line: 177,
          column: 22
        }
      },
      "96": {
        start: {
          line: 178,
          column: 22
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "97": {
        start: {
          line: 184,
          column: 18
        },
        end: {
          line: 184,
          column: 59
        }
      },
      "98": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 80
        }
      },
      "99": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 451,
          column: 7
        }
      },
      "100": {
        start: {
          line: 272,
          column: 87
        },
        end: {
          line: 277,
          column: 49
        }
      },
      "101": {
        start: {
          line: 331,
          column: 81
        },
        end: {
          line: 435,
          column: 37
        }
      },
      "102": {
        start: {
          line: 357,
          column: 53
        },
        end: {
          line: 357,
          column: 70
        }
      },
      "103": {
        start: {
          line: 380,
          column: 61
        },
        end: {
          line: 382,
          column: 45
        }
      },
      "104": {
        start: {
          line: 383,
          column: 64
        },
        end: {
          line: 385,
          column: 45
        }
      },
      "105": {
        start: {
          line: 386,
          column: 65
        },
        end: {
          line: 386,
          column: 80
        }
      },
      "106": {
        start: {
          line: 387,
          column: 68
        },
        end: {
          line: 387,
          column: 86
        }
      },
      "107": {
        start: {
          line: 389,
          column: 44
        },
        end: {
          line: 389,
          column: 70
        }
      },
      "108": {
        start: {
          line: 390,
          column: 44
        },
        end: {
          line: 390,
          column: 73
        }
      },
      "109": {
        start: {
          line: 392,
          column: 44
        },
        end: {
          line: 392,
          column: 75
        }
      },
      "110": {
        start: {
          line: 393,
          column: 44
        },
        end: {
          line: 393,
          column: 81
        }
      },
      "111": {
        start: {
          line: 394,
          column: 44
        },
        end: {
          line: 394,
          column: 71
        }
      },
      "112": {
        start: {
          line: 395,
          column: 44
        },
        end: {
          line: 395,
          column: 69
        }
      },
      "113": {
        start: {
          line: 396,
          column: 44
        },
        end: {
          line: 396,
          column: 69
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "ImageUpload",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 20
          }
        },
        loc: {
          start: {
            line: 19,
            column: 49
          },
          end: {
            line: 452,
            column: 1
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 27,
            column: 49
          }
        },
        loc: {
          start: {
            line: 27,
            column: 52
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 48
          },
          end: {
            line: 36,
            column: 49
          }
        },
        loc: {
          start: {
            line: 36,
            column: 57
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 45,
            column: 22
          },
          end: {
            line: 45,
            column: 23
          }
        },
        loc: {
          start: {
            line: 45,
            column: 30
          },
          end: {
            line: 85,
            column: 9
          }
        },
        line: 45
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 58,
            column: 35
          },
          end: {
            line: 58,
            column: 36
          }
        },
        loc: {
          start: {
            line: 58,
            column: 47
          },
          end: {
            line: 58,
            column: 105
          }
        },
        line: 58
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 28
          },
          end: {
            line: 65,
            column: 29
          }
        },
        loc: {
          start: {
            line: 65,
            column: 33
          },
          end: {
            line: 76,
            column: 13
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 70,
            column: 36
          },
          end: {
            line: 70,
            column: 37
          }
        },
        loc: {
          start: {
            line: 70,
            column: 44
          },
          end: {
            line: 73,
            column: 29
          }
        },
        line: 70
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 77,
            column: 29
          },
          end: {
            line: 77,
            column: 30
          }
        },
        loc: {
          start: {
            line: 77,
            column: 33
          },
          end: {
            line: 83,
            column: 13
          }
        },
        line: 77
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 79,
            column: 26
          },
          end: {
            line: 79,
            column: 27
          }
        },
        loc: {
          start: {
            line: 79,
            column: 34
          },
          end: {
            line: 82,
            column: 21
          }
        },
        line: 79
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 105,
            column: 37
          },
          end: {
            line: 105,
            column: 38
          }
        },
        loc: {
          start: {
            line: 105,
            column: 51
          },
          end: {
            line: 108,
            column: 13
          }
        },
        line: 105
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 113,
            column: 23
          },
          end: {
            line: 113,
            column: 24
          }
        },
        loc: {
          start: {
            line: 113,
            column: 32
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 113
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 114,
            column: 46
          },
          end: {
            line: 114,
            column: 47
          }
        },
        loc: {
          start: {
            line: 114,
            column: 54
          },
          end: {
            line: 114,
            column: 65
          }
        },
        line: 114
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 115,
            column: 44
          },
          end: {
            line: 115,
            column: 45
          }
        },
        loc: {
          start: {
            line: 115,
            column: 52
          },
          end: {
            line: 115,
            column: 63
          }
        },
        line: 115
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 122,
            column: 24
          },
          end: {
            line: 122,
            column: 25
          }
        },
        loc: {
          start: {
            line: 122,
            column: 34
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 122
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 128,
            column: 34
          },
          end: {
            line: 128,
            column: 35
          }
        },
        loc: {
          start: {
            line: 128,
            column: 49
          },
          end: {
            line: 148,
            column: 13
          }
        },
        line: 128
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 130,
            column: 34
          },
          end: {
            line: 130,
            column: 35
          }
        },
        loc: {
          start: {
            line: 130,
            column: 43
          },
          end: {
            line: 133,
            column: 21
          }
        },
        line: 130
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 135,
            column: 45
          },
          end: {
            line: 135,
            column: 46
          }
        },
        loc: {
          start: {
            line: 135,
            column: 49
          },
          end: {
            line: 147,
            column: 17
          }
        },
        line: 135
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 136,
            column: 38
          },
          end: {
            line: 136,
            column: 39
          }
        },
        loc: {
          start: {
            line: 136,
            column: 46
          },
          end: {
            line: 146,
            column: 21
          }
        },
        line: 136
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 164,
            column: 21
          },
          end: {
            line: 164,
            column: 22
          }
        },
        loc: {
          start: {
            line: 164,
            column: 25
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 164
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 175,
            column: 27
          },
          end: {
            line: 175,
            column: 28
          }
        },
        loc: {
          start: {
            line: 175,
            column: 36
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 175
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 272,
            column: 57
          },
          end: {
            line: 272,
            column: 58
          }
        },
        loc: {
          start: {
            line: 272,
            column: 87
          },
          end: {
            line: 277,
            column: 49
          }
        },
        line: 272
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 331,
            column: 52
          },
          end: {
            line: 331,
            column: 53
          }
        },
        loc: {
          start: {
            line: 331,
            column: 81
          },
          end: {
            line: 435,
            column: 37
          }
        },
        line: 331
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 357,
            column: 49
          },
          end: {
            line: 357,
            column: 50
          }
        },
        loc: {
          start: {
            line: 357,
            column: 53
          },
          end: {
            line: 357,
            column: 70
          }
        },
        line: 357
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 378,
            column: 49
          },
          end: {
            line: 378,
            column: 50
          }
        },
        loc: {
          start: {
            line: 378,
            column: 53
          },
          end: {
            line: 397,
            column: 41
          }
        },
        line: 378
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 49
          },
          end: {
            line: 15,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 61
          },
          end: {
            line: 15,
            column: 62
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 64
          },
          end: {
            line: 15,
            column: 97
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 82
          },
          end: {
            line: 15,
            column: 97
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 99
          },
          end: {
            line: 19,
            column: 1
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 115
          },
          end: {
            line: 19,
            column: 1
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 19,
            column: 3
          },
          end: {
            line: 19,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 17
          }
        }],
        line: 19
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 19,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 40
          },
          end: {
            line: 19,
            column: 45
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 32
          }
        }, {
          start: {
            line: 28,
            column: 36
          },
          end: {
            line: 28,
            column: 68
          }
        }],
        line: 28
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "11": {
        loc: {
          start: {
            line: 58,
            column: 47
          },
          end: {
            line: 58,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 47
          },
          end: {
            line: 58,
            column: 74
          }
        }, {
          start: {
            line: 58,
            column: 78
          },
          end: {
            line: 58,
            column: 105
          }
        }],
        line: 58
      },
      "12": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 75,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "13": {
        loc: {
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 74,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 74,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "14": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "15": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 123,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 123,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "16": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 21
          }
        }, {
          start: {
            line: 123,
            column: 25
          },
          end: {
            line: 123,
            column: 51
          }
        }],
        line: 123
      },
      "17": {
        loc: {
          start: {
            line: 137,
            column: 48
          },
          end: {
            line: 137,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 48
          },
          end: {
            line: 137,
            column: 61
          }
        }, {
          start: {
            line: 137,
            column: 65
          },
          end: {
            line: 137,
            column: 66
          }
        }],
        line: 137
      },
      "18": {
        loc: {
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 141,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 24
          },
          end: {
            line: 141,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "19": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "20": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 176,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 176,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "21": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 247,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 44
          }
        }, {
          start: {
            line: 190,
            column: 62
          },
          end: {
            line: 247,
            column: 14
          }
        }],
        line: 190
      },
      "22": {
        loc: {
          start: {
            line: 192,
            column: 113
          },
          end: {
            line: 192,
            column: 221
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 192,
            column: 128
          },
          end: {
            line: 192,
            column: 162
          }
        }, {
          start: {
            line: 192,
            column: 165
          },
          end: {
            line: 192,
            column: 221
          }
        }],
        line: 192
      },
      "23": {
        loc: {
          start: {
            line: 205,
            column: 28
          },
          end: {
            line: 243,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 57
          },
          end: {
            line: 208,
            column: 30
          }
        }, {
          start: {
            line: 208,
            column: 47
          },
          end: {
            line: 243,
            column: 30
          }
        }],
        line: 205
      },
      "24": {
        loc: {
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 283,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 248,
            column: 29
          }
        }, {
          start: {
            line: 248,
            column: 47
          },
          end: {
            line: 283,
            column: 14
          }
        }],
        line: 248
      },
      "25": {
        loc: {
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 449,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 12
          },
          end: {
            line: 284,
            column: 36
          }
        }, {
          start: {
            line: 284,
            column: 54
          },
          end: {
            line: 449,
            column: 14
          }
        }],
        line: 284
      },
      "26": {
        loc: {
          start: {
            line: 301,
            column: 36
          },
          end: {
            line: 315,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 301,
            column: 36
          },
          end: {
            line: 301,
            column: 54
          }
        }, {
          start: {
            line: 301,
            column: 58
          },
          end: {
            line: 301,
            column: 66
          }
        }, {
          start: {
            line: 301,
            column: 70
          },
          end: {
            line: 301,
            column: 94
          }
        }, {
          start: {
            line: 301,
            column: 112
          },
          end: {
            line: 315,
            column: 38
          }
        }],
        line: 301
      },
      "27": {
        loc: {
          start: {
            line: 305,
            column: 80
          },
          end: {
            line: 305,
            column: 191
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 305,
            column: 94
          },
          end: {
            line: 305,
            column: 140
          }
        }, {
          start: {
            line: 305,
            column: 143
          },
          end: {
            line: 305,
            column: 191
          }
        }],
        line: 305
      },
      "28": {
        loc: {
          start: {
            line: 306,
            column: 54
          },
          end: {
            line: 306,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 306,
            column: 68
          },
          end: {
            line: 306,
            column: 86
          }
        }, {
          start: {
            line: 306,
            column: 89
          },
          end: {
            line: 306,
            column: 113
          }
        }],
        line: 306
      },
      "29": {
        loc: {
          start: {
            line: 307,
            column: 47
          },
          end: {
            line: 307,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 307,
            column: 61
          },
          end: {
            line: 307,
            column: 82
          }
        }, {
          start: {
            line: 307,
            column: 85
          },
          end: {
            line: 307,
            column: 109
          }
        }],
        line: 307
      },
      "30": {
        loc: {
          start: {
            line: 308,
            column: 50
          },
          end: {
            line: 314,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 308,
            column: 78
          },
          end: {
            line: 314,
            column: 42
          }
        }, {
          start: {
            line: 314,
            column: 45
          },
          end: {
            line: 314,
            column: 53
          }
        }],
        line: 308
      },
      "31": {
        loc: {
          start: {
            line: 336,
            column: 50
          },
          end: {
            line: 353,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 336,
            column: 82
          },
          end: {
            line: 340,
            column: 42
          }
        }, {
          start: {
            line: 340,
            column: 59
          },
          end: {
            line: 353,
            column: 42
          }
        }],
        line: 336
      },
      "32": {
        loc: {
          start: {
            line: 372,
            column: 36
          },
          end: {
            line: 375,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 36
          },
          end: {
            line: 372,
            column: 47
          }
        }, {
          start: {
            line: 372,
            column: 65
          },
          end: {
            line: 375,
            column: 38
          }
        }],
        line: 372
      },
      "33": {
        loc: {
          start: {
            line: 376,
            column: 36
          },
          end: {
            line: 402,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 376,
            column: 36
          },
          end: {
            line: 376,
            column: 47
          }
        }, {
          start: {
            line: 376,
            column: 65
          },
          end: {
            line: 402,
            column: 38
          }
        }],
        line: 376
      },
      "34": {
        loc: {
          start: {
            line: 403,
            column: 36
          },
          end: {
            line: 420,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 403,
            column: 36
          },
          end: {
            line: 403,
            column: 54
          }
        }, {
          start: {
            line: 403,
            column: 58
          },
          end: {
            line: 403,
            column: 111
          }
        }, {
          start: {
            line: 403,
            column: 129
          },
          end: {
            line: 420,
            column: 38
          }
        }],
        line: 403
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/components/shared/ImageUpload.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useCallback, useRef } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\ninterface ImageUploadProps {\n  onImagesChange: (files: File[]) => void;\n  onUpload?: (files: File[]) => Promise<string[]>; // Returns URLs of uploaded images\n  maxImages?: number;\n  maxSizePerImage?: number; // in bytes\n  acceptedTypes?: string[];\n  className?: string;\n  showUploadProgress?: boolean;\n}\n\nexport default function ImageUpload({\n  onImagesChange,\n  onUpload,\n  maxImages = 6,\n  maxSizePerImage = 5 * 1024 * 1024, // 5MB default\n  acceptedTypes = ['image/jpeg', 'image/png', 'image/webp'],\n  className = '',\n  showUploadProgress = false,\n}: ImageUploadProps) {\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const [previews, setPreviews] = useState<string[]>([]);\n  const [errors, setErrors] = useState<string[]>([]);\n  const [uploadProgress, setUploadProgress] = useState<{ [key: string]: number }>({});\n  const [isUploading, setIsUploading] = useState(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Manual click handler for better reliability\n  const handleClick = useCallback(() => {\n    if (fileInputRef.current && selectedFiles.length < maxImages) {\n      fileInputRef.current.click();\n    }\n  }, [selectedFiles.length, maxImages]);\n\n  // Handle file selection\n  const handleFiles = useCallback((files: File[]) => {\n    const newErrors: string[] = [];\n    const validFiles: File[] = [];\n    const newPreviews: string[] = [];\n\n    // Check if adding these files would exceed the limit\n    if (selectedFiles.length + files.length > maxImages) {\n      newErrors.push(`Maximum ${maxImages} images allowed`);\n      return;\n    }\n\n    files.forEach((file) => {\n      // Check file type\n      if (!acceptedTypes.includes(file.type)) {\n        newErrors.push(`${file.name}: Invalid file type. Please use JPEG, PNG, or WebP.`);\n        return;\n      }\n\n      // Check file size\n      if (file.size > maxSizePerImage) {\n        const maxSizeMB = Math.round(maxSizePerImage / (1024 * 1024));\n        newErrors.push(`${file.name}: File too large. Maximum size is ${maxSizeMB}MB.`);\n        return;\n      }\n\n      // Check for duplicates\n      if (selectedFiles.some(existing => existing.name === file.name && existing.size === file.size)) {\n        newErrors.push(`${file.name}: File already selected.`);\n        return;\n      }\n\n      validFiles.push(file);\n      \n      // Create preview\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        if (e.target?.result) {\n          newPreviews.push(e.target.result as string);\n          \n          // Update previews when all files are processed\n          if (newPreviews.length === validFiles.length) {\n            setPreviews(prev => [...prev, ...newPreviews]);\n          }\n        }\n      };\n      reader.onerror = () => {\n        newErrors.push(`${file.name}: Failed to read file.`);\n        setErrors(prev => [...prev, ...newErrors]);\n      };\n      reader.readAsDataURL(file);\n    });\n\n    if (validFiles.length > 0) {\n      const updatedFiles = [...selectedFiles, ...validFiles];\n      setSelectedFiles(updatedFiles);\n      onImagesChange(updatedFiles);\n    }\n\n    setErrors(newErrors);\n  }, [selectedFiles, maxImages, maxSizePerImage, acceptedTypes, onImagesChange]);\n\n  // Dropzone configuration\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleFiles,\n    accept: acceptedTypes.reduce((acc, type) => ({ ...acc, [type]: [] }), {}),\n    maxFiles: maxImages - selectedFiles.length,\n    disabled: selectedFiles.length >= maxImages,\n  });\n\n  // Remove file\n  const removeFile = (index: number) => {\n    const newFiles = selectedFiles.filter((_, i) => i !== index);\n    const newPreviews = previews.filter((_, i) => i !== index);\n    \n    setSelectedFiles(newFiles);\n    setPreviews(newPreviews);\n    onImagesChange(newFiles);\n    setErrors([]);\n  };\n\n  // Upload files\n  const uploadFiles = async () => {\n    if (!onUpload || selectedFiles.length === 0) return;\n\n    setIsUploading(true);\n    setErrors([]);\n\n    try {\n      // Simulate upload progress for each file\n      selectedFiles.forEach((file, index) => {\n        const fileKey = `${file.name}-${index}`;\n        setUploadProgress(prev => ({ ...prev, [fileKey]: 0 }));\n        \n        // Simulate progress\n        const interval = setInterval(() => {\n          setUploadProgress(prev => {\n            const currentProgress = prev[fileKey] || 0;\n            if (currentProgress >= 100) {\n              clearInterval(interval);\n              return prev;\n            }\n            return { ...prev, [fileKey]: Math.min(currentProgress + 10, 100) };\n          });\n        }, 100);\n      });\n\n      const uploadedUrls = await onUpload(selectedFiles);\n      \n      // Clear progress after successful upload\n      setUploadProgress({});\n      \n      // Optionally clear files after upload\n      // setSelectedFiles([]);\n      // setPreviews([]);\n      \n    } catch (error) {\n      setErrors(['Upload failed. Please try again.']);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Clear all files\n  const clearAll = () => {\n    setSelectedFiles([]);\n    setPreviews([]);\n    onImagesChange([]);\n    setErrors([]);\n    setUploadProgress({});\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  // Format file size\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {/* Upload Area */}\n      {selectedFiles.length < maxImages && (\n        <div\n          {...getRootProps()}\n          className={`border-2 border-dashed rounded-lg p-6 text-center cursor-pointer transition-colors ${\n            isDragActive\n              ? 'border-primary-400 bg-primary-50'\n              : 'border-gray-300 hover:border-gray-400 hover:bg-gray-50'\n          }`}\n        >\n          <input {...getInputProps()} ref={fileInputRef} />\n          \n          <div className=\"space-y-2\">\n            <div className=\"text-4xl\">\uD83D\uDCF7</div>\n            \n            {isDragActive ? (\n              <p className=\"text-primary-600 font-medium\">Drop images here...</p>\n            ) : (\n              <>\n                <p className=\"text-gray-600\">\n                  <button\n                    type=\"button\"\n                    onClick={handleClick}\n                    className=\"font-medium text-primary-600 hover:text-primary-700 underline focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 rounded\"\n                    aria-label=\"Click to select images for upload\"\n                    title=\"Select images to upload\"\n                  >\n                    Click to upload\n                  </button>{' '}\n                  or drag and drop\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  JPEG, PNG, or WebP up to {Math.round(maxSizePerImage / (1024 * 1024))}MB each\n                </p>\n                <p className=\"text-xs text-gray-400\">\n                  {selectedFiles.length} of {maxImages} images selected\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Error Messages */}\n      {errors.length > 0 && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n          <div className=\"flex items-start\">\n            <svg className=\"w-5 h-5 text-red-400 mt-0.5 mr-2 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n            </svg>\n            <div className=\"flex-1\">\n              <h4 className=\"text-sm font-medium text-red-800 mb-1\">Upload Errors</h4>\n              <ul className=\"text-sm text-red-700 space-y-1\">\n                {errors.map((error, index) => (\n                  <li key={index}>\u2022 {error}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Selected Images Preview */}\n      {selectedFiles.length > 0 && (\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center justify-between\">\n            <h4 className=\"text-sm font-medium text-gray-700\">\n              Selected Images ({selectedFiles.length})\n            </h4>\n            <div className=\"flex items-center space-x-2\">\n              {showUploadProgress && onUpload && selectedFiles.length > 0 && (\n                <button\n                  type=\"button\"\n                  onClick={uploadFiles}\n                  disabled={isUploading}\n                  className={`px-3 py-1 text-sm rounded ${\n                    isUploading\n                      ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                      : 'bg-primary-600 text-white hover:bg-primary-700'\n                  }`}\n                  aria-label={isUploading ? 'Uploading images' : 'Upload selected images'}\n                  title={isUploading ? 'Uploading images...' : 'Upload selected images'}\n                >\n                  {isUploading ? (\n                    <>\n                      <span role=\"status\" aria-live=\"polite\">Uploading...</span>\n                    </>\n                  ) : (\n                    'Upload'\n                  )}\n                </button>\n              )}\n              <button\n                type=\"button\"\n                onClick={clearAll}\n                className=\"text-sm text-red-600 hover:text-red-700\"\n                disabled={isUploading}\n                aria-label=\"Clear all selected images\"\n                title=\"Remove all selected images\"\n              >\n                Clear All\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-3\">\n            {selectedFiles.map((file, index) => (\n              <div key={index} className=\"relative group\">\n                {/* Image Preview */}\n                <div className=\"aspect-square rounded-lg overflow-hidden bg-gray-100\">\n                  {previews[index] ? (\n                    <img\n                      src={previews[index]}\n                      alt={`Preview ${index + 1}`}\n                      className=\"w-full h-full object-cover\"\n                    />\n                  ) : (\n                    <div className=\"w-full h-full flex items-center justify-center\">\n                      <div \n                        className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary-500\"\n                        role=\"status\"\n                        aria-label=\"Loading image preview\"\n                      />\n                      <span className=\"sr-only\">Loading image preview...</span>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Remove Button */}\n                <button\n                  type=\"button\"\n                  onClick={() => removeFile(index)}\n                  className=\"absolute top-1 right-1 p-1 bg-red-500 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\n                  title=\"Remove image\"\n                  aria-label={`Remove image ${index + 1}`}\n                >\n                  <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n                  </svg>\n                </button>\n                \n                {/* Primary Badge */}\n                {index === 0 && (\n                  <div className=\"absolute bottom-1 left-1 bg-primary-500 text-white text-xs px-1 py-0.5 rounded\">\n                    Primary\n                  </div>\n                )}\n                \n                {/* Set as Primary Button (for non-primary images) */}\n                {index !== 0 && (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      // Move this image to the front\n                      const newFiles = [...selectedFiles];\n                      const newPreviews = [...previews];\n                      \n                      const selectedFile = newFiles[index];\n                      const selectedPreview = newPreviews[index];\n                      \n                      // Remove from current position\n                      newFiles.splice(index, 1);\n                      newPreviews.splice(index, 1);\n                      \n                      // Add to front\n                      newFiles.unshift(selectedFile);\n                      newPreviews.unshift(selectedPreview);\n                      \n                      setSelectedFiles(newFiles);\n                      setPreviews(newPreviews);\n                      onImagesChange(newFiles);\n                    }}\n                    className=\"absolute bottom-1 left-1 bg-black bg-opacity-50 text-white text-xs px-1 py-0.5 rounded opacity-0 group-hover:opacity-100 transition-opacity\"\n                    title=\"Set as primary image\"\n                    aria-label={`Set image ${index + 1} as primary`}\n                  >\n                    Set Primary\n                  </button>\n                )}\n                \n                {/* Upload Progress */}\n                {showUploadProgress && uploadProgress[`${file.name}-${index}`] !== undefined && (\n                  <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n                    <div className=\"text-white text-center\">\n                      <div className=\"w-8 h-8 border-2 border-white border-t-transparent rounded-full animate-spin mx-auto mb-1\" />\n                      <div className=\"text-xs\">{uploadProgress[`${file.name}-${index}`]}%</div>\n                    </div>\n                  </div>\n                )}\n\n                {/* File Info */}\n                <div className=\"mt-1 text-xs text-gray-500 truncate\">\n                  <div className=\"truncate\" title={file.name}>{file.name}</div>\n                  <div>{formatFileSize(file.size)}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {/* Upload Tips */}\n          <div className=\"text-xs text-gray-500 bg-gray-50 rounded p-2\">\n            <p><strong>Tip:</strong> The first image will be used as the primary photo for your plant card.</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],
      names: ["ImageUpload", "onImagesChange", "onUpload", "maxImages", "maxSizePerImage", "acceptedTypes", "className", "showUploadProgress", "selectedFiles", "setSelectedFiles", "useState", "previews", "setPreviews", "errors", "setErrors", "uploadProgress", "setUploadProgress", "isUploading", "setIsUploading", "fileInputRef", "useRef", "handleClick", "useCallback", "current", "length", "click", "handleFiles", "files", "newErrors", "validFiles", "newPreviews", "push", "forEach", "file", "includes", "type", "name", "size", "maxSizeMB", "Math", "round", "some", "existing", "reader", "FileReader", "onload", "e", "target", "result", "prev", "onerror", "readAsDataURL", "updatedFiles", "getRootProps", "getInputProps", "isDragActive", "useDropzone", "onDrop", "accept", "reduce", "acc", "maxFiles", "disabled", "removeFile", "index", "newFiles", "filter", "_", "i", "uploadFiles", "fileKey", "interval", "setInterval", "currentProgress", "clearInterval", "min", "uploadedUrls", "error", "clearAll", "value", "formatFileSize", "bytes", "k", "sizes", "floor", "log", "parseFloat", "pow", "toFixed", "div", "input", "ref", "p", "button", "onClick", "aria-label", "title", "svg", "fill", "viewBox", "path", "fillRule", "d", "clipRule", "h4", "ul", "map", "li", "span", "role", "aria-live", "img", "src", "alt", "selectedFile", "selectedPreview", "splice", "unshift", "undefined", "strong"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e2d55eb73fd6277ffe7bc2f3d0313aab7c83442c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1d4uuer59u = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1d4uuer59u();
cov_1d4uuer59u().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1d4uuer59u().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1d4uuer59u().f[0]++;
    cov_1d4uuer59u().s[2]++;
    return ImageUpload;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1d4uuer59u().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1d4uuer59u().s[4]++, require("react"));
const _reactdropzone =
/* istanbul ignore next */
(cov_1d4uuer59u().s[5]++, require("react-dropzone"));
function ImageUpload({
  onImagesChange,
  onUpload,
  maxImages =
  /* istanbul ignore next */
  (cov_1d4uuer59u().b[0][0]++, 6),
  maxSizePerImage =
  /* istanbul ignore next */
  (cov_1d4uuer59u().b[1][0]++, 5 * 1024 * 1024),
  acceptedTypes =
  /* istanbul ignore next */
  (cov_1d4uuer59u().b[2][0]++, ['image/jpeg', 'image/png', 'image/webp']),
  className =
  /* istanbul ignore next */
  (cov_1d4uuer59u().b[3][0]++, ''),
  showUploadProgress =
  /* istanbul ignore next */
  (cov_1d4uuer59u().b[4][0]++, false)
}) {
  /* istanbul ignore next */
  cov_1d4uuer59u().f[1]++;
  const [selectedFiles, setSelectedFiles] =
  /* istanbul ignore next */
  (cov_1d4uuer59u().s[6]++, (0, _react.useState)([]));
  const [previews, setPreviews] =
  /* istanbul ignore next */
  (cov_1d4uuer59u().s[7]++, (0, _react.useState)([]));
  const [errors, setErrors] =
  /* istanbul ignore next */
  (cov_1d4uuer59u().s[8]++, (0, _react.useState)([]));
  const [uploadProgress, setUploadProgress] =
  /* istanbul ignore next */
  (cov_1d4uuer59u().s[9]++, (0, _react.useState)({}));
  const [isUploading, setIsUploading] =
  /* istanbul ignore next */
  (cov_1d4uuer59u().s[10]++, (0, _react.useState)(false));
  const fileInputRef =
  /* istanbul ignore next */
  (cov_1d4uuer59u().s[11]++, (0, _react.useRef)(null));
  // Manual click handler for better reliability
  const handleClick =
  /* istanbul ignore next */
  (cov_1d4uuer59u().s[12]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1d4uuer59u().f[2]++;
    cov_1d4uuer59u().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_1d4uuer59u().b[6][0]++, fileInputRef.current) &&
    /* istanbul ignore next */
    (cov_1d4uuer59u().b[6][1]++, selectedFiles.length < maxImages)) {
      /* istanbul ignore next */
      cov_1d4uuer59u().b[5][0]++;
      cov_1d4uuer59u().s[14]++;
      fileInputRef.current.click();
    } else
    /* istanbul ignore next */
    {
      cov_1d4uuer59u().b[5][1]++;
    }
  }, [selectedFiles.length, maxImages]));
  // Handle file selection
  const handleFiles =
  /* istanbul ignore next */
  (cov_1d4uuer59u().s[15]++, (0, _react.useCallback)(files => {
    /* istanbul ignore next */
    cov_1d4uuer59u().f[3]++;
    const newErrors =
    /* istanbul ignore next */
    (cov_1d4uuer59u().s[16]++, []);
    const validFiles =
    /* istanbul ignore next */
    (cov_1d4uuer59u().s[17]++, []);
    const newPreviews =
    /* istanbul ignore next */
    (cov_1d4uuer59u().s[18]++, []);
    // Check if adding these files would exceed the limit
    /* istanbul ignore next */
    cov_1d4uuer59u().s[19]++;
    if (selectedFiles.length + files.length > maxImages) {
      /* istanbul ignore next */
      cov_1d4uuer59u().b[7][0]++;
      cov_1d4uuer59u().s[20]++;
      newErrors.push(`Maximum ${maxImages} images allowed`);
      /* istanbul ignore next */
      cov_1d4uuer59u().s[21]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1d4uuer59u().b[7][1]++;
    }
    cov_1d4uuer59u().s[22]++;
    files.forEach(file => {
      /* istanbul ignore next */
      cov_1d4uuer59u().f[4]++;
      cov_1d4uuer59u().s[23]++;
      // Check file type
      if (!acceptedTypes.includes(file.type)) {
        /* istanbul ignore next */
        cov_1d4uuer59u().b[8][0]++;
        cov_1d4uuer59u().s[24]++;
        newErrors.push(`${file.name}: Invalid file type. Please use JPEG, PNG, or WebP.`);
        /* istanbul ignore next */
        cov_1d4uuer59u().s[25]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1d4uuer59u().b[8][1]++;
      }
      // Check file size
      cov_1d4uuer59u().s[26]++;
      if (file.size > maxSizePerImage) {
        /* istanbul ignore next */
        cov_1d4uuer59u().b[9][0]++;
        const maxSizeMB =
        /* istanbul ignore next */
        (cov_1d4uuer59u().s[27]++, Math.round(maxSizePerImage / (1024 * 1024)));
        /* istanbul ignore next */
        cov_1d4uuer59u().s[28]++;
        newErrors.push(`${file.name}: File too large. Maximum size is ${maxSizeMB}MB.`);
        /* istanbul ignore next */
        cov_1d4uuer59u().s[29]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1d4uuer59u().b[9][1]++;
      }
      // Check for duplicates
      cov_1d4uuer59u().s[30]++;
      if (selectedFiles.some(existing => {
        /* istanbul ignore next */
        cov_1d4uuer59u().f[5]++;
        cov_1d4uuer59u().s[31]++;
        return /* istanbul ignore next */(cov_1d4uuer59u().b[11][0]++, existing.name === file.name) &&
        /* istanbul ignore next */
        (cov_1d4uuer59u().b[11][1]++, existing.size === file.size);
      })) {
        /* istanbul ignore next */
        cov_1d4uuer59u().b[10][0]++;
        cov_1d4uuer59u().s[32]++;
        newErrors.push(`${file.name}: File already selected.`);
        /* istanbul ignore next */
        cov_1d4uuer59u().s[33]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1d4uuer59u().b[10][1]++;
      }
      cov_1d4uuer59u().s[34]++;
      validFiles.push(file);
      // Create preview
      const reader =
      /* istanbul ignore next */
      (cov_1d4uuer59u().s[35]++, new FileReader());
      /* istanbul ignore next */
      cov_1d4uuer59u().s[36]++;
      reader.onload = e => {
        /* istanbul ignore next */
        cov_1d4uuer59u().f[6]++;
        cov_1d4uuer59u().s[37]++;
        if (e.target?.result) {
          /* istanbul ignore next */
          cov_1d4uuer59u().b[12][0]++;
          cov_1d4uuer59u().s[38]++;
          newPreviews.push(e.target.result);
          // Update previews when all files are processed
          /* istanbul ignore next */
          cov_1d4uuer59u().s[39]++;
          if (newPreviews.length === validFiles.length) {
            /* istanbul ignore next */
            cov_1d4uuer59u().b[13][0]++;
            cov_1d4uuer59u().s[40]++;
            setPreviews(prev => {
              /* istanbul ignore next */
              cov_1d4uuer59u().f[7]++;
              cov_1d4uuer59u().s[41]++;
              return [...prev, ...newPreviews];
            });
          } else
          /* istanbul ignore next */
          {
            cov_1d4uuer59u().b[13][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_1d4uuer59u().b[12][1]++;
        }
      };
      /* istanbul ignore next */
      cov_1d4uuer59u().s[42]++;
      reader.onerror = () => {
        /* istanbul ignore next */
        cov_1d4uuer59u().f[8]++;
        cov_1d4uuer59u().s[43]++;
        newErrors.push(`${file.name}: Failed to read file.`);
        /* istanbul ignore next */
        cov_1d4uuer59u().s[44]++;
        setErrors(prev => {
          /* istanbul ignore next */
          cov_1d4uuer59u().f[9]++;
          cov_1d4uuer59u().s[45]++;
          return [...prev, ...newErrors];
        });
      };
      /* istanbul ignore next */
      cov_1d4uuer59u().s[46]++;
      reader.readAsDataURL(file);
    });
    /* istanbul ignore next */
    cov_1d4uuer59u().s[47]++;
    if (validFiles.length > 0) {
      /* istanbul ignore next */
      cov_1d4uuer59u().b[14][0]++;
      const updatedFiles =
      /* istanbul ignore next */
      (cov_1d4uuer59u().s[48]++, [...selectedFiles, ...validFiles]);
      /* istanbul ignore next */
      cov_1d4uuer59u().s[49]++;
      setSelectedFiles(updatedFiles);
      /* istanbul ignore next */
      cov_1d4uuer59u().s[50]++;
      onImagesChange(updatedFiles);
    } else
    /* istanbul ignore next */
    {
      cov_1d4uuer59u().b[14][1]++;
    }
    cov_1d4uuer59u().s[51]++;
    setErrors(newErrors);
  }, [selectedFiles, maxImages, maxSizePerImage, acceptedTypes, onImagesChange]));
  // Dropzone configuration
  const {
    getRootProps,
    getInputProps,
    isDragActive
  } =
  /* istanbul ignore next */
  (cov_1d4uuer59u().s[52]++, (0, _reactdropzone.useDropzone)({
    onDrop: handleFiles,
    accept: acceptedTypes.reduce((acc, type) => {
      /* istanbul ignore next */
      cov_1d4uuer59u().f[10]++;
      cov_1d4uuer59u().s[53]++;
      return {
        ...acc,
        [type]: []
      };
    }, {}),
    maxFiles: maxImages - selectedFiles.length,
    disabled: selectedFiles.length >= maxImages
  }));
  // Remove file
  /* istanbul ignore next */
  cov_1d4uuer59u().s[54]++;
  const removeFile = index => {
    /* istanbul ignore next */
    cov_1d4uuer59u().f[11]++;
    const newFiles =
    /* istanbul ignore next */
    (cov_1d4uuer59u().s[55]++, selectedFiles.filter((_, i) => {
      /* istanbul ignore next */
      cov_1d4uuer59u().f[12]++;
      cov_1d4uuer59u().s[56]++;
      return i !== index;
    }));
    const newPreviews =
    /* istanbul ignore next */
    (cov_1d4uuer59u().s[57]++, previews.filter((_, i) => {
      /* istanbul ignore next */
      cov_1d4uuer59u().f[13]++;
      cov_1d4uuer59u().s[58]++;
      return i !== index;
    }));
    /* istanbul ignore next */
    cov_1d4uuer59u().s[59]++;
    setSelectedFiles(newFiles);
    /* istanbul ignore next */
    cov_1d4uuer59u().s[60]++;
    setPreviews(newPreviews);
    /* istanbul ignore next */
    cov_1d4uuer59u().s[61]++;
    onImagesChange(newFiles);
    /* istanbul ignore next */
    cov_1d4uuer59u().s[62]++;
    setErrors([]);
  };
  // Upload files
  /* istanbul ignore next */
  cov_1d4uuer59u().s[63]++;
  const uploadFiles = async () => {
    /* istanbul ignore next */
    cov_1d4uuer59u().f[14]++;
    cov_1d4uuer59u().s[64]++;
    if (
    /* istanbul ignore next */
    (cov_1d4uuer59u().b[16][0]++, !onUpload) ||
    /* istanbul ignore next */
    (cov_1d4uuer59u().b[16][1]++, selectedFiles.length === 0)) {
      /* istanbul ignore next */
      cov_1d4uuer59u().b[15][0]++;
      cov_1d4uuer59u().s[65]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1d4uuer59u().b[15][1]++;
    }
    cov_1d4uuer59u().s[66]++;
    setIsUploading(true);
    /* istanbul ignore next */
    cov_1d4uuer59u().s[67]++;
    setErrors([]);
    /* istanbul ignore next */
    cov_1d4uuer59u().s[68]++;
    try {
      /* istanbul ignore next */
      cov_1d4uuer59u().s[69]++;
      // Simulate upload progress for each file
      selectedFiles.forEach((file, index) => {
        /* istanbul ignore next */
        cov_1d4uuer59u().f[15]++;
        const fileKey =
        /* istanbul ignore next */
        (cov_1d4uuer59u().s[70]++, `${file.name}-${index}`);
        /* istanbul ignore next */
        cov_1d4uuer59u().s[71]++;
        setUploadProgress(prev => {
          /* istanbul ignore next */
          cov_1d4uuer59u().f[16]++;
          cov_1d4uuer59u().s[72]++;
          return {
            ...prev,
            [fileKey]: 0
          };
        });
        // Simulate progress
        const interval =
        /* istanbul ignore next */
        (cov_1d4uuer59u().s[73]++, setInterval(() => {
          /* istanbul ignore next */
          cov_1d4uuer59u().f[17]++;
          cov_1d4uuer59u().s[74]++;
          setUploadProgress(prev => {
            /* istanbul ignore next */
            cov_1d4uuer59u().f[18]++;
            const currentProgress =
            /* istanbul ignore next */
            (cov_1d4uuer59u().s[75]++,
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[17][0]++, prev[fileKey]) ||
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[17][1]++, 0));
            /* istanbul ignore next */
            cov_1d4uuer59u().s[76]++;
            if (currentProgress >= 100) {
              /* istanbul ignore next */
              cov_1d4uuer59u().b[18][0]++;
              cov_1d4uuer59u().s[77]++;
              clearInterval(interval);
              /* istanbul ignore next */
              cov_1d4uuer59u().s[78]++;
              return prev;
            } else
            /* istanbul ignore next */
            {
              cov_1d4uuer59u().b[18][1]++;
            }
            cov_1d4uuer59u().s[79]++;
            return {
              ...prev,
              [fileKey]: Math.min(currentProgress + 10, 100)
            };
          });
        }, 100));
      });
      const uploadedUrls =
      /* istanbul ignore next */
      (cov_1d4uuer59u().s[80]++, await onUpload(selectedFiles));
      // Clear progress after successful upload
      /* istanbul ignore next */
      cov_1d4uuer59u().s[81]++;
      setUploadProgress({});
      // Optionally clear files after upload
      // setSelectedFiles([]);
      // setPreviews([]);
    } catch (error) {
      /* istanbul ignore next */
      cov_1d4uuer59u().s[82]++;
      setErrors(['Upload failed. Please try again.']);
    } finally {
      /* istanbul ignore next */
      cov_1d4uuer59u().s[83]++;
      setIsUploading(false);
    }
  };
  // Clear all files
  /* istanbul ignore next */
  cov_1d4uuer59u().s[84]++;
  const clearAll = () => {
    /* istanbul ignore next */
    cov_1d4uuer59u().f[19]++;
    cov_1d4uuer59u().s[85]++;
    setSelectedFiles([]);
    /* istanbul ignore next */
    cov_1d4uuer59u().s[86]++;
    setPreviews([]);
    /* istanbul ignore next */
    cov_1d4uuer59u().s[87]++;
    onImagesChange([]);
    /* istanbul ignore next */
    cov_1d4uuer59u().s[88]++;
    setErrors([]);
    /* istanbul ignore next */
    cov_1d4uuer59u().s[89]++;
    setUploadProgress({});
    /* istanbul ignore next */
    cov_1d4uuer59u().s[90]++;
    if (fileInputRef.current) {
      /* istanbul ignore next */
      cov_1d4uuer59u().b[19][0]++;
      cov_1d4uuer59u().s[91]++;
      fileInputRef.current.value = '';
    } else
    /* istanbul ignore next */
    {
      cov_1d4uuer59u().b[19][1]++;
    }
  };
  // Format file size
  /* istanbul ignore next */
  cov_1d4uuer59u().s[92]++;
  const formatFileSize = bytes => {
    /* istanbul ignore next */
    cov_1d4uuer59u().f[20]++;
    cov_1d4uuer59u().s[93]++;
    if (bytes === 0) {
      /* istanbul ignore next */
      cov_1d4uuer59u().b[20][0]++;
      cov_1d4uuer59u().s[94]++;
      return '0 Bytes';
    } else
    /* istanbul ignore next */
    {
      cov_1d4uuer59u().b[20][1]++;
    }
    const k =
    /* istanbul ignore next */
    (cov_1d4uuer59u().s[95]++, 1024);
    const sizes =
    /* istanbul ignore next */
    (cov_1d4uuer59u().s[96]++, ['Bytes', 'KB', 'MB', 'GB']);
    const i =
    /* istanbul ignore next */
    (cov_1d4uuer59u().s[97]++, Math.floor(Math.log(bytes) / Math.log(k)));
    /* istanbul ignore next */
    cov_1d4uuer59u().s[98]++;
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  };
  /* istanbul ignore next */
  cov_1d4uuer59u().s[99]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: `space-y-4 ${className}`,
    children: [
    /* istanbul ignore next */
    (cov_1d4uuer59u().b[21][0]++, selectedFiles.length < maxImages) &&
    /* istanbul ignore next */
    (cov_1d4uuer59u().b[21][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      ...getRootProps(),
      className: `border-2 border-dashed rounded-lg p-6 text-center cursor-pointer transition-colors ${isDragActive ?
      /* istanbul ignore next */
      (cov_1d4uuer59u().b[22][0]++, 'border-primary-400 bg-primary-50') :
      /* istanbul ignore next */
      (cov_1d4uuer59u().b[22][1]++, 'border-gray-300 hover:border-gray-400 hover:bg-gray-50')}`,
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
        ...getInputProps(),
        ref: fileInputRef
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-4xl",
          children: "\uD83D\uDCF7"
        }), isDragActive ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_1d4uuer59u().b[23][0]++, (0, _jsxruntime.jsx)("p", {
          className: "text-primary-600 font-medium",
          children: "Drop images here..."
        })) :
        /* istanbul ignore next */
        (/*#__PURE__*/cov_1d4uuer59u().b[23][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            className: "text-gray-600",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
              type: "button",
              onClick: handleClick,
              className: "font-medium text-primary-600 hover:text-primary-700 underline focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 rounded",
              "aria-label": "Click to select images for upload",
              title: "Select images to upload",
              children: "Click to upload"
            }), ' ', "or drag and drop"]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            className: "text-sm text-gray-500",
            children: ["JPEG, PNG, or WebP up to ", Math.round(maxSizePerImage / (1024 * 1024)), "MB each"]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            className: "text-xs text-gray-400",
            children: [selectedFiles.length, " of ", maxImages, " images selected"]
          })]
        }))]
      })]
    })),
    /* istanbul ignore next */
    (cov_1d4uuer59u().b[24][0]++, errors.length > 0) &&
    /* istanbul ignore next */
    (cov_1d4uuer59u().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-red-50 border border-red-200 rounded-lg p-3",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-start",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
          className: "w-5 h-5 text-red-400 mt-0.5 mr-2 flex-shrink-0",
          fill: "currentColor",
          viewBox: "0 0 20 20",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
            fillRule: "evenodd",
            d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z",
            clipRule: "evenodd"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex-1",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
            className: "text-sm font-medium text-red-800 mb-1",
            children: "Upload Errors"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("ul", {
            className: "text-sm text-red-700 space-y-1",
            children: errors.map((error, index) => {
              /* istanbul ignore next */
              cov_1d4uuer59u().f[21]++;
              cov_1d4uuer59u().s[100]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
                children: ["• ", error]
              }, index);
            })
          })]
        })]
      })
    })),
    /* istanbul ignore next */
    (cov_1d4uuer59u().b[25][0]++, selectedFiles.length > 0) &&
    /* istanbul ignore next */
    (cov_1d4uuer59u().b[25][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "space-y-3",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h4", {
          className: "text-sm font-medium text-gray-700",
          children: ["Selected Images (", selectedFiles.length, ")"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center space-x-2",
          children: [
          /* istanbul ignore next */
          (cov_1d4uuer59u().b[26][0]++, showUploadProgress) &&
          /* istanbul ignore next */
          (cov_1d4uuer59u().b[26][1]++, onUpload) &&
          /* istanbul ignore next */
          (cov_1d4uuer59u().b[26][2]++, selectedFiles.length > 0) &&
          /* istanbul ignore next */
          (cov_1d4uuer59u().b[26][3]++, /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            type: "button",
            onClick: uploadFiles,
            disabled: isUploading,
            className: `px-3 py-1 text-sm rounded ${isUploading ?
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[27][0]++, 'bg-gray-300 text-gray-500 cursor-not-allowed') :
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[27][1]++, 'bg-primary-600 text-white hover:bg-primary-700')}`,
            "aria-label": isUploading ?
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[28][0]++, 'Uploading images') :
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[28][1]++, 'Upload selected images'),
            title: isUploading ?
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[29][0]++, 'Uploading images...') :
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[29][1]++, 'Upload selected images'),
            children: isUploading ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1d4uuer59u().b[30][0]++, (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                role: "status",
                "aria-live": "polite",
                children: "Uploading..."
              })
            })) :
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[30][1]++, 'Upload')
          })), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            type: "button",
            onClick: clearAll,
            className: "text-sm text-red-600 hover:text-red-700",
            disabled: isUploading,
            "aria-label": "Clear all selected images",
            title: "Remove all selected images",
            children: "Clear All"
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "grid grid-cols-2 sm:grid-cols-3 gap-3",
        children: selectedFiles.map((file, index) => {
          /* istanbul ignore next */
          cov_1d4uuer59u().f[22]++;
          cov_1d4uuer59u().s[101]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "relative group",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "aspect-square rounded-lg overflow-hidden bg-gray-100",
              children: previews[index] ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1d4uuer59u().b[31][0]++, (0, _jsxruntime.jsx)("img", {
                src: previews[index],
                alt: `Preview ${index + 1}`,
                className: "w-full h-full object-cover"
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1d4uuer59u().b[31][1]++, (0, _jsxruntime.jsxs)("div", {
                className: "w-full h-full flex items-center justify-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "animate-spin rounded-full h-6 w-6 border-b-2 border-primary-500",
                  role: "status",
                  "aria-label": "Loading image preview"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "sr-only",
                  children: "Loading image preview..."
                })]
              }))
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
              type: "button",
              onClick: () => {
                /* istanbul ignore next */
                cov_1d4uuer59u().f[23]++;
                cov_1d4uuer59u().s[102]++;
                return removeFile(index);
              },
              className: "absolute top-1 right-1 p-1 bg-red-500 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity",
              title: "Remove image",
              "aria-label": `Remove image ${index + 1}`,
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
                className: "w-3 h-3",
                fill: "currentColor",
                viewBox: "0 0 20 20",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                  fillRule: "evenodd",
                  d: "M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",
                  clipRule: "evenodd"
                })
              })
            }),
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[32][0]++, index === 0) &&
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[32][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "absolute bottom-1 left-1 bg-primary-500 text-white text-xs px-1 py-0.5 rounded",
              children: "Primary"
            })),
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[33][0]++, index !== 0) &&
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[33][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
              type: "button",
              onClick: () => {
                /* istanbul ignore next */
                cov_1d4uuer59u().f[24]++;
                // Move this image to the front
                const newFiles =
                /* istanbul ignore next */
                (cov_1d4uuer59u().s[103]++, [...selectedFiles]);
                const newPreviews =
                /* istanbul ignore next */
                (cov_1d4uuer59u().s[104]++, [...previews]);
                const selectedFile =
                /* istanbul ignore next */
                (cov_1d4uuer59u().s[105]++, newFiles[index]);
                const selectedPreview =
                /* istanbul ignore next */
                (cov_1d4uuer59u().s[106]++, newPreviews[index]);
                // Remove from current position
                /* istanbul ignore next */
                cov_1d4uuer59u().s[107]++;
                newFiles.splice(index, 1);
                /* istanbul ignore next */
                cov_1d4uuer59u().s[108]++;
                newPreviews.splice(index, 1);
                // Add to front
                /* istanbul ignore next */
                cov_1d4uuer59u().s[109]++;
                newFiles.unshift(selectedFile);
                /* istanbul ignore next */
                cov_1d4uuer59u().s[110]++;
                newPreviews.unshift(selectedPreview);
                /* istanbul ignore next */
                cov_1d4uuer59u().s[111]++;
                setSelectedFiles(newFiles);
                /* istanbul ignore next */
                cov_1d4uuer59u().s[112]++;
                setPreviews(newPreviews);
                /* istanbul ignore next */
                cov_1d4uuer59u().s[113]++;
                onImagesChange(newFiles);
              },
              className: "absolute bottom-1 left-1 bg-black bg-opacity-50 text-white text-xs px-1 py-0.5 rounded opacity-0 group-hover:opacity-100 transition-opacity",
              title: "Set as primary image",
              "aria-label": `Set image ${index + 1} as primary`,
              children: "Set Primary"
            })),
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[34][0]++, showUploadProgress) &&
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[34][1]++, uploadProgress[`${file.name}-${index}`] !== undefined) &&
            /* istanbul ignore next */
            (cov_1d4uuer59u().b[34][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center",
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-white text-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "w-8 h-8 border-2 border-white border-t-transparent rounded-full animate-spin mx-auto mb-1"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "text-xs",
                  children: [uploadProgress[`${file.name}-${index}`], "%"]
                })]
              })
            })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "mt-1 text-xs text-gray-500 truncate",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "truncate",
                title: file.name,
                children: file.name
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: formatFileSize(file.size)
              })]
            })]
          }, index);
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-xs text-gray-500 bg-gray-50 rounded p-2",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
            children: "Tip:"
          }), " The first image will be used as the primary photo for your plant card."]
        })
      })]
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
{"version":3,"names":["cov_1ub9a2kw9w","actualCoverage","s","VirtualGrid","f","VirtualScrollList","useVirtualScroll","items","itemHeight","containerHeight","renderItem","className","b","overscan","onScroll","scrollTop","setScrollTop","_react","useState","scrollElementRef","useRef","startIndex","endIndex","visibleCount","useMemo","_performance","virtualScrolling","calculateVisibleItems","length","debouncedScrollHandler","createScrollHandler","newScrollTop","handleScroll","useCallback","e","target","totalHeight","offsetY","visibleItems","slice","_jsxruntime","jsx","ref","style","height","position","transform","top","left","right","map","item","index","itemWidth","containerWidth","gap","columnsPerRow","Math","floor","totalRows","ceil","rowHeight","startRow","endRow","startItemIndex","endItemIndex","min","display","gridTemplateColumns","justifyContent","visibleRange","scrollHandler"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/shared/VirtualScrollList.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport { virtualScrolling } from '@/lib/utils/performance';\n\ninterface VirtualScrollListProps<T> {\n  items: T[];\n  itemHeight: number;\n  containerHeight: number;\n  renderItem: (item: T, index: number) => React.ReactNode;\n  className?: string;\n  overscan?: number;\n  onScroll?: (scrollTop: number) => void;\n}\n\nexport function VirtualScrollList<T>({\n  items,\n  itemHeight,\n  containerHeight,\n  renderItem,\n  className = '',\n  overscan = 5,\n  onScroll,\n}: VirtualScrollListProps<T>) {\n  const [scrollTop, setScrollTop] = useState(0);\n  const scrollElementRef = useRef<HTMLDivElement>(null);\n\n  // Calculate visible items\n  const { startIndex, endIndex, visibleCount } = useMemo(() => {\n    return virtualScrolling.calculateVisibleItems(\n      scrollTop,\n      containerHeight,\n      itemHeight,\n      items.length,\n      overscan\n    );\n  }, [scrollTop, containerHeight, itemHeight, items.length, overscan]);\n\n  // Create debounced scroll handler\n  const debouncedScrollHandler = useMemo(() => {\n    return virtualScrolling.createScrollHandler((newScrollTop) => {\n      setScrollTop(newScrollTop);\n      onScroll?.(newScrollTop);\n    });\n  }, [onScroll]);\n\n  const handleScroll = useCallback((e: React.UIEvent<HTMLDivElement>) => {\n    const target = e.target as HTMLDivElement;\n    debouncedScrollHandler(target.scrollTop);\n  }, [debouncedScrollHandler]);\n\n  // Calculate total height and offset\n  const totalHeight = items.length * itemHeight;\n  const offsetY = startIndex * itemHeight;\n\n  // Get visible items\n  const visibleItems = items.slice(startIndex, endIndex + 1);\n\n  return (\n    <div\n      ref={scrollElementRef}\n      className={`overflow-auto ${className}`}\n      style={{ height: containerHeight }}\n      onScroll={handleScroll}\n    >\n      <div style={{ height: totalHeight, position: 'relative' }}>\n        <div\n          style={{\n            transform: `translateY(${offsetY}px)`,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n          }}\n        >\n          {visibleItems.map((item, index) => (\n            <div\n              key={startIndex + index}\n              style={{ height: itemHeight }}\n              className=\"flex-shrink-0\"\n            >\n              {renderItem(item, startIndex + index)}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface VirtualGridProps<T> {\n  items: T[];\n  itemWidth: number;\n  itemHeight: number;\n  containerWidth: number;\n  containerHeight: number;\n  renderItem: (item: T, index: number) => React.ReactNode;\n  className?: string;\n  gap?: number;\n  overscan?: number;\n}\n\nexport function VirtualGrid<T>({\n  items,\n  itemWidth,\n  itemHeight,\n  containerWidth,\n  containerHeight,\n  renderItem,\n  className = '',\n  gap = 16,\n  overscan = 5,\n}: VirtualGridProps<T>) {\n  const [scrollTop, setScrollTop] = useState(0);\n\n  // Calculate grid dimensions\n  const columnsPerRow = Math.floor((containerWidth + gap) / (itemWidth + gap));\n  const totalRows = Math.ceil(items.length / columnsPerRow);\n  const rowHeight = itemHeight + gap;\n\n  // Calculate visible rows\n  const { startIndex: startRow, endIndex: endRow } = useMemo(() => {\n    return virtualScrolling.calculateVisibleItems(\n      scrollTop,\n      containerHeight,\n      rowHeight,\n      totalRows,\n      overscan\n    );\n  }, [scrollTop, containerHeight, rowHeight, totalRows, overscan]);\n\n  // Create debounced scroll handler\n  const debouncedScrollHandler = useMemo(() => {\n    return virtualScrolling.createScrollHandler(setScrollTop);\n  }, []);\n\n  const handleScroll = useCallback((e: React.UIEvent<HTMLDivElement>) => {\n    const target = e.target as HTMLDivElement;\n    debouncedScrollHandler(target.scrollTop);\n  }, [debouncedScrollHandler]);\n\n  // Calculate visible items\n  const startItemIndex = startRow * columnsPerRow;\n  const endItemIndex = Math.min((endRow + 1) * columnsPerRow - 1, items.length - 1);\n  const visibleItems = items.slice(startItemIndex, endItemIndex + 1);\n\n  // Calculate total height and offset\n  const totalHeight = totalRows * rowHeight;\n  const offsetY = startRow * rowHeight;\n\n  return (\n    <div\n      className={`overflow-auto ${className}`}\n      style={{ height: containerHeight }}\n      onScroll={handleScroll}\n    >\n      <div style={{ height: totalHeight, position: 'relative' }}>\n        <div\n          style={{\n            transform: `translateY(${offsetY}px)`,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            display: 'grid',\n            gridTemplateColumns: `repeat(${columnsPerRow}, ${itemWidth}px)`,\n            gap: `${gap}px`,\n            justifyContent: 'center',\n          }}\n        >\n          {visibleItems.map((item, index) => (\n            <div key={startItemIndex + index}>\n              {renderItem(item, startItemIndex + index)}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Hook for virtual scrolling\nexport function useVirtualScroll<T>(\n  items: T[],\n  itemHeight: number,\n  containerHeight: number,\n  overscan: number = 5\n) {\n  const [scrollTop, setScrollTop] = useState(0);\n\n  const visibleRange = useMemo(() => {\n    return virtualScrolling.calculateVisibleItems(\n      scrollTop,\n      containerHeight,\n      itemHeight,\n      items.length,\n      overscan\n    );\n  }, [scrollTop, containerHeight, itemHeight, items.length, overscan]);\n\n  const scrollHandler = useMemo(() => {\n    return virtualScrolling.createScrollHandler(setScrollTop);\n  }, []);\n\n  const visibleItems = useMemo(() => {\n    return items.slice(visibleRange.startIndex, visibleRange.endIndex + 1);\n  }, [items, visibleRange.startIndex, visibleRange.endIndex]);\n\n  return {\n    visibleItems,\n    visibleRange,\n    scrollHandler,\n    totalHeight: items.length * itemHeight,\n    offsetY: visibleRange.startIndex * itemHeight,\n  };\n}"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}
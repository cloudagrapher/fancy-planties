881af860897b3fa084cdb7cb3e2c0b8d
"use strict";

/* istanbul ignore next */
function cov_elxrakphd() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/app/api/auth/signout/route.ts";
  var hash = "a0431b3a5eb52b45b0a3532f0026639ad86de779";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/app/api/auth/signout/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 55
        }
      },
      "5": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 45
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "7": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 65
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "9": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 22,
          column: 15
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 45
        }
      },
      "11": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 49
        }
      },
      "12": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 30,
          column: 11
        }
      },
      "13": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 48
        }
      },
      "14": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 37,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 19
          }
        },
        loc: {
          start: {
            line: 14,
            column: 30
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/app/api/auth/signout/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { validateRequest } from '@/lib/auth/server';\nimport { signOut } from '@/lib/auth';\nimport { clearSessionCookie } from '@/lib/auth/server';\n\nexport async function POST(_request: NextRequest) {\n  try {\n    const { session } = await validateRequest();\n    \n    if (!session) {\n      return NextResponse.json(\n        { error: 'No active session' },\n        { status: 401 }\n      );\n    }\n    \n    // Sign out and clear session\n    await signOut(session.id);\n    await clearSessionCookie();\n    \n    return NextResponse.json({\n      success: true,\n      message: 'Signed out successfully',\n    });\n    \n  } catch (error) {\n    console.error('Sign out error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["POST", "_request", "session", "validateRequest", "NextResponse", "json", "error", "status", "signOut", "id", "clearSessionCookie", "success", "message", "console"],
      mappings: ";;;;+BAKsBA;;;eAAAA;;;wBALoB;yBACV;sBACR;AAGjB,eAAeA,KAAKC,QAAqB;IAC9C,IAAI;QACF,MAAM,EAAEC,OAAO,EAAE,GAAG,MAAMC,IAAAA,wBAAe;QAEzC,IAAI,CAACD,SAAS;YACZ,OAAOE,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAoB,GAC7B;gBAAEC,QAAQ;YAAI;QAElB;QAEA,6BAA6B;QAC7B,MAAMC,IAAAA,aAAO,EAACN,QAAQO,EAAE;QACxB,MAAMC,IAAAA,2BAAkB;QAExB,OAAON,oBAAY,CAACC,IAAI,CAAC;YACvBM,SAAS;YACTC,SAAS;QACX;IAEF,EAAE,OAAON,OAAO;QACdO,QAAQP,KAAK,CAAC,mBAAmBA;QACjC,OAAOF,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAAwB,GACjC;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a0431b3a5eb52b45b0a3532f0026639ad86de779"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_elxrakphd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_elxrakphd();
cov_elxrakphd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_elxrakphd().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_elxrakphd().f[0]++;
    cov_elxrakphd().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_elxrakphd().s[3]++, require("next/server"));
const _server1 =
/* istanbul ignore next */
(cov_elxrakphd().s[4]++, require("../../../../lib/auth/server"));
const _auth =
/* istanbul ignore next */
(cov_elxrakphd().s[5]++, require("../../../../lib/auth"));
async function POST(_request) {
  /* istanbul ignore next */
  cov_elxrakphd().f[1]++;
  cov_elxrakphd().s[6]++;
  try {
    const {
      session
    } =
    /* istanbul ignore next */
    (cov_elxrakphd().s[7]++, await (0, _server1.validateRequest)());
    /* istanbul ignore next */
    cov_elxrakphd().s[8]++;
    if (!session) {
      /* istanbul ignore next */
      cov_elxrakphd().b[0][0]++;
      cov_elxrakphd().s[9]++;
      return _server.NextResponse.json({
        error: 'No active session'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_elxrakphd().b[0][1]++;
    }
    // Sign out and clear session
    cov_elxrakphd().s[10]++;
    await (0, _auth.signOut)(session.id);
    /* istanbul ignore next */
    cov_elxrakphd().s[11]++;
    await (0, _server1.clearSessionCookie)();
    /* istanbul ignore next */
    cov_elxrakphd().s[12]++;
    return _server.NextResponse.json({
      success: true,
      message: 'Signed out successfully'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_elxrakphd().s[13]++;
    console.error('Sign out error:', error);
    /* istanbul ignore next */
    cov_elxrakphd().s[14]++;
    return _server.NextResponse.json({
      error: 'Internal server error'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZWx4cmFrcGhkIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiUE9TVCIsIl9yZXF1ZXN0IiwiZiIsInNlc3Npb24iLCJfc2VydmVyMSIsInZhbGlkYXRlUmVxdWVzdCIsImIiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsImVycm9yIiwic3RhdHVzIiwiX2F1dGgiLCJzaWduT3V0IiwiaWQiLCJjbGVhclNlc3Npb25Db29raWUiLCJzdWNjZXNzIiwibWVzc2FnZSIsImNvbnNvbGUiXSwic291cmNlcyI6WyIvVXNlcnMvc3RlZmFuYmVra2VyL3Byb2plY3RzL2ZhbmN5LXBsYW50aWVzL3NyYy9hcHAvYXBpL2F1dGgvc2lnbm91dC9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgdmFsaWRhdGVSZXF1ZXN0IH0gZnJvbSAnQC9saWIvYXV0aC9zZXJ2ZXInO1xuaW1wb3J0IHsgc2lnbk91dCB9IGZyb20gJ0AvbGliL2F1dGgnO1xuaW1wb3J0IHsgY2xlYXJTZXNzaW9uQ29va2llIH0gZnJvbSAnQC9saWIvYXV0aC9zZXJ2ZXInO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChfcmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHNlc3Npb24gfSA9IGF3YWl0IHZhbGlkYXRlUmVxdWVzdCgpO1xuICAgIFxuICAgIGlmICghc2Vzc2lvbikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnTm8gYWN0aXZlIHNlc3Npb24nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxuICAgICAgKTtcbiAgICB9XG4gICAgXG4gICAgLy8gU2lnbiBvdXQgYW5kIGNsZWFyIHNlc3Npb25cbiAgICBhd2FpdCBzaWduT3V0KHNlc3Npb24uaWQpO1xuICAgIGF3YWl0IGNsZWFyU2Vzc2lvbkNvb2tpZSgpO1xuICAgIFxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgbWVzc2FnZTogJ1NpZ25lZCBvdXQgc3VjY2Vzc2Z1bGx5JyxcbiAgICB9KTtcbiAgICBcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdTaWduIG91dCBlcnJvcjonLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvcjogJ0ludGVybmFsIHNlcnZlciBlcnJvcicgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBT0k7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQUFBQSxhQUFBLEdBQUFFLENBQUE7Ozs7OzsrQkFGa0I7Ozs7OztXQUFBQyxJQUFBOzs7OztpQ0FMb0I7OztpQ0FDVjs7O2lDQUNSO0FBR2pCLGVBQWVBLEtBQUtDLFFBQXFCO0VBQUE7RUFBQUosYUFBQSxHQUFBSyxDQUFBO0VBQUFMLGFBQUEsR0FBQUUsQ0FBQTtFQUM5QyxJQUFJO0lBQ0YsTUFBTTtNQUFFSTtJQUFPLENBQUU7SUFBQTtJQUFBLENBQUFOLGFBQUEsR0FBQUUsQ0FBQSxPQUFHLE1BQU0sSUFBQUssUUFBQSxDQUFBQyxlQUFlO0lBQUE7SUFBQVIsYUFBQSxHQUFBRSxDQUFBO0lBRXpDLElBQUksQ0FBQ0ksT0FBQSxFQUFTO01BQUE7TUFBQU4sYUFBQSxHQUFBUyxDQUFBO01BQUFULGFBQUEsR0FBQUUsQ0FBQTtNQUNaLE9BQU9RLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQ3RCO1FBQUVDLEtBQUEsRUFBTztNQUFvQixHQUM3QjtRQUFFQyxNQUFBLEVBQVE7TUFBSTtJQUVsQjtJQUFBO0lBQUE7TUFBQWQsYUFBQSxHQUFBUyxDQUFBO0lBQUE7SUFFQTtJQUFBVCxhQUFBLEdBQUFFLENBQUE7SUFDQSxNQUFNLElBQUFhLEtBQUEsQ0FBQUMsT0FBTyxFQUFDVixPQUFBLENBQVFXLEVBQUU7SUFBQTtJQUFBakIsYUFBQSxHQUFBRSxDQUFBO0lBQ3hCLE1BQU0sSUFBQUssUUFBQSxDQUFBVyxrQkFBa0I7SUFBQTtJQUFBbEIsYUFBQSxHQUFBRSxDQUFBO0lBRXhCLE9BQU9RLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQUM7TUFDdkJPLE9BQUEsRUFBUztNQUNUQyxPQUFBLEVBQVM7SUFDWDtFQUVGLEVBQUUsT0FBT1AsS0FBQSxFQUFPO0lBQUE7SUFBQWIsYUFBQSxHQUFBRSxDQUFBO0lBQ2RtQixPQUFBLENBQVFSLEtBQUssQ0FBQyxtQkFBbUJBLEtBQUE7SUFBQTtJQUFBYixhQUFBLEdBQUFFLENBQUE7SUFDakMsT0FBT1EsT0FBQSxDQUFBQyxZQUFZLENBQUNDLElBQUksQ0FDdEI7TUFBRUMsS0FBQSxFQUFPO0lBQXdCLEdBQ2pDO01BQUVDLE1BQUEsRUFBUTtJQUFJO0VBRWxCO0FBQ0YiLCJpZ25vcmVMaXN0IjpbXX0=
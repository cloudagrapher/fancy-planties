{"version":3,"names":["cov_11k4f85shi","actualCoverage","s","TestGridPage","mockPlants","Array","from","length","_","i","f","id","displayName","plant","genus","species","location","primaryImage","careStatus","careUrgency","daysUntilFertilizerDue","Math","floor","random","daysSinceLastFertilized","isActive","TestGrid","_jsxruntime","jsxs","className","jsx","map","slice","_react","Suspense","fallback"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/app/test-grid/page.tsx"],"sourcesContent":["import { Suspense } from 'react';\n\n// Mock plant data for testing\nconst mockPlants = Array.from({ length: 12 }, (_, i) => ({\n  id: i + 1,\n  displayName: `Plant ${i + 1}`,\n  plant: {\n    genus: 'Genus',\n    species: 'species',\n  },\n  location: `Location ${i + 1}`,\n  primaryImage: null,\n  careStatus: 'healthy' as const,\n  careUrgency: 'none' as const,\n  daysUntilFertilizerDue: Math.floor(Math.random() * 30) - 15,\n  daysSinceLastFertilized: Math.floor(Math.random() * 60),\n  isActive: true,\n}));\n\nfunction TestGrid() {\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-6\">Grid Layout Test</h1>\n      \n      <div className=\"mb-8\">\n        <h2 className=\"text-lg font-semibold mb-4\">Default Grid (grid-plants)</h2>\n        <div className=\"grid-plants\">\n          {mockPlants.map((plant) => (\n            <div\n              key={plant.id}\n              className=\"plant-card w-full max-w-[160px] h-100\"\n            >\n              <div className=\"plant-card-image h-24 bg-gradient-to-br from-green-100 to-blue-100 flex items-center justify-center\">\n                <span className=\"text-4xl\">üå±</span>\n              </div>\n              <div className=\"plant-card-content\">\n                <h3 className=\"plant-card-title\">{plant.displayName}</h3>\n                <p className=\"plant-card-subtitle\">{plant.plant.genus} {plant.plant.species}</p>\n                <p className=\"text-xs text-gray-500\">üìç {plant.location}</p>\n                \n                {/* Quick Actions - should appear on hover */}\n                <div className=\"flex space-x-1 mt-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                  <button className=\"btn btn--sm btn--outline\">\n                    üíß Care\n                  </button>\n                  <button className=\"btn btn--sm btn--secondary\">\n                    ‚úèÔ∏è Edit\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"mb-8\">\n        <h2 className=\"text-lg font-semibold mb-4\">Responsive Grid (grid-responsive)</h2>\n        <div className=\"grid-responsive\">\n          {mockPlants.slice(0, 8).map((plant) => (\n            <div\n              key={plant.id}\n              className=\"plant-card w-full max-w-[200px] h-56\"\n            >\n              <div className=\"plant-card-image h-32 bg-gradient-to-br from-purple-100 to-pink-100 flex items-center justify-center\">\n                <span className=\"text-4xl\">üåø</span>\n              </div>\n              <div className=\"plant-card-content\">\n                <h3 className=\"plant-card-title\">{plant.displayName}</h3>\n                <p className=\"plant-card-subtitle\">{plant.plant.genus} {plant.plant.species}</p>\n                <p className=\"text-xs text-gray-500\">üìç {plant.location}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"mb-8\">\n        <h2 className=\"text-lg font-semibold mb-4\">Small Cards Grid</h2>\n        <div className=\"grid gap-3 grid-cols-3 sm:grid-cols-4 md:grid-cols-5 lg:grid-cols-6 xl:grid-cols-8\">\n          {mockPlants.map((plant) => (\n            <div\n              key={plant.id}\n              className=\"plant-card w-full max-w-[140px] h-40\"\n            >\n              <div className=\"plant-card-image h-20 bg-gradient-to-br from-yellow-100 to-orange-100 flex items-center justify-center\">\n                <span className=\"text-2xl\">üå∫</span>\n              </div>\n              <div className=\"plant-card-content\">\n                <h3 className=\"text-sm font-semibold\">{plant.displayName}</h3>\n                <p className=\"text-xs text-gray-600\">{plant.plant.genus}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"text-sm text-gray-600 mt-8\">\n        <p><strong>Test Instructions:</strong></p>\n        <ul className=\"list-disc list-inside space-y-1\">\n          <li>Resize your browser window to test responsive behavior</li>\n          <li>Hover over cards to see hover effects and quick action buttons</li>\n          <li>Test in different browsers (Firefox, Safari, Chrome) for consistency</li>\n          <li>Check that cards maintain consistent spacing and alignment</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default function TestGridPage() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <TestGrid />\n    </Suspense>\n  );\n}"],"mappings":"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","ignoreList":[]}
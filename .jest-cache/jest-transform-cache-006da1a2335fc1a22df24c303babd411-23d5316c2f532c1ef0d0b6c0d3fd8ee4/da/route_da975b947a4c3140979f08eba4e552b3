ffd5de4bbaa0e807ac8cec497834b9fc
"use strict";

/* istanbul ignore next */
function cov_1r6u0miuyu() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/app/api/auth/signin/route.ts";
  var hash = "4c78fe506facb83b63b2c112b8d58d60e7ebf916";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/app/api/auth/signin/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 45
        }
      },
      "5": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 55
        }
      },
      "6": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "7": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 72,
          column: 7
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "10": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "11": {
        start: {
          line: 21,
          column: 31
        },
        end: {
          line: 21,
          column: 93
        }
      },
      "12": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 29,
          column: 13
        }
      },
      "13": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 28,
          column: 19
        }
      },
      "14": {
        start: {
          line: 30,
          column: 40
        },
        end: {
          line: 30,
          column: 55
        }
      },
      "15": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 67
        }
      },
      "16": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 39,
          column: 13
        }
      },
      "17": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 38,
          column: 19
        }
      },
      "18": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 68
        }
      },
      "19": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "20": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 53,
          column: 19
        }
      },
      "21": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "22": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 51
        }
      },
      "23": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 70,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 19
          }
        },
        loc: {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 51
          },
          end: {
            line: 17,
            column: 52
          }
        },
        loc: {
          start: {
            line: 17,
            column: 64
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 17
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 29,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/app/api/auth/signin/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { signIn } from '@/lib/auth';\nimport { setSessionCookie } from '@/lib/auth/server';\nimport { signInSchema, validateInput } from '@/lib/auth/validation';\nimport { withRateLimit } from '@/lib/auth/middleware';\n\nexport async function POST(request: NextRequest) {\n  return withRateLimit(request, async (req) => {\n    try {\n      const body = await req.json();\n\n      // Validate input\n      const validation = validateInput(signInSchema, body);\n      if (!validation.success) {\n        return NextResponse.json(\n          { error: 'Validation failed', errors: validation.errors },\n          { status: 400 }\n        );\n      }\n\n      const { email, password } = validation.data;\n\n      // Attempt to sign in\n      const result = await signIn(email, password);\n\n      if (!result) {\n        return NextResponse.json(\n          { error: 'Invalid email or password' },\n          { status: 401 }\n        );\n      }\n\n      // Set session cookie\n      await setSessionCookie(result.session.id);\n\n      // Check if email verification is required\n      if (!result.user.isEmailVerified) {\n        return NextResponse.json({\n          success: true,\n          requiresVerification: true,\n          user: {\n            id: result.user.id,\n            email: result.user.email,\n            name: result.user.name,\n            isEmailVerified: result.user.isEmailVerified,\n          },\n        });\n      }\n\n      return NextResponse.json({\n        success: true,\n        user: {\n          id: result.user.id,\n          email: result.user.email,\n          name: result.user.name,\n          isEmailVerified: result.user.isEmailVerified,\n        },\n      });\n\n    } catch (error) {\n      console.error('Sign in error:', error);\n      return NextResponse.json(\n        { error: 'Internal server error' },\n        { status: 500 }\n      );\n    }\n  });\n}"],
      names: ["POST", "request", "withRateLimit", "req", "body", "json", "validation", "validateInput", "signInSchema", "success", "NextResponse", "error", "errors", "status", "email", "password", "data", "result", "signIn", "setSessionCookie", "session", "id", "user", "isEmailVerified", "requiresVerification", "name", "console"],
      mappings: ";;;;+BAMsBA;;;eAAAA;;;wBANoB;sBACnB;yBACU;4BACW;4BACd;AAEvB,eAAeA,KAAKC,OAAoB;IAC7C,OAAOC,IAAAA,yBAAa,EAACD,SAAS,OAAOE;QACnC,IAAI;YACF,MAAMC,OAAO,MAAMD,IAAIE,IAAI;YAE3B,iBAAiB;YACjB,MAAMC,aAAaC,IAAAA,yBAAa,EAACC,wBAAY,EAAEJ;YAC/C,IAAI,CAACE,WAAWG,OAAO,EAAE;gBACvB,OAAOC,oBAAY,CAACL,IAAI,CACtB;oBAAEM,OAAO;oBAAqBC,QAAQN,WAAWM,MAAM;gBAAC,GACxD;oBAAEC,QAAQ;gBAAI;YAElB;YAEA,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAE,GAAGT,WAAWU,IAAI;YAE3C,qBAAqB;YACrB,MAAMC,SAAS,MAAMC,IAAAA,YAAM,EAACJ,OAAOC;YAEnC,IAAI,CAACE,QAAQ;gBACX,OAAOP,oBAAY,CAACL,IAAI,CACtB;oBAAEM,OAAO;gBAA4B,GACrC;oBAAEE,QAAQ;gBAAI;YAElB;YAEA,qBAAqB;YACrB,MAAMM,IAAAA,yBAAgB,EAACF,OAAOG,OAAO,CAACC,EAAE;YAExC,0CAA0C;YAC1C,IAAI,CAACJ,OAAOK,IAAI,CAACC,eAAe,EAAE;gBAChC,OAAOb,oBAAY,CAACL,IAAI,CAAC;oBACvBI,SAAS;oBACTe,sBAAsB;oBACtBF,MAAM;wBACJD,IAAIJ,OAAOK,IAAI,CAACD,EAAE;wBAClBP,OAAOG,OAAOK,IAAI,CAACR,KAAK;wBACxBW,MAAMR,OAAOK,IAAI,CAACG,IAAI;wBACtBF,iBAAiBN,OAAOK,IAAI,CAACC,eAAe;oBAC9C;gBACF;YACF;YAEA,OAAOb,oBAAY,CAACL,IAAI,CAAC;gBACvBI,SAAS;gBACTa,MAAM;oBACJD,IAAIJ,OAAOK,IAAI,CAACD,EAAE;oBAClBP,OAAOG,OAAOK,IAAI,CAACR,KAAK;oBACxBW,MAAMR,OAAOK,IAAI,CAACG,IAAI;oBACtBF,iBAAiBN,OAAOK,IAAI,CAACC,eAAe;gBAC9C;YACF;QAEF,EAAE,OAAOZ,OAAO;YACde,QAAQf,KAAK,CAAC,kBAAkBA;YAChC,OAAOD,oBAAY,CAACL,IAAI,CACtB;gBAAEM,OAAO;YAAwB,GACjC;gBAAEE,QAAQ;YAAI;QAElB;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4c78fe506facb83b63b2c112b8d58d60e7ebf916"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1r6u0miuyu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1r6u0miuyu();
cov_1r6u0miuyu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1r6u0miuyu().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1r6u0miuyu().f[0]++;
    cov_1r6u0miuyu().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_1r6u0miuyu().s[3]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_1r6u0miuyu().s[4]++, require("../../../../lib/auth"));
const _server1 =
/* istanbul ignore next */
(cov_1r6u0miuyu().s[5]++, require("../../../../lib/auth/server"));
const _validation =
/* istanbul ignore next */
(cov_1r6u0miuyu().s[6]++, require("../../../../lib/auth/validation"));
const _middleware =
/* istanbul ignore next */
(cov_1r6u0miuyu().s[7]++, require("../../../../lib/auth/middleware"));
async function POST(request) {
  /* istanbul ignore next */
  cov_1r6u0miuyu().f[1]++;
  cov_1r6u0miuyu().s[8]++;
  return (0, _middleware.withRateLimit)(request, async req => {
    /* istanbul ignore next */
    cov_1r6u0miuyu().f[2]++;
    cov_1r6u0miuyu().s[9]++;
    try {
      const body =
      /* istanbul ignore next */
      (cov_1r6u0miuyu().s[10]++, await req.json());
      // Validate input
      const validation =
      /* istanbul ignore next */
      (cov_1r6u0miuyu().s[11]++, (0, _validation.validateInput)(_validation.signInSchema, body));
      /* istanbul ignore next */
      cov_1r6u0miuyu().s[12]++;
      if (!validation.success) {
        /* istanbul ignore next */
        cov_1r6u0miuyu().b[0][0]++;
        cov_1r6u0miuyu().s[13]++;
        return _server.NextResponse.json({
          error: 'Validation failed',
          errors: validation.errors
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_1r6u0miuyu().b[0][1]++;
      }
      const {
        email,
        password
      } =
      /* istanbul ignore next */
      (cov_1r6u0miuyu().s[14]++, validation.data);
      // Attempt to sign in
      const result =
      /* istanbul ignore next */
      (cov_1r6u0miuyu().s[15]++, await (0, _auth.signIn)(email, password));
      /* istanbul ignore next */
      cov_1r6u0miuyu().s[16]++;
      if (!result) {
        /* istanbul ignore next */
        cov_1r6u0miuyu().b[1][0]++;
        cov_1r6u0miuyu().s[17]++;
        return _server.NextResponse.json({
          error: 'Invalid email or password'
        }, {
          status: 401
        });
      } else
      /* istanbul ignore next */
      {
        cov_1r6u0miuyu().b[1][1]++;
      }
      // Set session cookie
      cov_1r6u0miuyu().s[18]++;
      await (0, _server1.setSessionCookie)(result.session.id);
      // Check if email verification is required
      /* istanbul ignore next */
      cov_1r6u0miuyu().s[19]++;
      if (!result.user.isEmailVerified) {
        /* istanbul ignore next */
        cov_1r6u0miuyu().b[2][0]++;
        cov_1r6u0miuyu().s[20]++;
        return _server.NextResponse.json({
          success: true,
          requiresVerification: true,
          user: {
            id: result.user.id,
            email: result.user.email,
            name: result.user.name,
            isEmailVerified: result.user.isEmailVerified
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1r6u0miuyu().b[2][1]++;
      }
      cov_1r6u0miuyu().s[21]++;
      return _server.NextResponse.json({
        success: true,
        user: {
          id: result.user.id,
          email: result.user.email,
          name: result.user.name,
          isEmailVerified: result.user.isEmailVerified
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1r6u0miuyu().s[22]++;
      console.error('Sign in error:', error);
      /* istanbul ignore next */
      cov_1r6u0miuyu().s[23]++;
      return _server.NextResponse.json({
        error: 'Internal server error'
      }, {
        status: 500
      });
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXI2dTBtaXV5dSIsImFjdHVhbENvdmVyYWdlIiwicyIsIlBPU1QiLCJyZXF1ZXN0IiwiZiIsIl9taWRkbGV3YXJlIiwid2l0aFJhdGVMaW1pdCIsInJlcSIsImJvZHkiLCJqc29uIiwidmFsaWRhdGlvbiIsIl92YWxpZGF0aW9uIiwidmFsaWRhdGVJbnB1dCIsInNpZ25JblNjaGVtYSIsInN1Y2Nlc3MiLCJiIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsImVycm9yIiwiZXJyb3JzIiwic3RhdHVzIiwiZW1haWwiLCJwYXNzd29yZCIsImRhdGEiLCJyZXN1bHQiLCJfYXV0aCIsInNpZ25JbiIsIl9zZXJ2ZXIxIiwic2V0U2Vzc2lvbkNvb2tpZSIsInNlc3Npb24iLCJpZCIsInVzZXIiLCJpc0VtYWlsVmVyaWZpZWQiLCJyZXF1aXJlc1ZlcmlmaWNhdGlvbiIsIm5hbWUiLCJjb25zb2xlIl0sInNvdXJjZXMiOlsiL1VzZXJzL3N0ZWZhbmJla2tlci9wcm9qZWN0cy9mYW5jeS1wbGFudGllcy9zcmMvYXBwL2FwaS9hdXRoL3NpZ25pbi9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgc2lnbkluIH0gZnJvbSAnQC9saWIvYXV0aCc7XG5pbXBvcnQgeyBzZXRTZXNzaW9uQ29va2llIH0gZnJvbSAnQC9saWIvYXV0aC9zZXJ2ZXInO1xuaW1wb3J0IHsgc2lnbkluU2NoZW1hLCB2YWxpZGF0ZUlucHV0IH0gZnJvbSAnQC9saWIvYXV0aC92YWxpZGF0aW9uJztcbmltcG9ydCB7IHdpdGhSYXRlTGltaXQgfSBmcm9tICdAL2xpYi9hdXRoL21pZGRsZXdhcmUnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICByZXR1cm4gd2l0aFJhdGVMaW1pdChyZXF1ZXN0LCBhc3luYyAocmVxKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGJvZHkgPSBhd2FpdCByZXEuanNvbigpO1xuXG4gICAgICAvLyBWYWxpZGF0ZSBpbnB1dFxuICAgICAgY29uc3QgdmFsaWRhdGlvbiA9IHZhbGlkYXRlSW5wdXQoc2lnbkluU2NoZW1hLCBib2R5KTtcbiAgICAgIGlmICghdmFsaWRhdGlvbi5zdWNjZXNzKSB7XG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgICB7IGVycm9yOiAnVmFsaWRhdGlvbiBmYWlsZWQnLCBlcnJvcnM6IHZhbGlkYXRpb24uZXJyb3JzIH0sXG4gICAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSB2YWxpZGF0aW9uLmRhdGE7XG5cbiAgICAgIC8vIEF0dGVtcHQgdG8gc2lnbiBpblxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc2lnbkluKGVtYWlsLCBwYXNzd29yZCk7XG5cbiAgICAgIGlmICghcmVzdWx0KSB7XG4gICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgICB7IGVycm9yOiAnSW52YWxpZCBlbWFpbCBvciBwYXNzd29yZCcgfSxcbiAgICAgICAgICB7IHN0YXR1czogNDAxIH1cbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgLy8gU2V0IHNlc3Npb24gY29va2llXG4gICAgICBhd2FpdCBzZXRTZXNzaW9uQ29va2llKHJlc3VsdC5zZXNzaW9uLmlkKTtcblxuICAgICAgLy8gQ2hlY2sgaWYgZW1haWwgdmVyaWZpY2F0aW9uIGlzIHJlcXVpcmVkXG4gICAgICBpZiAoIXJlc3VsdC51c2VyLmlzRW1haWxWZXJpZmllZCkge1xuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgcmVxdWlyZXNWZXJpZmljYXRpb246IHRydWUsXG4gICAgICAgICAgdXNlcjoge1xuICAgICAgICAgICAgaWQ6IHJlc3VsdC51c2VyLmlkLFxuICAgICAgICAgICAgZW1haWw6IHJlc3VsdC51c2VyLmVtYWlsLFxuICAgICAgICAgICAgbmFtZTogcmVzdWx0LnVzZXIubmFtZSxcbiAgICAgICAgICAgIGlzRW1haWxWZXJpZmllZDogcmVzdWx0LnVzZXIuaXNFbWFpbFZlcmlmaWVkLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICB1c2VyOiB7XG4gICAgICAgICAgaWQ6IHJlc3VsdC51c2VyLmlkLFxuICAgICAgICAgIGVtYWlsOiByZXN1bHQudXNlci5lbWFpbCxcbiAgICAgICAgICBuYW1lOiByZXN1bHQudXNlci5uYW1lLFxuICAgICAgICAgIGlzRW1haWxWZXJpZmllZDogcmVzdWx0LnVzZXIuaXNFbWFpbFZlcmlmaWVkLFxuICAgICAgICB9LFxuICAgICAgfSk7XG5cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignU2lnbiBpbiBlcnJvcjonLCBlcnJvcik7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InIH0sXG4gICAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICAgKTtcbiAgICB9XG4gIH0pO1xufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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
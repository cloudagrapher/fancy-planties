79456de08df75c7009ab033adfb4ec61
"use strict";

/* istanbul ignore next */
function cov_1az9rbtw7v() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/app/api/care/dashboard/route.ts";
  var hash = "3dea6a1e041832c88835884c5e884f09ffdf0577";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/app/api/care/dashboard/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 55
        }
      },
      "5": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 13,
          column: 69
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "7": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 65
        }
      },
      "8": {
        start: {
          line: 17,
          column: 30
        },
        end: {
          line: 17,
          column: 86
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 56
        }
      },
      "10": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 63
        }
      },
      "11": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 25,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 18
          }
        },
        loc: {
          start: {
            line: 14,
            column: 28
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/app/api/care/dashboard/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { requireAuthSession } from '@/lib/auth/server';\nimport { CareService } from '@/lib/services/care-service';\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { user } = await requireAuthSession();\n    \n    const dashboardData = await CareService.getCareDashboard(user.id);\n    \n    return NextResponse.json(dashboardData);\n  } catch (error) {\n    console.error('Error fetching care dashboard:', error);\n    return NextResponse.json(\n      { error: 'Failed to fetch care dashboard' },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["GET", "request", "user", "requireAuthSession", "dashboardData", "CareService", "getCareDashboard", "id", "NextResponse", "json", "error", "console", "status"],
      mappings: ";;;;+BAIsBA;;;eAAAA;;;wBAJoB;yBACP;6BACP;AAErB,eAAeA,IAAIC,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMC,IAAAA,2BAAkB;QAEzC,MAAMC,gBAAgB,MAAMC,wBAAW,CAACC,gBAAgB,CAACJ,KAAKK,EAAE;QAEhE,OAAOC,oBAAY,CAACC,IAAI,CAACL;IAC3B,EAAE,OAAOM,OAAO;QACdC,QAAQD,KAAK,CAAC,kCAAkCA;QAChD,OAAOF,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAAiC,GAC1C;YAAEE,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3dea6a1e041832c88835884c5e884f09ffdf0577"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1az9rbtw7v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1az9rbtw7v();
cov_1az9rbtw7v().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1az9rbtw7v().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1az9rbtw7v().f[0]++;
    cov_1az9rbtw7v().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_1az9rbtw7v().s[3]++, require("next/server"));
const _server1 =
/* istanbul ignore next */
(cov_1az9rbtw7v().s[4]++, require("../../../../lib/auth/server"));
const _careservice =
/* istanbul ignore next */
(cov_1az9rbtw7v().s[5]++, require("../../../../lib/services/care-service"));
async function GET(request) {
  /* istanbul ignore next */
  cov_1az9rbtw7v().f[1]++;
  cov_1az9rbtw7v().s[6]++;
  try {
    const {
      user
    } =
    /* istanbul ignore next */
    (cov_1az9rbtw7v().s[7]++, await (0, _server1.requireAuthSession)());
    const dashboardData =
    /* istanbul ignore next */
    (cov_1az9rbtw7v().s[8]++, await _careservice.CareService.getCareDashboard(user.id));
    /* istanbul ignore next */
    cov_1az9rbtw7v().s[9]++;
    return _server.NextResponse.json(dashboardData);
  } catch (error) {
    /* istanbul ignore next */
    cov_1az9rbtw7v().s[10]++;
    console.error('Error fetching care dashboard:', error);
    /* istanbul ignore next */
    cov_1az9rbtw7v().s[11]++;
    return _server.NextResponse.json({
      error: 'Failed to fetch care dashboard'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWF6OXJidHc3diIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdFVCIsInJlcXVlc3QiLCJmIiwidXNlciIsIl9zZXJ2ZXIxIiwicmVxdWlyZUF1dGhTZXNzaW9uIiwiZGFzaGJvYXJkRGF0YSIsIl9jYXJlc2VydmljZSIsIkNhcmVTZXJ2aWNlIiwiZ2V0Q2FyZURhc2hib2FyZCIsImlkIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiLCJzdGF0dXMiXSwic291cmNlcyI6WyIvVXNlcnMvc3RlZmFuYmVra2VyL3Byb2plY3RzL2ZhbmN5LXBsYW50aWVzL3NyYy9hcHAvYXBpL2NhcmUvZGFzaGJvYXJkL3JvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyByZXF1aXJlQXV0aFNlc3Npb24gfSBmcm9tICdAL2xpYi9hdXRoL3NlcnZlcic7XG5pbXBvcnQgeyBDYXJlU2VydmljZSB9IGZyb20gJ0AvbGliL3NlcnZpY2VzL2NhcmUtc2VydmljZSc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHVzZXIgfSA9IGF3YWl0IHJlcXVpcmVBdXRoU2Vzc2lvbigpO1xuICAgIFxuICAgIGNvbnN0IGRhc2hib2FyZERhdGEgPSBhd2FpdCBDYXJlU2VydmljZS5nZXRDYXJlRGFzaGJvYXJkKHVzZXIuaWQpO1xuICAgIFxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihkYXNoYm9hcmREYXRhKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBjYXJlIGRhc2hib2FyZDonLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCBjYXJlIGRhc2hib2FyZCcgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBTUk7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7OzsrQkFGa0I7Ozs7OztXQUFBQyxHQUFBOzs7OztrQ0FKb0I7OztrQ0FDUDs7O2tDQUNQO0FBRXJCLGVBQWVBLElBQUlDLE9BQW9CO0VBQUE7RUFBQUosY0FBQSxHQUFBSyxDQUFBO0VBQUFMLGNBQUEsR0FBQUUsQ0FBQTtFQUM1QyxJQUFJO0lBQ0YsTUFBTTtNQUFFSTtJQUFJLENBQUU7SUFBQTtJQUFBLENBQUFOLGNBQUEsR0FBQUUsQ0FBQSxPQUFHLE1BQU0sSUFBQUssUUFBQSxDQUFBQyxrQkFBa0I7SUFFekMsTUFBTUMsYUFBQTtJQUFBO0lBQUEsQ0FBQVQsY0FBQSxHQUFBRSxDQUFBLE9BQWdCLE1BQU1RLFlBQUEsQ0FBQUMsV0FBVyxDQUFDQyxnQkFBZ0IsQ0FBQ04sSUFBQSxDQUFLTyxFQUFFO0lBQUE7SUFBQWIsY0FBQSxHQUFBRSxDQUFBO0lBRWhFLE9BQU9ZLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQUNQLGFBQUE7RUFDM0IsRUFBRSxPQUFPUSxLQUFBLEVBQU87SUFBQTtJQUFBakIsY0FBQSxHQUFBRSxDQUFBO0lBQ2RnQixPQUFBLENBQVFELEtBQUssQ0FBQyxrQ0FBa0NBLEtBQUE7SUFBQTtJQUFBakIsY0FBQSxHQUFBRSxDQUFBO0lBQ2hELE9BQU9ZLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQ3RCO01BQUVDLEtBQUEsRUFBTztJQUFpQyxHQUMxQztNQUFFRSxNQUFBLEVBQVE7SUFBSTtFQUVsQjtBQUNGIiwiaWdub3JlTGlzdCI6W119
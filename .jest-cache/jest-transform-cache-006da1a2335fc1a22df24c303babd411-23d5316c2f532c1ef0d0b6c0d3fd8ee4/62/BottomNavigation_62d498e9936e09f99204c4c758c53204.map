{"version":3,"names":["BottomNavigation","careNotificationCount","cov_26a68yxm3u","b","f","pathname","s","_navigation","usePathname","triggerHaptic","_useHapticFeedback","useHapticFeedback","pressedItem","setPressedItem","_react","useState","navigationItems","id","label","icon","href","badge","undefined","isActive","startsWith","handleNavPress","itemId","setTimeout","_jsxruntime","jsx","className","map","item","jsxs","_link","default","onTouchStart","onMouseDown","title","role","suppressHydrationWarning"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/navigation/BottomNavigation.tsx"],"sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { useHapticFeedback } from '@/hooks/useHapticFeedback';\nimport { useState } from 'react';\n\ninterface NavigationItem {\n  id: string;\n  label: string;\n  icon: string;\n  href: string;\n  badge?: number;\n}\n\ninterface BottomNavigationProps {\n  careNotificationCount?: number;\n}\n\nexport default function BottomNavigation({ careNotificationCount = 0 }: BottomNavigationProps) {\n  const pathname = usePathname();\n  const { triggerHaptic } = useHapticFeedback();\n  const [pressedItem, setPressedItem] = useState<string | null>(null);\n\n  const navigationItems: NavigationItem[] = [\n    {\n      id: 'plants',\n      label: 'Plants',\n      icon: '🌱',\n      href: '/dashboard/plants',\n    },\n    {\n      id: 'care',\n      label: 'Care',\n      icon: '💧',\n      href: '/dashboard/care',\n      badge: careNotificationCount > 0 ? careNotificationCount : undefined,\n    },\n    {\n      id: 'dashboard',\n      label: 'Dashboard',\n      icon: '🏠',\n      href: '/dashboard',\n    },\n    {\n      id: 'propagations',\n      label: 'Propagations',\n      icon: '🌿',\n      href: '/dashboard/propagations',\n    },\n    {\n      id: 'handbook',\n      label: 'Handbook',\n      icon: '📖',\n      href: '/dashboard/handbook',\n    },\n  ];\n\n  const isActive = (href: string) => {\n    if (href === '/dashboard') {\n      return pathname === '/dashboard';\n    }\n    return pathname.startsWith(href);\n  };\n\n  const handleNavPress = (itemId: string) => {\n    triggerHaptic('selection');\n    setPressedItem(itemId);\n    setTimeout(() => setPressedItem(null), 150);\n  };\n\n  return (\n    <nav className=\"bottom-nav\">\n      <div className=\"bottom-nav-container\">\n        {navigationItems.map((item) => (\n          <Link\n            key={item.id}\n            href={item.href}\n            className={`\n              bottom-nav-item\n              ${isActive(item.href) ? 'bottom-nav-item--active' : 'bottom-nav-item--inactive'}\n              ${pressedItem === item.id ? 'bottom-nav-item--pressed' : ''}\n            `}\n            onTouchStart={() => handleNavPress(item.id)}\n            onMouseDown={() => handleNavPress(item.id)}\n            aria-label={`Navigate to ${item.label}${item.badge ? ` (${item.badge} notifications)` : ''}`}\n            title={`Navigate to ${item.label}${item.badge ? ` (${item.badge} notifications)` : ''}`}\n          >\n            <div className=\"relative\">\n              <span className=\"bottom-nav-icon\" aria-hidden=\"true\">\n                {item.icon}\n              </span>\n              {item.badge && (\n                <span \n                  className=\"bottom-nav-badge\"\n                  role=\"status\"\n                  aria-label={`${item.badge} notifications`}\n                  suppressHydrationWarning\n                >\n                  {item.badge > 99 ? '99+' : item.badge}\n                </span>\n              )}\n            </div>\n            <span className=\"bottom-nav-label\">\n              {item.label}\n            </span>\n          </Link>\n        ))}\n      </div>\n    </nav>\n  );\n}"],"mappingsmBA;;;;;;WAAwBA,gBAAA;;;;;;;;wEAjBP;;;kCACW;;;kCACM;;;kCACT;;;;;;;;;;;;;;;AAcV,SAASA,iBAAiB;EAAEC,qBAAA;EAAA;EAAA,CAAAC,cAAA,GAAAC,CAAA,UAAwB,CAAC;AAAA,CAAyB;EAAA;EAAAD,cAAA,GAAAE,CAAA;EAC3F,MAAMC,QAAA;EAAA;EAAA,CAAAH,cAAA,GAAAI,CAAA,OAAW,IAAAC,WAAA,CAAAC,WAAW;EAC5B,MAAM;IAAEC;EAAa,CAAE;EAAA;EAAA,CAAAP,cAAA,GAAAI,CAAA,QAAG,IAAAI,kBAAA,CAAAC,iBAAiB;EAC3C,MAAM,CAACC,WAAA,EAAaC,cAAA,CAAe;EAAA;EAAA,CAAAX,cAAA,GAAAI,CAAA,QAAG,IAAAQ,MAAA,CAAAC,QAAQ,EAAgB;EAE9D,MAAMC,eAAA;EAAA;EAAA,CAAAd,cAAA,GAAAI,CAAA,QAAoC,CACxC;IACEW,EAAA,EAAI;IACJC,KAAA,EAAO;IACPC,IAAA,EAAM;IACNC,IAAA,EAAM;EACR,GACA;IACEH,EAAA,EAAI;IACJC,KAAA,EAAO;IACPC,IAAA,EAAM;IACNC,IAAA,EAAM;IACNC,KAAA,EAAOpB,qBAAA,GAAwB;IAAA;IAAA,CAAAC,cAAA,GAAAC,CAAA,UAAIF,qBAAA;IAAA;IAAA,CAAAC,cAAA,GAAAC,CAAA,UAAwBmB,SAAA;EAC7D,GACA;IACEL,EAAA,EAAI;IACJC,KAAA,EAAO;IACPC,IAAA,EAAM;IACNC,IAAA,EAAM;EACR,GACA;IACEH,EAAA,EAAI;IACJC,KAAA,EAAO;IACPC,IAAA,EAAM;IACNC,IAAA,EAAM;EACR,GACA;IACEH,EAAA,EAAI;IACJC,KAAA,EAAO;IACPC,IAAA,EAAM;IACNC,IAAA,EAAM;EACR,EACD;EAAA;EAAAlB,cAAA,GAAAI,CAAA;EAED,MAAMiB,QAAA,GAAYH,IAAA;IAAA;IAAAlB,cAAA,GAAAE,CAAA;IAAAF,cAAA,GAAAI,CAAA;IAChB,IAAIc,IAAA,KAAS,cAAc;MAAA;MAAAlB,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAI,CAAA;MACzB,OAAOD,QAAA,KAAa;IACtB;IAAA;IAAA;MAAAH,cAAA,GAAAC,CAAA;IAAA;IAAAD,cAAA,GAAAI,CAAA;IACA,OAAOD,QAAA,CAASmB,UAAU,CAACJ,IAAA;EAC7B;EAAA;EAAAlB,cAAA,GAAAI,CAAA;EAEA,MAAMmB,cAAA,GAAkBC,MAAA;IAAA;IAAAxB,cAAA,GAAAE,CAAA;IAAAF,cAAA,GAAAI,CAAA;IACtBG,aAAA,CAAc;IAAA;IAAAP,cAAA,GAAAI,CAAA;IACdO,cAAA,CAAea,MAAA;IAAA;IAAAxB,cAAA,GAAAI,CAAA;IACfqB,UAAA,CAAW,MAAM;MAAA;MAAAzB,cAAA,GAAAE,CAAA;MAAAF,cAAA,GAAAI,CAAA;MAAA,OAAAO,cAAA,CAAe;IAAA,GAAO;EACzC;EAAA;EAAAX,cAAA,GAAAI,CAAA;EAEA,oBACE,IAAAsB,WAAA,CAAAC,GAAA,EAAC;IAAIC,SAAA,EAAU;cACb,iBAAAF,WAAA,CAAAC,GAAA,EAAC;MAAIC,SAAA,EAAU;gBACZd,eAAA,CAAgBe,GAAG,CAAEC,IAAA,IACpB;QAAA;QAAA9B,cAAA,GAAAE,CAAA;QAAAF,cAAA,GAAAI,CAAA;QAAA,OADoB,aACpB,IAAAsB,WAAA,CAAAK,IAAA,EAACC,KAAA,CAAAC,OAAI;UAEHf,IAAA,EAAMY,IAAA,CAAKZ,IAAI;UACfU,SAAA,EAAW;;gBAEPP,QAAA,CAASS,IAAA,CAAKZ,IAAI;UAAA;UAAA,CAAAlB,cAAA,GAAAC,CAAA,UAAI;UAAA;UAAA,CAAAD,cAAA,GAAAC,CAAA,UAA4B;gBAClDS,WAAA,KAAgBoB,IAAA,CAAKf,EAAE;UAAA;UAAA,CAAAf,cAAA,GAAAC,CAAA,UAAG;UAAA;UAAA,CAAAD,cAAA,GAAAC,CAAA,UAA6B;aAC1D;UACDiC,YAAA,EAAcA,CAAA,KAAM;YAAA;YAAAlC,cAAA,GAAAE,CAAA;YAAAF,cAAA,GAAAI,CAAA;YAAA,OAAAmB,cAAA,CAAeO,IAAA,CAAKf,EAAE;UAAA;UAC1CoB,WAAA,EAAaA,CAAA,KAAM;YAAA;YAAAnC,cAAA,GAAAE,CAAA;YAAAF,cAAA,GAAAI,CAAA;YAAA,OAAAmB,cAAA,CAAeO,IAAA,CAAKf,EAAE;UAAA;UACzC,cAAY,eAAee,IAAA,CAAKd,KAAK,GAAGc,IAAA,CAAKX,KAAK;UAAA;UAAA,CAAAnB,cAAA,GAAAC,CAAA,UAAG,KAAK6B,IAAA,CAAKX,KAAK,iBAAiB;UAAA;UAAA,CAAAnB,cAAA,GAAAC,CAAA,UAAG,KAAI;UAC5FmC,KAAA,EAAO,eAAeN,IAAA,CAAKd,KAAK,GAAGc,IAAA,CAAKX,KAAK;UAAA;UAAA,CAAAnB,cAAA,GAAAC,CAAA,UAAG,KAAK6B,IAAA,CAAKX,KAAK,iBAAiB;UAAA;UAAA,CAAAnB,cAAA,GAAAC,CAAA,UAAG,KAAI;kCAEvF,IAAAyB,WAAA,CAAAK,IAAA,EAAC;YAAIH,SAAA,EAAU;oCACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;cAAKC,SAAA,EAAU;cAAkB,eAAY;wBAC3CE,IAAA,CAAKb;;YAEP;YAAA,CAAAjB,cAAA,GAAAC,CAAA,UAAA6B,IAAA,CAAKX,KAAK;YAAA;YAAA,CAAAnB,cAAA,GAAAC,CAAA,uBACT,IAAAyB,WAAA,CAAAC,GAAA,EAAC;cACCC,SAAA,EAAU;cACVS,IAAA,EAAK;cACL,cAAY,GAAGP,IAAA,CAAKX,KAAK,gBAAgB;cACzCmB,wBAAwB;wBAEvBR,IAAA,CAAKX,KAAK,GAAG;cAAA;cAAA,CAAAnB,cAAA,GAAAC,CAAA,WAAK;cAAA;cAAA,CAAAD,cAAA,GAAAC,CAAA,WAAQ6B,IAAA,CAAKX,KAAK;;2BAI3C,IAAAO,WAAA,CAAAC,GAAA,EAAC;YAAKC,SAAA,EAAU;sBACbE,IAAA,CAAKd;;WA5BHc,IAAA,CAAKf,EAAE;MAAA;;;AAmCxB","ignoreList":[]}
cdaefc823b9640bb9eb13969fa8be123
'use client';
"use strict";

/* istanbul ignore next */
function cov_29um3hrjwv() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/components/plants/PlantTaxonomyForm.tsx";
  var hash = "3e6525934402c8a5053d36aec2bb122ec13323a6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/components/plants/PlantTaxonomyForm.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 33
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 22
        },
        end: {
          line: 14,
          column: 67
        }
      },
      "6": {
        start: {
          line: 16,
          column: 38
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "7": {
        start: {
          line: 28,
          column: 25
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "8": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "9": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 37,
          column: 15
        }
      },
      "10": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 41,
          column: 20
        }
      },
      "11": {
        start: {
          line: 38,
          column: 34
        },
        end: {
          line: 41,
          column: 17
        }
      },
      "12": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 24
        }
      },
      "13": {
        start: {
          line: 44,
          column: 27
        },
        end: {
          line: 44,
          column: 29
        }
      },
      "14": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "15": {
        start: {
          line: 46,
          column: 33
        },
        end: {
          line: 46,
          column: 38
        }
      },
      "16": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 51,
          column: 19
        }
      },
      "17": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 50,
          column: 21
        }
      },
      "18": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 49,
          column: 58
        }
      },
      "19": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 56,
          column: 20
        }
      },
      "20": {
        start: {
          line: 53,
          column: 34
        },
        end: {
          line: 56,
          column: 17
        }
      },
      "21": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 25
        }
      },
      "22": {
        start: {
          line: 61,
          column: 29
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "23": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "24": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 19
        }
      },
      "25": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 68,
          column: 16
        }
      },
      "26": {
        start: {
          line: 65,
          column: 30
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "27": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "28": {
        start: {
          line: 70,
          column: 29
        },
        end: {
          line: 82,
          column: 14
        }
      },
      "29": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "30": {
        start: {
          line: 84,
          column: 29
        },
        end: {
          line: 84,
          column: 50
        }
      },
      "31": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 89,
          column: 24
        }
      },
      "32": {
        start: {
          line: 85,
          column: 38
        },
        end: {
          line: 89,
          column: 21
        }
      },
      "33": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 54
        }
      },
      "34": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 96,
          column: 20
        }
      },
      "35": {
        start: {
          line: 93,
          column: 34
        },
        end: {
          line: 96,
          column: 17
        }
      },
      "36": {
        start: {
          line: 100,
          column: 30
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "37": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 109,
          column: 16
        }
      },
      "38": {
        start: {
          line: 101,
          column: 30
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "39": {
        start: {
          line: 112,
          column: 25
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "40": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 27
        }
      },
      "41": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "42": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 19
        }
      },
      "43": {
        start: {
          line: 117,
          column: 26
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "44": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 28
        }
      },
      "45": {
        start: {
          line: 129,
          column: 38
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "46": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 40
        }
      },
      "47": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 134,
          column: 16
        }
      },
      "48": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 31
        }
      },
      "49": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 466,
          column: 7
        }
      },
      "50": {
        start: {
          line: 167,
          column: 47
        },
        end: {
          line: 167,
          column: 102
        }
      },
      "51": {
        start: {
          line: 194,
          column: 55
        },
        end: {
          line: 194,
          column: 106
        }
      },
      "52": {
        start: {
          line: 218,
          column: 55
        },
        end: {
          line: 218,
          column: 105
        }
      },
      "53": {
        start: {
          line: 242,
          column: 55
        },
        end: {
          line: 242,
          column: 107
        }
      },
      "54": {
        start: {
          line: 268,
          column: 47
        },
        end: {
          line: 268,
          column: 100
        }
      },
      "55": {
        start: {
          line: 295,
          column: 47
        },
        end: {
          line: 295,
          column: 100
        }
      },
      "56": {
        start: {
          line: 347,
          column: 112
        },
        end: {
          line: 352,
          column: 53
        }
      },
      "57": {
        start: {
          line: 380,
          column: 116
        },
        end: {
          line: 385,
          column: 53
        }
      },
      "58": {
        start: {
          line: 413,
          column: 113
        },
        end: {
          line: 429,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "PlantTaxonomyForm",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 26
          }
        },
        loc: {
          start: {
            line: 15,
            column: 104
          },
          end: {
            line: 467,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 25
          },
          end: {
            line: 28,
            column: 26
          }
        },
        loc: {
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 38,
            column: 26
          }
        },
        loc: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 41,
            column: 17
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 40
          },
          end: {
            line: 47,
            column: 41
          }
        },
        loc: {
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 51,
            column: 17
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 53,
            column: 26
          }
        },
        loc: {
          start: {
            line: 53,
            column: 34
          },
          end: {
            line: 56,
            column: 17
          }
        },
        line: 53
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 61,
            column: 29
          },
          end: {
            line: 61,
            column: 30
          }
        },
        loc: {
          start: {
            line: 61,
            column: 39
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 61
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 21
          },
          end: {
            line: 65,
            column: 22
          }
        },
        loc: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 68,
            column: 13
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 85,
            column: 29
          },
          end: {
            line: 85,
            column: 30
          }
        },
        loc: {
          start: {
            line: 85,
            column: 38
          },
          end: {
            line: 89,
            column: 21
          }
        },
        line: 85
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 26
          }
        },
        loc: {
          start: {
            line: 93,
            column: 34
          },
          end: {
            line: 96,
            column: 17
          }
        },
        line: 93
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 100,
            column: 30
          },
          end: {
            line: 100,
            column: 31
          }
        },
        loc: {
          start: {
            line: 100,
            column: 46
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 100
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 101,
            column: 21
          },
          end: {
            line: 101,
            column: 22
          }
        },
        loc: {
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 109,
            column: 13
          }
        },
        line: 101
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 112,
            column: 25
          },
          end: {
            line: 112,
            column: 26
          }
        },
        loc: {
          start: {
            line: 112,
            column: 30
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 112
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 129,
            column: 38
          },
          end: {
            line: 129,
            column: 39
          }
        },
        loc: {
          start: {
            line: 129,
            column: 54
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 129
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 132,
            column: 19
          },
          end: {
            line: 132,
            column: 20
          }
        },
        loc: {
          start: {
            line: 132,
            column: 23
          },
          end: {
            line: 134,
            column: 9
          }
        },
        line: 132
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 167,
            column: 42
          },
          end: {
            line: 167,
            column: 43
          }
        },
        loc: {
          start: {
            line: 167,
            column: 47
          },
          end: {
            line: 167,
            column: 102
          }
        },
        line: 167
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 194,
            column: 50
          },
          end: {
            line: 194,
            column: 51
          }
        },
        loc: {
          start: {
            line: 194,
            column: 55
          },
          end: {
            line: 194,
            column: 106
          }
        },
        line: 194
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 218,
            column: 50
          },
          end: {
            line: 218,
            column: 51
          }
        },
        loc: {
          start: {
            line: 218,
            column: 55
          },
          end: {
            line: 218,
            column: 105
          }
        },
        line: 218
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 242,
            column: 50
          },
          end: {
            line: 242,
            column: 51
          }
        },
        loc: {
          start: {
            line: 242,
            column: 55
          },
          end: {
            line: 242,
            column: 107
          }
        },
        line: 242
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 268,
            column: 42
          },
          end: {
            line: 268,
            column: 43
          }
        },
        loc: {
          start: {
            line: 268,
            column: 47
          },
          end: {
            line: 268,
            column: 100
          }
        },
        line: 268
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 295,
            column: 42
          },
          end: {
            line: 295,
            column: 43
          }
        },
        loc: {
          start: {
            line: 295,
            column: 47
          },
          end: {
            line: 295,
            column: 100
          }
        },
        line: 295
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 347,
            column: 82
          },
          end: {
            line: 347,
            column: 83
          }
        },
        loc: {
          start: {
            line: 347,
            column: 112
          },
          end: {
            line: 352,
            column: 53
          }
        },
        line: 347
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 380,
            column: 84
          },
          end: {
            line: 380,
            column: 85
          }
        },
        loc: {
          start: {
            line: 380,
            column: 116
          },
          end: {
            line: 385,
            column: 53
          }
        },
        line: 380
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 413,
            column: 86
          },
          end: {
            line: 413,
            column: 87
          }
        },
        loc: {
          start: {
            line: 413,
            column: 113
          },
          end: {
            line: 429,
            column: 60
          }
        },
        line: 413
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 49
          },
          end: {
            line: 15,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 63
          },
          end: {
            line: 15,
            column: 65
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 67
          },
          end: {
            line: 15,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 79
          },
          end: {
            line: 15,
            column: 84
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 86
          },
          end: {
            line: 15,
            column: 100
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 98
          },
          end: {
            line: 15,
            column: 100
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 34
          }
        }, {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 17,
            column: 40
          }
        }],
        line: 17
      },
      "4": {
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 32
          }
        }, {
          start: {
            line: 18,
            column: 36
          },
          end: {
            line: 18,
            column: 38
          }
        }],
        line: 18
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 36
          }
        }, {
          start: {
            line: 19,
            column: 40
          },
          end: {
            line: 19,
            column: 42
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 38
          }
        }, {
          start: {
            line: 20,
            column: 42
          },
          end: {
            line: 20,
            column: 44
          }
        }],
        line: 20
      },
      "7": {
        loc: {
          start: {
            line: 21,
            column: 20
          },
          end: {
            line: 21,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 20
          },
          end: {
            line: 21,
            column: 42
          }
        }, {
          start: {
            line: 21,
            column: 46
          },
          end: {
            line: 21,
            column: 48
          }
        }],
        line: 21
      },
      "8": {
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 54
          }
        }, {
          start: {
            line: 22,
            column: 58
          },
          end: {
            line: 22,
            column: 60
          }
        }],
        line: 22
      },
      "9": {
        loc: {
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 26
          },
          end: {
            line: 34,
            column: 44
          }
        }, {
          start: {
            line: 34,
            column: 48
          },
          end: {
            line: 34,
            column: 57
          }
        }],
        line: 34
      },
      "10": {
        loc: {
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 60
          }
        }, {
          start: {
            line: 36,
            column: 64
          },
          end: {
            line: 36,
            column: 73
          }
        }],
        line: 36
      },
      "11": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "12": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 21
          }
        }, {
          start: {
            line: 45,
            column: 25
          },
          end: {
            line: 45,
            column: 50
          }
        }, {
          start: {
            line: 45,
            column: 54
          },
          end: {
            line: 45,
            column: 71
          }
        }],
        line: 45
      },
      "13": {
        loc: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 50,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 50,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "14": {
        loc: {
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 48,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 24
          },
          end: {
            line: 48,
            column: 32
          }
        }, {
          start: {
            line: 48,
            column: 36
          },
          end: {
            line: 48,
            column: 55
          }
        }],
        line: 48
      },
      "15": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "16": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 29
          }
        }, {
          start: {
            line: 62,
            column: 33
          },
          end: {
            line: 62,
            column: 49
          }
        }, {
          start: {
            line: 62,
            column: 53
          },
          end: {
            line: 62,
            column: 71
          }
        }, {
          start: {
            line: 62,
            column: 75
          },
          end: {
            line: 62,
            column: 96
          }
        }],
        line: 62
      },
      "17": {
        loc: {
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 79,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 79,
            column: 48
          }
        }, {
          start: {
            line: 79,
            column: 52
          },
          end: {
            line: 79,
            column: 61
          }
        }],
        line: 79
      },
      "18": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "19": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "20": {
        loc: {
          start: {
            line: 121,
            column: 22
          },
          end: {
            line: 121,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 22
          },
          end: {
            line: 121,
            column: 40
          }
        }, {
          start: {
            line: 121,
            column: 44
          },
          end: {
            line: 121,
            column: 53
          }
        }],
        line: 121
      },
      "21": {
        loc: {
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 123,
            column: 56
          }
        }, {
          start: {
            line: 123,
            column: 60
          },
          end: {
            line: 123,
            column: 69
          }
        }],
        line: 123
      },
      "22": {
        loc: {
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 171,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 46
          },
          end: {
            line: 171,
            column: 81
          }
        }, {
          start: {
            line: 171,
            column: 84
          },
          end: {
            line: 171,
            column: 101
          }
        }],
        line: 171
      },
      "23": {
        loc: {
          start: {
            line: 174,
            column: 28
          },
          end: {
            line: 177,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 28
          },
          end: {
            line: 174,
            column: 55
          }
        }, {
          start: {
            line: 174,
            column: 73
          },
          end: {
            line: 177,
            column: 30
          }
        }],
        line: 174
      },
      "24": {
        loc: {
          start: {
            line: 198,
            column: 18
          },
          end: {
            line: 198,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 198,
            column: 44
          },
          end: {
            line: 198,
            column: 79
          }
        }, {
          start: {
            line: 198,
            column: 82
          },
          end: {
            line: 198,
            column: 99
          }
        }],
        line: 198
      },
      "25": {
        loc: {
          start: {
            line: 201,
            column: 36
          },
          end: {
            line: 204,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 36
          },
          end: {
            line: 201,
            column: 59
          }
        }, {
          start: {
            line: 201,
            column: 77
          },
          end: {
            line: 204,
            column: 38
          }
        }],
        line: 201
      },
      "26": {
        loc: {
          start: {
            line: 222,
            column: 18
          },
          end: {
            line: 222,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 222,
            column: 43
          },
          end: {
            line: 222,
            column: 78
          }
        }, {
          start: {
            line: 222,
            column: 81
          },
          end: {
            line: 222,
            column: 98
          }
        }],
        line: 222
      },
      "27": {
        loc: {
          start: {
            line: 225,
            column: 36
          },
          end: {
            line: 228,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 36
          },
          end: {
            line: 225,
            column: 58
          }
        }, {
          start: {
            line: 225,
            column: 76
          },
          end: {
            line: 228,
            column: 38
          }
        }],
        line: 225
      },
      "28": {
        loc: {
          start: {
            line: 246,
            column: 18
          },
          end: {
            line: 246,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 246,
            column: 45
          },
          end: {
            line: 246,
            column: 80
          }
        }, {
          start: {
            line: 246,
            column: 83
          },
          end: {
            line: 246,
            column: 100
          }
        }],
        line: 246
      },
      "29": {
        loc: {
          start: {
            line: 249,
            column: 36
          },
          end: {
            line: 252,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 36
          },
          end: {
            line: 249,
            column: 60
          }
        }, {
          start: {
            line: 249,
            column: 78
          },
          end: {
            line: 252,
            column: 38
          }
        }],
        line: 249
      },
      "30": {
        loc: {
          start: {
            line: 272,
            column: 16
          },
          end: {
            line: 272,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 272,
            column: 44
          },
          end: {
            line: 272,
            column: 79
          }
        }, {
          start: {
            line: 272,
            column: 82
          },
          end: {
            line: 272,
            column: 99
          }
        }],
        line: 272
      },
      "31": {
        loc: {
          start: {
            line: 279,
            column: 28
          },
          end: {
            line: 282,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 28
          },
          end: {
            line: 279,
            column: 53
          }
        }, {
          start: {
            line: 279,
            column: 71
          },
          end: {
            line: 282,
            column: 30
          }
        }],
        line: 279
      },
      "32": {
        loc: {
          start: {
            line: 300,
            column: 16
          },
          end: {
            line: 300,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 300,
            column: 52
          },
          end: {
            line: 300,
            column: 87
          }
        }, {
          start: {
            line: 300,
            column: 90
          },
          end: {
            line: 300,
            column: 107
          }
        }],
        line: 300
      },
      "33": {
        loc: {
          start: {
            line: 303,
            column: 28
          },
          end: {
            line: 306,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 28
          },
          end: {
            line: 303,
            column: 61
          }
        }, {
          start: {
            line: 303,
            column: 79
          },
          end: {
            line: 306,
            column: 30
          }
        }],
        line: 303
      },
      "34": {
        loc: {
          start: {
            line: 309,
            column: 20
          },
          end: {
            line: 319,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 20
          },
          end: {
            line: 309,
            column: 42
          }
        }, {
          start: {
            line: 309,
            column: 60
          },
          end: {
            line: 319,
            column: 22
          }
        }],
        line: 309
      },
      "35": {
        loc: {
          start: {
            line: 320,
            column: 20
          },
          end: {
            line: 434,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 20
          },
          end: {
            line: 320,
            column: 40
          }
        }, {
          start: {
            line: 320,
            column: 58
          },
          end: {
            line: 434,
            column: 22
          }
        }],
        line: 320
      },
      "36": {
        loc: {
          start: {
            line: 323,
            column: 28
          },
          end: {
            line: 355,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 323,
            column: 28
          },
          end: {
            line: 323,
            column: 66
          }
        }, {
          start: {
            line: 323,
            column: 84
          },
          end: {
            line: 355,
            column: 30
          }
        }],
        line: 323
      },
      "37": {
        loc: {
          start: {
            line: 356,
            column: 28
          },
          end: {
            line: 388,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 28
          },
          end: {
            line: 356,
            column: 68
          }
        }, {
          start: {
            line: 356,
            column: 86
          },
          end: {
            line: 388,
            column: 30
          }
        }],
        line: 356
      },
      "38": {
        loc: {
          start: {
            line: 389,
            column: 28
          },
          end: {
            line: 432,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 389,
            column: 28
          },
          end: {
            line: 389,
            column: 70
          }
        }, {
          start: {
            line: 389,
            column: 88
          },
          end: {
            line: 432,
            column: 30
          }
        }],
        line: 389
      },
      "39": {
        loc: {
          start: {
            line: 447,
            column: 42
          },
          end: {
            line: 447,
            column: 143
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 447,
            column: 42
          },
          end: {
            line: 447,
            column: 51
          }
        }, {
          start: {
            line: 447,
            column: 55
          },
          end: {
            line: 447,
            column: 77
          }
        }, {
          start: {
            line: 447,
            column: 82
          },
          end: {
            line: 447,
            column: 142
          }
        }],
        line: 447
      },
      "40": {
        loc: {
          start: {
            line: 447,
            column: 82
          },
          end: {
            line: 447,
            column: 142
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 447,
            column: 105
          },
          end: {
            line: 447,
            column: 134
          }
        }, {
          start: {
            line: 447,
            column: 137
          },
          end: {
            line: 447,
            column: 142
          }
        }],
        line: 447
      },
      "41": {
        loc: {
          start: {
            line: 449,
            column: 42
          },
          end: {
            line: 459,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 449,
            column: 68
          },
          end: {
            line: 459,
            column: 34
          }
        }, {
          start: {
            line: 459,
            column: 37
          },
          end: {
            line: 459,
            column: 56
          }
        }],
        line: 449
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0, 0],
      "40": [0, 0],
      "41": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/components/plants/PlantTaxonomyForm.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { createPlantSchema, type CreatePlant } from '@/lib/validation/plant-schemas';\nimport type { TaxonomyValidationResult } from '@/lib/types/plant-types';\n\ninterface PlantTaxonomyFormProps {\n  onSubmit: (plant: CreatePlant) => void;\n  onCancel: () => void;\n  initialData?: Partial<CreatePlant>;\n  isLoading?: boolean;\n  className?: string;\n}\n\ninterface FormState {\n  family: string;\n  genus: string;\n  species: string;\n  cultivar: string;\n  commonName: string;\n  careInstructions: string;\n  errors: Record<string, string>;\n  validation: TaxonomyValidationResult | null;\n  isValidating: boolean;\n}\n\nexport default function PlantTaxonomyForm({\n  onSubmit,\n  onCancel,\n  initialData = {},\n  isLoading = false,\n  className = '',\n}: PlantTaxonomyFormProps) {\n  const [formState, setFormState] = useState<FormState>({\n    family: initialData.family || '',\n    genus: initialData.genus || '',\n    species: initialData.species || '',\n    cultivar: initialData.cultivar || '',\n    commonName: initialData.commonName || '',\n    careInstructions: initialData.careInstructions || '',\n    errors: {},\n    validation: null,\n    isValidating: false,\n  });\n\n  // Validate form data\n  const validateForm = () => {\n    try {\n      createPlantSchema.parse({\n        family: formState.family,\n        genus: formState.genus,\n        species: formState.species,\n        cultivar: formState.cultivar || undefined,\n        commonName: formState.commonName,\n        careInstructions: formState.careInstructions || undefined,\n      });\n      \n      setFormState(prev => ({ ...prev, errors: {} }));\n      return true;\n    } catch (error: unknown) {\n      const errors: Record<string, string> = {};\n      \n      if (error && typeof error === 'object' && 'errors' in error) {\n        const zodError = error as { errors: Array<{ path: string[]; message: string }> };\n        zodError.errors.forEach((err) => {\n          if (err.path && err.path.length > 0) {\n            errors[err.path[0]] = err.message;\n          }\n        });\n      }\n      \n      setFormState(prev => ({ ...prev, errors }));\n      return false;\n    }\n  };\n\n  // Validate taxonomy for duplicates\n  const validateTaxonomy = async () => {\n    if (!formState.family || !formState.genus || !formState.species || !formState.commonName) {\n      return;\n    }\n\n    setFormState(prev => ({ ...prev, isValidating: true }));\n\n    try {\n      const response = await fetch('/api/plants/validate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          family: formState.family,\n          genus: formState.genus,\n          species: formState.species,\n          cultivar: formState.cultivar || undefined,\n          commonName: formState.commonName,\n        }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setFormState(prev => ({ \n          ...prev, \n          validation: data.data,\n          isValidating: false \n        }));\n      }\n    } catch (error) {\n      console.error('Validation error:', error);\n      setFormState(prev => ({ ...prev, isValidating: false }));\n    }\n  };\n\n  // Handle input changes\n  const handleInputChange = (field: keyof FormState, value: string) => {\n    setFormState(prev => ({\n      ...prev,\n      [field]: value,\n      errors: { ...prev.errors, [field]: '' }, // Clear field error\n      validation: null, // Clear validation when data changes\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    const plantData: CreatePlant = {\n      family: formState.family,\n      genus: formState.genus,\n      species: formState.species,\n      cultivar: formState.cultivar || undefined,\n      commonName: formState.commonName,\n      careInstructions: formState.careInstructions || undefined,\n      isVerified: false, // New plants are not verified by default\n    };\n\n    onSubmit(plantData);\n  };\n\n  // Auto-validate taxonomy when key fields change\n  const handleTaxonomyFieldChange = (field: keyof FormState, value: string) => {\n    handleInputChange(field, value);\n    \n    // Debounce validation\n    setTimeout(() => {\n      validateTaxonomy();\n    }, 500);\n  };\n\n  return (\n    <div className={`bg-white rounded-lg shadow-lg p-6 ${className}`}>\n      <div className=\"mb-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n          Add New Plant Type\n        </h3>\n        <p className=\"text-sm text-gray-600\">\n          Create a new plant taxonomy entry. All fields are required.\n        </p>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        {/* Common Name */}\n        <div>\n          <label htmlFor=\"commonName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Common Name *\n          </label>\n          <input\n            id=\"commonName\"\n            type=\"text\"\n            value={formState.commonName}\n            onChange={(e) => handleTaxonomyFieldChange('commonName', e.target.value)}\n            placeholder=\"e.g., Monstera Deliciosa, Snake Plant\"\n            className={`\n              w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-300\n              ${formState.errors.commonName ? 'border-red-300 focus:ring-red-300' : 'border-gray-300'}\n            `}\n          />\n          {formState.errors.commonName && (\n            <p className=\"mt-1 text-sm text-red-600\">{formState.errors.commonName}</p>\n          )}\n        </div>\n\n        {/* Scientific Name Section */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          {/* Family */}\n          <div>\n            <label htmlFor=\"family\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Family *\n            </label>\n            <input\n              id=\"family\"\n              type=\"text\"\n              value={formState.family}\n              onChange={(e) => handleTaxonomyFieldChange('family', e.target.value)}\n              placeholder=\"e.g., Araceae\"\n              className={`\n                w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-300\n                ${formState.errors.family ? 'border-red-300 focus:ring-red-300' : 'border-gray-300'}\n              `}\n            />\n            {formState.errors.family && (\n              <p className=\"mt-1 text-sm text-red-600\">{formState.errors.family}</p>\n            )}\n          </div>\n\n          {/* Genus */}\n          <div>\n            <label htmlFor=\"genus\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Genus *\n            </label>\n            <input\n              id=\"genus\"\n              type=\"text\"\n              value={formState.genus}\n              onChange={(e) => handleTaxonomyFieldChange('genus', e.target.value)}\n              placeholder=\"e.g., Monstera\"\n              className={`\n                w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-300\n                ${formState.errors.genus ? 'border-red-300 focus:ring-red-300' : 'border-gray-300'}\n              `}\n            />\n            {formState.errors.genus && (\n              <p className=\"mt-1 text-sm text-red-600\">{formState.errors.genus}</p>\n            )}\n          </div>\n\n          {/* Species */}\n          <div>\n            <label htmlFor=\"species\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Species *\n            </label>\n            <input\n              id=\"species\"\n              type=\"text\"\n              value={formState.species}\n              onChange={(e) => handleTaxonomyFieldChange('species', e.target.value)}\n              placeholder=\"e.g., deliciosa\"\n              className={`\n                w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-300\n                ${formState.errors.species ? 'border-red-300 focus:ring-red-300' : 'border-gray-300'}\n              `}\n            />\n            {formState.errors.species && (\n              <p className=\"mt-1 text-sm text-red-600\">{formState.errors.species}</p>\n            )}\n          </div>\n        </div>\n\n        {/* Cultivar */}\n        <div>\n          <label htmlFor=\"cultivar\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Cultivar (Optional)\n          </label>\n          <input\n            id=\"cultivar\"\n            type=\"text\"\n            value={formState.cultivar}\n            onChange={(e) => handleTaxonomyFieldChange('cultivar', e.target.value)}\n            placeholder=\"e.g., 'Thai Constellation', 'Variegata'\"\n            className={`\n              w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-300\n              ${formState.errors.cultivar ? 'border-red-300 focus:ring-red-300' : 'border-gray-300'}\n            `}\n          />\n          <p className=\"mt-1 text-xs text-gray-500\">\n            Specific cultivar or variety name (if applicable)\n          </p>\n          {formState.errors.cultivar && (\n            <p className=\"mt-1 text-sm text-red-600\">{formState.errors.cultivar}</p>\n          )}\n        </div>\n\n        {/* Care Instructions */}\n        <div>\n          <label htmlFor=\"careInstructions\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Care Instructions (Optional)\n          </label>\n          <textarea\n            id=\"careInstructions\"\n            value={formState.careInstructions}\n            onChange={(e) => handleInputChange('careInstructions', e.target.value)}\n            placeholder=\"Basic care instructions for this plant type...\"\n            rows={3}\n            className={`\n              w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-300\n              ${formState.errors.careInstructions ? 'border-red-300 focus:ring-red-300' : 'border-gray-300'}\n            `}\n          />\n          {formState.errors.careInstructions && (\n            <p className=\"mt-1 text-sm text-red-600\">{formState.errors.careInstructions}</p>\n          )}\n        </div>\n\n        {/* Validation Results */}\n        {formState.isValidating && (\n          <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n            <div className=\"animate-spin h-4 w-4 border-2 border-primary-300 border-t-transparent rounded-full\"></div>\n            <span>Checking for duplicates...</span>\n          </div>\n        )}\n\n        {formState.validation && (\n          <div className=\"space-y-2\">\n            {/* Errors */}\n            {formState.validation.errors.length > 0 && (\n              <div className=\"p-3 bg-red-50 border border-red-200 rounded-md\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <svg className=\"h-4 w-4 text-red-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                  </svg>\n                  <span className=\"text-sm font-medium text-red-800\">Validation Errors</span>\n                </div>\n                <ul className=\"text-sm text-red-700 space-y-1\">\n                  {formState.validation.errors.map((error, index) => (\n                    <li key={index}>\u2022 {error}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            {/* Warnings */}\n            {formState.validation.warnings.length > 0 && (\n              <div className=\"p-3 bg-yellow-50 border border-yellow-200 rounded-md\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <svg className=\"h-4 w-4 text-yellow-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                  </svg>\n                  <span className=\"text-sm font-medium text-yellow-800\">Warnings</span>\n                </div>\n                <ul className=\"text-sm text-yellow-700 space-y-1\">\n                  {formState.validation.warnings.map((warning, index) => (\n                    <li key={index}>\u2022 {warning}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n\n            {/* Duplicates */}\n            {formState.validation.duplicates.length > 0 && (\n              <div className=\"p-3 bg-red-50 border border-red-200 rounded-md\">\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  <svg className=\"h-4 w-4 text-red-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                  </svg>\n                  <span className=\"text-sm font-medium text-red-800\">Existing Plants Found</span>\n                </div>\n                <div className=\"space-y-2\">\n                  {formState.validation.duplicates.map((duplicate) => (\n                    <div key={duplicate.id} className=\"text-sm text-red-700 bg-white p-2 rounded border\">\n                      <div className=\"font-medium\">{duplicate.commonName}</div>\n                      <div className=\"text-xs italic\">{duplicate.genus} {duplicate.species}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Form Actions */}\n        <div className=\"flex justify-end space-x-3 pt-4 border-t border-gray-200\">\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            disabled={isLoading}\n            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary-300 disabled:opacity-50\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            disabled={\n              isLoading || \n              formState.isValidating || \n              (formState.validation ? !formState.validation.isValid : false)\n            }\n            className=\"px-4 py-2 text-sm font-medium text-white bg-primary-400 border border-transparent rounded-md hover:bg-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-300 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {isLoading ? (\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full\"></div>\n                <span>Creating...</span>\n              </div>\n            ) : (\n              'Create Plant Type'\n            )}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}"],
      names: ["PlantTaxonomyForm", "onSubmit", "onCancel", "initialData", "isLoading", "className", "formState", "setFormState", "useState", "family", "genus", "species", "cultivar", "commonName", "careInstructions", "errors", "validation", "isValidating", "validateForm", "createPlantSchema", "parse", "undefined", "prev", "error", "zodError", "forEach", "err", "path", "length", "message", "validateTaxonomy", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "ok", "data", "json", "console", "handleInputChange", "field", "value", "handleSubmit", "e", "preventDefault", "plantData", "isVerified", "handleTaxonomyFieldChange", "setTimeout", "div", "h3", "p", "form", "label", "htmlFor", "input", "id", "type", "onChange", "target", "placeholder", "textarea", "rows", "span", "svg", "fill", "viewBox", "fillRule", "d", "clipRule", "ul", "map", "index", "li", "warnings", "warning", "duplicates", "duplicate", "button", "onClick", "disabled", "isValid"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3e6525934402c8a5053d36aec2bb122ec13323a6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29um3hrjwv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29um3hrjwv();
cov_29um3hrjwv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_29um3hrjwv().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_29um3hrjwv().f[0]++;
    cov_29um3hrjwv().s[2]++;
    return PlantTaxonomyForm;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_29um3hrjwv().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_29um3hrjwv().s[4]++, require("react"));
const _plantschemas =
/* istanbul ignore next */
(cov_29um3hrjwv().s[5]++, require("../../lib/validation/plant-schemas"));
function PlantTaxonomyForm({
  onSubmit,
  onCancel,
  initialData =
  /* istanbul ignore next */
  (cov_29um3hrjwv().b[0][0]++, {}),
  isLoading =
  /* istanbul ignore next */
  (cov_29um3hrjwv().b[1][0]++, false),
  className =
  /* istanbul ignore next */
  (cov_29um3hrjwv().b[2][0]++, '')
}) {
  /* istanbul ignore next */
  cov_29um3hrjwv().f[1]++;
  const [formState, setFormState] =
  /* istanbul ignore next */
  (cov_29um3hrjwv().s[6]++, (0, _react.useState)({
    family:
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[3][0]++, initialData.family) ||
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[3][1]++, ''),
    genus:
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[4][0]++, initialData.genus) ||
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[4][1]++, ''),
    species:
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[5][0]++, initialData.species) ||
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[5][1]++, ''),
    cultivar:
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[6][0]++, initialData.cultivar) ||
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[6][1]++, ''),
    commonName:
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[7][0]++, initialData.commonName) ||
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[7][1]++, ''),
    careInstructions:
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[8][0]++, initialData.careInstructions) ||
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[8][1]++, ''),
    errors: {},
    validation: null,
    isValidating: false
  }));
  // Validate form data
  /* istanbul ignore next */
  cov_29um3hrjwv().s[7]++;
  const validateForm = () => {
    /* istanbul ignore next */
    cov_29um3hrjwv().f[2]++;
    cov_29um3hrjwv().s[8]++;
    try {
      /* istanbul ignore next */
      cov_29um3hrjwv().s[9]++;
      _plantschemas.createPlantSchema.parse({
        family: formState.family,
        genus: formState.genus,
        species: formState.species,
        cultivar:
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[9][0]++, formState.cultivar) ||
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[9][1]++, undefined),
        commonName: formState.commonName,
        careInstructions:
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[10][0]++, formState.careInstructions) ||
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[10][1]++, undefined)
      });
      /* istanbul ignore next */
      cov_29um3hrjwv().s[10]++;
      setFormState(prev => {
        /* istanbul ignore next */
        cov_29um3hrjwv().f[3]++;
        cov_29um3hrjwv().s[11]++;
        return {
          ...prev,
          errors: {}
        };
      });
      /* istanbul ignore next */
      cov_29um3hrjwv().s[12]++;
      return true;
    } catch (error) {
      const errors =
      /* istanbul ignore next */
      (cov_29um3hrjwv().s[13]++, {});
      /* istanbul ignore next */
      cov_29um3hrjwv().s[14]++;
      if (
      /* istanbul ignore next */
      (cov_29um3hrjwv().b[12][0]++, error) &&
      /* istanbul ignore next */
      (cov_29um3hrjwv().b[12][1]++, typeof error === 'object') &&
      /* istanbul ignore next */
      (cov_29um3hrjwv().b[12][2]++, 'errors' in error)) {
        /* istanbul ignore next */
        cov_29um3hrjwv().b[11][0]++;
        const zodError =
        /* istanbul ignore next */
        (cov_29um3hrjwv().s[15]++, error);
        /* istanbul ignore next */
        cov_29um3hrjwv().s[16]++;
        zodError.errors.forEach(err => {
          /* istanbul ignore next */
          cov_29um3hrjwv().f[4]++;
          cov_29um3hrjwv().s[17]++;
          if (
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[14][0]++, err.path) &&
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[14][1]++, err.path.length > 0)) {
            /* istanbul ignore next */
            cov_29um3hrjwv().b[13][0]++;
            cov_29um3hrjwv().s[18]++;
            errors[err.path[0]] = err.message;
          } else
          /* istanbul ignore next */
          {
            cov_29um3hrjwv().b[13][1]++;
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_29um3hrjwv().b[11][1]++;
      }
      cov_29um3hrjwv().s[19]++;
      setFormState(prev => {
        /* istanbul ignore next */
        cov_29um3hrjwv().f[5]++;
        cov_29um3hrjwv().s[20]++;
        return {
          ...prev,
          errors
        };
      });
      /* istanbul ignore next */
      cov_29um3hrjwv().s[21]++;
      return false;
    }
  };
  // Validate taxonomy for duplicates
  /* istanbul ignore next */
  cov_29um3hrjwv().s[22]++;
  const validateTaxonomy = async () => {
    /* istanbul ignore next */
    cov_29um3hrjwv().f[6]++;
    cov_29um3hrjwv().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[16][0]++, !formState.family) ||
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[16][1]++, !formState.genus) ||
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[16][2]++, !formState.species) ||
    /* istanbul ignore next */
    (cov_29um3hrjwv().b[16][3]++, !formState.commonName)) {
      /* istanbul ignore next */
      cov_29um3hrjwv().b[15][0]++;
      cov_29um3hrjwv().s[24]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_29um3hrjwv().b[15][1]++;
    }
    cov_29um3hrjwv().s[25]++;
    setFormState(prev => {
      /* istanbul ignore next */
      cov_29um3hrjwv().f[7]++;
      cov_29um3hrjwv().s[26]++;
      return {
        ...prev,
        isValidating: true
      };
    });
    /* istanbul ignore next */
    cov_29um3hrjwv().s[27]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_29um3hrjwv().s[28]++, await fetch('/api/plants/validate', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          family: formState.family,
          genus: formState.genus,
          species: formState.species,
          cultivar:
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[17][0]++, formState.cultivar) ||
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[17][1]++, undefined),
          commonName: formState.commonName
        })
      }));
      /* istanbul ignore next */
      cov_29um3hrjwv().s[29]++;
      if (response.ok) {
        /* istanbul ignore next */
        cov_29um3hrjwv().b[18][0]++;
        const data =
        /* istanbul ignore next */
        (cov_29um3hrjwv().s[30]++, await response.json());
        /* istanbul ignore next */
        cov_29um3hrjwv().s[31]++;
        setFormState(prev => {
          /* istanbul ignore next */
          cov_29um3hrjwv().f[8]++;
          cov_29um3hrjwv().s[32]++;
          return {
            ...prev,
            validation: data.data,
            isValidating: false
          };
        });
      } else
      /* istanbul ignore next */
      {
        cov_29um3hrjwv().b[18][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_29um3hrjwv().s[33]++;
      console.error('Validation error:', error);
      /* istanbul ignore next */
      cov_29um3hrjwv().s[34]++;
      setFormState(prev => {
        /* istanbul ignore next */
        cov_29um3hrjwv().f[9]++;
        cov_29um3hrjwv().s[35]++;
        return {
          ...prev,
          isValidating: false
        };
      });
    }
  };
  // Handle input changes
  /* istanbul ignore next */
  cov_29um3hrjwv().s[36]++;
  const handleInputChange = (field, value) => {
    /* istanbul ignore next */
    cov_29um3hrjwv().f[10]++;
    cov_29um3hrjwv().s[37]++;
    setFormState(prev => {
      /* istanbul ignore next */
      cov_29um3hrjwv().f[11]++;
      cov_29um3hrjwv().s[38]++;
      return {
        ...prev,
        [field]: value,
        errors: {
          ...prev.errors,
          [field]: ''
        },
        validation: null
      };
    });
  };
  // Handle form submission
  /* istanbul ignore next */
  cov_29um3hrjwv().s[39]++;
  const handleSubmit = e => {
    /* istanbul ignore next */
    cov_29um3hrjwv().f[12]++;
    cov_29um3hrjwv().s[40]++;
    e.preventDefault();
    /* istanbul ignore next */
    cov_29um3hrjwv().s[41]++;
    if (!validateForm()) {
      /* istanbul ignore next */
      cov_29um3hrjwv().b[19][0]++;
      cov_29um3hrjwv().s[42]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_29um3hrjwv().b[19][1]++;
    }
    const plantData =
    /* istanbul ignore next */
    (cov_29um3hrjwv().s[43]++, {
      family: formState.family,
      genus: formState.genus,
      species: formState.species,
      cultivar:
      /* istanbul ignore next */
      (cov_29um3hrjwv().b[20][0]++, formState.cultivar) ||
      /* istanbul ignore next */
      (cov_29um3hrjwv().b[20][1]++, undefined),
      commonName: formState.commonName,
      careInstructions:
      /* istanbul ignore next */
      (cov_29um3hrjwv().b[21][0]++, formState.careInstructions) ||
      /* istanbul ignore next */
      (cov_29um3hrjwv().b[21][1]++, undefined),
      isVerified: false
    });
    /* istanbul ignore next */
    cov_29um3hrjwv().s[44]++;
    onSubmit(plantData);
  };
  // Auto-validate taxonomy when key fields change
  /* istanbul ignore next */
  cov_29um3hrjwv().s[45]++;
  const handleTaxonomyFieldChange = (field, value) => {
    /* istanbul ignore next */
    cov_29um3hrjwv().f[13]++;
    cov_29um3hrjwv().s[46]++;
    handleInputChange(field, value);
    // Debounce validation
    /* istanbul ignore next */
    cov_29um3hrjwv().s[47]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_29um3hrjwv().f[14]++;
      cov_29um3hrjwv().s[48]++;
      validateTaxonomy();
    }, 500);
  };
  /* istanbul ignore next */
  cov_29um3hrjwv().s[49]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: `bg-white rounded-lg shadow-lg p-6 ${className}`,
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold text-gray-900 mb-2",
        children: "Add New Plant Type"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-sm text-gray-600",
        children: "Create a new plant taxonomy entry. All fields are required."
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("form", {
      onSubmit: handleSubmit,
      className: "space-y-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
          htmlFor: "commonName",
          className: "block text-sm font-medium text-gray-700 mb-1",
          children: "Common Name *"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
          id: "commonName",
          type: "text",
          value: formState.commonName,
          onChange: e => {
            /* istanbul ignore next */
            cov_29um3hrjwv().f[15]++;
            cov_29um3hrjwv().s[50]++;
            return handleTaxonomyFieldChange('commonName', e.target.value);
          },
          placeholder: "e.g., Monstera Deliciosa, Snake Plant",
          className: `
              w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-300
              ${formState.errors.commonName ?
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[22][0]++, 'border-red-300 focus:ring-red-300') :
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[22][1]++, 'border-gray-300')}
            `
        }),
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[23][0]++, formState.errors.commonName) &&
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[23][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "mt-1 text-sm text-red-600",
          children: formState.errors.commonName
        }))]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid grid-cols-1 md:grid-cols-3 gap-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            htmlFor: "family",
            className: "block text-sm font-medium text-gray-700 mb-1",
            children: "Family *"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
            id: "family",
            type: "text",
            value: formState.family,
            onChange: e => {
              /* istanbul ignore next */
              cov_29um3hrjwv().f[16]++;
              cov_29um3hrjwv().s[51]++;
              return handleTaxonomyFieldChange('family', e.target.value);
            },
            placeholder: "e.g., Araceae",
            className: `
                w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-300
                ${formState.errors.family ?
            /* istanbul ignore next */
            (cov_29um3hrjwv().b[24][0]++, 'border-red-300 focus:ring-red-300') :
            /* istanbul ignore next */
            (cov_29um3hrjwv().b[24][1]++, 'border-gray-300')}
              `
          }),
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[25][0]++, formState.errors.family) &&
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[25][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "mt-1 text-sm text-red-600",
            children: formState.errors.family
          }))]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            htmlFor: "genus",
            className: "block text-sm font-medium text-gray-700 mb-1",
            children: "Genus *"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
            id: "genus",
            type: "text",
            value: formState.genus,
            onChange: e => {
              /* istanbul ignore next */
              cov_29um3hrjwv().f[17]++;
              cov_29um3hrjwv().s[52]++;
              return handleTaxonomyFieldChange('genus', e.target.value);
            },
            placeholder: "e.g., Monstera",
            className: `
                w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-300
                ${formState.errors.genus ?
            /* istanbul ignore next */
            (cov_29um3hrjwv().b[26][0]++, 'border-red-300 focus:ring-red-300') :
            /* istanbul ignore next */
            (cov_29um3hrjwv().b[26][1]++, 'border-gray-300')}
              `
          }),
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[27][0]++, formState.errors.genus) &&
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[27][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "mt-1 text-sm text-red-600",
            children: formState.errors.genus
          }))]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            htmlFor: "species",
            className: "block text-sm font-medium text-gray-700 mb-1",
            children: "Species *"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
            id: "species",
            type: "text",
            value: formState.species,
            onChange: e => {
              /* istanbul ignore next */
              cov_29um3hrjwv().f[18]++;
              cov_29um3hrjwv().s[53]++;
              return handleTaxonomyFieldChange('species', e.target.value);
            },
            placeholder: "e.g., deliciosa",
            className: `
                w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-300
                ${formState.errors.species ?
            /* istanbul ignore next */
            (cov_29um3hrjwv().b[28][0]++, 'border-red-300 focus:ring-red-300') :
            /* istanbul ignore next */
            (cov_29um3hrjwv().b[28][1]++, 'border-gray-300')}
              `
          }),
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[29][0]++, formState.errors.species) &&
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[29][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "mt-1 text-sm text-red-600",
            children: formState.errors.species
          }))]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
          htmlFor: "cultivar",
          className: "block text-sm font-medium text-gray-700 mb-1",
          children: "Cultivar (Optional)"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
          id: "cultivar",
          type: "text",
          value: formState.cultivar,
          onChange: e => {
            /* istanbul ignore next */
            cov_29um3hrjwv().f[19]++;
            cov_29um3hrjwv().s[54]++;
            return handleTaxonomyFieldChange('cultivar', e.target.value);
          },
          placeholder: "e.g., 'Thai Constellation', 'Variegata'",
          className: `
              w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-300
              ${formState.errors.cultivar ?
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[30][0]++, 'border-red-300 focus:ring-red-300') :
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[30][1]++, 'border-gray-300')}
            `
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "mt-1 text-xs text-gray-500",
          children: "Specific cultivar or variety name (if applicable)"
        }),
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[31][0]++, formState.errors.cultivar) &&
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[31][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "mt-1 text-sm text-red-600",
          children: formState.errors.cultivar
        }))]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
          htmlFor: "careInstructions",
          className: "block text-sm font-medium text-gray-700 mb-1",
          children: "Care Instructions (Optional)"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("textarea", {
          id: "careInstructions",
          value: formState.careInstructions,
          onChange: e => {
            /* istanbul ignore next */
            cov_29um3hrjwv().f[20]++;
            cov_29um3hrjwv().s[55]++;
            return handleInputChange('careInstructions', e.target.value);
          },
          placeholder: "Basic care instructions for this plant type...",
          rows: 3,
          className: `
              w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-300
              ${formState.errors.careInstructions ?
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[32][0]++, 'border-red-300 focus:ring-red-300') :
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[32][1]++, 'border-gray-300')}
            `
        }),
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[33][0]++, formState.errors.careInstructions) &&
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[33][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "mt-1 text-sm text-red-600",
          children: formState.errors.careInstructions
        }))]
      }),
      /* istanbul ignore next */
      (cov_29um3hrjwv().b[34][0]++, formState.isValidating) &&
      /* istanbul ignore next */
      (cov_29um3hrjwv().b[34][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center space-x-2 text-sm text-gray-600",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "animate-spin h-4 w-4 border-2 border-primary-300 border-t-transparent rounded-full"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          children: "Checking for duplicates..."
        })]
      })),
      /* istanbul ignore next */
      (cov_29um3hrjwv().b[35][0]++, formState.validation) &&
      /* istanbul ignore next */
      (cov_29um3hrjwv().b[35][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-2",
        children: [
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[36][0]++, formState.validation.errors.length > 0) &&
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[36][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "p-3 bg-red-50 border border-red-200 rounded-md",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center space-x-2 mb-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
              className: "h-4 w-4 text-red-500",
              fill: "currentColor",
              viewBox: "0 0 20 20",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                fillRule: "evenodd",
                d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z",
                clipRule: "evenodd"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-sm font-medium text-red-800",
              children: "Validation Errors"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("ul", {
            className: "text-sm text-red-700 space-y-1",
            children: formState.validation.errors.map((error, index) => {
              /* istanbul ignore next */
              cov_29um3hrjwv().f[21]++;
              cov_29um3hrjwv().s[56]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
                children: ["• ", error]
              }, index);
            })
          })]
        })),
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[37][0]++, formState.validation.warnings.length > 0) &&
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[37][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "p-3 bg-yellow-50 border border-yellow-200 rounded-md",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center space-x-2 mb-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
              className: "h-4 w-4 text-yellow-500",
              fill: "currentColor",
              viewBox: "0 0 20 20",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                fillRule: "evenodd",
                d: "M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z",
                clipRule: "evenodd"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-sm font-medium text-yellow-800",
              children: "Warnings"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("ul", {
            className: "text-sm text-yellow-700 space-y-1",
            children: formState.validation.warnings.map((warning, index) => {
              /* istanbul ignore next */
              cov_29um3hrjwv().f[22]++;
              cov_29um3hrjwv().s[57]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
                children: ["• ", warning]
              }, index);
            })
          })]
        })),
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[38][0]++, formState.validation.duplicates.length > 0) &&
        /* istanbul ignore next */
        (cov_29um3hrjwv().b[38][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "p-3 bg-red-50 border border-red-200 rounded-md",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center space-x-2 mb-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
              className: "h-4 w-4 text-red-500",
              fill: "currentColor",
              viewBox: "0 0 20 20",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                fillRule: "evenodd",
                d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z",
                clipRule: "evenodd"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-sm font-medium text-red-800",
              children: "Existing Plants Found"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "space-y-2",
            children: formState.validation.duplicates.map(duplicate => {
              /* istanbul ignore next */
              cov_29um3hrjwv().f[23]++;
              cov_29um3hrjwv().s[58]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-sm text-red-700 bg-white p-2 rounded border",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "font-medium",
                  children: duplicate.commonName
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "text-xs italic",
                  children: [duplicate.genus, " ", duplicate.species]
                })]
              }, duplicate.id);
            })
          })]
        }))]
      })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex justify-end space-x-3 pt-4 border-t border-gray-200",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          type: "button",
          onClick: onCancel,
          disabled: isLoading,
          className: "px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary-300 disabled:opacity-50",
          children: "Cancel"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          type: "submit",
          disabled:
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[39][0]++, isLoading) ||
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[39][1]++, formState.isValidating) ||
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[39][2]++, formState.validation ?
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[40][0]++, !formState.validation.isValid) :
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[40][1]++, false)),
          className: "px-4 py-2 text-sm font-medium text-white bg-primary-400 border border-transparent rounded-md hover:bg-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-300 disabled:opacity-50 disabled:cursor-not-allowed",
          children: isLoading ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_29um3hrjwv().b[41][0]++, (0, _jsxruntime.jsxs)("div", {
            className: "flex items-center space-x-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              children: "Creating..."
            })]
          })) :
          /* istanbul ignore next */
          (cov_29um3hrjwv().b[41][1]++, 'Create Plant Type')
        })]
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
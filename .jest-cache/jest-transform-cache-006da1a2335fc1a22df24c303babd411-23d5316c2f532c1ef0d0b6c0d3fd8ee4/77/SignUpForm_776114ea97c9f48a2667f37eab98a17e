0c40ab838f1f2d820b94af85e4853b9b
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return SignUpForm;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _navigation = require("next/navigation");
const _validation = require("../../lib/auth/validation");
function SignUpForm() {
    const router = (0, _navigation.useRouter)();
    const [formData, setFormData] = (0, _react.useState)({
        email: '',
        password: '',
        name: ''
    });
    const [errors, setErrors] = (0, _react.useState)({});
    const [isLoading, setIsLoading] = (0, _react.useState)(false);
    const [generalError, setGeneralError] = (0, _react.useState)('');
    const handleSubmit = async (e)=>{
        e.preventDefault();
        setIsLoading(true);
        setErrors({});
        setGeneralError('');
        try {
            // Validate form data
            const validation = _validation.signUpSchema.safeParse(formData);
            if (!validation.success) {
                const fieldErrors = {};
                validation.error.issues.forEach((issue)=>{
                    const field = issue.path.join('.');
                    fieldErrors[field] = issue.message;
                });
                setErrors(fieldErrors);
                return;
            }
            // Submit to API
            const response = await fetch('/api/auth/signup', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(validation.data)
            });
            const result = await response.json();
            if (!response.ok) {
                if (result.errors) {
                    setErrors(result.errors);
                } else {
                    setGeneralError(result.error || 'Sign up failed');
                }
                return;
            }
            // Success - redirect to dashboard
            router.push('/dashboard');
            router.refresh();
        } catch (error) {
            console.error('Sign up error:', error);
            setGeneralError('An unexpected error occurred. Please try again.');
        } finally{
            setIsLoading(false);
        }
    };
    const handleChange = (e)=>{
        const { name, value } = e.target;
        setFormData((prev)=>({
                ...prev,
                [name]: value
            }));
        // Clear error when user starts typing
        if (errors[name]) {
            setErrors((prev)=>({
                    ...prev,
                    [name]: ''
                }));
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        className: `${isLoading ? 'form--loading' : ''}`,
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("form", {
            onSubmit: handleSubmit,
            className: "space-y-6",
            autoComplete: "on",
            noValidate: true,
            children: [
                generalError && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "form-validation-summary",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "form-validation-summary-title",
                            children: "Account Creation Failed"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("ul", {
                            className: "form-validation-summary-list",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                className: "form-validation-summary-item",
                                children: generalError
                            })
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "form-group",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                            htmlFor: "signup-name",
                            className: "form-label form-label--required",
                            children: "Full Name"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                            id: "signup-name",
                            name: "name",
                            type: "text",
                            autoComplete: "name",
                            required: true,
                            value: formData.name,
                            onChange: handleChange,
                            className: `form-input ${errors.name ? 'form-input--error' : ''}`,
                            placeholder: "Enter your full name",
                            "aria-describedby": errors.name ? 'signup-name-error' : undefined
                        }),
                        errors.name && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            id: "signup-name-error",
                            className: "form-error",
                            role: "alert",
                            children: errors.name
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "form-group",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                            htmlFor: "signup-email",
                            className: "form-label form-label--required",
                            children: "Email Address"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                            id: "signup-email",
                            name: "email",
                            type: "email",
                            autoComplete: "email",
                            required: true,
                            value: formData.email,
                            onChange: handleChange,
                            className: `form-input ${errors.email ? 'form-input--error' : ''}`,
                            placeholder: "Enter your email address",
                            "aria-describedby": errors.email ? 'signup-email-error' : undefined
                        }),
                        errors.email && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            id: "signup-email-error",
                            className: "form-error",
                            role: "alert",
                            children: errors.email
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "form-group",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                            htmlFor: "signup-password",
                            className: "form-label form-label--required",
                            children: "Password"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                            id: "signup-password",
                            name: "password",
                            type: "password",
                            autoComplete: "new-password",
                            "data-new-password": "true",
                            required: true,
                            value: formData.password,
                            onChange: handleChange,
                            className: `form-input ${errors.password ? 'form-input--error' : ''}`,
                            placeholder: "Create a strong password",
                            "aria-describedby": `${errors.password ? 'signup-password-error ' : ''}signup-password-help`
                        }),
                        errors.password && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            id: "signup-password-error",
                            className: "form-error",
                            role: "alert",
                            children: errors.password
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            id: "signup-password-help",
                            className: "form-help",
                            children: "Password must be at least 8 characters with uppercase, lowercase, and number"
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "form-actions form-actions--full",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                            type: "submit",
                            disabled: isLoading,
                            className: `btn btn--primary btn--full ${isLoading ? 'btn--loading' : ''}`,
                            "aria-describedby": isLoading ? 'signup-loading' : undefined,
                            children: isLoading ? 'Creating account...' : 'Create Account'
                        }),
                        isLoading && /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            id: "signup-loading",
                            className: "sr-only",
                            children: "Please wait while we create your account"
                        })
                    ]
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,
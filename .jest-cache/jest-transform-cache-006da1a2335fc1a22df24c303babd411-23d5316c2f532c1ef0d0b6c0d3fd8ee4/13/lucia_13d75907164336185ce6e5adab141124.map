{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/lib/auth/lucia.ts"],"sourcesContent":["import 'server-only';\n\nimport { Lucia } from 'lucia';\nimport { PostgresJsAdapter } from '@lucia-auth/adapter-postgresql';\nimport postgres from 'postgres';\n\n// Create postgres client for Lucia adapter\nconst connectionString = process.env.DATABASE_URL || 'postgresql://postgres:postgres@localhost:5433/fancy_planties';\nconst client = postgres(connectionString);\n\n// Initialize PostgreSQL adapter for Lucia\nconst adapter = new PostgresJsAdapter(client, {\n  session: 'sessions',\n  user: 'users',\n});\n\n// Initialize Lucia with configuration\nexport const lucia = new Lucia(adapter, {\n  sessionCookie: {\n    expires: false,\n    attributes: {\n      secure: false, // Allow non-secure cookies for local development\n      sameSite: 'lax',\n    },\n  },\n  getUserAttributes: (attributes) => {\n    return {\n      id: attributes.id,\n      email: attributes.email,\n      name: attributes.name,\n    };\n  },\n});\n\n// Extend Lucia types\ndeclare module 'lucia' {\n  interface Register {\n    Lucia: typeof lucia;\n    DatabaseUserAttributes: DatabaseUserAttributes;\n  }\n}\n\ninterface DatabaseUserAttributes {\n  id: number;\n  email: string;\n  name: string;\n}"],"names":["lucia","connectionString","process","env","DATABASE_URL","client","postgres","adapter","PostgresJsAdapter","session","user","Lucia","sessionCookie","expires","attributes","secure","sameSite","getUserAttributes","id","email","name"],"mappings":";;;;+BAiBaA;;;eAAAA;;;QAjBN;uBAEe;mCACY;iEACb;;;;;;AAErB,2CAA2C;AAC3C,MAAMC,mBAAmBC,QAAQC,GAAG,CAACC,YAAY,IAAI;AACrD,MAAMC,SAASC,IAAAA,iBAAQ,EAACL;AAExB,0CAA0C;AAC1C,MAAMM,UAAU,IAAIC,oCAAiB,CAACH,QAAQ;IAC5CI,SAAS;IACTC,MAAM;AACR;AAGO,MAAMV,QAAQ,IAAIW,YAAK,CAACJ,SAAS;IACtCK,eAAe;QACbC,SAAS;QACTC,YAAY;YACVC,QAAQ;YACRC,UAAU;QACZ;IACF;IACAC,mBAAmB,CAACH;QAClB,OAAO;YACLI,IAAIJ,WAAWI,EAAE;YACjBC,OAAOL,WAAWK,KAAK;YACvBC,MAAMN,WAAWM,IAAI;QACvB;IACF;AACF"}
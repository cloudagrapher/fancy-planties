{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/plants/PlantTaxonomySelector.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { debounce } from 'lodash-es';\nimport type { PlantSuggestion } from '@/lib/validation/plant-schemas';\nimport type { QuickSelectPlants } from '@/lib/types/plant-types';\n\ninterface PlantTaxonomySelectorProps {\n  onSelect: (plant: PlantSuggestion | null) => void;\n  onAddNew: (query: string) => void;\n  selectedPlant?: PlantSuggestion | null;\n  placeholder?: string;\n  disabled?: boolean;\n  className?: string;\n  showQuickSelect?: boolean;\n  autoFocus?: boolean;\n}\n\ninterface SearchState {\n  query: string;\n  results: PlantSuggestion[];\n  isLoading: boolean;\n  showDropdown: boolean;\n  selectedIndex: number;\n  hasSearched: boolean;\n}\n\nexport default function PlantTaxonomySelector({\n  onSelect,\n  onAddNew,\n  selectedPlant,\n  placeholder = 'Search for a plant type...',\n  disabled = false,\n  className = '',\n  showQuickSelect = true,\n  autoFocus = false,\n}: PlantTaxonomySelectorProps) {\n  const [searchState, setSearchState] = useState<SearchState>({\n    query: selectedPlant?.commonName || '',\n    results: [],\n    isLoading: false,\n    showDropdown: false,\n    selectedIndex: -1,\n    hasSearched: false,\n  });\n\n  const [quickSelect, setQuickSelect] = useState<QuickSelectPlants>({\n    recent: [],\n    popular: [],\n    verified: [],\n  });\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const abortControllerRef = useRef<AbortController | null>(null);\n\n  // Update search query when selectedPlant changes (for editing)\n  useEffect(() => {\n    if (selectedPlant) {\n      setSearchState(prev => ({\n        ...prev,\n        query: selectedPlant.commonName || '',\n      }));\n    }\n  }, [selectedPlant]);\n\n  // Search function (will be debounced)\n  const performSearch = useCallback(async (query: string) => {\n    if (query.length < 2) {\n      setSearchState(prev => ({\n        ...prev,\n        results: [],\n        isLoading: false,\n        hasSearched: false,\n      }));\n      return;\n    }\n\n    // Cancel previous request\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n    }\n\n    abortControllerRef.current = new AbortController();\n\n    try {\n      setSearchState(prev => ({ ...prev, isLoading: true }));\n\n      const response = await fetch(\n        `/api/plants/search?q=${encodeURIComponent(query)}&limit=10`,\n        {\n          signal: abortControllerRef.current.signal,\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Search failed: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      \n      // Handle different response formats\n      let plants: PlantSuggestion[] = [];\n      if (data.success && data.data?.plants) {\n        plants = data.data.plants;\n      } else if (data.data?.plants) {\n        plants = data.data.plants;\n      } else if (data.plants) {\n        plants = data.plants;\n      } else if (Array.isArray(data)) {\n        plants = data;\n      }\n      \n      setSearchState(prev => ({\n        ...prev,\n        results: plants,\n        isLoading: false,\n        hasSearched: true,\n        selectedIndex: -1,\n      }));\n    } catch (error) {\n      if (error instanceof Error && error.name !== 'AbortError') {\n        console.error('Search error:', error);\n        setSearchState(prev => ({\n          ...prev,\n          results: [],\n          isLoading: false,\n          hasSearched: true,\n        }));\n      }\n    }\n  }, []);\n\n  // Debounced search function\n  const debouncedSearch = useCallback(\n    debounce(performSearch, 300),\n    [performSearch]\n  );\n\n  // Load quick select data on mount\n  useEffect(() => {\n    if (showQuickSelect) {\n      fetch('/api/plants/suggestions?type=quick')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(data => {\n          if (data.success && data.data?.quickSelect) {\n            setQuickSelect(data.data.quickSelect);\n          } else if (data.quickSelect) {\n            setQuickSelect(data.quickSelect);\n          }\n        })\n        .catch(error => console.error('Failed to load quick select:', error));\n    }\n  }, [showQuickSelect]);\n\n  // Handle input changes\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const query = e.target.value;\n    setSearchState(prev => ({\n      ...prev,\n      query,\n      showDropdown: true,\n    }));\n\n    if (query !== selectedPlant?.commonName) {\n      onSelect(null);\n    }\n\n    // Only search if query is long enough\n    if (query.length >= 2) {\n      debouncedSearch(query);\n    } else {\n      // Clear results for short queries\n      setSearchState(prev => ({\n        ...prev,\n        results: [],\n        isLoading: false,\n        hasSearched: false,\n      }));\n    }\n  };\n\n  // Handle input focus\n  const handleInputFocus = () => {\n    setSearchState(prev => ({\n      ...prev,\n      showDropdown: true,\n    }));\n  };\n\n  // Handle input blur (with delay to allow clicks)\n  const handleInputBlur = () => {\n    setTimeout(() => {\n      setSearchState(prev => ({\n        ...prev,\n        showDropdown: false,\n        selectedIndex: -1,\n      }));\n    }, 150);\n  };\n\n  // Handle keyboard navigation\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    const { results, selectedIndex, showDropdown } = searchState;\n    \n    if (!showDropdown) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setSearchState(prev => ({\n          ...prev,\n          selectedIndex: Math.min(selectedIndex + 1, results.length),\n        }));\n        break;\n      \n      case 'ArrowUp':\n        e.preventDefault();\n        setSearchState(prev => ({\n          ...prev,\n          selectedIndex: Math.max(selectedIndex - 1, -1),\n        }));\n        break;\n      \n      case 'Enter':\n        e.preventDefault();\n        if (selectedIndex >= 0 && selectedIndex < results.length) {\n          handleSelectPlant(results[selectedIndex]);\n        } else if (selectedIndex === results.length) {\n          handleAddNew();\n        }\n        break;\n      \n      case 'Escape':\n        setSearchState(prev => ({\n          ...prev,\n          showDropdown: false,\n          selectedIndex: -1,\n        }));\n        inputRef.current?.blur();\n        break;\n    }\n  };\n\n  // Handle plant selection\n  const handleSelectPlant = (plant: PlantSuggestion) => {\n    setSearchState(prev => ({\n      ...prev,\n      query: plant.commonName,\n      showDropdown: false,\n      selectedIndex: -1,\n    }));\n    onSelect(plant);\n  };\n\n  // Handle add new plant\n  const handleAddNew = () => {\n    setSearchState(prev => ({\n      ...prev,\n      showDropdown: false,\n    }));\n    onAddNew(searchState.query);\n  };\n\n  // Get display items for dropdown\n  const getDropdownItems = () => {\n    const items: Array<{\n      type: 'plant' | 'add-new' | 'section-header';\n      data?: PlantSuggestion;\n      label?: string;\n      plants?: PlantSuggestion[];\n    }> = [];\n\n    // Show search results if we have a query\n    if (searchState.query.length >= 2) {\n      if (searchState.isLoading) {\n        return [{ type: 'section-header' as const, label: 'Searching...' }];\n      }\n\n      if (searchState.results.length > 0) {\n        searchState.results.forEach(plant => {\n          items.push({ type: 'plant', data: plant });\n        });\n      } else if (searchState.hasSearched) {\n        items.push({ type: 'section-header', label: 'No plants found' });\n      }\n\n      // Always show \"Add new\" option when searching\n      if (searchState.query.trim()) {\n        items.push({ type: 'add-new', label: `Add \"${searchState.query}\" as new plant` });\n      }\n    } else if (showQuickSelect && !searchState.query) {\n      // Show quick select options when no query\n      if (quickSelect.recent.length > 0) {\n        items.push({ type: 'section-header', label: 'Recently Used' });\n        quickSelect.recent.slice(0, 3).forEach(plant => {\n          items.push({ type: 'plant', data: plant });\n        });\n      }\n\n      if (quickSelect.popular.length > 0) {\n        items.push({ type: 'section-header', label: 'Popular Plants' });\n        quickSelect.popular.slice(0, 5).forEach(plant => {\n          items.push({ type: 'plant', data: plant });\n        });\n      }\n\n      if (quickSelect.verified.length > 0) {\n        items.push({ type: 'section-header', label: 'Verified Plants' });\n        quickSelect.verified.slice(0, 5).forEach(plant => {\n          items.push({ type: 'plant', data: plant });\n        });\n      }\n    }\n\n    return items;\n  };\n\n  const dropdownItems = getDropdownItems();\n\n  return (\n    <div className={`relative ${className}`}>\n      {/* Input Field */}\n      <div className=\"relative\">\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={searchState.query}\n          onChange={handleInputChange}\n          onFocus={handleInputFocus}\n          onBlur={handleInputBlur}\n          onKeyDown={handleKeyDown}\n          placeholder={placeholder}\n          disabled={disabled || searchState.isLoading}\n          autoFocus={autoFocus}\n          role=\"combobox\"\n          aria-expanded={searchState.showDropdown}\n          aria-haspopup=\"listbox\"\n          aria-autocomplete=\"list\"\n          aria-describedby={selectedPlant ? 'selected-plant-indicator' : undefined}\n          className={`\n            w-full px-4 py-3 text-base text-gray-900 placeholder-gray-500 border rounded-lg\n            focus:outline-none focus:ring-2 focus:ring-primary-300 focus:border-primary-300\n            disabled:bg-gray-50 disabled:text-gray-500 disabled:cursor-not-allowed\n            ${selectedPlant ? 'border-primary-300 bg-primary-50' : 'border-gray-300 bg-white'}\n            ${searchState.isLoading ? 'pr-10 bg-gray-50' : ''}\n          `}\n        />\n        \n        {/* Loading Spinner */}\n        {searchState.isLoading && (\n          <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n            <div \n              className=\"animate-spin h-5 w-5 border-2 border-primary-300 border-t-transparent rounded-full\"\n              role=\"status\"\n              aria-label=\"Searching for plants\"\n            ></div>\n            <span className=\"sr-only\">Searching for plants...</span>\n          </div>\n        )}\n\n        {/* Selected Plant Indicator */}\n        {selectedPlant && !searchState.isLoading && (\n          <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n            <div \n              id=\"selected-plant-indicator\"\n              className=\"h-5 w-5 bg-primary-400 rounded-full flex items-center justify-center\"\n              title=\"Selected plant\"\n              role=\"status\"\n              aria-label=\"Plant selected\"\n            >\n              <svg className=\"h-3 w-3 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Dropdown */}\n      {searchState.showDropdown && dropdownItems.length > 0 && (\n        <div\n          ref={dropdownRef}\n          className=\"absolute z-50 w-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg max-h-80 overflow-y-auto\"\n          role=\"listbox\"\n          aria-label=\"Plant search results\"\n        >\n          {dropdownItems.map((item, index) => {\n            if (item.type === 'section-header') {\n              return (\n                <div\n                  key={`header-${index}`}\n                  className=\"px-4 py-2 text-sm font-medium text-gray-500 bg-gray-50 border-b border-gray-100\"\n                  role=\"status\"\n                  aria-live=\"polite\"\n                >\n                  {item.label}\n                </div>\n              );\n            }\n\n            if (item.type === 'add-new') {\n              const isSelected = searchState.selectedIndex === index;\n              return (\n                <button\n                  key={`add-new-${index}`}\n                  onClick={handleAddNew}\n                  role=\"option\"\n                  aria-selected={isSelected}\n                  className={`\n                    w-full px-4 py-3 text-left hover:bg-secondary-50 border-b border-gray-100 last:border-b-0\n                    flex items-center space-x-3\n                    ${isSelected ? 'bg-secondary-100' : ''}\n                  `}\n                >\n                  <div className=\"flex-shrink-0 w-8 h-8 bg-secondary-200 rounded-full flex items-center justify-center\">\n                    <svg className=\"w-4 h-4 text-secondary-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <div>\n                    <div className=\"text-sm font-medium text-secondary-700\">\n                      {item.label}\n                    </div>\n                    <div className=\"text-xs text-gray-500\">\n                      Create a new plant type\n                    </div>\n                  </div>\n                </button>\n              );\n            }\n\n            if (item.type === 'plant' && item.data) {\n              const plant = item.data;\n              const isSelected = searchState.selectedIndex === index;\n              \n              return (\n                <button\n                  key={`plant-${index}`}\n                  onClick={() => handleSelectPlant(plant)}\n                  role=\"option\"\n                  aria-selected={isSelected}\n                  className={`\n                    w-full px-4 py-3 text-left hover:bg-primary-50 border-b border-gray-100 last:border-b-0\n                    ${isSelected ? 'bg-primary-100' : ''}\n                  `}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-sm font-medium text-gray-900 truncate\">\n                          {plant.commonName}\n                        </span>\n                        {plant.isVerified && (\n                          <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-primary-100 text-primary-800\">\n                            Verified\n                          </span>\n                        )}\n                      </div>\n                      <div className=\"text-xs text-gray-500 italic truncate\">\n                        {plant.genus} {plant.species}\n                      </div>\n                      <div className=\"text-xs text-gray-400 truncate\">\n                        Family: {plant.family}\n                      </div>\n                    </div>\n                    \n                    {/* Match indicators */}\n                    {plant.matchedFields && plant.matchedFields.length > 0 && (\n                      <div className=\"flex-shrink-0 ml-2\">\n                        <div className=\"flex space-x-1\">\n                          {plant.matchedFields.includes('commonName') && (\n                            <span className=\"inline-block w-2 h-2 bg-primary-400 rounded-full\" title=\"Common name match\" />\n                          )}\n                          {plant.matchedFields.includes('genus') && (\n                            <span className=\"inline-block w-2 h-2 bg-tertiary-400 rounded-full\" title=\"Genus match\" />\n                          )}\n                          {plant.matchedFields.includes('species') && (\n                            <span className=\"inline-block w-2 h-2 bg-secondary-400 rounded-full\" title=\"Species match\" />\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </button>\n              );\n            }\n\n            return null;\n          })}\n        </div>\n      )}\n    </div>\n  );\n}"],"names":["PlantTaxonomySelector","onSelect","onAddNew","selectedPlant","placeholder","disabled","className","showQuickSelect","autoFocus","searchState","setSearchState","useState","query","commonName","results","isLoading","showDropdown","selectedIndex","hasSearched","quickSelect","setQuickSelect","recent","popular","verified","inputRef","useRef","dropdownRef","abortControllerRef","useEffect","prev","performSearch","useCallback","length","current","abort","AbortController","response","fetch","encodeURIComponent","signal","ok","Error","status","statusText","data","json","plants","success","Array","isArray","error","name","console","debouncedSearch","debounce","then","catch","handleInputChange","e","target","value","handleInputFocus","handleInputBlur","setTimeout","handleKeyDown","key","preventDefault","Math","min","max","handleSelectPlant","handleAddNew","blur","plant","getDropdownItems","items","type","label","forEach","push","trim","slice","dropdownItems","div","input","ref","onChange","onFocus","onBlur","onKeyDown","role","aria-expanded","aria-haspopup","aria-autocomplete","aria-describedby","undefined","aria-label","span","id","title","svg","fill","viewBox","path","fillRule","d","clipRule","map","item","index","aria-live","isSelected","button","onClick","aria-selected","isVerified","genus","species","family","matchedFields","includes"],"mappings":"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"}
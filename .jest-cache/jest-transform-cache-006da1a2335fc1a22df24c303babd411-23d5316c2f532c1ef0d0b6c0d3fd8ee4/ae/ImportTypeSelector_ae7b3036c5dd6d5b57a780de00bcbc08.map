{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/import/ImportTypeSelector.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Database, Leaf, Sprout, Info } from 'lucide-react';\n\nexport type ImportType = 'plant_taxonomy' | 'plant_instances' | 'propagations';\n\ninterface ImportTypeOption {\n  id: ImportType;\n  title: string;\n  description: string;\n  icon: React.ComponentType<{ className?: string }>;\n  requiredColumns: string[];\n  exampleData: string;\n}\n\nconst importTypes: ImportTypeOption[] = [\n  {\n    id: 'plant_taxonomy',\n    title: 'Plant Taxonomy',\n    description: 'Import plant species information with separate cultivar field support',\n    icon: Database,\n    requiredColumns: ['Family', 'Genus', 'Species', 'Common Name', 'Cultivar (Optional)'],\n    exampleData: 'Araceae,Monstera,deliciosa,Thai Constellation,Monstera Deliciosa',\n  },\n  {\n    id: 'plant_instances',\n    title: 'Plant Collection',\n    description: 'Import your plant instances with enhanced taxonomy and care schedules',\n    icon: Leaf,\n    requiredColumns: ['Common Name', 'Location', 'Fertilizer Schedule', 'Cultivar (Optional)'],\n    exampleData: 'Monstera Deliciosa,Living Room,every 4 weeks,Thai Constellation',\n  },\n  {\n    id: 'propagations',\n    title: 'Propagations',\n    description: 'Import propagations with external source tracking (gifts, trades, purchases)',\n    icon: Sprout,\n    requiredColumns: ['Common Name', 'Location', 'Date Started', 'Source (Optional)', 'Source Details (Optional)'],\n    exampleData: 'Monstera Deliciosa,Propagation Station,2024-01-15,gift,Gift from Sarah',\n  },\n];\n\ninterface ImportTypeSelectorProps {\n  selectedType: ImportType | null;\n  onTypeSelect: (type: ImportType) => void;\n  className?: string;\n}\n\nexport function ImportTypeSelector({\n  selectedType,\n  onTypeSelect,\n  className = '',\n}: ImportTypeSelectorProps) {\n  const [showDetails, setShowDetails] = useState<ImportType | null>(null);\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      <div>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n          Select Import Type\n        </h3>\n        <p className=\"text-sm text-gray-600\">\n          Choose what type of data you want to import from your CSV file.\n        </p>\n      </div>\n\n      <div className=\"grid gap-4\">\n        {importTypes.map((type) => {\n          const Icon = type.icon;\n          const isSelected = selectedType === type.id;\n          const isExpanded = showDetails === type.id;\n\n          return (\n            <div\n              key={type.id}\n              className={`\n                border rounded-xl transition-all duration-200 cursor-pointer\n                ${isSelected \n                  ? 'border-primary-300 bg-primary-50 shadow-sm' \n                  : 'border-gray-200 bg-white hover:border-gray-300 hover:shadow-sm'\n                }\n              `}\n            >\n              <div\n                onClick={() => onTypeSelect(type.id)}\n                className=\"p-4\"\n              >\n                <div className=\"flex items-start space-x-4\">\n                  <div className={`\n                    p-3 rounded-lg flex-shrink-0\n                    ${isSelected ? 'bg-primary-200' : 'bg-gray-100'}\n                  `}>\n                    <Icon className={`\n                      w-6 h-6 \n                      ${isSelected ? 'text-primary-600' : 'text-gray-600'}\n                    `} />\n                  </div>\n                  \n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center justify-between\">\n                      <h4 className=\"font-semibold text-gray-900\">\n                        {type.title}\n                      </h4>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setShowDetails(isExpanded ? null : type.id);\n                        }}\n                        className=\"p-1 hover:bg-gray-100 rounded-full transition-colors\"\n                      >\n                        <Info className=\"w-4 h-4 text-gray-400\" />\n                      </button>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mt-1\">\n                      {type.description}\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              {isExpanded && (\n                <div className=\"border-t border-gray-200 p-4 bg-gray-50\">\n                  <div className=\"space-y-3\">\n                    <div>\n                      <h5 className=\"text-sm font-medium text-gray-900 mb-2\">\n                        Required Columns:\n                      </h5>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {type.requiredColumns.map((column) => (\n                          <span\n                            key={column}\n                            className=\"px-2 py-1 bg-white border border-gray-200 rounded text-xs font-mono text-gray-700\"\n                          >\n                            {column}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                    \n                    <div>\n                      <h5 className=\"text-sm font-medium text-gray-900 mb-2\">\n                        Example CSV Row:\n                      </h5>\n                      <div className=\"p-2 bg-white border border-gray-200 rounded\">\n                        <code className=\"text-xs text-gray-700\">\n                          {type.exampleData}\n                        </code>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}"],"names":["ImportTypeSelector","importTypes","id","title","description","icon","Database","requiredColumns","exampleData","Leaf","Sprout","selectedType","onTypeSelect","className","showDetails","setShowDetails","useState","div","h3","p","map","type","Icon","isSelected","isExpanded","onClick","h4","button","e","stopPropagation","Info","h5","column","span","code"],"mappings":"AAAA;;;;;+BAiDgBA;;;eAAAA;;;;uBA/CS;6BACoB;AAa7C,MAAMC,cAAkC;IACtC;QACEC,IAAI;QACJC,OAAO;QACPC,aAAa;QACbC,MAAMC,qBAAQ;QACdC,iBAAiB;YAAC;YAAU;YAAS;YAAW;YAAe;SAAsB;QACrFC,aAAa;IACf;IACA;QACEN,IAAI;QACJC,OAAO;QACPC,aAAa;QACbC,MAAMI,iBAAI;QACVF,iBAAiB;YAAC;YAAe;YAAY;YAAuB;SAAsB;QAC1FC,aAAa;IACf;IACA;QACEN,IAAI;QACJC,OAAO;QACPC,aAAa;QACbC,MAAMK,mBAAM;QACZH,iBAAiB;YAAC;YAAe;YAAY;YAAgB;YAAqB;SAA4B;QAC9GC,aAAa;IACf;CACD;AAQM,SAASR,mBAAmB,EACjCW,YAAY,EACZC,YAAY,EACZC,YAAY,EAAE,EACU;IACxB,MAAM,CAACC,aAAaC,eAAe,GAAGC,IAAAA,eAAQ,EAAoB;IAElE,qBACE,sBAACC;QAAIJ,WAAW,CAAC,UAAU,EAAEA,WAAW;;0BACtC,sBAACI;;kCACC,qBAACC;wBAAGL,WAAU;kCAA2C;;kCAGzD,qBAACM;wBAAEN,WAAU;kCAAwB;;;;0BAKvC,qBAACI;gBAAIJ,WAAU;0BACZZ,YAAYmB,GAAG,CAAC,CAACC;oBAChB,MAAMC,OAAOD,KAAKhB,IAAI;oBACtB,MAAMkB,aAAaZ,iBAAiBU,KAAKnB,EAAE;oBAC3C,MAAMsB,aAAaV,gBAAgBO,KAAKnB,EAAE;oBAE1C,qBACE,sBAACe;wBAECJ,WAAW,CAAC;;gBAEV,EAAEU,aACE,+CACA,iEACH;cACH,CAAC;;0CAED,qBAACN;gCACCQ,SAAS,IAAMb,aAAaS,KAAKnB,EAAE;gCACnCW,WAAU;0CAEV,cAAA,sBAACI;oCAAIJ,WAAU;;sDACb,qBAACI;4CAAIJ,WAAW,CAAC;;oBAEf,EAAEU,aAAa,mBAAmB,cAAc;kBAClD,CAAC;sDACC,cAAA,qBAACD;gDAAKT,WAAW,CAAC;;sBAEhB,EAAEU,aAAa,qBAAqB,gBAAgB;oBACtD,CAAC;;;sDAGH,sBAACN;4CAAIJ,WAAU;;8DACb,sBAACI;oDAAIJ,WAAU;;sEACb,qBAACa;4DAAGb,WAAU;sEACXQ,KAAKlB,KAAK;;sEAEb,qBAACwB;4DACCF,SAAS,CAACG;gEACRA,EAAEC,eAAe;gEACjBd,eAAeS,aAAa,OAAOH,KAAKnB,EAAE;4DAC5C;4DACAW,WAAU;sEAEV,cAAA,qBAACiB,iBAAI;gEAACjB,WAAU;;;;;8DAGpB,qBAACM;oDAAEN,WAAU;8DACVQ,KAAKjB,WAAW;;;;;;;4BAMxBoB,4BACC,qBAACP;gCAAIJ,WAAU;0CACb,cAAA,sBAACI;oCAAIJ,WAAU;;sDACb,sBAACI;;8DACC,qBAACc;oDAAGlB,WAAU;8DAAyC;;8DAGvD,qBAACI;oDAAIJ,WAAU;8DACZQ,KAAKd,eAAe,CAACa,GAAG,CAAC,CAACY,uBACzB,qBAACC;4DAECpB,WAAU;sEAETmB;2DAHIA;;;;sDASb,sBAACf;;8DACC,qBAACc;oDAAGlB,WAAU;8DAAyC;;8DAGvD,qBAACI;oDAAIJ,WAAU;8DACb,cAAA,qBAACqB;wDAAKrB,WAAU;kEACbQ,KAAKb,WAAW;;;;;;;;;uBAvExBa,KAAKnB,EAAE;gBAgFlB;;;;AAIR"}
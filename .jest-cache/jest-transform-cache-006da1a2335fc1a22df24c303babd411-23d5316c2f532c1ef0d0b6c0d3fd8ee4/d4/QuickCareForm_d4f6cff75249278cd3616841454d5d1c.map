{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/care/QuickCareForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport type { CareType } from '@/lib/types/care-types';\nimport { careHelpers } from '@/lib/types/care-types';\nimport { useOffline } from '@/hooks/useOffline';\nimport { useServiceWorker } from '@/lib/utils/service-worker';\n\ninterface QuickCareFormProps {\n  plantInstanceId?: number;\n  onSuccess?: () => void;\n  onCancel?: () => void;\n  defaultCareType?: CareType;\n}\n\nexport default function QuickCareForm({ \n  plantInstanceId, \n  onSuccess, \n  onCancel,\n  defaultCareType = 'fertilizer'\n}: QuickCareFormProps) {\n  const { isOnline, addPendingCareEntry } = useOffline();\n  const { registerBackgroundSync } = useServiceWorker();\n  \n  const [formData, setFormData] = useState({\n    plantInstanceId: plantInstanceId || 0,\n    careType: defaultCareType,\n    careDate: new Date().toISOString().split('T')[0], // Today's date\n    notes: '',\n    fertilizerType: '',\n    potSize: '',\n    soilType: '',\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const careTypes: { value: CareType; label: string; icon: string }[] = [\n    { value: 'fertilizer', label: 'Fertilizer', icon: '🌱' },\n    { value: 'water', label: 'Water', icon: '💧' },\n    { value: 'repot', label: 'Repot', icon: '🪴' },\n    { value: 'prune', label: 'Prune', icon: '✂️' },\n    { value: 'inspect', label: 'Inspect', icon: '🔍' },\n    { value: 'other', label: 'Other', icon: '📝' },\n  ];\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setError(null);\n\n    try {\n      if (isOnline) {\n        // Online: Submit directly to API\n        const response = await fetch('/api/care/log', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            ...formData,\n            careDate: new Date(formData.careDate),\n            plantInstanceId: Number(formData.plantInstanceId),\n          }),\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || 'Failed to log care');\n        }\n      } else {\n        // Offline: Add to pending queue\n        const pendingId = addPendingCareEntry({\n          plantInstanceId: Number(formData.plantInstanceId),\n          careType: formData.careType as CareType,\n          notes: formData.notes || undefined,\n        });\n\n        // Register for background sync\n        registerBackgroundSync();\n\n        console.log('Care entry queued for sync:', pendingId);\n      }\n\n      // Reset form\n      setFormData({\n        plantInstanceId: plantInstanceId || 0,\n        careType: defaultCareType,\n        careDate: new Date().toISOString().split('T')[0],\n        notes: '',\n        fertilizerType: '',\n        potSize: '',\n        soilType: '',\n      });\n\n      onSuccess?.();\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to log care');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-3\">\n          <p className=\"text-red-800 text-sm\">{error}</p>\n        </div>\n      )}\n\n      {/* Offline Mode Indicator */}\n      {!isOnline && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n          <div className=\"flex items-center gap-2\">\n            <svg className=\"w-4 h-4 text-yellow-600\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n            </svg>\n            <p className=\"text-yellow-800 text-sm\">\n              <span className=\"font-medium\">Offline Mode:</span> Care will be logged when you're back online.\n            </p>\n          </div>\n        </div>\n      )}\n\n      {/* Care Type Selection */}\n      <div>\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Care Type\n        </label>\n        <div className=\"grid grid-cols-3 gap-2\">\n          {careTypes.map((type) => (\n            <button\n              key={type.value}\n              type=\"button\"\n              onClick={() => handleInputChange('careType', type.value)}\n              disabled={isSubmitting}\n              className={`btn ${formData.careType === type.value ? 'btn--primary' : 'btn--outline'} flex-col h-auto py-3 ${isSubmitting ? 'opacity-50 cursor-not-allowed' : ''}`}\n            >\n              <span className=\"text-lg mb-1\">{type.icon}</span>\n              <span className=\"text-xs font-medium\">{type.label}</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Care Date */}\n      <div>\n        <label htmlFor=\"careDate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Care Date\n        </label>\n        <input\n          type=\"date\"\n          id=\"careDate\"\n          value={formData.careDate}\n          onChange={(e) => handleInputChange('careDate', e.target.value)}\n          max={new Date().toISOString().split('T')[0]} // Can't be in the future\n          disabled={isSubmitting}\n          className={`w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n          required\n        />\n      </div>\n\n      {/* Conditional Fields */}\n      {formData.careType === 'fertilizer' && (\n        <div>\n          <label htmlFor=\"fertilizerType\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Fertilizer Type (Optional)\n          </label>\n          <input\n            type=\"text\"\n            id=\"fertilizerType\"\n            value={formData.fertilizerType}\n            onChange={(e) => handleInputChange('fertilizerType', e.target.value)}\n            placeholder=\"e.g., Liquid fertilizer, Slow-release pellets\"\n            disabled={isSubmitting}\n            className={`w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n          />\n        </div>\n      )}\n\n      {formData.careType === 'repot' && (\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div>\n            <label htmlFor=\"potSize\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Pot Size (Optional)\n            </label>\n            <input\n              type=\"text\"\n              id=\"potSize\"\n              value={formData.potSize}\n              onChange={(e) => handleInputChange('potSize', e.target.value)}\n              placeholder=\"e.g., 6 inch, 15cm\"\n              disabled={isSubmitting}\n              className={`w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"soilType\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Soil Type (Optional)\n            </label>\n            <input\n              type=\"text\"\n              id=\"soilType\"\n              value={formData.soilType}\n              onChange={(e) => handleInputChange('soilType', e.target.value)}\n              placeholder=\"e.g., Potting mix, Cactus soil\"\n              disabled={isSubmitting}\n              className={`w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Notes */}\n      <div>\n        <label htmlFor=\"notes\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Notes (Optional)\n        </label>\n        <textarea\n          id=\"notes\"\n          value={formData.notes}\n          onChange={(e) => handleInputChange('notes', e.target.value)}\n          placeholder=\"Any additional observations or notes...\"\n          rows={3}\n          disabled={isSubmitting}\n          className={`w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 resize-none ${isSubmitting ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n        />\n      </div>\n\n      {/* Plant Instance Selection (if not provided) */}\n      {!plantInstanceId && (\n        <div>\n          <label htmlFor=\"plantInstanceId\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Plant\n          </label>\n          <select\n            id=\"plantInstanceId\"\n            value={formData.plantInstanceId}\n            onChange={(e) => handleInputChange('plantInstanceId', e.target.value)}\n            disabled={isSubmitting}\n            className={`w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 ${isSubmitting ? 'bg-gray-50 cursor-not-allowed' : ''}`}\n            required\n          >\n            <option value=\"\">Select a plant...</option>\n            {/* Plant options will be populated dynamically */}\n          </select>\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Plant selection will be implemented when plant instances are available\n          </p>\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"form-actions\">\n        {onCancel && (\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            disabled={isSubmitting}\n            className={`btn btn--outline btn--full ${isSubmitting ? 'opacity-50 cursor-not-allowed' : ''}`}\n          >\n            Cancel\n          </button>\n        )}\n        <button\n          type=\"submit\"\n          disabled={isSubmitting || !formData.plantInstanceId}\n          className={`btn btn--primary btn--full ${isSubmitting ? 'btn--loading' : ''}`}\n        >\n          {isSubmitting ? 'Logging...' : isOnline ? 'Log Care' : 'Queue for Sync'}\n        </button>\n      </div>\n\n      {/* Care Type Description */}\n      <div className=\"bg-gray-50 rounded-lg p-3\">\n        <p className=\"text-sm text-gray-600\">\n          <span className=\"font-medium\">\n            {careTypes.find(t => t.value === formData.careType)?.icon} {careTypes.find(t => t.value === formData.careType)?.label}:\n          </span>\n          {' '}\n          {careHelpers.getCareTypeDisplay(formData.careType).description}\n        </p>\n      </div>\n    </form>\n  );\n}"],"names":["QuickCareForm","plantInstanceId","onSuccess","onCancel","defaultCareType","isOnline","addPendingCareEntry","useOffline","registerBackgroundSync","useServiceWorker","formData","setFormData","useState","careType","careDate","Date","toISOString","split","notes","fertilizerType","potSize","soilType","isSubmitting","setIsSubmitting","error","setError","careTypes","value","label","icon","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","Number","ok","errorData","json","Error","pendingId","undefined","console","log","err","message","handleInputChange","field","prev","form","onSubmit","className","div","p","svg","fill","viewBox","path","fillRule","d","clipRule","span","map","type","button","onClick","disabled","htmlFor","input","id","onChange","target","max","required","placeholder","textarea","rows","select","option","find","t","careHelpers","getCareTypeDisplay","description"],"mappings":"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"}
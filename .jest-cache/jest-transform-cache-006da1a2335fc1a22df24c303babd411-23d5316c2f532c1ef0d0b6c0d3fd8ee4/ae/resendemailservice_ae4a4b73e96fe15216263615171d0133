4e751b41f8bba56d5e86345fe354e55c
"use strict";

/* istanbul ignore next */
function cov_2f3vt1axr1() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/lib/services/resend-email-service.ts";
  var hash = "0c0ca59f15ee446845160dea7083bf9e8cd831f0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/lib/services/resend-email-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 34
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "6": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 23
        }
      },
      "7": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "8": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 21,
          column: 48
        }
      },
      "9": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 56
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "12": {
        start: {
          line: 29,
          column: 36
        },
        end: {
          line: 37,
          column: 14
        }
      },
      "13": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "14": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 58
        }
      },
      "15": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 43,
          column: 17
        }
      },
      "16": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 104
        }
      },
      "17": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 46,
          column: 17
        }
      },
      "18": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 45,
          column: 104
        }
      },
      "19": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 109
        }
      },
      "20": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 75
        }
      },
      "21": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 24
        }
      },
      "22": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "23": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 28
        }
      },
      "24": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 65
        }
      },
      "25": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 149
        }
      },
      "26": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 135,
          column: 6
        }
      },
      "27": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "28": {
        start: {
          line: 156,
          column: 19
        },
        end: {
          line: 160,
          column: 5
        }
      },
      "29": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "30": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 75
        }
      },
      "31": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 164,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 30
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 50
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 46
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 137
      },
      "7": {
        name: "createEmailService",
        decl: {
          start: {
            line: 155,
            column: 9
          },
          end: {
            line: 155,
            column: 27
          }
        },
        loc: {
          start: {
            line: 155,
            column: 30
          },
          end: {
            line: 165,
            column: 1
          }
        },
        line: 155
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 43,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 43,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 20
          },
          end: {
            line: 41,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 20
          },
          end: {
            line: 41,
            column: 52
          }
        }, {
          start: {
            line: 41,
            column: 56
          },
          end: {
            line: 41,
            column: 88
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 46,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 46,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 54
          }
        }, {
          start: {
            line: 44,
            column: 58
          },
          end: {
            line: 44,
            column: 90
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 56,
            column: 72
          },
          end: {
            line: 56,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 97
          },
          end: {
            line: 56,
            column: 110
          }
        }, {
          start: {
            line: 56,
            column: 113
          },
          end: {
            line: 56,
            column: 128
          }
        }],
        line: 56
      },
      "7": {
        loc: {
          start: {
            line: 158,
            column: 19
          },
          end: {
            line: 158,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 19
          },
          end: {
            line: 158,
            column: 41
          }
        }, {
          start: {
            line: 158,
            column: 45
          },
          end: {
            line: 158,
            column: 89
          }
        }],
        line: 158
      },
      "8": {
        loc: {
          start: {
            line: 159,
            column: 18
          },
          end: {
            line: 159,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 18
          },
          end: {
            line: 159,
            column: 39
          }
        }, {
          start: {
            line: 159,
            column: 43
          },
          end: {
            line: 159,
            column: 59
          }
        }],
        line: 159
      },
      "9": {
        loc: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/lib/services/resend-email-service.ts"],
      sourcesContent: ["import 'server-only';\nimport { Resend } from 'resend';\nimport { EmailService, EmailConfig, EmailServiceError } from './email-service';\n\nexport class ResendEmailService implements EmailService {\n  private resend: Resend;\n  private config: EmailConfig;\n\n  constructor(config: EmailConfig) {\n    this.resend = new Resend(config.apiKey);\n    this.config = config;\n  }\n\n  async sendVerificationEmail(email: string, code: string, name: string): Promise<boolean> {\n    try {\n      const { data, error } = await this.resend.emails.send({\n        from: `${this.config.fromName} <${this.config.fromEmail}>`,\n        to: [email],\n        subject: 'Verify your email address',\n        html: this.generateVerificationEmailTemplate(code, name),\n        text: this.generateVerificationEmailText(code, name),\n      });\n\n      if (error) {\n        console.error('Resend API error:', error);\n        \n        // Map Resend errors to our error types\n        if (error.message?.includes('quota') || error.message?.includes('limit')) {\n          throw new EmailServiceError('Email quota exceeded', 'QUOTA_EXCEEDED');\n        }\n        \n        if (error.message?.includes('invalid') && error.message?.includes('email')) {\n          throw new EmailServiceError('Invalid email address', 'INVALID_EMAIL');\n        }\n        \n        throw new EmailServiceError(`Resend API error: ${error.message}`, 'API_ERROR');\n      }\n\n      console.log('Verification email sent successfully:', data?.id);\n      return true;\n      \n    } catch (error) {\n      if (error instanceof EmailServiceError) {\n        throw error;\n      }\n      \n      console.error('Network error sending email:', error);\n      throw new EmailServiceError(\n        `Network error: ${error instanceof Error ? error.message : 'Unknown error'}`,\n        'NETWORK_ERROR'\n      );\n    }\n  }\n\n  private generateVerificationEmailTemplate(code: string, name: string): string {\n    return `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Verify Your Email</title>\n        <style>\n          body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 600px;\n            margin: 0 auto;\n            padding: 20px;\n          }\n          .header {\n            text-align: center;\n            margin-bottom: 30px;\n          }\n          .logo {\n            font-size: 24px;\n            font-weight: bold;\n            color: #22c55e;\n            margin-bottom: 10px;\n          }\n          .verification-code {\n            background: #f8f9fa;\n            border: 2px solid #e9ecef;\n            border-radius: 8px;\n            padding: 20px;\n            text-align: center;\n            margin: 30px 0;\n          }\n          .code {\n            font-size: 32px;\n            font-weight: bold;\n            letter-spacing: 4px;\n            color: #22c55e;\n            font-family: 'Courier New', monospace;\n          }\n          .footer {\n            margin-top: 30px;\n            padding-top: 20px;\n            border-top: 1px solid #e9ecef;\n            font-size: 14px;\n            color: #6c757d;\n          }\n        </style>\n      </head>\n      <body>\n        <div class=\"header\">\n          <div class=\"logo\">\uD83C\uDF31 Fancy Planties</div>\n          <h1>Verify Your Email Address</h1>\n        </div>\n        \n        <p>Hi ${name},</p>\n        \n        <p>Welcome to Fancy Planties! To complete your account setup, please verify your email address by entering the verification code below:</p>\n        \n        <div class=\"verification-code\">\n          <div class=\"code\">${code}</div>\n          <p style=\"margin: 10px 0 0 0; font-size: 14px; color: #6c757d;\">\n            This code expires in 10 minutes\n          </p>\n        </div>\n        \n        <p>If you didn't create an account with Fancy Planties, you can safely ignore this email.</p>\n        \n        <div class=\"footer\">\n          <p>This is an automated message from Fancy Planties. Please do not reply to this email.</p>\n          <p>Need help? Contact us at support@fancy-planties.cloudagrapher.com</p>\n        </div>\n      </body>\n      </html>\n    `;\n  }\n\n  private generateVerificationEmailText(code: string, name: string): string {\n    return `\nHi ${name},\n\nWelcome to Fancy Planties! To complete your account setup, please verify your email address by entering the verification code below:\n\nVerification Code: ${code}\n\nThis code expires in 10 minutes.\n\nIf you didn't create an account with Fancy Planties, you can safely ignore this email.\n\n---\nThis is an automated message from Fancy Planties. Please do not reply to this email.\nNeed help? Contact us at support@fancy-planties.cloudagrapher.com\n    `.trim();\n  }\n}\n\n// Factory function to create email service instance\nexport function createEmailService(): EmailService {\n  const config: EmailConfig = {\n    apiKey: process.env.RESEND_API_KEY!,\n    fromEmail: process.env.FROM_EMAIL || 'send.mail.fancy-planties.cloudagrapher.com',\n    fromName: process.env.FROM_NAME || 'Fancy Planties',\n  };\n\n  if (!config.apiKey) {\n    throw new Error('RESEND_API_KEY environment variable is required');\n  }\n\n  return new ResendEmailService(config);\n}"],
      names: ["ResendEmailService", "createEmailService", "config", "resend", "Resend", "apiKey", "sendVerificationEmail", "email", "code", "name", "data", "error", "emails", "send", "from", "fromName", "fromEmail", "to", "subject", "html", "generateVerificationEmailTemplate", "text", "generateVerificationEmailText", "console", "message", "includes", "EmailServiceError", "log", "id", "Error", "trim", "process", "env", "RESEND_API_KEY", "FROM_EMAIL", "FROM_NAME"],
      mappings: ";;;;;;;;;;;QAIaA;eAAAA;;QAqJGC;eAAAA;;;QAzJT;wBACgB;8BACsC;AAEtD,MAAMD;IAIX,YAAYE,MAAmB,CAAE;QAC/B,IAAI,CAACC,MAAM,GAAG,IAAIC,cAAM,CAACF,OAAOG,MAAM;QACtC,IAAI,CAACH,MAAM,GAAGA;IAChB;IAEA,MAAMI,sBAAsBC,KAAa,EAAEC,IAAY,EAAEC,IAAY,EAAoB;QACvF,IAAI;YACF,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAE,GAAG,MAAM,IAAI,CAACR,MAAM,CAACS,MAAM,CAACC,IAAI,CAAC;gBACpDC,MAAM,GAAG,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,EAAE,EAAE,IAAI,CAACb,MAAM,CAACc,SAAS,CAAC,CAAC,CAAC;gBAC1DC,IAAI;oBAACV;iBAAM;gBACXW,SAAS;gBACTC,MAAM,IAAI,CAACC,iCAAiC,CAACZ,MAAMC;gBACnDY,MAAM,IAAI,CAACC,6BAA6B,CAACd,MAAMC;YACjD;YAEA,IAAIE,OAAO;gBACTY,QAAQZ,KAAK,CAAC,qBAAqBA;gBAEnC,uCAAuC;gBACvC,IAAIA,MAAMa,OAAO,EAAEC,SAAS,YAAYd,MAAMa,OAAO,EAAEC,SAAS,UAAU;oBACxE,MAAM,IAAIC,+BAAiB,CAAC,wBAAwB;gBACtD;gBAEA,IAAIf,MAAMa,OAAO,EAAEC,SAAS,cAAcd,MAAMa,OAAO,EAAEC,SAAS,UAAU;oBAC1E,MAAM,IAAIC,+BAAiB,CAAC,yBAAyB;gBACvD;gBAEA,MAAM,IAAIA,+BAAiB,CAAC,CAAC,kBAAkB,EAAEf,MAAMa,OAAO,EAAE,EAAE;YACpE;YAEAD,QAAQI,GAAG,CAAC,yCAAyCjB,MAAMkB;YAC3D,OAAO;QAET,EAAE,OAAOjB,OAAO;YACd,IAAIA,iBAAiBe,+BAAiB,EAAE;gBACtC,MAAMf;YACR;YAEAY,QAAQZ,KAAK,CAAC,gCAAgCA;YAC9C,MAAM,IAAIe,+BAAiB,CACzB,CAAC,eAAe,EAAEf,iBAAiBkB,QAAQlB,MAAMa,OAAO,GAAG,iBAAiB,EAC5E;QAEJ;IACF;IAEQJ,kCAAkCZ,IAAY,EAAEC,IAAY,EAAU;QAC5E,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cAwDE,EAAEA,KAAK;;;;;4BAKO,EAAED,KAAK;;;;;;;;;;;;;;IAc/B,CAAC;IACH;IAEQc,8BAA8Bd,IAAY,EAAEC,IAAY,EAAU;QACxE,OAAO,CAAC;GACT,EAAEA,KAAK;;;;mBAIS,EAAED,KAAK;;;;;;;;;IAStB,CAAC,CAACsB,IAAI;IACR;AACF;AAGO,SAAS7B;IACd,MAAMC,SAAsB;QAC1BG,QAAQ0B,QAAQC,GAAG,CAACC,cAAc;QAClCjB,WAAWe,QAAQC,GAAG,CAACE,UAAU,IAAI;QACrCnB,UAAUgB,QAAQC,GAAG,CAACG,SAAS,IAAI;IACrC;IAEA,IAAI,CAACjC,OAAOG,MAAM,EAAE;QAClB,MAAM,IAAIwB,MAAM;IAClB;IAEA,OAAO,IAAI7B,mBAAmBE;AAChC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0c0ca59f15ee446845160dea7083bf9e8cd831f0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2f3vt1axr1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2f3vt1axr1();
cov_2f3vt1axr1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2f3vt1axr1().f[0]++;
  cov_2f3vt1axr1().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2f3vt1axr1().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2f3vt1axr1().s[3]++;
_export(exports, {
  get ResendEmailService() {
    /* istanbul ignore next */
    cov_2f3vt1axr1().f[1]++;
    cov_2f3vt1axr1().s[4]++;
    return ResendEmailService;
  },
  get createEmailService() {
    /* istanbul ignore next */
    cov_2f3vt1axr1().f[2]++;
    cov_2f3vt1axr1().s[5]++;
    return createEmailService;
  }
});
/* istanbul ignore next */
cov_2f3vt1axr1().s[6]++;
require("server-only");
const _resend =
/* istanbul ignore next */
(cov_2f3vt1axr1().s[7]++, require("resend"));
const _emailservice =
/* istanbul ignore next */
(cov_2f3vt1axr1().s[8]++, require("./email-service"));
class ResendEmailService {
  constructor(config) {
    /* istanbul ignore next */
    cov_2f3vt1axr1().f[3]++;
    cov_2f3vt1axr1().s[9]++;
    this.resend = new _resend.Resend(config.apiKey);
    /* istanbul ignore next */
    cov_2f3vt1axr1().s[10]++;
    this.config = config;
  }
  async sendVerificationEmail(email, code, name) {
    /* istanbul ignore next */
    cov_2f3vt1axr1().f[4]++;
    cov_2f3vt1axr1().s[11]++;
    try {
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_2f3vt1axr1().s[12]++, await this.resend.emails.send({
        from: `${this.config.fromName} <${this.config.fromEmail}>`,
        to: [email],
        subject: 'Verify your email address',
        html: this.generateVerificationEmailTemplate(code, name),
        text: this.generateVerificationEmailText(code, name)
      }));
      /* istanbul ignore next */
      cov_2f3vt1axr1().s[13]++;
      if (error) {
        /* istanbul ignore next */
        cov_2f3vt1axr1().b[0][0]++;
        cov_2f3vt1axr1().s[14]++;
        console.error('Resend API error:', error);
        // Map Resend errors to our error types
        /* istanbul ignore next */
        cov_2f3vt1axr1().s[15]++;
        if (
        /* istanbul ignore next */
        (cov_2f3vt1axr1().b[2][0]++, error.message?.includes('quota')) ||
        /* istanbul ignore next */
        (cov_2f3vt1axr1().b[2][1]++, error.message?.includes('limit'))) {
          /* istanbul ignore next */
          cov_2f3vt1axr1().b[1][0]++;
          cov_2f3vt1axr1().s[16]++;
          throw new _emailservice.EmailServiceError('Email quota exceeded', 'QUOTA_EXCEEDED');
        } else
        /* istanbul ignore next */
        {
          cov_2f3vt1axr1().b[1][1]++;
        }
        cov_2f3vt1axr1().s[17]++;
        if (
        /* istanbul ignore next */
        (cov_2f3vt1axr1().b[4][0]++, error.message?.includes('invalid')) &&
        /* istanbul ignore next */
        (cov_2f3vt1axr1().b[4][1]++, error.message?.includes('email'))) {
          /* istanbul ignore next */
          cov_2f3vt1axr1().b[3][0]++;
          cov_2f3vt1axr1().s[18]++;
          throw new _emailservice.EmailServiceError('Invalid email address', 'INVALID_EMAIL');
        } else
        /* istanbul ignore next */
        {
          cov_2f3vt1axr1().b[3][1]++;
        }
        cov_2f3vt1axr1().s[19]++;
        throw new _emailservice.EmailServiceError(`Resend API error: ${error.message}`, 'API_ERROR');
      } else
      /* istanbul ignore next */
      {
        cov_2f3vt1axr1().b[0][1]++;
      }
      cov_2f3vt1axr1().s[20]++;
      console.log('Verification email sent successfully:', data?.id);
      /* istanbul ignore next */
      cov_2f3vt1axr1().s[21]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2f3vt1axr1().s[22]++;
      if (error instanceof _emailservice.EmailServiceError) {
        /* istanbul ignore next */
        cov_2f3vt1axr1().b[5][0]++;
        cov_2f3vt1axr1().s[23]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_2f3vt1axr1().b[5][1]++;
      }
      cov_2f3vt1axr1().s[24]++;
      console.error('Network error sending email:', error);
      /* istanbul ignore next */
      cov_2f3vt1axr1().s[25]++;
      throw new _emailservice.EmailServiceError(`Network error: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_2f3vt1axr1().b[6][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2f3vt1axr1().b[6][1]++, 'Unknown error')}`, 'NETWORK_ERROR');
    }
  }
  generateVerificationEmailTemplate(code, name) {
    /* istanbul ignore next */
    cov_2f3vt1axr1().f[5]++;
    cov_2f3vt1axr1().s[26]++;
    return `
      <!DOCTYPE html>
      <html lang="en">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Verify Your Email</title>
        <style>
          body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
          }
          .header {
            text-align: center;
            margin-bottom: 30px;
          }
          .logo {
            font-size: 24px;
            font-weight: bold;
            color: #22c55e;
            margin-bottom: 10px;
          }
          .verification-code {
            background: #f8f9fa;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            margin: 30px 0;
          }
          .code {
            font-size: 32px;
            font-weight: bold;
            letter-spacing: 4px;
            color: #22c55e;
            font-family: 'Courier New', monospace;
          }
          .footer {
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #e9ecef;
            font-size: 14px;
            color: #6c757d;
          }
        </style>
      </head>
      <body>
        <div class="header">
          <div class="logo">🌱 Fancy Planties</div>
          <h1>Verify Your Email Address</h1>
        </div>
        
        <p>Hi ${name},</p>
        
        <p>Welcome to Fancy Planties! To complete your account setup, please verify your email address by entering the verification code below:</p>
        
        <div class="verification-code">
          <div class="code">${code}</div>
          <p style="margin: 10px 0 0 0; font-size: 14px; color: #6c757d;">
            This code expires in 10 minutes
          </p>
        </div>
        
        <p>If you didn't create an account with Fancy Planties, you can safely ignore this email.</p>
        
        <div class="footer">
          <p>This is an automated message from Fancy Planties. Please do not reply to this email.</p>
          <p>Need help? Contact us at support@fancy-planties.cloudagrapher.com</p>
        </div>
      </body>
      </html>
    `;
  }
  generateVerificationEmailText(code, name) {
    /* istanbul ignore next */
    cov_2f3vt1axr1().f[6]++;
    cov_2f3vt1axr1().s[27]++;
    return `
Hi ${name},

Welcome to Fancy Planties! To complete your account setup, please verify your email address by entering the verification code below:

Verification Code: ${code}

This code expires in 10 minutes.

If you didn't create an account with Fancy Planties, you can safely ignore this email.

---
This is an automated message from Fancy Planties. Please do not reply to this email.
Need help? Contact us at support@fancy-planties.cloudagrapher.com
    `.trim();
  }
}
function createEmailService() {
  /* istanbul ignore next */
  cov_2f3vt1axr1().f[7]++;
  const config =
  /* istanbul ignore next */
  (cov_2f3vt1axr1().s[28]++, {
    apiKey: process.env.RESEND_API_KEY,
    fromEmail:
    /* istanbul ignore next */
    (cov_2f3vt1axr1().b[7][0]++, process.env.FROM_EMAIL) ||
    /* istanbul ignore next */
    (cov_2f3vt1axr1().b[7][1]++, 'send.mail.fancy-planties.cloudagrapher.com'),
    fromName:
    /* istanbul ignore next */
    (cov_2f3vt1axr1().b[8][0]++, process.env.FROM_NAME) ||
    /* istanbul ignore next */
    (cov_2f3vt1axr1().b[8][1]++, 'Fancy Planties')
  });
  /* istanbul ignore next */
  cov_2f3vt1axr1().s[29]++;
  if (!config.apiKey) {
    /* istanbul ignore next */
    cov_2f3vt1axr1().b[9][0]++;
    cov_2f3vt1axr1().s[30]++;
    throw new Error('RESEND_API_KEY environment variable is required');
  } else
  /* istanbul ignore next */
  {
    cov_2f3vt1axr1().b[9][1]++;
  }
  cov_2f3vt1axr1().s[31]++;
  return new ResendEmailService(config);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
{"version":3,"names":["cov_2euv63g6rs","actualCoverage","s","POST","csvImportService","_csvimportservice","CSVImportService","request","f","user","_server1","validateRequest","b","_server","NextResponse","json","error","status","body","requestSchema","_zod","z","object","content","string","min","importType","enum","parse","validation","validateCSVContent","console","ZodError","details","issues"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/app/api/import/csv/validate/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { validateRequest } from '@/lib/auth/server';\nimport { CSVImportService, type ImportType } from '@/lib/services/csv-import-service';\nimport { z } from 'zod';\n\nconst csvImportService = new CSVImportService();\n\n// POST /api/import/csv/validate - Validate CSV content\nexport async function POST(request: NextRequest) {\n  try {\n    const { user } = await validateRequest();\n    if (!user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const body = await request.json();\n    \n    // Validate request body\n    const requestSchema = z.object({\n      content: z.string().min(1, 'CSV content is required'),\n      importType: z.enum(['plant_taxonomy', 'plant_instances', 'propagations']),\n    });\n\n    const { content, importType } = requestSchema.parse(body);\n\n    // Validate CSV content\n    const validation = await csvImportService.validateCSVContent(\n      content,\n      importType as ImportType\n    );\n\n    return NextResponse.json(validation);\n\n  } catch (error) {\n    console.error('CSV validation error:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { error: 'Validation error', details: error.issues },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Failed to validate CSV' },\n      { status: 500 }\n    );\n  }\n}"],"mappings":"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","ignoreList":[]}
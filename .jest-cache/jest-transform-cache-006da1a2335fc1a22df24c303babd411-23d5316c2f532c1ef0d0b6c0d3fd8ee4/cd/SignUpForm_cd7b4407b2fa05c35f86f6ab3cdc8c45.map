{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/components/auth/SignUpForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { signUpSchema, type SignUpInput } from '@/lib/auth/validation';\n\nexport default function SignUpForm() {\n  const router = useRouter();\n  \n  const [formData, setFormData] = useState<SignUpInput>({\n    email: '',\n    password: '',\n    name: '',\n  });\n  \n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [generalError, setGeneralError] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setErrors({});\n    setGeneralError('');\n\n    try {\n      // Validate form data\n      const validation = signUpSchema.safeParse(formData);\n      if (!validation.success) {\n        const fieldErrors: Record<string, string> = {};\n        validation.error.issues.forEach((issue) => {\n          const field = issue.path.join('.');\n          fieldErrors[field] = issue.message;\n        });\n        setErrors(fieldErrors);\n        return;\n      }\n\n      // Submit to API\n      const response = await fetch('/api/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(validation.data),\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        if (result.errors) {\n          setErrors(result.errors);\n        } else {\n          setGeneralError(result.error || 'Sign up failed');\n        }\n        return;\n      }\n\n      // Success - check if email verification is required\n      if (result.requiresVerification) {\n        // Redirect to email verification page with email parameter\n        const searchParams = new URLSearchParams({ email: formData.email });\n        router.push(`/auth/verify-email?${searchParams.toString()}`);\n        router.refresh();\n      } else {\n        // Redirect to dashboard (fallback for already verified users)\n        router.push('/dashboard');\n        router.refresh();\n      }\n      \n    } catch (error) {\n      console.error('Sign up error:', error);\n      setGeneralError('An unexpected error occurred. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({ ...prev, [name]: '' }));\n    }\n  };\n\n  return (\n    <div className={`${isLoading ? 'form--loading' : ''}`}>\n      <form onSubmit={handleSubmit} className=\"space-y-6\" autoComplete=\"on\" noValidate>\n        {generalError && (\n          <div className=\"form-validation-summary\">\n            <div className=\"form-validation-summary-title\">\n              Account Creation Failed\n            </div>\n            <ul className=\"form-validation-summary-list\">\n              <li className=\"form-validation-summary-item\">{generalError}</li>\n            </ul>\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          <label htmlFor=\"signup-name\" className=\"form-label form-label--required\">\n            Full Name\n          </label>\n          <input\n            id=\"signup-name\"\n            name=\"name\"\n            type=\"text\"\n            autoComplete=\"name\"\n            required\n            value={formData.name}\n            onChange={handleChange}\n            className={`form-input ${errors.name ? 'form-input--error' : ''}`}\n            placeholder=\"Enter your full name\"\n            aria-describedby={errors.name ? 'signup-name-error' : undefined}\n          />\n          {errors.name && (\n            <div id=\"signup-name-error\" className=\"form-error\" role=\"alert\">\n              {errors.name}\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"signup-email\" className=\"form-label form-label--required\">\n            Email Address\n          </label>\n          <input\n            id=\"signup-email\"\n            name=\"email\"\n            type=\"email\"\n            autoComplete=\"email\"\n            required\n            value={formData.email}\n            onChange={handleChange}\n            className={`form-input ${errors.email ? 'form-input--error' : ''}`}\n            placeholder=\"Enter your email address\"\n            aria-describedby={errors.email ? 'signup-email-error' : undefined}\n          />\n          {errors.email && (\n            <div id=\"signup-email-error\" className=\"form-error\" role=\"alert\">\n              {errors.email}\n            </div>\n          )}\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"signup-password\" className=\"form-label form-label--required\">\n            Password\n          </label>\n          <input\n            id=\"signup-password\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"new-password\"\n            data-new-password=\"true\"\n            required\n            value={formData.password}\n            onChange={handleChange}\n            className={`form-input ${errors.password ? 'form-input--error' : ''}`}\n            placeholder=\"Create a strong password\"\n            aria-describedby={`${errors.password ? 'signup-password-error ' : ''}signup-password-help`}\n          />\n          {errors.password && (\n            <div id=\"signup-password-error\" className=\"form-error\" role=\"alert\">\n              {errors.password}\n            </div>\n          )}\n          <div id=\"signup-password-help\" className=\"form-help\">\n            Password must be at least 8 characters with uppercase, lowercase, and number\n          </div>\n        </div>\n\n        <div className=\"form-actions form-actions--full\">\n          <button\n            type=\"submit\"\n            disabled={isLoading}\n            className={`btn btn--primary btn--full ${isLoading ? 'btn--loading' : ''}`}\n            aria-describedby={isLoading ? 'signup-loading' : undefined}\n          >\n            {isLoading ? 'Creating account...' : 'Create Account'}\n          </button>\n          {isLoading && (\n            <span id=\"signup-loading\" className=\"sr-only\">\n              Please wait while we create your account\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}"],"names":["SignUpForm","router","useRouter","formData","setFormData","useState","email","password","name","errors","setErrors","isLoading","setIsLoading","generalError","setGeneralError","handleSubmit","e","preventDefault","validation","signUpSchema","safeParse","success","fieldErrors","error","issues","forEach","issue","field","path","join","message","response","fetch","method","headers","body","JSON","stringify","data","result","json","ok","requiresVerification","searchParams","URLSearchParams","push","toString","refresh","console","handleChange","value","target","prev","div","className","form","onSubmit","autoComplete","noValidate","ul","li","label","htmlFor","input","id","type","required","onChange","placeholder","aria-describedby","undefined","role","data-new-password","button","disabled","span"],"mappings":"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"}
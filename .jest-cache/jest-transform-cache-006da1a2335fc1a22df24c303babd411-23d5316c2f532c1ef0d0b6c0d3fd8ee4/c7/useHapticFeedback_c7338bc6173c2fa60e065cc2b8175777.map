{"version":3,"names":["cov_rq6e778m8","actualCoverage","s","useHapticFeedback","f","triggerHaptic","_react","useCallback","type","b","navigator","hapticFeedback","impactOccurred","selectionChanged","notificationOccurred","error","console","log","pattern","vibrate","isHapticSupported"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/hooks/useHapticFeedback.ts"],"sourcesContent":["'use client';\n\nimport { useCallback } from 'react';\n\nexport type HapticFeedbackType = 'light' | 'medium' | 'heavy' | 'selection' | 'impact' | 'notification';\n\n/**\n * Hook for providing haptic feedback on supported devices\n */\nexport function useHapticFeedback() {\n  const triggerHaptic = useCallback((type: HapticFeedbackType = 'light') => {\n    // Check if device supports haptic feedback\n    if (!('vibrate' in navigator)) {\n      return;\n    }\n\n    // For devices with advanced haptic feedback (iOS Safari)\n    if ('hapticFeedback' in navigator) {\n      try {\n        switch (type) {\n          case 'light':\n            (navigator as any).hapticFeedback.impactOccurred('light');\n            break;\n          case 'medium':\n            (navigator as any).hapticFeedback.impactOccurred('medium');\n            break;\n          case 'heavy':\n            (navigator as any).hapticFeedback.impactOccurred('heavy');\n            break;\n          case 'selection':\n            (navigator as any).hapticFeedback.selectionChanged();\n            break;\n          case 'notification':\n            (navigator as any).hapticFeedback.notificationOccurred('success');\n            break;\n          default:\n            (navigator as any).hapticFeedback.impactOccurred('light');\n        }\n        return;\n      } catch (error) {\n        console.log('Haptic feedback not available:', error);\n      }\n    }\n\n    // Fallback to basic vibration API\n    try {\n      let pattern: number | number[];\n      \n      switch (type) {\n        case 'light':\n          pattern = 10;\n          break;\n        case 'medium':\n          pattern = 20;\n          break;\n        case 'heavy':\n          pattern = 50;\n          break;\n        case 'selection':\n          pattern = [10, 10, 10];\n          break;\n        case 'notification':\n          pattern = [50, 50, 50];\n          break;\n        default:\n          pattern = 10;\n      }\n\n      if (typeof navigator !== 'undefined' && navigator.vibrate) {\n        navigator.vibrate(pattern);\n      }\n    } catch (error) {\n      console.log('Vibration not supported:', error);\n    }\n  }, []);\n\n  const isHapticSupported = useCallback(() => {\n    if (typeof navigator === 'undefined') return false;\n    return (typeof navigator.vibrate === 'function') || 'hapticFeedback' in navigator;\n  }, []);\n\n  return {\n    triggerHaptic,\n    isHapticSupported: isHapticSupported(),\n  };\n}"],"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","ignoreList":[]}
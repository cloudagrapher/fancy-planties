{"version":3,"sources":["/Users/stefanbekker/projects/fancy-planties/src/test-utils/index.js"],"sourcesContent":["// Test utilities - main entry point for all test helpers\n\n// Re-export all test utilities for easy importing\nexport * from './setup';\nexport * from './factories';\nexport * from './helpers';\nexport * from './mocks';\nexport * from './performance';\nexport * from './debugging';\n\n// Common test patterns and utilities\nexport const TEST_CONSTANTS = {\n  DEFAULT_TIMEOUT: 15000,\n  ANIMATION_TIMEOUT: 300,\n  API_TIMEOUT: 5000,\n  MOCK_USER_ID: 1,\n  MOCK_SESSION_ID: 'test-session-123',\n};\n\n// Test environment helpers\nexport const isTestEnvironment = () => process.env.NODE_ENV === 'test';\nexport const isCI = () => Boolean(process.env.CI);\n\n// Comprehensive test setup function\nexport const setupTest = () => {\n  // Clear all mocks\n  jest.clearAllMocks();\n  \n  // Reset DOM\n  if (typeof document !== 'undefined') {\n    document.body.innerHTML = '';\n  }\n  \n  // Reset timers\n  jest.clearAllTimers();\n  \n  // Reset factory counters\n  const { resetAllFactoryCounters } = require('./factories');\n  resetAllFactoryCounters();\n  \n  // Reset component mocks\n  const { resetComponentMocks } = require('./mocks/component-mocks');\n  resetComponentMocks();\n  \n  // Reset API mocks\n  const { resetApiMocks } = require('./helpers/api-helpers');\n  resetApiMocks();\n};\n\n// Comprehensive test cleanup function\nexport const cleanupTest = () => {\n  // Clear timers\n  jest.clearAllTimers();\n  \n  // Restore all mocks\n  jest.restoreAllMocks();\n  \n  // Reset service mocks\n  const { resetServiceMocks } = require('./mocks/service-mocks');\n  resetServiceMocks();\n  \n  // Reset test state\n  const { resetTestState } = require('./helpers/render-helpers');\n  resetTestState();\n};\n\n// Quick setup for common test scenarios\nexport const quickSetup = {\n  /**\n   * Setup for component testing with authenticated user\n   */\n  authenticatedComponent: () => {\n    setupTest();\n    const { createAuthenticatedTestUser } = require('./factories/user-factory');\n    const { applyCommonMocks } = require('./mocks/component-mocks');\n    \n    applyCommonMocks();\n    return createAuthenticatedTestUser();\n  },\n\n  /**\n   * Setup for API testing with mocked responses\n   */\n  apiTesting: () => {\n    setupTest();\n    const { applyAllAPIMocks } = require('./mocks/api-mocks');\n    const { mockBrowserAPIs } = require('./mocks/service-mocks');\n    \n    mockBrowserAPIs();\n    return applyAllAPIMocks();\n  },\n\n  /**\n   * Setup for integration testing with full mocks\n   */\n  integrationTesting: () => {\n    setupTest();\n    const { createAuthenticatedTestUser } = require('./factories/user-factory');\n    const { applyCommonMocks } = require('./mocks/component-mocks');\n    const { applyAllAPIMocks } = require('./mocks/api-mocks');\n    const { applyAllServiceMocks } = require('./mocks/service-mocks');\n    \n    applyCommonMocks();\n    applyAllServiceMocks();\n    const apiMocks = applyAllAPIMocks();\n    const { user, session } = createAuthenticatedTestUser();\n    \n    return { user, session, apiMocks };\n  },\n};"],"names":["TEST_CONSTANTS","cleanupTest","isCI","isTestEnvironment","quickSetup","setupTest","DEFAULT_TIMEOUT","ANIMATION_TIMEOUT","API_TIMEOUT","MOCK_USER_ID","MOCK_SESSION_ID","process","env","NODE_ENV","Boolean","CI","jest","clearAllMocks","document","body","innerHTML","clearAllTimers","resetAllFactoryCounters","require","resetComponentMocks","resetApiMocks","restoreAllMocks","resetServiceMocks","resetTestState","authenticatedComponent","createAuthenticatedTestUser","applyCommonMocks","apiTesting","applyAllAPIMocks","mockBrowserAPIs","integrationTesting","applyAllServiceMocks","apiMocks","user","session"],"mappings":"AAAA,yDAAyD;AAEzD,kDAAkD;;;;;;;;;;;;QASrCA;eAAAA;;QAuCAC;eAAAA;;QA7BAC;eAAAA;;QADAC;eAAAA;;QA+CAC;eAAAA;;QA3CAC;eAAAA;;;qBArBC;qBACA;qBACA;qBACA;qBACA;qBACA;;;;;;;;;;;;;;AAGP,MAAML,iBAAiB;IAC5BM,iBAAiB;IACjBC,mBAAmB;IACnBC,aAAa;IACbC,cAAc;IACdC,iBAAiB;AACnB;AAGO,MAAMP,oBAAoB,IAAMQ,QAAQC,GAAG,CAACC,QAAQ,KAAK;AACzD,MAAMX,OAAO,IAAMY,QAAQH,QAAQC,GAAG,CAACG,EAAE;AAGzC,MAAMV,YAAY;IACvB,kBAAkB;IAClBW,KAAKC,aAAa;IAElB,YAAY;IACZ,IAAI,OAAOC,aAAa,aAAa;QACnCA,SAASC,IAAI,CAACC,SAAS,GAAG;IAC5B;IAEA,eAAe;IACfJ,KAAKK,cAAc;IAEnB,yBAAyB;IACzB,MAAM,EAAEC,uBAAuB,EAAE,GAAGC,QAAQ;IAC5CD;IAEA,wBAAwB;IACxB,MAAM,EAAEE,mBAAmB,EAAE,GAAGD,QAAQ;IACxCC;IAEA,kBAAkB;IAClB,MAAM,EAAEC,aAAa,EAAE,GAAGF,QAAQ;IAClCE;AACF;AAGO,MAAMxB,cAAc;IACzB,eAAe;IACfe,KAAKK,cAAc;IAEnB,oBAAoB;IACpBL,KAAKU,eAAe;IAEpB,sBAAsB;IACtB,MAAM,EAAEC,iBAAiB,EAAE,GAAGJ,QAAQ;IACtCI;IAEA,mBAAmB;IACnB,MAAM,EAAEC,cAAc,EAAE,GAAGL,QAAQ;IACnCK;AACF;AAGO,MAAMxB,aAAa;IACxB;;GAEC,GACDyB,wBAAwB;QACtBxB;QACA,MAAM,EAAEyB,2BAA2B,EAAE,GAAGP,QAAQ;QAChD,MAAM,EAAEQ,gBAAgB,EAAE,GAAGR,QAAQ;QAErCQ;QACA,OAAOD;IACT;IAEA;;GAEC,GACDE,YAAY;QACV3B;QACA,MAAM,EAAE4B,gBAAgB,EAAE,GAAGV,QAAQ;QACrC,MAAM,EAAEW,eAAe,EAAE,GAAGX,QAAQ;QAEpCW;QACA,OAAOD;IACT;IAEA;;GAEC,GACDE,oBAAoB;QAClB9B;QACA,MAAM,EAAEyB,2BAA2B,EAAE,GAAGP,QAAQ;QAChD,MAAM,EAAEQ,gBAAgB,EAAE,GAAGR,QAAQ;QACrC,MAAM,EAAEU,gBAAgB,EAAE,GAAGV,QAAQ;QACrC,MAAM,EAAEa,oBAAoB,EAAE,GAAGb,QAAQ;QAEzCQ;QACAK;QACA,MAAMC,WAAWJ;QACjB,MAAM,EAAEK,IAAI,EAAEC,OAAO,EAAE,GAAGT;QAE1B,OAAO;YAAEQ;YAAMC;YAASF;QAAS;IACnC;AACF"}
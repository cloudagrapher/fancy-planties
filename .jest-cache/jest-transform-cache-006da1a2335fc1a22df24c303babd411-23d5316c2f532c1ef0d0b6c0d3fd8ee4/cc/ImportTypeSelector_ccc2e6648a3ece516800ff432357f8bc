06a0a955980f69aaf322b5288eeda421
'use client';
"use strict";

/* istanbul ignore next */
function cov_2mxv1weu16() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/components/import/ImportTypeSelector.tsx";
  var hash = "e31468abe412fba87364b9968036bb224c2d7d8f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/components/import/ImportTypeSelector.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 57,
          column: 1
        }
      },
      "7": {
        start: {
          line: 59,
          column: 42
        },
        end: {
          line: 59,
          column: 68
        }
      },
      "8": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 179,
          column: 7
        }
      },
      "9": {
        start: {
          line: 78,
          column: 33
        },
        end: {
          line: 78,
          column: 42
        }
      },
      "10": {
        start: {
          line: 79,
          column: 39
        },
        end: {
          line: 79,
          column: 63
        }
      },
      "11": {
        start: {
          line: 80,
          column: 39
        },
        end: {
          line: 80,
          column: 62
        }
      },
      "12": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 175,
          column: 32
        }
      },
      "13": {
        start: {
          line: 88,
          column: 45
        },
        end: {
          line: 88,
          column: 66
        }
      },
      "14": {
        start: {
          line: 117,
          column: 64
        },
        end: {
          line: 117,
          column: 84
        }
      },
      "15": {
        start: {
          line: 118,
          column: 64
        },
        end: {
          line: 118,
          column: 108
        }
      },
      "16": {
        start: {
          line: 149,
          column: 111
        },
        end: {
          line: 152,
          column: 66
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "ImportTypeSelector",
        decl: {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 58,
            column: 27
          }
        },
        loc: {
          start: {
            line: 58,
            column: 76
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 58
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 77,
            column: 42
          },
          end: {
            line: 77,
            column: 43
          }
        },
        loc: {
          start: {
            line: 77,
            column: 50
          },
          end: {
            line: 176,
            column: 17
          }
        },
        line: 77
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 88,
            column: 41
          },
          end: {
            line: 88,
            column: 42
          }
        },
        loc: {
          start: {
            line: 88,
            column: 45
          },
          end: {
            line: 88,
            column: 66
          }
        },
        line: 88
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 116,
            column: 69
          },
          end: {
            line: 116,
            column: 70
          }
        },
        loc: {
          start: {
            line: 116,
            column: 74
          },
          end: {
            line: 119,
            column: 61
          }
        },
        line: 116
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 149,
            column: 87
          },
          end: {
            line: 149,
            column: 88
          }
        },
        loc: {
          start: {
            line: 149,
            column: 111
          },
          end: {
            line: 152,
            column: 66
          }
        },
        line: 149
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 58,
            column: 58
          },
          end: {
            line: 58,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 58,
            column: 70
          },
          end: {
            line: 58,
            column: 72
          }
        }],
        line: 58
      },
      "1": {
        loc: {
          start: {
            line: 84,
            column: 18
          },
          end: {
            line: 84,
            column: 142
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 31
          },
          end: {
            line: 84,
            column: 75
          }
        }, {
          start: {
            line: 84,
            column: 78
          },
          end: {
            line: 84,
            column: 142
          }
        }],
        line: 84
      },
      "2": {
        loc: {
          start: {
            line: 96,
            column: 22
          },
          end: {
            line: 96,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 35
          },
          end: {
            line: 96,
            column: 51
          }
        }, {
          start: {
            line: 96,
            column: 54
          },
          end: {
            line: 96,
            column: 67
          }
        }],
        line: 96
      },
      "3": {
        loc: {
          start: {
            line: 101,
            column: 24
          },
          end: {
            line: 101,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 37
          },
          end: {
            line: 101,
            column: 55
          }
        }, {
          start: {
            line: 101,
            column: 58
          },
          end: {
            line: 101,
            column: 73
          }
        }],
        line: 101
      },
      "4": {
        loc: {
          start: {
            line: 118,
            column: 79
          },
          end: {
            line: 118,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 118,
            column: 92
          },
          end: {
            line: 118,
            column: 96
          }
        }, {
          start: {
            line: 118,
            column: 99
          },
          end: {
            line: 118,
            column: 106
          }
        }],
        line: 118
      },
      "5": {
        loc: {
          start: {
            line: 136,
            column: 28
          },
          end: {
            line: 173,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 28
          },
          end: {
            line: 136,
            column: 38
          }
        }, {
          start: {
            line: 136,
            column: 56
          },
          end: {
            line: 173,
            column: 30
          }
        }],
        line: 136
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/components/import/ImportTypeSelector.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { Database, Leaf, Sprout, Info } from 'lucide-react';\n\nexport type ImportType = 'plant_taxonomy' | 'plant_instances' | 'propagations';\n\ninterface ImportTypeOption {\n  id: ImportType;\n  title: string;\n  description: string;\n  icon: React.ComponentType<{ className?: string }>;\n  requiredColumns: string[];\n  exampleData: string;\n}\n\nconst importTypes: ImportTypeOption[] = [\n  {\n    id: 'plant_taxonomy',\n    title: 'Plant Taxonomy',\n    description: 'Import plant species information with separate cultivar field support',\n    icon: Database,\n    requiredColumns: ['Family', 'Genus', 'Species', 'Common Name', 'Cultivar (Optional)'],\n    exampleData: 'Araceae,Monstera,deliciosa,Thai Constellation,Monstera Deliciosa',\n  },\n  {\n    id: 'plant_instances',\n    title: 'Plant Collection',\n    description: 'Import your plant instances with enhanced taxonomy and care schedules',\n    icon: Leaf,\n    requiredColumns: ['Common Name', 'Location', 'Fertilizer Schedule', 'Cultivar (Optional)'],\n    exampleData: 'Monstera Deliciosa,Living Room,every 4 weeks,Thai Constellation',\n  },\n  {\n    id: 'propagations',\n    title: 'Propagations',\n    description: 'Import propagations with external source tracking (gifts, trades, purchases)',\n    icon: Sprout,\n    requiredColumns: ['Common Name', 'Location', 'Date Started', 'Source (Optional)', 'Source Details (Optional)'],\n    exampleData: 'Monstera Deliciosa,Propagation Station,2024-01-15,gift,Gift from Sarah',\n  },\n];\n\ninterface ImportTypeSelectorProps {\n  selectedType: ImportType | null;\n  onTypeSelect: (type: ImportType) => void;\n  className?: string;\n}\n\nexport function ImportTypeSelector({\n  selectedType,\n  onTypeSelect,\n  className = '',\n}: ImportTypeSelectorProps) {\n  const [showDetails, setShowDetails] = useState<ImportType | null>(null);\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      <div>\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n          Select Import Type\n        </h3>\n        <p className=\"text-sm text-gray-600\">\n          Choose what type of data you want to import from your CSV file.\n        </p>\n      </div>\n\n      <div className=\"grid gap-4\">\n        {importTypes.map((type) => {\n          const Icon = type.icon;\n          const isSelected = selectedType === type.id;\n          const isExpanded = showDetails === type.id;\n\n          return (\n            <div\n              key={type.id}\n              className={`\n                border rounded-xl transition-all duration-200 cursor-pointer\n                ${isSelected \n                  ? 'border-primary-300 bg-primary-50 shadow-sm' \n                  : 'border-gray-200 bg-white hover:border-gray-300 hover:shadow-sm'\n                }\n              `}\n            >\n              <div\n                onClick={() => onTypeSelect(type.id)}\n                className=\"p-4\"\n              >\n                <div className=\"flex items-start space-x-4\">\n                  <div className={`\n                    p-3 rounded-lg flex-shrink-0\n                    ${isSelected ? 'bg-primary-200' : 'bg-gray-100'}\n                  `}>\n                    <Icon className={`\n                      w-6 h-6 \n                      ${isSelected ? 'text-primary-600' : 'text-gray-600'}\n                    `} />\n                  </div>\n                  \n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center justify-between\">\n                      <h4 className=\"font-semibold text-gray-900\">\n                        {type.title}\n                      </h4>\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setShowDetails(isExpanded ? null : type.id);\n                        }}\n                        className=\"p-1 hover:bg-gray-100 rounded-full transition-colors\"\n                      >\n                        <Info className=\"w-4 h-4 text-gray-400\" />\n                      </button>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mt-1\">\n                      {type.description}\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              {isExpanded && (\n                <div className=\"border-t border-gray-200 p-4 bg-gray-50\">\n                  <div className=\"space-y-3\">\n                    <div>\n                      <h5 className=\"text-sm font-medium text-gray-900 mb-2\">\n                        Required Columns:\n                      </h5>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {type.requiredColumns.map((column) => (\n                          <span\n                            key={column}\n                            className=\"px-2 py-1 bg-white border border-gray-200 rounded text-xs font-mono text-gray-700\"\n                          >\n                            {column}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                    \n                    <div>\n                      <h5 className=\"text-sm font-medium text-gray-900 mb-2\">\n                        Example CSV Row:\n                      </h5>\n                      <div className=\"p-2 bg-white border border-gray-200 rounded\">\n                        <code className=\"text-xs text-gray-700\">\n                          {type.exampleData}\n                        </code>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}"],
      names: ["ImportTypeSelector", "importTypes", "id", "title", "description", "icon", "Database", "requiredColumns", "exampleData", "Leaf", "Sprout", "selectedType", "onTypeSelect", "className", "showDetails", "setShowDetails", "useState", "div", "h3", "p", "map", "type", "Icon", "isSelected", "isExpanded", "onClick", "h4", "button", "e", "stopPropagation", "Info", "h5", "column", "span", "code"],
      mappings: "AAAA;;;;;+BAiDgBA;;;eAAAA;;;;uBA/CS;6BACoB;AAa7C,MAAMC,cAAkC;IACtC;QACEC,IAAI;QACJC,OAAO;QACPC,aAAa;QACbC,MAAMC,qBAAQ;QACdC,iBAAiB;YAAC;YAAU;YAAS;YAAW;YAAe;SAAsB;QACrFC,aAAa;IACf;IACA;QACEN,IAAI;QACJC,OAAO;QACPC,aAAa;QACbC,MAAMI,iBAAI;QACVF,iBAAiB;YAAC;YAAe;YAAY;YAAuB;SAAsB;QAC1FC,aAAa;IACf;IACA;QACEN,IAAI;QACJC,OAAO;QACPC,aAAa;QACbC,MAAMK,mBAAM;QACZH,iBAAiB;YAAC;YAAe;YAAY;YAAgB;YAAqB;SAA4B;QAC9GC,aAAa;IACf;CACD;AAQM,SAASR,mBAAmB,EACjCW,YAAY,EACZC,YAAY,EACZC,YAAY,EAAE,EACU;IACxB,MAAM,CAACC,aAAaC,eAAe,GAAGC,IAAAA,eAAQ,EAAoB;IAElE,qBACE,sBAACC;QAAIJ,WAAW,CAAC,UAAU,EAAEA,WAAW;;0BACtC,sBAACI;;kCACC,qBAACC;wBAAGL,WAAU;kCAA2C;;kCAGzD,qBAACM;wBAAEN,WAAU;kCAAwB;;;;0BAKvC,qBAACI;gBAAIJ,WAAU;0BACZZ,YAAYmB,GAAG,CAAC,CAACC;oBAChB,MAAMC,OAAOD,KAAKhB,IAAI;oBACtB,MAAMkB,aAAaZ,iBAAiBU,KAAKnB,EAAE;oBAC3C,MAAMsB,aAAaV,gBAAgBO,KAAKnB,EAAE;oBAE1C,qBACE,sBAACe;wBAECJ,WAAW,CAAC;;gBAEV,EAAEU,aACE,+CACA,iEACH;cACH,CAAC;;0CAED,qBAACN;gCACCQ,SAAS,IAAMb,aAAaS,KAAKnB,EAAE;gCACnCW,WAAU;0CAEV,cAAA,sBAACI;oCAAIJ,WAAU;;sDACb,qBAACI;4CAAIJ,WAAW,CAAC;;oBAEf,EAAEU,aAAa,mBAAmB,cAAc;kBAClD,CAAC;sDACC,cAAA,qBAACD;gDAAKT,WAAW,CAAC;;sBAEhB,EAAEU,aAAa,qBAAqB,gBAAgB;oBACtD,CAAC;;;sDAGH,sBAACN;4CAAIJ,WAAU;;8DACb,sBAACI;oDAAIJ,WAAU;;sEACb,qBAACa;4DAAGb,WAAU;sEACXQ,KAAKlB,KAAK;;sEAEb,qBAACwB;4DACCF,SAAS,CAACG;gEACRA,EAAEC,eAAe;gEACjBd,eAAeS,aAAa,OAAOH,KAAKnB,EAAE;4DAC5C;4DACAW,WAAU;sEAEV,cAAA,qBAACiB,iBAAI;gEAACjB,WAAU;;;;;8DAGpB,qBAACM;oDAAEN,WAAU;8DACVQ,KAAKjB,WAAW;;;;;;;4BAMxBoB,4BACC,qBAACP;gCAAIJ,WAAU;0CACb,cAAA,sBAACI;oCAAIJ,WAAU;;sDACb,sBAACI;;8DACC,qBAACc;oDAAGlB,WAAU;8DAAyC;;8DAGvD,qBAACI;oDAAIJ,WAAU;8DACZQ,KAAKd,eAAe,CAACa,GAAG,CAAC,CAACY,uBACzB,qBAACC;4DAECpB,WAAU;sEAETmB;2DAHIA;;;;sDASb,sBAACf;;8DACC,qBAACc;oDAAGlB,WAAU;8DAAyC;;8DAGvD,qBAACI;oDAAIJ,WAAU;8DACb,cAAA,qBAACqB;wDAAKrB,WAAU;kEACbQ,KAAKb,WAAW;;;;;;;;;uBAvExBa,KAAKnB,EAAE;gBAgFlB;;;;AAIR"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e31468abe412fba87364b9968036bb224c2d7d8f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2mxv1weu16 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2mxv1weu16();
cov_2mxv1weu16().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2mxv1weu16().s[1]++;
Object.defineProperty(exports, "ImportTypeSelector", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2mxv1weu16().f[0]++;
    cov_2mxv1weu16().s[2]++;
    return ImportTypeSelector;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2mxv1weu16().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2mxv1weu16().s[4]++, require("react"));
const _lucidereact =
/* istanbul ignore next */
(cov_2mxv1weu16().s[5]++, require("lucide-react"));
const importTypes =
/* istanbul ignore next */
(cov_2mxv1weu16().s[6]++, [{
  id: 'plant_taxonomy',
  title: 'Plant Taxonomy',
  description: 'Import plant species information with separate cultivar field support',
  icon: _lucidereact.Database,
  requiredColumns: ['Family', 'Genus', 'Species', 'Common Name', 'Cultivar (Optional)'],
  exampleData: 'Araceae,Monstera,deliciosa,Thai Constellation,Monstera Deliciosa'
}, {
  id: 'plant_instances',
  title: 'Plant Collection',
  description: 'Import your plant instances with enhanced taxonomy and care schedules',
  icon: _lucidereact.Leaf,
  requiredColumns: ['Common Name', 'Location', 'Fertilizer Schedule', 'Cultivar (Optional)'],
  exampleData: 'Monstera Deliciosa,Living Room,every 4 weeks,Thai Constellation'
}, {
  id: 'propagations',
  title: 'Propagations',
  description: 'Import propagations with external source tracking (gifts, trades, purchases)',
  icon: _lucidereact.Sprout,
  requiredColumns: ['Common Name', 'Location', 'Date Started', 'Source (Optional)', 'Source Details (Optional)'],
  exampleData: 'Monstera Deliciosa,Propagation Station,2024-01-15,gift,Gift from Sarah'
}]);
function ImportTypeSelector({
  selectedType,
  onTypeSelect,
  className =
  /* istanbul ignore next */
  (cov_2mxv1weu16().b[0][0]++, '')
}) {
  /* istanbul ignore next */
  cov_2mxv1weu16().f[1]++;
  const [showDetails, setShowDetails] =
  /* istanbul ignore next */
  (cov_2mxv1weu16().s[7]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_2mxv1weu16().s[8]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: `space-y-4 ${className}`,
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold text-gray-900 mb-2",
        children: "Select Import Type"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-sm text-gray-600",
        children: "Choose what type of data you want to import from your CSV file."
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "grid gap-4",
      children: importTypes.map(type => {
        /* istanbul ignore next */
        cov_2mxv1weu16().f[2]++;
        const Icon =
        /* istanbul ignore next */
        (cov_2mxv1weu16().s[9]++, type.icon);
        const isSelected =
        /* istanbul ignore next */
        (cov_2mxv1weu16().s[10]++, selectedType === type.id);
        const isExpanded =
        /* istanbul ignore next */
        (cov_2mxv1weu16().s[11]++, showDetails === type.id);
        /* istanbul ignore next */
        cov_2mxv1weu16().s[12]++;
        return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: `
                border rounded-xl transition-all duration-200 cursor-pointer
                ${isSelected ?
          /* istanbul ignore next */
          (cov_2mxv1weu16().b[1][0]++, 'border-primary-300 bg-primary-50 shadow-sm') :
          /* istanbul ignore next */
          (cov_2mxv1weu16().b[1][1]++, 'border-gray-200 bg-white hover:border-gray-300 hover:shadow-sm')}
              `,
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            onClick: () => {
              /* istanbul ignore next */
              cov_2mxv1weu16().f[3]++;
              cov_2mxv1weu16().s[13]++;
              return onTypeSelect(type.id);
            },
            className: "p-4",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-start space-x-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: `
                    p-3 rounded-lg flex-shrink-0
                    ${isSelected ?
                /* istanbul ignore next */
                (cov_2mxv1weu16().b[2][0]++, 'bg-primary-200') :
                /* istanbul ignore next */
                (cov_2mxv1weu16().b[2][1]++, 'bg-gray-100')}
                  `,
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(Icon, {
                  className: `
                      w-6 h-6 
                      ${isSelected ?
                  /* istanbul ignore next */
                  (cov_2mxv1weu16().b[3][0]++, 'text-primary-600') :
                  /* istanbul ignore next */
                  (cov_2mxv1weu16().b[3][1]++, 'text-gray-600')}
                    `
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex-1 min-w-0",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-between",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                    className: "font-semibold text-gray-900",
                    children: type.title
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                    onClick: e => {
                      /* istanbul ignore next */
                      cov_2mxv1weu16().f[4]++;
                      cov_2mxv1weu16().s[14]++;
                      e.stopPropagation();
                      /* istanbul ignore next */
                      cov_2mxv1weu16().s[15]++;
                      setShowDetails(isExpanded ?
                      /* istanbul ignore next */
                      (cov_2mxv1weu16().b[4][0]++, null) :
                      /* istanbul ignore next */
                      (cov_2mxv1weu16().b[4][1]++, type.id));
                    },
                    className: "p-1 hover:bg-gray-100 rounded-full transition-colors",
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Info, {
                      className: "w-4 h-4 text-gray-400"
                    })
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "text-sm text-gray-600 mt-1",
                  children: type.description
                })]
              })]
            })
          }),
          /* istanbul ignore next */
          (cov_2mxv1weu16().b[5][0]++, isExpanded) &&
          /* istanbul ignore next */
          (cov_2mxv1weu16().b[5][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "border-t border-gray-200 p-4 bg-gray-50",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h5", {
                  className: "text-sm font-medium text-gray-900 mb-2",
                  children: "Required Columns:"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "flex flex-wrap gap-2",
                  children: type.requiredColumns.map(column => {
                    /* istanbul ignore next */
                    cov_2mxv1weu16().f[5]++;
                    cov_2mxv1weu16().s[16]++;
                    return /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "px-2 py-1 bg-white border border-gray-200 rounded text-xs font-mono text-gray-700",
                      children: column
                    }, column);
                  })
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h5", {
                  className: "text-sm font-medium text-gray-900 mb-2",
                  children: "Example CSV Row:"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "p-2 bg-white border border-gray-200 rounded",
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)("code", {
                    className: "text-xs text-gray-700",
                    children: type.exampleData
                  })
                })]
              })]
            })
          }))]
        }, type.id);
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
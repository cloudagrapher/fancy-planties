{"version":3,"names":["cov_21zasgjx6x","actualCoverage","s","GET","request","context","f","user","_server1","validateRequest","b","_server","NextResponse","json","error","status","presetId","params","searchParams","URL","url","overrides","get","location","overdueOnly","limit","parseInt","offset","result","_advancedsearch","advancedSearchService","searchWithPreset","id","success","data","console","Error","message"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/app/api/search/presets/[presetId]/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { z } from 'zod';\nimport { validateRequest } from '@/lib/auth/server';\nimport { advancedSearchService } from '@/lib/services/advanced-search';\nimport { plantInstanceFilterSchema } from '@/lib/validation/plant-schemas';\n\n// GET /api/search/presets/[presetId] - Search with a saved preset\nexport async function GET(\n  request: NextRequest,\n  context: { params: Promise<{ presetId: string }> }\n) {\n  try {\n    const { user } = await validateRequest();\n    if (!user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { presetId } = await context.params;\n    const { searchParams } = new URL(request.url);\n    \n    // Parse any filter overrides from query params\n    const overrides: any = {};\n    \n    if (searchParams.get('location')) {\n      overrides.location = searchParams.get('location')!;\n    }\n    \n    if (searchParams.get('overdueOnly')) {\n      overrides.overdueOnly = searchParams.get('overdueOnly') === 'true';\n    }\n    \n    if (searchParams.get('limit')) {\n      overrides.limit = parseInt(searchParams.get('limit')!, 10);\n    }\n    \n    if (searchParams.get('offset')) {\n      overrides.offset = parseInt(searchParams.get('offset')!, 10);\n    }\n\n    // Search with preset\n    const result = await advancedSearchService.searchWithPreset(\n      presetId,\n      user.id,\n      overrides\n    );\n\n    return NextResponse.json({\n      success: true,\n      data: result,\n    });\n\n  } catch (error) {\n    console.error('Search with preset error:', error);\n    \n    if (error instanceof Error && error.message === 'Search preset not found') {\n      return NextResponse.json(\n        { error: 'Search preset not found' },\n        { status: 404 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Search with preset failed' },\n      { status: 500 }\n    );\n  }\n}"],"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","ignoreList":[]}
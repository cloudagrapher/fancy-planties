{"version":3,"names":["cov_ol63gh58b","actualCoverage","s","SessionQueries","create","sessionData","f","session","_index","db","insert","_schema","sessions","values","returning","error","console","Error","getById","id","select","from","where","_drizzleorm","eq","b","getByUserId","userId","updateExpiration","expiresAt","update","set","delete","result","length","deleteByUserId","deleteExpired","now","Date","lte","isValid","cleanup","deletedCount","log"],"sources":["/Users/stefanbekker/projects/fancy-planties/src/lib/db/queries/sessions.ts"],"sourcesContent":["import { eq, lte } from 'drizzle-orm';\nimport { db } from '../index';\nimport { sessions, type Session, type NewSession } from '../schema';\n\n// Session CRUD operations for Lucia auth\nexport class SessionQueries {\n  // Create a new session\n  static async create(sessionData: NewSession): Promise<Session> {\n    try {\n      const [session] = await db.insert(sessions).values(sessionData).returning();\n      return session;\n    } catch (error) {\n      console.error('Failed to create session:', error);\n      throw new Error('Failed to create session');\n    }\n  }\n\n  // Get session by ID\n  static async getById(id: string): Promise<Session | null> {\n    try {\n      const [session] = await db.select().from(sessions).where(eq(sessions.id, id));\n      return session || null;\n    } catch (error) {\n      console.error('Failed to get session by ID:', error);\n      throw new Error('Failed to get session');\n    }\n  }\n\n  // Get all sessions for a user\n  static async getByUserId(userId: number): Promise<Session[]> {\n    try {\n      return await db\n        .select()\n        .from(sessions)\n        .where(eq(sessions.userId, userId));\n    } catch (error) {\n      console.error('Failed to get sessions by user ID:', error);\n      throw new Error('Failed to get sessions');\n    }\n  }\n\n  // Update session expiration\n  static async updateExpiration(id: string, expiresAt: Date): Promise<Session> {\n    try {\n      const [session] = await db\n        .update(sessions)\n        .set({ expiresAt })\n        .where(eq(sessions.id, id))\n        .returning();\n      \n      if (!session) {\n        throw new Error('Session not found');\n      }\n      \n      return session;\n    } catch (error) {\n      console.error('Failed to update session expiration:', error);\n      throw new Error('Failed to update session');\n    }\n  }\n\n  // Delete session by ID\n  static async delete(id: string): Promise<boolean> {\n    try {\n      const result = await db.delete(sessions).where(eq(sessions.id, id));\n      return result.length > 0;\n    } catch (error) {\n      console.error('Failed to delete session:', error);\n      throw new Error('Failed to delete session');\n    }\n  }\n\n  // Delete all sessions for a user\n  static async deleteByUserId(userId: number): Promise<number> {\n    try {\n      const result = await db.delete(sessions).where(eq(sessions.userId, userId));\n      return result.length;\n    } catch (error) {\n      console.error('Failed to delete sessions by user ID:', error);\n      throw new Error('Failed to delete sessions');\n    }\n  }\n\n  // Delete expired sessions\n  static async deleteExpired(): Promise<number> {\n    try {\n      const now = new Date();\n      const result = await db.delete(sessions).where(lte(sessions.expiresAt, now));\n      return result.length;\n    } catch (error) {\n      console.error('Failed to delete expired sessions:', error);\n      throw new Error('Failed to delete expired sessions');\n    }\n  }\n\n  // Check if session is valid (exists and not expired)\n  static async isValid(id: string): Promise<boolean> {\n    try {\n      const session = await this.getById(id);\n      if (!session) return false;\n      \n      const now = new Date();\n      return session.expiresAt > now;\n    } catch (error) {\n      console.error('Failed to check session validity:', error);\n      return false;\n    }\n  }\n\n  // Cleanup expired sessions (utility function for maintenance)\n  static async cleanup(): Promise<{ deletedCount: number }> {\n    try {\n      const deletedCount = await this.deleteExpired();\n      console.log(`Cleaned up ${deletedCount} expired sessions`);\n      return { deletedCount };\n    } catch (error) {\n      console.error('Failed to cleanup sessions:', error);\n      throw new Error('Failed to cleanup sessions');\n    }\n  }\n}"],"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","ignoreList":[]}
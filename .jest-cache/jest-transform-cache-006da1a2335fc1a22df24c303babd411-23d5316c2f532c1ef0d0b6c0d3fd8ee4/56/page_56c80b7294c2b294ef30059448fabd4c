adbc6b316b7bea38855f8494af7e753f
"use strict";

/* istanbul ignore next */
function cov_1hjiace5s2() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/app/test-modals/page.tsx";
  var hash = "e83a62f218c9227d4ecf117961ea99decfd25ac1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/app/test-modals/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 33
        },
        end: {
          line: 12,
          column: 103
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 22,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "TestModalsPage",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 23
          }
        },
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/app/test-modals/page.tsx"],
      sourcesContent: ["import ModalDemo from '@/components/shared/ModalDemo';\n\nexport default function TestModalsPage() {\n  return (\n    <div className=\"page\">\n      <ModalDemo />\n    </div>\n  );\n}"],
      names: ["TestModalsPage", "div", "className", "ModalDemo"],
      mappings: ";;;;+BAEA;;;eAAwBA;;;;kEAFF;;;;;;AAEP,SAASA;IACtB,qBACE,qBAACC;QAAIC,WAAU;kBACb,cAAA,qBAACC,kBAAS;;AAGhB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e83a62f218c9227d4ecf117961ea99decfd25ac1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hjiace5s2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hjiace5s2();
cov_1hjiace5s2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1hjiace5s2().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1hjiace5s2().f[0]++;
    cov_1hjiace5s2().s[2]++;
    return TestModalsPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1hjiace5s2().s[3]++, require("react/jsx-runtime"));
const _ModalDemo =
/* istanbul ignore next */
(/*#__PURE__*/cov_1hjiace5s2().s[4]++, _interop_require_default(require("../../components/shared/ModalDemo")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1hjiace5s2().f[1]++;
  cov_1hjiace5s2().s[5]++;
  return /* istanbul ignore next */(cov_1hjiace5s2().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1hjiace5s2().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1hjiace5s2().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1hjiace5s2().b[0][1]++, {
    default: obj
  });
}
function TestModalsPage() {
  /* istanbul ignore next */
  cov_1hjiace5s2().f[2]++;
  cov_1hjiace5s2().s[6]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "page",
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_ModalDemo.default, {})
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUZXN0TW9kYWxzUGFnZSIsImNvdl8xaGppYWNlNXMyIiwiZiIsInMiLCJfanN4cnVudGltZSIsImpzeCIsImNsYXNzTmFtZSIsIl9Nb2RhbERlbW8iLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiL1VzZXJzL3N0ZWZhbmJla2tlci9wcm9qZWN0cy9mYW5jeS1wbGFudGllcy9zcmMvYXBwL3Rlc3QtbW9kYWxzL3BhZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNb2RhbERlbW8gZnJvbSAnQC9jb21wb25lbnRzL3NoYXJlZC9Nb2RhbERlbW8nO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUZXN0TW9kYWxzUGFnZSgpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInBhZ2VcIj5cbiAgICAgIDxNb2RhbERlbW8gLz5cbiAgICA8L2Rpdj5cbiAgKTtcbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQUVBOzs7Ozs7V0FBd0JBLGNBQUE7Ozs7Ozs7O3dFQUZGOzs7Ozs7Ozs7Ozs7Ozs7QUFFUCxTQUFTQSxlQUFBO0VBQUE7RUFBQUMsY0FBQSxHQUFBQyxDQUFBO0VBQUFELGNBQUEsR0FBQUUsQ0FBQTtFQUN0QixvQkFDRSxJQUFBQyxXQUFBLENBQUFDLEdBQUEsRUFBQztJQUFJQyxTQUFBLEVBQVU7Y0FDYixpQkFBQUYsV0FBQSxDQUFBQyxHQUFBLEVBQUNFLFVBQUEsQ0FBQUMsT0FBUzs7QUFHaEIiLCJpZ25vcmVMaXN0IjpbXX0=
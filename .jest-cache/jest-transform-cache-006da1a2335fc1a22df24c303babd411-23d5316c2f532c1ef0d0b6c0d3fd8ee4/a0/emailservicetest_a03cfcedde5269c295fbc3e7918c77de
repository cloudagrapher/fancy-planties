77c30d3eefc4a117cda642f48fe6b92d
"use strict";

/* istanbul ignore next */
function cov_25if7trvv8() {
  var path = "/Users/stefanbekker/projects/fancy-planties/src/lib/services/email-service-test.ts";
  var hash = "ead28355f45664f573e9ca0e0a7c31c4ca66aa13";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/stefanbekker/projects/fancy-planties/src/lib/services/email-service-test.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "6": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 23
        }
      },
      "7": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 61
        }
      },
      "8": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 46
        }
      },
      "9": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 60
        }
      },
      "10": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 63
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "13": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "14": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 37,
          column: 10
        }
      },
      "15": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "16": {
        start: {
          line: 40,
          column: 29
        },
        end: {
          line: 40,
          column: 74
        }
      },
      "17": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 33
        }
      },
      "18": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 83
        }
      },
      "19": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 45,
          column: 98
        }
      },
      "20": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "21": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "22": {
        start: {
          line: 60,
          column: 19
        },
        end: {
          line: 60,
          column: 21
        }
      },
      "23": {
        start: {
          line: 61,
          column: 21
        },
        end: {
          line: 61,
          column: 23
        }
      },
      "24": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "25": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 69
        }
      },
      "26": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "27": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "28": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 86
        }
      },
      "29": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 83
        }
      },
      "30": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "31": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 107
        }
      },
      "32": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "33": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 74
        }
      },
      "34": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "35": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 75
        }
      },
      "36": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 116
        }
      },
      "37": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 90,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 38
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "testEmailService",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 31
          }
        },
        loc: {
          start: {
            line: 23,
            column: 43
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "validateEmailServiceConfig",
        decl: {
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 59,
            column: 35
          }
        },
        loc: {
          start: {
            line: 59,
            column: 38
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 59
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 21
          },
          end: {
            line: 48,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 90
          }
        }, {
          start: {
            line: 48,
            column: 93
          },
          end: {
            line: 48,
            column: 120
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 51
          },
          end: {
            line: 54,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 76
          },
          end: {
            line: 54,
            column: 89
          }
        }, {
          start: {
            line: 54,
            column: 92
          },
          end: {
            line: 54,
            column: 107
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 26
          }
        }, {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 65,
            column: 63
          }
        }, {
          start: {
            line: 65,
            column: 67
          },
          end: {
            line: 65,
            column: 105
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: 68,
            column: 19
          },
          end: {
            line: 70,
            column: 13
          }
        }],
        line: 66
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "9": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "10": {
        loc: {
          start: {
            line: 84,
            column: 56
          },
          end: {
            line: 84,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 81
          },
          end: {
            line: 84,
            column: 94
          }
        }, {
          start: {
            line: 84,
            column: 97
          },
          end: {
            line: 84,
            column: 112
          }
        }],
        line: 84
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/stefanbekker/projects/fancy-planties/src/lib/services/email-service-test.ts"],
      sourcesContent: ["import 'server-only';\nimport { createEmailService } from './resend-email-service';\nimport { getEmailVerificationConfig } from './email-config';\nimport { logVerificationCodeInDevelopment, getEmailServiceStatus } from '../utils/email-dev-logger';\n\n/**\n * Test email service configuration and send a test email\n * This is useful for verifying the setup during development\n */\nexport async function testEmailService(testEmail?: string): Promise<{\n  success: boolean;\n  message: string;\n  config: ReturnType<typeof getEmailServiceStatus>;\n}> {\n  const config = getEmailServiceStatus();\n  \n  if (!config.configured) {\n    return {\n      success: false,\n      message: 'Email service not configured. Please set RESEND_API_KEY and FROM_EMAIL environment variables.',\n      config,\n    };\n  }\n\n  if (!testEmail) {\n    return {\n      success: true,\n      message: 'Email service is configured but no test email provided.',\n      config,\n    };\n  }\n\n  try {\n    const emailService = createEmailService();\n    const testCode = '123456';\n    \n    // Log in development\n    logVerificationCodeInDevelopment(testEmail, testCode);\n    \n    // Send test email\n    const success = await emailService.sendVerificationEmail(testEmail, testCode, 'Test User');\n    \n    return {\n      success,\n      message: success \n        ? `Test verification email sent successfully to ${testEmail}` \n        : 'Failed to send test email',\n      config,\n    };\n    \n  } catch (error) {\n    return {\n      success: false,\n      message: `Email service test failed: ${error instanceof Error ? error.message : 'Unknown error'}`,\n      config,\n    };\n  }\n}\n\n/**\n * Validate email service configuration without sending emails\n */\nexport function validateEmailServiceConfig(): {\n  valid: boolean;\n  errors: string[];\n  warnings: string[];\n} {\n  const errors: string[] = [];\n  const warnings: string[] = [];\n  \n  try {\n    const config = getEmailVerificationConfig();\n    \n    // Check API key\n    if (!config.apiKey || config.apiKey === 're_xxxxxxxxxx' || config.apiKey === 're_development_key') {\n      if (process.env.NODE_ENV === 'production') {\n        errors.push('Production environment requires a valid RESEND_API_KEY');\n      } else {\n        warnings.push('Development environment using placeholder API key');\n      }\n    }\n    \n    // Check email domain\n    if (!config.fromEmail.includes('fancy-planties.cloudagrapher.com')) {\n      warnings.push('FROM_EMAIL should use the configured domain: fancy-planties.cloudagrapher.com');\n    }\n    \n    // Check configuration values\n    if (config.codeExpiryMinutes < 5) {\n      warnings.push('Code expiry time is very short (< 5 minutes)');\n    }\n    \n    if (config.maxVerificationAttempts > 10) {\n      warnings.push('Max verification attempts is very high (> 10)');\n    }\n    \n  } catch (error) {\n    errors.push(`Configuration validation failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors,\n    warnings,\n  };\n}"],
      names: ["testEmailService", "validateEmailServiceConfig", "testEmail", "config", "getEmailServiceStatus", "configured", "success", "message", "emailService", "createEmailService", "testCode", "logVerificationCodeInDevelopment", "sendVerificationEmail", "error", "Error", "errors", "warnings", "getEmailVerificationConfig", "apiKey", "process", "env", "NODE_ENV", "push", "fromEmail", "includes", "codeExpiryMinutes", "maxVerificationAttempts", "valid", "length"],
      mappings: ";;;;;;;;;;;QASsBA;eAAAA;;QAqDNC;eAAAA;;;QA9DT;oCAC4B;6BACQ;gCAC6B;AAMjE,eAAeD,iBAAiBE,SAAkB;IAKvD,MAAMC,SAASC,IAAAA,qCAAqB;IAEpC,IAAI,CAACD,OAAOE,UAAU,EAAE;QACtB,OAAO;YACLC,SAAS;YACTC,SAAS;YACTJ;QACF;IACF;IAEA,IAAI,CAACD,WAAW;QACd,OAAO;YACLI,SAAS;YACTC,SAAS;YACTJ;QACF;IACF;IAEA,IAAI;QACF,MAAMK,eAAeC,IAAAA,sCAAkB;QACvC,MAAMC,WAAW;QAEjB,qBAAqB;QACrBC,IAAAA,gDAAgC,EAACT,WAAWQ;QAE5C,kBAAkB;QAClB,MAAMJ,UAAU,MAAME,aAAaI,qBAAqB,CAACV,WAAWQ,UAAU;QAE9E,OAAO;YACLJ;YACAC,SAASD,UACL,CAAC,6CAA6C,EAAEJ,WAAW,GAC3D;YACJC;QACF;IAEF,EAAE,OAAOU,OAAO;QACd,OAAO;YACLP,SAAS;YACTC,SAAS,CAAC,2BAA2B,EAAEM,iBAAiBC,QAAQD,MAAMN,OAAO,GAAG,iBAAiB;YACjGJ;QACF;IACF;AACF;AAKO,SAASF;IAKd,MAAMc,SAAmB,EAAE;IAC3B,MAAMC,WAAqB,EAAE;IAE7B,IAAI;QACF,MAAMb,SAASc,IAAAA,uCAA0B;QAEzC,gBAAgB;QAChB,IAAI,CAACd,OAAOe,MAAM,IAAIf,OAAOe,MAAM,KAAK,mBAAmBf,OAAOe,MAAM,KAAK,sBAAsB;YACjG,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;gBACzCN,OAAOO,IAAI,CAAC;YACd,OAAO;gBACLN,SAASM,IAAI,CAAC;YAChB;QACF;QAEA,qBAAqB;QACrB,IAAI,CAACnB,OAAOoB,SAAS,CAACC,QAAQ,CAAC,qCAAqC;YAClER,SAASM,IAAI,CAAC;QAChB;QAEA,6BAA6B;QAC7B,IAAInB,OAAOsB,iBAAiB,GAAG,GAAG;YAChCT,SAASM,IAAI,CAAC;QAChB;QAEA,IAAInB,OAAOuB,uBAAuB,GAAG,IAAI;YACvCV,SAASM,IAAI,CAAC;QAChB;IAEF,EAAE,OAAOT,OAAO;QACdE,OAAOO,IAAI,CAAC,CAAC,iCAAiC,EAAET,iBAAiBC,QAAQD,MAAMN,OAAO,GAAG,iBAAiB;IAC5G;IAEA,OAAO;QACLoB,OAAOZ,OAAOa,MAAM,KAAK;QACzBb;QACAC;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ead28355f45664f573e9ca0e0a7c31c4ca66aa13"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25if7trvv8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25if7trvv8();
cov_25if7trvv8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_25if7trvv8().f[0]++;
  cov_25if7trvv8().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_25if7trvv8().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_25if7trvv8().s[3]++;
_export(exports, {
  get testEmailService() {
    /* istanbul ignore next */
    cov_25if7trvv8().f[1]++;
    cov_25if7trvv8().s[4]++;
    return testEmailService;
  },
  get validateEmailServiceConfig() {
    /* istanbul ignore next */
    cov_25if7trvv8().f[2]++;
    cov_25if7trvv8().s[5]++;
    return validateEmailServiceConfig;
  }
});
/* istanbul ignore next */
cov_25if7trvv8().s[6]++;
require("server-only");
const _resendemailservice =
/* istanbul ignore next */
(cov_25if7trvv8().s[7]++, require("./resend-email-service"));
const _emailconfig =
/* istanbul ignore next */
(cov_25if7trvv8().s[8]++, require("./email-config"));
const _emaildevlogger =
/* istanbul ignore next */
(cov_25if7trvv8().s[9]++, require("../utils/email-dev-logger"));
async function testEmailService(testEmail) {
  /* istanbul ignore next */
  cov_25if7trvv8().f[3]++;
  const config =
  /* istanbul ignore next */
  (cov_25if7trvv8().s[10]++, (0, _emaildevlogger.getEmailServiceStatus)());
  /* istanbul ignore next */
  cov_25if7trvv8().s[11]++;
  if (!config.configured) {
    /* istanbul ignore next */
    cov_25if7trvv8().b[0][0]++;
    cov_25if7trvv8().s[12]++;
    return {
      success: false,
      message: 'Email service not configured. Please set RESEND_API_KEY and FROM_EMAIL environment variables.',
      config
    };
  } else
  /* istanbul ignore next */
  {
    cov_25if7trvv8().b[0][1]++;
  }
  cov_25if7trvv8().s[13]++;
  if (!testEmail) {
    /* istanbul ignore next */
    cov_25if7trvv8().b[1][0]++;
    cov_25if7trvv8().s[14]++;
    return {
      success: true,
      message: 'Email service is configured but no test email provided.',
      config
    };
  } else
  /* istanbul ignore next */
  {
    cov_25if7trvv8().b[1][1]++;
  }
  cov_25if7trvv8().s[15]++;
  try {
    const emailService =
    /* istanbul ignore next */
    (cov_25if7trvv8().s[16]++, (0, _resendemailservice.createEmailService)());
    const testCode =
    /* istanbul ignore next */
    (cov_25if7trvv8().s[17]++, '123456');
    // Log in development
    /* istanbul ignore next */
    cov_25if7trvv8().s[18]++;
    (0, _emaildevlogger.logVerificationCodeInDevelopment)(testEmail, testCode);
    // Send test email
    const success =
    /* istanbul ignore next */
    (cov_25if7trvv8().s[19]++, await emailService.sendVerificationEmail(testEmail, testCode, 'Test User'));
    /* istanbul ignore next */
    cov_25if7trvv8().s[20]++;
    return {
      success,
      message: success ?
      /* istanbul ignore next */
      (cov_25if7trvv8().b[2][0]++, `Test verification email sent successfully to ${testEmail}`) :
      /* istanbul ignore next */
      (cov_25if7trvv8().b[2][1]++, 'Failed to send test email'),
      config
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_25if7trvv8().s[21]++;
    return {
      success: false,
      message: `Email service test failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_25if7trvv8().b[3][0]++, error.message) :
      /* istanbul ignore next */
      (cov_25if7trvv8().b[3][1]++, 'Unknown error')}`,
      config
    };
  }
}
function validateEmailServiceConfig() {
  /* istanbul ignore next */
  cov_25if7trvv8().f[4]++;
  const errors =
  /* istanbul ignore next */
  (cov_25if7trvv8().s[22]++, []);
  const warnings =
  /* istanbul ignore next */
  (cov_25if7trvv8().s[23]++, []);
  /* istanbul ignore next */
  cov_25if7trvv8().s[24]++;
  try {
    const config =
    /* istanbul ignore next */
    (cov_25if7trvv8().s[25]++, (0, _emailconfig.getEmailVerificationConfig)());
    // Check API key
    /* istanbul ignore next */
    cov_25if7trvv8().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_25if7trvv8().b[5][0]++, !config.apiKey) ||
    /* istanbul ignore next */
    (cov_25if7trvv8().b[5][1]++, config.apiKey === 're_xxxxxxxxxx') ||
    /* istanbul ignore next */
    (cov_25if7trvv8().b[5][2]++, config.apiKey === 're_development_key')) {
      /* istanbul ignore next */
      cov_25if7trvv8().b[4][0]++;
      cov_25if7trvv8().s[27]++;
      if (process.env.NODE_ENV === 'production') {
        /* istanbul ignore next */
        cov_25if7trvv8().b[6][0]++;
        cov_25if7trvv8().s[28]++;
        errors.push('Production environment requires a valid RESEND_API_KEY');
      } else {
        /* istanbul ignore next */
        cov_25if7trvv8().b[6][1]++;
        cov_25if7trvv8().s[29]++;
        warnings.push('Development environment using placeholder API key');
      }
    } else
    /* istanbul ignore next */
    {
      cov_25if7trvv8().b[4][1]++;
    }
    // Check email domain
    cov_25if7trvv8().s[30]++;
    if (!config.fromEmail.includes('fancy-planties.cloudagrapher.com')) {
      /* istanbul ignore next */
      cov_25if7trvv8().b[7][0]++;
      cov_25if7trvv8().s[31]++;
      warnings.push('FROM_EMAIL should use the configured domain: fancy-planties.cloudagrapher.com');
    } else
    /* istanbul ignore next */
    {
      cov_25if7trvv8().b[7][1]++;
    }
    // Check configuration values
    cov_25if7trvv8().s[32]++;
    if (config.codeExpiryMinutes < 5) {
      /* istanbul ignore next */
      cov_25if7trvv8().b[8][0]++;
      cov_25if7trvv8().s[33]++;
      warnings.push('Code expiry time is very short (< 5 minutes)');
    } else
    /* istanbul ignore next */
    {
      cov_25if7trvv8().b[8][1]++;
    }
    cov_25if7trvv8().s[34]++;
    if (config.maxVerificationAttempts > 10) {
      /* istanbul ignore next */
      cov_25if7trvv8().b[9][0]++;
      cov_25if7trvv8().s[35]++;
      warnings.push('Max verification attempts is very high (> 10)');
    } else
    /* istanbul ignore next */
    {
      cov_25if7trvv8().b[9][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_25if7trvv8().s[36]++;
    errors.push(`Configuration validation failed: ${error instanceof Error ?
    /* istanbul ignore next */
    (cov_25if7trvv8().b[10][0]++, error.message) :
    /* istanbul ignore next */
    (cov_25if7trvv8().b[10][1]++, 'Unknown error')}`);
  }
  /* istanbul ignore next */
  cov_25if7trvv8().s[37]++;
  return {
    valid: errors.length === 0,
    errors,
    warnings
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,